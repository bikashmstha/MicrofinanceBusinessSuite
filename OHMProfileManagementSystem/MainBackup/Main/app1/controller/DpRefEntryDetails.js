/*
 * File: app/controller/DpRefEntryDetails.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.DpRefEntryDetails', {
    extend: 'Ext.app.Controller',

    models: [
        'DpTransList'
    ],
    stores: [
        'DpTransList'
    ],
    views: [
        'DpRefEntryDetails'
    ],

    onBtnDpRefSubmitClick: function(button, e, eOpts) {
        /*
        var hdnDpRedmsg = Ext.ComponentQuery.query("#hdnDpRedmsg")[0];
        var message = hdnDpRedmsg.getValue();

        if(message=="SUCCESS")
        {
        msg(message,"Successfully Saved");
        }
        else if(message=="FAILURE")
        {
        msg(message,"Failed to save");
        }
        */

        var store = Ext.getStore('DpTransList');
        var len = store.count();
        var flag = true;
        var count = 0;
        store.each(function(rec)
        {
            if(rec.get('Approve')===null&&rec.get('Disapprove')===null)
            {
                count = count+1;
                flag = false;
            }
        });

        if(flag===false&&len>count)
        {
            Ext.Msg.confirm('Confirm Action', 'Here, some transactions are pending. This operation will Verify the datas and you will not be able to edit once verified.\n Do you want to submit them as pending?', function(btn) {
                if(btn == 'yes'){
                    var me = this;

                    me.Submit("V");

                    return true;
                }
                else
                return false;
            }, this);
        }
        else if(flag===false&&len==count)
        {
            Ext.Msg.confirm('Confirm Action', 'Here, all transactions are pending. This operation will Verify the datas and you will not be able to edit once verified.\n Do you want to submit them as pending?', function(btn) {
                if(btn == 'yes'){
                    var me = this;

                    me.Submit("V");

                    return true;
                }
                else
                return false;
            }, this);
        }
        else
        {
            Ext.Msg.confirm('Confirm Action', 'This operation will Verify the datas and you will not be able to edit once submit button is clicked.\n Do you want to continue?', function(btn) {
                if(btn == 'yes'){
                    var me = this;

                    me.Submit("V");

                    return true;
                }
            }, this);
        }
    },

    onGridDpRefEntryDetailsAfterRender: function(component, eOpts) {
        var hdnClaim = Ext.ComponentQuery.query("#hdnchkapp")[0];
        var claim = hdnClaim.getValue();

        var store = Ext.getStore("DpTransList");
        store.load({
            params:{tran:claim,option:"all"}
        });
    },

    onChkApproveChange: function(field, newValue, oldValue, eOpts) {
        var me = this;
        var disApp = Ext.ComponentQuery.query("#chkDisapprove")[0];
        var pending = Ext.ComponentQuery.query("#chkPending")[0];

        if(newValue===true)
        {
            disApp.setDisabled(true);
            pending.setDisabled(true);
            me.Save();
        }
        else if(newValue===false)
        {
            disApp.setDisabled(false);
            pending.setDisabled(false);
        }

    },

    onChkDisapproveChange: function(field, newValue, oldValue, eOpts) {
        var me = this;

        var app = Ext.ComponentQuery.query("#chkApprove")[0];
        var pending = Ext.ComponentQuery.query("#chkPending")[0];

        if(newValue===true)
        {
            app.setDisabled(true); 
            pending.setDisabled(true); 
            me.Save();
        }
        else if(newValue===false)
        {
            app.setDisabled(false); 
            pending.setDisabled(false);
        }
    },

    onGridDpRefEntryDetailsItemClick: function(dataview, record, item, index, e, eOpts) {
        var me = this;

        me.Item(index);
    },

    onBtnDpRefSaveClick: function(button, e, eOpts) {
        var me = this;

        var hdnDpRedmsg = Ext.ComponentQuery.query("#hdnDpRedmsg")[0];
        var message = hdnDpRedmsg.getValue();

        if(message=="SUCCESS")
        {
            msg(message,"Successfully Saved");
        }
        else if(message=="FAILURE")
        {
            msg(message,"Failed to save");
        }
    },

    onChkPendingChange: function(field, newValue, oldValue, eOpts) {
        var me = this;

        var app = Ext.ComponentQuery.query("#chkApprove")[0];
        var disApp = Ext.ComponentQuery.query("#chkDisapprove")[0];

        if(newValue===true)
        {
            app.setDisabled(true); 
            disApp.setDisabled(true); 
            me.Save();
        }
        else if(newValue===false)
        {
            app.setDisabled(false); 
            disApp.setDisabled(false);
        }
    },

    drpClaim: function(num, user) {
        Ext.getCmp('cntLTNARDisplay').removeAll();

        var DRE = Ext.create('MyApp.view.DpRefEntryDetails');
        var repClaim = Ext.ComponentQuery.query("#hdnchkapp")[0];
        repClaim.setValue(num);
        var hdnuser = Ext.ComponentQuery.query("#hdnDpRefuser")[0];
        hdnuser.setValue(user);

        var pnlToRender = Ext.getCmp('cntLTNARDisplay');
        pnlToRender.add(DRE);
    },

    Submit: function(value) {
        var me = this;

        var passIndex = Ext.ComponentQuery.query("#hdnDpRefpass")[0];
        var hdnuser = Ext.ComponentQuery.query("#hdnDpRefuser")[0];

        var repClaim = Ext.ComponentQuery.query("#hdnchkapp")[0];

        //var claimno = repClaim.getValue();
        //var pass = passIndex.getValue();

        var grid = Ext.ComponentQuery.query("#gridDpRefEntryDetails")[0];


        var data = grid.getStore('DpTransList');
        /*var sn = data.get('SN');
        var sellername = data.get('SellerName');
        var vatamt = data.get('VatAmt');
        var entrydate = data.get('EntryDate');
        var ttype = data.get('TType');
        var panvatstatus = data.get('PanVatStatus');
        var sellerpan = data.get('SellerPan');
        var billno = data.get('BillNo');
        var datetype = data.get('DateType');
        var billdate = data.get('BillDate');
        var billamt = data.get('BillAmt');*/

        var recstatus = "";
        var verifiedby = "";

        if(value!=="")
        {
            recstatus = value;
            verifiedby = hdnuser.getValue();
        }
        else
        {
            recstatus = data.get('RecStatus');
            verifiedby = "";
        }

        GetTranNo = {
            /*DateType:cboGTDateType,
            FromDate:txtGTFromDate,
            ToDate:txtGTToDate,
            EmailID:txtGTEmailID,
            Phone:txtGTPhone,
            Address:txtGTAddress,
            Username:hdnuser,
            Password:hdnpass,
            DCode:hdncode,*/
            TranNo:repClaim.getValue(),
            Username:hdnuser.getValue(),
            Password:passIndex.getValue(),
            Status:recstatus,
            VerifiedBy:verifiedby
        };

        var waitMsg = watiMsg('Processing....');

        Ext.Ajax.request({
            url:"../Handlers/DiplomaticRefund/DGetTransactionNoHandler.ashx?method=SaveTransactionNo",
            params:{GetTranFrmLog:JSON.stringify(GetTranNo)},
            success: function(result, request){

                waitMsg.hide();

                var obj = Ext.decode(result.responseText);
                var data = obj.root; 

                if(obj.success === "true")
                {
                    msg("SUCCESS","Successfully Verified!");
                    var store = Ext.getStore('DpTransList');
                    store.loadData([],false);

                    var Save = Ext.ComponentQuery.query("#btnDpRefSave")[0];
                    var Submit = Ext.ComponentQuery.query("#btnDpRefSubmit")[0];

                    Save.setVisible(false);
                    Submit.setVisible(false);
                }//?"SUCCESS":"FAILURE",obj.message);

                if(obj.success === "false")
                {
                    msg("FAILURE",obj.message);
                    return;
                }

            },

            failure:function(result, request){

                waitMsg.hide();

                msg("FAILURE","Error in Fetching Data!!!");

                return;
            }    

        });

        /*var detail = {
        SN:sn,
        TranNo:claimno,
        SellerName:sellername,
        VatAmt:vatamt,
        TType:ttype,
        EntryDate:entrydate,
        Action:"E",
        ApprovedBy:approvedBy,
        PanVatStatus:panvatstatus,
        SellerPan:sellerpan,
        BillNo:billno,
        DateType:datetype,
        BillDate:billdate,
        BillAmt:billamt,
        RecStatus:recstatus,
        VerifiedBy:verifiedby
        };
        //var waitSave = watiMsg('Saving ...');

        Ext.Ajax.request({
            url:"../Handlers/DiplomaticRefund/DSummarySheetHandler.ashx?method=SaveSummary",
            params:{Claim:JSON.stringify(detail)},
            success: function ( result, request ){

                //waitSave.hide();

                var obj = Ext.decode(result.responseText);

                var hdnDpRedmsg = Ext.ComponentQuery.query("#hdnDpRedmsg")[0];

                if(obj.success === "true")
                {
                    hdnDpRedmsg.setValue("SUCCESS");
                }
                if(obj.success === "false") 
                {
                    hdnDpRedmsg.setValue("FAILURE");
                    return;
                }


            },

            failure: function ( result, request ){

                return;
            }

        });
        */
    },

    Item: function(index) {

        var hdnpass = Ext.ComponentQuery.query("#hdnDpRefpass")[0];
        hdnpass.setValue(index);
    },

    Save: function() {
        var me = this;

        var passIndex = Ext.ComponentQuery.query("#hdnDpRefpass")[0];
        var hdnuser = Ext.ComponentQuery.query("#hdnDpRefuser")[0];
        var chkApprove =Ext.ComponentQuery.query("#chkApprove")[0];
        var chkDisapprove =Ext.ComponentQuery.query("#chkDisapprove")[0];
        var pending = Ext.ComponentQuery.query("#chkPending")[0];
        var repClaim = Ext.ComponentQuery.query("#hdnchkapp")[0];

        var claimno = repClaim.getValue();
        var user = hdnuser.getValue();
        var pass = passIndex.getValue();
        var approve = chkApprove.getValue();
        var disapprove = chkDisapprove.getValue();
        var pend = pending.getValue();

        var grid = Ext.ComponentQuery.query("#gridDpRefEntryDetails")[0];
        var selected = grid.getSelectionModel().getSelection()[0];
        var approvedBy = "";

        if(selected===undefined)
        {
            return false;
        }

        var data = grid.getStore('DpTransList').getAt(pass);
        var sn = data.get('SN');
        var sellername = data.get('SellerName');
        var vatamt = data.get('VatAmt');
        var entrydate = data.get('EntryDate');
        var ttype = data.get('TType');
        var panvatstatus = data.get('PanVatStatus');
        var sellerpan = data.get('SellerPan');
        var billno = data.get('BillNo');
        var datetype = data.get('DateType');
        var billdate = data.get('BillDate');
        var billamt = data.get('BillAmt');
        var recstatus = data.get('RecStatus');

        if(approve===true)
        {
            approvedBy = user;
        }
        else if(disapprove===true)
        {
            approvedBy = "Disapproved";
        }
        else if(pend===true)
        {
            approvedBy = "";
        }
        else if(approve===false||disapprove===false||pend===false)
        {
            approvedBy = "";
        }

        var detail = {
            SN:sn,
            TranNo:claimno,
            SellerName:sellername,
            VatAmt:vatamt,
            TType:ttype,
            EntryDate:entrydate,
            Action:"E",
            ApprovedBy:approvedBy,
            PanVatStatus:panvatstatus,
            SellerPan:sellerpan,
            BillNo:billno,
            DateType:datetype,
            BillDate:billdate,
            BillAmt:billamt,
            RecStatus:recstatus
        };

        //var waitSave = watiMsg('Saving ...');

        Ext.Ajax.request({
            url:"../Handlers/DiplomaticRefund/DSummarySheetHandler.ashx?method=SaveSummary",
            params:{Claim:JSON.stringify(detail)},
            success: function ( result, request ){

                //waitSave.hide();

                var obj = Ext.decode(result.responseText);

                var hdnDpRedmsg = Ext.ComponentQuery.query("#hdnDpRedmsg")[0];

                if(obj.success === "true")
                {
                    hdnDpRedmsg.setValue("SUCCESS");
                }
                if(obj.success === "false") 
                {
                    hdnDpRedmsg.setValue("FAILURE");
                    return;
                }


            },

            failure: function ( result, request ){

                return;
            }

        });

    },

    init: function(application) {
        this.control({
            "#btnDpRefSubmit": {
                click: this.onBtnDpRefSubmitClick
            },
            "#gridDpRefEntryDetails": {
                afterrender: this.onGridDpRefEntryDetailsAfterRender,
                itemclick: this.onGridDpRefEntryDetailsItemClick
            },
            "#chkApprove": {
                change: this.onChkApproveChange
            },
            "#chkDisapprove": {
                change: this.onChkDisapproveChange
            },
            "#btnDpRefSave": {
                click: this.onBtnDpRefSaveClick
            },
            "#chkPending": {
                change: this.onChkPendingChange
            }
        });
    }

});
