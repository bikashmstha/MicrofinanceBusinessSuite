/*
 * File: app/controller/Role.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.Role', {
    extend: 'Ext.app.Controller',

    stores: [
        'Role',
        'RoleModuleFunction',
        'ApplicationWithMNR'
    ],

    onPnlRoleAfterRender: function(component, eOpts) {
        var grdApp=Ext.ComponentQuery.query('#role_grdApplication')[0];
        grdApp.getStore().load();
        var grdRole=Ext.ComponentQuery.query('#role_grdRole')[0];
        grdRole.getStore().removeAll();
        var grdRoleModuleFunction=Ext.ComponentQuery.query("#role_grdRoleModuleFunction")[0];
        grdRoleModuleFunction.getStore().removeAll();
    },

    onBtnAddRoleClick: function(button, e, eOpts) {
        var me=this;

        var grdApp=Ext.ComponentQuery.query('#role_grdApplication')[0];
        var grdR=Ext.ComponentQuery.query('#role_grdRole')[0];

        var selectedApp=grdApp.getSelectionModel().getSelection()[0];

        if(!selectedApp)
        {
            msg('WARNING','Select application first!');


        }
        else
        {
            var txtRoleID=Ext.ComponentQuery.query('#roleID')[0].getValue();
            var txtRoleDesc=Ext.ComponentQuery.query('#roleDescription')[0].getValue();
            var txtDBRole=Ext.ComponentQuery.query('#dbRole')[0].getValue();

            if(txtRoleID==="")
            {
                msg('WARNING','Enter Role ID!');

            }
            else
            {
                if (grdR.getSelectionModel().hasSelection())
                {
                    me.ClearControls('reset');
                    var r = grdR.getSelectionModel().getSelection();
                    console.log(r);
                    r[0].set('RoleID',txtRoleID);
                    r[0].set('RoleDescription',txtRoleDesc);
                    r[0].set('DbRole',txtDBRole);
                    grdR.getSelectionModel().deselectAll();
                    return false;


                }
                else
                {
                    var strRole=Ext.getStore('Role');

                    strRole.add({
                        ApplicationID:selectedApp.data.ApplicationID,
                        RoleID:txtRoleID,
                        RoleDescription:txtRoleDesc,
                        DbRole:txtDBRole,
                        Action:'A',
                        RoleModuleFunctions:[]
                    });

                    me.ClearControls('reset');

                }

            }

        }
    },

    onGrdApplicationItemClick: function(dataview, record, item, index, e, eOpts) {
        var me=this;
        var grdRole=Ext.ComponentQuery.query("#role_grdRole")[0];
        grdRole.store.loadData(record.raw.Roles);

        var grdRoleModuleFunction=Ext.ComponentQuery.query("#role_grdRoleModuleFunction")[0];
        //console.log('rec',record.raw.ModuleFunctions);
        grdRoleModuleFunction.store.loadData(record.raw.ModuleFunctions);

        $('.chkFunc').live('click',function(){
            var chkd= $(this).attr('checked');
            $(this).parent().parent().parent().next().next().next().find('div:first').html(chkd?"Y":"N");
        });
        me.ClearControls('reset');
    },

    onGrdRoleItemClick: function(dataview, record, item, index, e, eOpts) {

        if(index>=0)
        {

        var grdR=Ext.ComponentQuery.query("#role_grdRole")[0];
        var roleId=Ext.ComponentQuery.query('#roleID')[0];
        var roleDesc=Ext.ComponentQuery.query('#roleDescription')[0];
        var dbRole=Ext.ComponentQuery.query('#dbRole')[0];
        var action="";
        var rec = grdR.getStore('Role').getAt(index);

        roleId.setValue(rec.get('RoleID'));
        roleDesc.setValue(rec.get('RoleDescription'));
        dbRole.setValue(rec.get('DbRole'));
        action=rec.get('Action');
        if(action=="A")
        {
        roleId.enable();
        }
        else
        {
        roleId.disable();
        }
        }

        $(".chkFunc").each(function (i) {
        $(this).attr('checked',false);
        $(this).parent().parent().parent().next().find('div:first').html('');
        $(this).parent().parent().parent().next().next().find('div:first').html('');
        $(this).parent().parent().parent().next().next().next().find('div:first').html('');

        });

        var RMF=record.data.RoleModuleFunctions;
        //console.log('rmf',RMF);

        for(var i=0;i<record.data.RoleModuleFunctions.length;i++)
        {
        var appid = RMF[i].ApplicationID;
        var roleid = RMF[i].RoleID;
        var moduleid = RMF[i].ModuleID;
        var code = RMF[i].FunCD;
        var fromDate = RMF[i].FromDate;


        $(".chkFunc").each(function (indx) {
        var fcode=$(this).parent().parent().parent().prev().prev().find('div:first').html();
        var aid=$(this).parent().parent().parent().prev().prev().prev().prev().prev().find('div:first').html();
        var mid=$(this).parent().parent().parent().prev().prev().prev().prev().find('div:first').html();
        if (code==fcode && moduleid==mid)
        {
            $(this).attr('checked','checked');

            $(this).parent().parent().parent().next().next().find('div:first').html('Y');
            $(this).parent().parent().parent().prev().find('div:first').html(fromDate);
        }

        });
        }
    },

    onBtnRoleSaveClick: function(button, e, eOpts) {
        var me=this;
        var grdApp=Ext.ComponentQuery.query('#role_grdApplication')[0];
        var selectedApp=grdApp.getSelectionModel().getSelection()[0];

        var grdRole=Ext.ComponentQuery.query('#role_grdRole')[0];
        var selectedRole=grdRole.getSelectionModel().getSelection()[0];


        if(!selectedApp)
        {
            msg('WARNING','Select application first!');

        }
        else if(!selectedRole)
        {
            msg('WARNING','Select Role!');

        }
        else
        {
            var apid=selectedRole.data.ApplicationID;
            var roleID=selectedRole.data.RoleID;
            var roleDesc=selectedRole.data.RoleDescription;
            var dbRole=selectedRole.data.DbRole;
            var act=selectedRole.data.Action;

            var role={
                'ApplicationID':apid,
                'RoleID':roleID,
                'RoleDescription':roleDesc,
                'DBRole':dbRole,
                'Action':act=="A"?"A":"E",
                'RoleModuleFunctions':[]

            };
            // console.log(role);

            var RMF=[];
            $(".chkFunc").each(function (indx) {

                var action = "";
                var fromDate = "";
                var oldVal =  $(this).parent().parent().parent().next().next().find('div:first').html();
                var newVal =  $(this).parent().parent().parent().next().next().next().find('div:first').html();
                var funCd = $(this).parent().parent().parent().prev().prev().find('div:first').html();
                var moduleDesc = $(this).parent().parent().parent().prev().prev().prev().find('div:first').html();
                var moduleId = $(this).parent().parent().parent().prev().prev().prev().prev().find('div:first').html();
                var appId = $(this).parent().parent().parent().prev().prev().prev().prev().prev().find('div:first').html();
                fromDate = $(this).parent().parent().parent().prev().find('div:first').html();

                if( (oldVal==="N" && newVal==="Y") || (oldVal==="" && newVal==="Y") )
                {
                    action="A";
                    fromDate = Ext.get('nepDate').dom.innerHTML;
                }
                else if(oldVal==="Y" && newVal==="N")
                {
                    action="D";
                }
                if(action!=="")
                {
                    RMF[RMF.length]={'ApplicationID': appId ,'RoleID': roleID ,'ModuleID': moduleId ,'ModuleDesc': moduleDesc ,'FunCD':funCd ,'Action':action,'FromDate':fromDate};
                    // alert( RMF[RMF.length]);
                }

            });


            role.RoleModuleFunctions=RMF;


            Ext.Ajax.request({
                method: 'POST',
                url: '../Handlers/Security/RoleHandler.ashx',
                params: {method:'SaveRole', role : JSON.stringify(role) },
                success: function( result, request ){

                    var jsonMsg=Ext.decode(result.responseText);
                    msg(jsonMsg.success=="True"?"SUCCESS":"FAILURE",jsonMsg.message);
                    // msg("Save Status",jsonMsg.message);

                    //console.log('msg',jsonMsg.message);

                    if(jsonMsg.message == "Error Saving Role")
                    {
           				msg("WARNING","Role can not be re-assign on the same day !");
                        return;

                    }

                }
            });
            me.ClearControls();


            var store=Ext.getStore('ApplicationWithMNR');
            store.load({
                url:"../Handlers/Security/ApplicationHandler.ashx?method=GetApplicationsWithModuleFunctionsAndRoles",
                method:'POST',
                params: {}

            });

        }
    },

    onBtnRoleCancelClick: function(button, e, eOpts) {
        this.ClearControls();

    },

    ClearControls: function(txt) {
        var txtRoleID;
        var txtRoleDesc;
        var txtDBRole;
        if(txt ===  "reset")
        {
            txtRoleID=Ext.ComponentQuery.query("#roleID")[0].reset();
            txtRoleDesc =Ext.ComponentQuery.query("#roleDescription")[0].reset();
            txtDBRole=Ext.ComponentQuery.query("#dbRole")[0].reset();
            Ext.ComponentQuery.query("#roleID")[0].enable();
        }
        else
        {
            txtRoleID=Ext.ComponentQuery.query("#roleID")[0].reset();
            txtRoleDesc=Ext.ComponentQuery.query("#roleDescription")[0].reset();
            txtDBRole=Ext.ComponentQuery.query("#dbRole")[0].reset();
            Ext.ComponentQuery.query('#role_grdApplication')[0].getStore().load();
            Ext.ComponentQuery.query('#role_grdRole')[0].getStore().removeAll();
            Ext.ComponentQuery.query('#role_grdRoleModuleFunction')[0].getStore().removeAll();

        }
    },

    init: function(application) {
        this.control({
            "#pnlRole": {
                afterrender: this.onPnlRoleAfterRender
            },
            "#role_btnAddRole": {
                click: this.onBtnAddRoleClick
            },
            "#role_grdApplication": {
                itemclick: this.onGrdApplicationItemClick
            },
            "#role_grdRole": {
                itemclick: this.onGrdRoleItemClick
            },
            "#btnRoleSave": {
                click: this.onBtnRoleSaveClick
            },
            "#btnRoleCancel": {
                click: this.onBtnRoleCancelClick
            }
        });
    }

});
