/*
 * File: app/controller/ShowGeneralizedSubmissionNo.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.ShowGeneralizedSubmissionNo', {
    extend: 'Ext.app.Controller',

    onBtnEVatReturnsEntryClick: function(button, e, eOpts) {
        //alert("acctype" + Ext.ComponentQuery.query('#hdnAcctType')[0].getValue());
        var submittedFor=Ext.ComponentQuery.query("#hdnsubmittedFor")[0].getValue();

        var acctType =  Ext.ComponentQuery.query('#hdnAcctType')[0].getValue();



        var submissionNo = Ext.ComponentQuery.query("#lblSubmissionNo")[0].getValue();

        var fyr = Ext.ComponentQuery.query("#hdnFysicalyr")[0].getValue();
        //Ext.ComponentQuery.query("#hdnFysicalyr")[0].setValue(Fysicalyrr);

        var pan = Ext.ComponentQuery.query("#lblPan")[0].value;

        var me = this;
        var flag = true;

        // from here we have to redirect form according to submittedFor
        var uiConfig;
        var menuLink;
        var pageTitle;
        if(submittedFor=== "VRET")
        {
            menuLink='VatReturns';
            pageTitle='E-Vat Return Entry';

        }
        else if(submittedFor=== "VCB")
        {
            menuLink='CloseOfBusiness';
            pageTitle='E-Close Of Business';

        }
        else if (submittedFor=== "INST")
        {
            menuLink='EstimatedReturn';
            pageTitle='E-Estimate Return/Estimate Revision Return/Estimate Revision Notice';

        }
        else if (submittedFor=== "ASS01")
        {
            menuLink='SelfAssessmentD01';
            pageTitle='SelfAssessmentD01';
        }
        else if(Ext.ComponentQuery.query("#hdnsubmittedFor")[0].getValue()=== "ASS03")
        {
            flag = false;
            me.LoadSelfAssessmentD03(submissionNo,pan,fyr,"SA");
        }
        else if(Ext.ComponentQuery.query("#hdnsubmittedFor")[0].getValue()=== "JA")
        {
            flag = false;
            me.LoadSelfAssessmentD03(submissionNo,pan,fyr,"JA");
        }
        else if(Ext.ComponentQuery.query("#hdnsubmittedFor")[0].getValue()=== "CB")
        {
            flag = false;
            me.LoadSelfAssessmentD03(submissionNo,pan,fyr,"CB");
        }
        else if(Ext.ComponentQuery.query("#hdnsubmittedFor")[0].getValue()=== "BH")
        {
            flag = false;
            me.LoadSelfAssessmentD03(submissionNo,pan,fyr,"BH");
        }



        if(flag)
        {    
            var TaxpayerInfo;

            uiConfig = {menuLink:menuLink,
                pageTitle:pageTitle
            };

            DynamicUI(uiConfig,function(){






                Ext.Ajax.request({
                    url: '../Handlers/Registration/Taxpayer/TaxpayerHandler.ashx',
                    params: {
                        method:'GetTaxPayer',pan:pan,
                        acctType:acctType,
                        id: 1
                    },
                    success: function(response){
                        var obj =Ext.decode( response.responseText);
                        //console.log(obj);

                        var taxpayer=obj.root.Taxpayer;
                        var address=taxpayer.BusinessAddress.Address;
                        var office=taxpayer.Office;
                        var individual=taxpayer.IndividualAddress.Address;
                        // console.log(taxpayer);

                        if(taxpayer.AcctStatus!='A')
                        {
                            msg('INFO', 'PAN IS NOT ACTIVE');
                            return;
                        }

                        if(submittedFor=== "VRET")
                        {
                            Ext.ComponentQuery.query("#txtPan")[0].setValue(pan);
                            Ext.ComponentQuery.query("#lblSubmissionNo")[0].setValue(submissionNo);
                            Ext.ComponentQuery.query("#hfAction")[0].setValue('A');

                            //Ext.ComponentQuery.query("#txtAccountType")[0].setValue('00');
                            Ext.ComponentQuery.query("#txtAccountType")[0].setValue(acctType); // updated by shanjeev

                            //SET TAXPAYER'S INFO
                            Ext.ComponentQuery.query("#lblTaxpayerName")[0].setValue(taxpayer.Name);
                            Ext.ComponentQuery.query("#lblTaxpayerAddress")[0].setValue(address.DistrictNameNep+' / '+address.StreetName);
                            Ext.ComponentQuery.query("#lblTaxpayerPhoneNo")[0].setValue(address.Phone);
                            Ext.ComponentQuery.query("#lblTaxpayerFax")[0].setValue(address.Fax);

                            Ext.ComponentQuery.query('#hdnRegistrationDate')[0].setValue(taxpayer.RegistrationDate);
                        }
                        else if(submittedFor=== "VCB")
                        {
                            Ext.ComponentQuery.query("#txtPan")[0].setValue(pan);
                            Ext.ComponentQuery.query("#lblSubmissionNo")[0].setValue(submissionNo);
                            Ext.ComponentQuery.query("#hfCOBAction")[0].setValue('A');

                            //Ext.ComponentQuery.query("#txtAccountType")[0].setValue('00');
                            Ext.ComponentQuery.query("#txtAccountType")[0].setValue(acctType); // updated by shanjeev

                            //SET TAXPAYER'S INFO
                            Ext.ComponentQuery.query("#lblTaxpayerName")[0].setValue(taxpayer.Name);
                            Ext.ComponentQuery.query("#lblTaxpayerAddress")[0].setValue(address.DistrictNameNep+' / '+address.StreetName);
                            Ext.ComponentQuery.query("#lblTaxpayerPhoneNo")[0].setValue(address.Phone);
                            Ext.ComponentQuery.query("#lblTaxpayerFax")[0].setValue(address.Fax);

                            Ext.ComponentQuery.query('#hdnRegistrationDate')[0].setValue(taxpayer.RegistrationDate);
                        }
                        else if (submittedFor=== "INST")
                        {
                            //setReadOnly(true)
                            Ext.ComponentQuery.query('#dispEst_Ret_submissionNo')[0].setValue(submissionNo);

                            Ext.ComponentQuery.query('#txtEst_Ret_PanNo')[0].setValue(pan);
                            Ext.ComponentQuery.query('#txtEst_Ret_PanNo')[0].setReadOnly(true);

                            Ext.ComponentQuery.query('#txtEst_Ret_AccType')[0].setValue(acctType);
                            Ext.ComponentQuery.query('#txtEst_Ret_AccType')[0].setReadOnly(true);

                            Ext.ComponentQuery.query('#hdnEst_Ret_Office_Code')[0].setValue(office.OfficeCode);
                            Ext.ComponentQuery.query('#Est_Ret_IROName')[0].setValue(office.OfficeNameNepali);

                            Ext.ComponentQuery.query('#txtEst_Ret_Name')[0].setValue(taxpayer.Name);
                            Ext.ComponentQuery.query('#txtEst_Ret_Name')[0].setReadOnly(true);



                            Ext.ComponentQuery.query('#txtEst_Ret_HouseNo')[0].setValue(address.HouseNo);
                            Ext.ComponentQuery.query('#txtEst_Ret_HouseNo')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#txtEst_Ret_WardNo')[0].setValue(address.WardNo);
                            Ext.ComponentQuery.query('#txtEst_Ret_WardNo')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#txtEst_Ret_ToleName')[0].setValue(address.StreetName);
                            Ext.ComponentQuery.query('#txtEst_Ret_ToleName')[0].setReadOnly(true);

                            if(address.LocationType === 'MM')
                            {
                                Ext.ComponentQuery.query('#rdl_Est_Metro_Mun')[0].setValue(true);
                            }
                            else if(address.LocationType === 'SM')
                            {
                                Ext.ComponentQuery.query('#rdl_Est_Sub_Metro_Mun')[0].setValue(true);
                            }
                            else if(address.LocationType === 'MN')
                            {
                                Ext.ComponentQuery.query('#rdl_Est_Mun')[0].setValue(true);
                            }
                            else if(address.LocationType === 'VD')
                            {
                                Ext.ComponentQuery.query('#rdl_Est_VDC')[0].setValue(true);
                            }

                            Ext.ComponentQuery.query('#txtEst_Ret_VDCName')[0].setValue(address.VdcTown);
                            Ext.ComponentQuery.query('#txtEst_Ret_VDCName')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#txtEst_Ret_DistrictName')[0].setValue(address.DistrictNameNep);
                            Ext.ComponentQuery.query('#txtEst_Ret_DistrictName')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#txtEst_Ret_Phone')[0].setValue(address.Telephone); 
                            Ext.ComponentQuery.query('#txtEst_Ret_Phone')[0].setReadOnly(true);


                            //Ext.ComponentQuery.query('#txtEst_Ret_Mobile')[0].setValue(true);
                            Ext.ComponentQuery.query('#txtEst_Ret_Email')[0].setValue(address.Email);
                            Ext.ComponentQuery.query('#txtEst_Ret_Email')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#ddlEstFysicalYear')[0].setValue(fyr);
                            Ext.ComponentQuery.query('#ddlEstFysicalYear')[0].setReadOnly(true);

                            if(taxpayer.AcctStatus==='A')
                            Ext.ComponentQuery.query('#Est_Ret_TpOfficeType')[0].setValue('सक्रिय');

                            var Est_Ret_Type = Ext.getStore('Est_Ret_Type');
                            Est_Ret_Type.clearFilter();
                            if(Est_Ret_Type.getCount() > 0)
                            {
                                Est_Ret_Type.filter(function(item){
                                    return item.get("TypeID")!= 'RN';
                                });
                            }
                            // Est_Ret_Type.loadData([],true);



                            // Ext.ComponentQuery.query('#txtEst_Ret_FiscalYear')[0].setDisabled(false);
                            Ext.Ajax.request({
                                url: '../HANDLERS/Common/OfficeBankInfoHandler.ashx?method=GetOfficeBankInfo',
                                params:{officeCode:office.OfficeCode},
                                success: function ( result, request ) {

                                    var data = Ext.decode(result.responseText); 
                                    // combo.store.loadData(data.root);        
                                    Ext.getStore('OfficeBankInfo').loadData(data.root);

                                },
                                failure: function ( result, request ) {
                                    Ext.Msg.show({
                                        title: 'Failure',
                                        msg: 'ERROR OCURRED !!!' ,
                                        buttons: Ext.MessageBox.OK,
                                        icon:Ext.Msg.ERROR
                                    });
                                }

                            });




                        }
                        else if(submittedFor=== "ASS01")
                        {


                            Ext.ComponentQuery.query('#hdnTranNo')[0].setValue('');


                            Ext.ComponentQuery.query('#txtSubmissionNoTest')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setReadOnly(true);





                            Ext.ComponentQuery.query('#cboFiscalYearSADone')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#txtPanSTDone')[0].setReadOnly(true);


                            Ext.ComponentQuery.query('#txtPanSTDone')[0].setValue(pan);
                            Ext.ComponentQuery.query('#txtAcctType')[0].setValue(acctType);
                            Ext.ComponentQuery.query('#cboFiscalYearSADone')[0].setValue(fyr);
                            Ext.ComponentQuery.query('#txtSubmissionNoTest')[0].setValue(submissionNo);
                            Ext.ComponentQuery.query('#txtPhoneSADone')[0].setValue(address.Telephone);                   
                            Ext.ComponentQuery.query('#txtNameSTDone')[0].setValue(taxpayer.Name);

                            Ext.ComponentQuery.query('#txtHouseNoSADone')[0].setValue(address.HouseNo);
                            Ext.ComponentQuery.query('#txtWardSADone')[0].setValue(address.WardNo);
                            Ext.ComponentQuery.query('#txtToleSADone')[0].setValue(address.StreetName);
                            Ext.ComponentQuery.query('#txtDistrictDone')[0].setValue(address.DistrictNameNep);
                            Ext.ComponentQuery.query('#txtFaxSADone')[0].setValue(address.Fax);
                            Ext.ComponentQuery.query('#txtEmailSADone')[0].setValue(address.Email);

                            Ext.ComponentQuery.query('#txtMetroTypeSADone')[0].setValue(address.VdcTown);
                            Ext.ComponentQuery.query('#txtTSOsaDone')[0].setValue(office.OfficeNameNepali);
                            Ext.ComponentQuery.query('#hdnOfficeCodeSADone')[0].setValue(office.OfficeCode);


                            if(address.LocationType=== "MM")
                            {  
                                Ext.ComponentQuery.query('#rbdMM')[0].setValue(true);
                                Ext.ComponentQuery.query('#rbdMM')[0].setReadOnly(true);
                                Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7ka');
                            }

                            else if(address.LocationType==="SM")
                            {  
                                Ext.ComponentQuery.query('#rbdSM')[0].setValue(true);
                                Ext.ComponentQuery.query('#rbdSM')[0].setReadOnly(true);
                                Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7ka');
                            }

                            else if(address.LocationType==="MN")
                            {

                                Ext.ComponentQuery.query('#rbdMN')[0].setValue(true);
                                Ext.ComponentQuery.query('#rbdMN')[0].setReadOnly(true);
                                Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7kha');
                            }

                            else
                            {   
                                Ext.ComponentQuery.query('#rbdVD')[0].setValue(true);
                                Ext.ComponentQuery.query('#rbdVD')[0].setReadOnly(true);
                                Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7Ga');

                            }


                            //---setting values in Two no field (Individual Address)-----

                            Ext.ComponentQuery.query('#txtNameDtwo')[0].setValue(taxpayer.Name);
                            Ext.ComponentQuery.query('#txtHouseNoDtwo')[0].setValue(individual.HouseNo);
                            Ext.ComponentQuery.query('#txtWardDtwo')[0].setValue(individual.WardNo);
                            Ext.ComponentQuery.query('#txtToleDtwo')[0].setValue(individual.StreetName);                    
                            Ext.ComponentQuery.query('#txtDistrictDtwo')[0].setValue(individual.DistrictNameNep);
                            Ext.ComponentQuery.query('#txtMetroDtwo')[0].setValue(individual.VdcTown);

                            var strSADone=Ext.getStore('SelfAssessmentD01');
                            strSADone.removeAll();
                            strSADone.loadData([],false);

                            Ext.ComponentQuery.query('#btnEditSA')[0].disable(true);
                            Ext.ComponentQuery.query('#btnVerifySA')[0].disable(true);
                            Ext.ComponentQuery.query('#btnDelete')[0].disable(true);




                            if(individual.LocationType==="MM")
                            {                           
                                Ext.ComponentQuery.query('#rbdMMTwo')[0].setValue(true);                        
                            }

                            else if(individual.LocationType==="SM")
                            {
                                Ext.ComponentQuery.query('#rbdSMTwo')[0].setValue(true);                        
                                Ext.ComponentQuery.query('#rbdSMTwo')[0].setReadOnly(true);
                            }
                            else if(individual.LocationType==="MN")
                            {
                                Ext.ComponentQuery.query('#rbdMNTwo')[0].setValue(true);                        
                                Ext.ComponentQuery.query('#rbdMNTwo')[0].setReadOnly(true);
                            }
                            else
                            {
                                Ext.ComponentQuery.query('#rbdVDTwo')[0].setValue(true);                        
                                Ext.ComponentQuery.query('#rbdVDTwo')[0].setReadOnly(true);
                            }

                            Ext.Ajax.request({
                                url: '../HANDLERS/Common/OfficeBankInfoHandler.ashx?method=GetOfficeBankInfo',
                                params:{officeCode:office.OfficeCode},
                                success: function ( result, request ) {

                                    var data = Ext.decode(result.responseText); 
                                    // combo.store.loadData(data.root);        
                                    Ext.getStore('OfficeBankInfo').loadData(data.root);

                                },
                                failure: function ( result, request ) {
                                    Ext.Msg.show({
                                        title: 'Failure',
                                        msg: 'ERROR OCURRED !!!' ,
                                        buttons: Ext.MessageBox.OK,
                                        icon:Ext.Msg.ERROR
                                    });
                                }

                            });


                        }
                    }
                });


            });


        }
    },

    LoadSelfAssessmentD03: function(submissionNo,pan,fiscalYear,assmtType) {
        var uiConfig = {menuLink:'SetAssessmentType',
                pageTitle:'SetAssessmentType'
            }; 

            DynamicUI(uiConfig,null,{submissionNo:submissionNo,pan:pan,fiscalYear:fiscalYear,assmtType:assmtType});

    },

    init: function(application) {
        this.control({
            "#btnEVatReturnsEntry": {
                click: this.onBtnEVatReturnsEntryClick
            }
        });
    }

});
