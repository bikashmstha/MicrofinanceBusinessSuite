/*
 * File: app/controller/AppealEntry.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.AppealEntry', {
    extend: 'Ext.app.Controller',

    stores: [
        'AppealOnSubjectStore',
        'AppealLines',
        'AppealLocationStore',
        'FilingPeriodStore',
        'Period',
        'AppealSubjectAE',
        'AppealMA',
        'AppealSP'
    ],

    onPnlAppealEntryAfterRender: function(component, eOpts) {
        var me=this;
        var offCode= Ext.get('offCode').dom.innerHTML;
        var txtOffCode = Ext.ComponentQuery.query("#Appeal_txtOffCode")[0];

        var hdnAct=Ext.ComponentQuery.query('#hdnActAppeal')[0];
        hdnAct.setValue("T");
        //var hdnActAU=Ext.ComponentQuery.query('#hdnActionAppAU')[0];
        //hdnActAU.setValue("V");

        var grd = Ext.ComponentQuery.query("#Appeal_grdTaxPeriod")[0];
        grd.getStore().removeAll();

        var objParam = Ext.ComponentQuery.query('#pnlAppealEntry')[0].extraParam;
        //console.log(objParam);

        if (!objParam)
        {
            txtOffCode.setValue(offCode);
            // me.LoadUserOffice();
            me.ReadOnlyShowHideControls("");
            hdnAct.setValue("");
            // hdnActAU.setValue("");
            me.ClearControls();
            me.ReadOnlyData("p");
            return;
        }

        else if(objParam.params.from === "MV")
        {
            me.LoadAppealHeaderWithTranNo();
            me.ReadOnlyShowHideControls("t");
        }

        else if(objParam.params.from === "AU"  )
        {

            if(objParam.params.auAction === "A")
            {

                me.LoadPostedAppealHeader();

            }
            else if(objParam.params.auAction === "E" || objParam.params.auAction === "V")
            {
                if( objParam.params.auAction === "V")
                {
                    me.ReadOnlyShowHideControls("t");
                }
                me.LoadAppealHeaderWithAU();

            }
            me.ReadOnlyShowHideControls("au");
        }
    },

    onAppeal_txtPanKeypress: function(textfield, e, eOpts) {
        /*if(e.keyCode === 13 || e.keyCode === 9)
        {
        this.LoadPanDetails();
        /*var txtPan = Ext.ComponentQuery.query("#Appeal_txtPan")[0];
        //console.log(txtPan.maxLength);

        var pan=txtPan.getValue();

        //console.log(pan.length);

        var panLength=pan.length;

        var maxLen=txtPan.maxLength;

        if(panLength<maxLen || panLength>maxLen)
        {
            msg("WARNING","कृपया स्था.ले.नं. नौ अंकको हाल्नुहोस् !");
            return;
        }
        else
        {
            this.LoadPanDetails();
        }

    }*/

    },

    onAppeal_btnAddClick: function(button, e, eOpts) {
        var txtPan=Ext.ComponentQuery.query('#Appeal_txtPan')[0];
        var txtAppealDate=Ext.ComponentQuery.query('#Appeal_txtAppealDate')[0];
        var cboAppealLocCode = Ext.ComponentQuery.query("#Appeal_cboAppeal_Loc_Code")[0];
        var cboAppealSubject=Ext.ComponentQuery.query('#cboAppealSubjectAE')[0];
        var txtMASPNo=Ext.ComponentQuery.query('#Appeal_txtAppeal_On_Ma_No')[0];


        var pan=txtPan.getValue();
        var appealDate=txtAppealDate.getValue();
        var appealLocCode=cboAppealLocCode.getValue();
        var appealSubject=cboAppealSubject.getValue();
        var maspNo=txtMASPNo.getValue();

        var errMsg="";
        var errCount=0;

        if(!pan)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया स्था.ले.नं. हाल्नुहोस् !<br/>";

        }
        if(!appealDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदनमा गएको मिति हाल्नुहोस् !<br/>";
            txtAppealDate.focus();
        }

        if(!appealSubject)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदनमा गएको बिषय छान्नुहोस् !<br/>";
            cboAppealSubject.focus();
        }
        if(!maspNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया कर निर्धारण आदेश नं./विषेश आदेश नं. हाल्नुहोस्  !<br/>";
            txtMASPNo.focus();

        }
        if(!appealLocCode)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदनमा गएको निकाय छान्नुहोस् !<br/>";
            cboAppealLocCode.focus();
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }

        else
        { 

            var grd = Ext.ComponentQuery.query('#Appeal_grdTaxPeriod')[0];
            var recc={ FilePer: '',
                    Period: null,
                    TaxYear:null,
                    AppealOn: '',
                    Amount:null
                };
            grd.store.add(recc);

            // console.log(recc);

            var col = grd.headerCt.getHeaderAtIndex(0);
            var rec = grd.store.data.items;
            // console.log(rec);
            var record = rec[rec.length-1];
            grd.getPlugin('grdTaxPeriodPlugin').startEdit(record, col);

        }
    },

    onAppeal_btnCancelClick: function(button, e, eOpts) {
        var me=this;
        me.ReadOnlyData("p");
        me.ClearControls();


    },

    onBtnBackAppealClick: function(button, e, eOpts) {
        /*
        uiConfig = {menuLink:'ModuleVerification',pageTitle:'Module Verification'};
        DynamicUI(uiConfig,function(){         

        });
        */

        var param=Ext.ComponentQuery.query('#pnlAppealEntry')[0].extraParam;
        console.log("param",param);
        var tNo = "";
        var idxM = "";
        var idxT = "";
        var from = "";

        if(param.from === "MV")
        {
            tNo = param.tranNo;
            idxM = param.indexM;
            idxT = param.indexT;
            from = param.from; 

        }
        else if (param.AUParams.from === "AU")
        {
            tNo = param.AUParams.tNo;
            idxM = param.AUParams.idxM;
            idxT = param.AUParams.idxT;
            from = param.AUParams.from; 
        }

        uiConfig = {menuLink:'ModuleVerification',pageTitle:'Module Verification'};
        DynamicUI(uiConfig,null,{tranNo:tNo,indexM:idxM,indexT:idxT,from:from});
    },

    onCntBottomAppealBeforeRender: function(component, eOpts) {
        var grid = Ext.ComponentQuery.query('#Appeal_grdTaxPeriod')[0];


        grid.columns[2].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";   

            var strFilPeriod = Ext.getStore("FilingPeriodStore");                
            var index = strFilPeriod.find('FilPeriod',value);
            var rec = strFilPeriod.getAt(index);

            var strPeriod = Ext.getStore("Period");

            var items=Ext.getStore('FilingPeriodStore').data.items;    


            for(var i=0;i<items.length;i++)
            {

                if(items[i].data.FilPeriod === value)
                {
                    temp=items[i].data.FilPeriodDesc;
                    break;
                }        
            }   


            // console.log("rec",rec);

            if(rec !== false && rec !== undefined)
            {
                strPeriod.loadData(rec.data.Period);
            } 


            return temp;
        };


        grid.columns[3].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";    


            var items=Ext.getStore('Period').data.items;


            for(var i=0;i<items.length;i++)
            {

                if(items[i].data.Period==value)
                {
                    temp=items[i].data.PeriodDesc;
                    break;
                }        
            }


            return temp;
        };

        grid.columns[4].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";    


            var items=Ext.getStore('AppealOnSubjectStore').data.items;


            for(var i=0;i<items.length;i++)
            {

                if(items[i].data.id==value)
                {
                    temp=items[i].data.appealOnSubj;
                    break;
                }        
            }

            return temp;
        };

    },

    onCntBottomAppealAfterRender: function(component, eOpts) {
        var me=this;
        var grd = Ext.ComponentQuery.query('#Appeal_grdTaxPeriod')[0];

        grd.on('validateedit', function(editor, e) {

            var valid= true;


            var filePerMsg = Ext.ComponentQuery.query("#hdnAppealFilePer")[0].getValue();
            var pan = Ext.ComponentQuery.query("#Appeal_txtPan")[0];
            var cboFilingPeriod = Ext.ComponentQuery.query("#AL_cboFilePeriod")[0];
            var cboPeriod = Ext.ComponentQuery.query("#AL_cboPeriod")[0];
            var txtTaxYear = Ext.ComponentQuery.query("#AL_txtTaxYear")[0];
            var cboApplOn = Ext.ComponentQuery.query("#AL_cboAppealOn")[0];

            var filingPeriod = cboFilingPeriod.getValue();
            var period = cboPeriod.getValue();
            var year = txtTaxYear.getValue();
            var applOn = cboApplOn.getValue();
            var idx = 0;
            var rowIdx = e.rowIdx;
            //console.log('rowindx',rowIdx);

            valid = me.validateTaxDuration();



            if (valid)
            {
                valid = me.LoadMASP();
                var str = editor.grid.store;
                //console.log('e',editor);
                // console.log("store",str.data.items);

                var count = str.findBy(
                function(record, id){
                    //console.log("rec",record.data);

                    if(record.data.FilePer == filingPeriod && 
                    record.data.Period == period && 
                    record.data.TaxYear == year && rowIdx !== idx)
                    {
                        // valid = true;  // a record with this data exists
                        return true;
                    }

                    idx++;
                    return false;
                    // valid = false;  // there is no record in the store with this data

                });

                var grd=Ext.ComponentQuery.query('#Appeal_grdTaxPeriod')[0];
                var storeAL=grd.getStore();
                //console.log("store",storeAL);

                var cnt=storeAL.data.items.length;

                //var dat=storeAL.data.items[e.rowIdx];

                for(var rindx=0;rindx<cnt;rindx++)
                {
                    if(e.rowIdx != rindx)
                    {
                        var currRowData=storeAL.data.items[rindx].data;
                        //console.log("CR",currRowData);

                        var fileP=currRowData.FilePer;
                        var prd=currRowData.Period;
                        var tYr = currRowData.TaxYear;
                        var appealOn = currRowData.AppealOn;

                        var nFilePer = editor.context.newValues.FilePer;
                        var nPrd = editor.context.newValues.Period;
                        var nTyr = editor.context.newValues.TaxYear;
                        var nAppealOn = editor.context.newValues.AppealOn;

                        if(fileP == nFilePer && prd == nPrd && tYr == nTyr && appealOn == nAppealOn)
                        {
                            msg("WARNING","यो पुनरावेदन गएको विषय पहिला नै प्रबिष्ट भैइसकेको छ !");
                            return false;

                        }
                    }
                }
                // alert('indx' + recordIndex);
                /* if(count != -1)
                {

                // valid=false;
                msg("WARNING","Two Duplicate Periods is not allowed !!!"); 
                return false;

            }*/ 
        }
        return valid;

    });
    },

    onAppeal_txtAppealNoKeypress: function(textfield, e, eOpts) {
        /*var me =this;
        var hdnAction = Ext.ComponentQuery.query('#hdnActionAppeal')[0];
        var txtAppealNo = Ext.ComponentQuery.query("#Appeal_txtAppealNo")[0];

        if(e.keyCode === 13)
        {
        if(hdnAction.lastValue === "E") //|| hdnAction.lastValue === "D")
        {
        me.ReadOnlyData("e");
        //me.LoadApplHeaderWithApplLines();
        //return;
    }
    else if(hdnAction.lastValue === "P")
    {
        me.ReadOnlyData("d");
        me.Print();
        return;

    }

    else if(txtAppealNo.getValue() === "")
    {
        msg('WARNING',"कृपया पुनरावेदन नं हाल्नुहोस् !");
        return;
    }

    me.LoadApplHeaderWithApplLines();
    }
    */
    },

    onAppeal_btnSaveClick: function(button, e, eOpts) {
        var me=this;
        var txtPan=Ext.ComponentQuery.query('#Appeal_txtPan')[0];
        var txtAppealDate=Ext.ComponentQuery.query('#Appeal_txtAppealDate')[0];
        var cboAppealLocCode = Ext.ComponentQuery.query("#Appeal_cboAppeal_Loc_Code")[0];
        var cboAppealSubject=Ext.ComponentQuery.query('#cboAppealSubjectAE')[0];
        var txtMASPNo=Ext.ComponentQuery.query('#Appeal_txtAppeal_On_Ma_No')[0];
        var grdTP = Ext.ComponentQuery.query('#Appeal_grdTaxPeriod')[0];


        var pan=txtPan.getValue();
        var appealDate=txtAppealDate.getValue();
        var appealLocCode=cboAppealLocCode.getValue();
        var appealSubject=cboAppealSubject.getValue();
        var maspNo=txtMASPNo.getValue();

        //var valid=true;

        var errMsg="";
        var errCount=0;

        if(!pan)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया स्था.ले.नं. हाल्नुहोस् !<br/>";
            txtPan.focus();
        }
        if(!appealDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदनमा गएको मिति हाल्नुहोस् !<br/>";
            txtAppealDate.focus();
        }

        if(!appealSubject)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदनमा गएको बिषय छान्नुहोस् !<br/>";
            cboAppealSubject.focus();
        }
        if(!maspNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया कर निर्धारण आदेश नं./विषेश आदेश नं. हाल्नुहोस्  !<br/>";
            txtMASPNo.focus();

        }
        if(!appealLocCode)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदनमा गएको निकाय छान्नुहोस् !<br/>";
            cboAppealLocCode.focus();
        }
        if(grdTP.getStore().getCount()<=0)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया कर अवधिको लागि Add click गर्नुहोस् !<br/>";
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }
        var objParam = Ext.ComponentQuery.query('#pnlAppealEntry')[0].extraParam;
        //console.log("param",objParam);
        if(!objParam)
        {
            me.SaveApplHeaderWithApplLines("I");
            me.ClearControls();
            me.ReadOnlyData("p");
        }
        else if(objParam.params.from === "AU")
        {
            // var offCodeAU = param.extraParam.AUParams.offCodeAU;
            //  var requestNo = param.extraParam.AUParams.requestNo;
            me.SaveApplHeaderWithApplLinesAU("I","E");
            me.ReadOnlyShowHideControls("au");
        }



    },

    onAppeal_btnEditClick: function(button, e, eOpts) {
        var me=this;
        me.ReadOnlyData("d");
        me.ClearControls("e");
        var hdnAction = Ext.ComponentQuery.query('#hdnActionAppeal')[0];
        var lblActionAppeal = Ext.ComponentQuery.query('#lblActionAppeal')[0];
        var txtAppealNo = Ext.ComponentQuery.query('#Appeal_txtAppealNo')[0];
        var txtOffCode = Ext.ComponentQuery.query('#Appeal_txtOffCode')[0];

        var btnSave = Ext.ComponentQuery.query('#Appeal_btnSave')[0];
        var btnEdit = Ext.ComponentQuery.query('#Appeal_btnEdit')[0];
        var btnDelete = Ext.ComponentQuery.query('#Appeal_btnDelete')[0];
        var btnPrint = Ext.ComponentQuery.query('#btnPrintAppeal')[0];

        hdnAction.setValue("E");
        txtAppealNo.focus(true);
        btnSave.enable(true);
        btnEdit.disable(true);
        btnDelete.disable(true);
        btnPrint.disable(true);

        lblActionAppeal.setValue("Updating ...............");
        msg('WARNING',"कृपया पुनरावेदन नं हाल्नुहोस् !");



    },

    onAppeal_btnDeleteClick: function(button, e, eOpts) {
        var me=this;
        me.ReadOnlyData("d");
        me.ClearControls("e");

        var hdnAction = Ext.ComponentQuery.query('#hdnActionAppeal')[0];
        hdnAction.setValue("D");

        var lblActionAppeal = Ext.ComponentQuery.query('#lblActionAppeal')[0];
        var txtAppealNo = Ext.ComponentQuery.query('#Appeal_txtAppealNo')[0];
        var txtOffCode = Ext.ComponentQuery.query('#Appeal_txtOffCode')[0];

        var btnSave = Ext.ComponentQuery.query('#Appeal_btnSave')[0];
        var btnEdit = Ext.ComponentQuery.query('#Appeal_btnEdit')[0];
        var btnDelete = Ext.ComponentQuery.query('#Appeal_btnDelete')[0];
        var btnPrint = Ext.ComponentQuery.query('#btnPrintAppeal')[0];

        txtAppealNo.focus(true);
        btnSave.disable(true);
        btnEdit.disable(true);
        btnDelete.disable(true);
        btnPrint.disable(true);

        lblActionAppeal.setValue("Deleting ...............");
        msg('WARNING',"कृपया पुनरावेदन नं हाल्नुहोस् !");




    },

    onAppeal_btnSubmitClick: function(button, e, eOpts) {
        var me = this;
        var action = Ext.ComponentQuery.query('#hdnActionAppeal')[0];
        var txtAppealNo = Ext.ComponentQuery.query('#Appeal_txtAppealNo')[0];

        var txtPan=Ext.ComponentQuery.query('#Appeal_txtPan')[0];
        var txtAppealDate=Ext.ComponentQuery.query('#Appeal_txtAppealDate')[0];
        var cboAppealLocCode = Ext.ComponentQuery.query("#Appeal_cboAppeal_Loc_Code")[0];
        var cboAppealSubject=Ext.ComponentQuery.query('#cboAppealSubjectAE')[0];
        var txtMASPNo=Ext.ComponentQuery.query('#Appeal_txtAppeal_On_Ma_No')[0];

        var grdTP = Ext.ComponentQuery.query('#Appeal_grdTaxPeriod')[0];


        var pan=txtPan.getValue();
        var appealDate=txtAppealDate.getValue();
        var appealLocCode=cboAppealLocCode.getValue();
        var appealSubject=cboAppealSubject.getValue();
        var maspNo=txtMASPNo.getValue();

        var errMsg="";
        var errCount=0;

        if(!pan)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया स्था.ले.नं. हाल्नुहोस् !<br/>";
            txtPan.focus();

        }
        if(!appealDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदनमा गएको मिति हाल्नुहोस् !<br/>";
            txtAppealDate.focus();
        }

        if(!appealSubject)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदनमा गएको बिषय छान्नुहोस् !<br/>";
            cboAppealSubject.focus();
        }
        if(!maspNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया कर निर्धारण आदेश नं./विषेश आदेश नं. हाल्नुहोस्  !<br/>";
            txtMASPNo.focus();

        }
        if(!appealLocCode)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदनमा गएको निकाय छान्नुहोस् !<br/>";
            cboAppealLocCode.focus();
        }
        if(grdTP.getStore().getCount()<=0)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया कर अवधिको लागि Add click गर्नुहोस् !<br/>";
        }


        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }

        var objParam = Ext.ComponentQuery.query('#pnlAppealEntry')[0].extraParam;
        //console.log("param",objParam);
        if(!objParam)
        {
            if(action.lastValue === "D")
            {  
                Ext.Msg.confirm('Confirm', 'के तपाई साचै नै डाटा DELETE गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.SaveApplHeaderWithApplLines("D");
                        me.ClearControls();
                        me.ReadOnlyData("p");
                        return true;
                    }
                }, this);


            }
            else
            {
                Ext.Msg.confirm('Confirm', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.SaveApplHeaderWithApplLines("F");
                        me.ClearControls();
                        me.ReadOnlyData("p");
                        return true;
                    }
                }, this);


            }
        }
        else if(objParam.params.from === "AU")
        {
            //var offCodeAU = param.extraParam.AUParams.offCodeAU;
            // var requestNo = param.extraParam.AUParams.requestNo;
            // me.SaveApplHeaderWithApplLinesAU("I","E",offCodeAU,requestNo);

            if(action.lastValue === "D")
            {  
                Ext.Msg.confirm('Confirm', 'के तपाई साचै नै डाटा DELETE गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.SaveApplHeaderWithApplLinesAU("D","D");
                        //me.ClearControls();
                        // me.ReadOnlyData("p");
                        return true;
                    }
                }, this);


            }
            else
            {
                Ext.Msg.confirm('Confirm', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.SaveApplHeaderWithApplLinesAU("F","E");
                        me.ClearControls("au");
                        // me.ReadOnlyData("p");
                        me.ReadOnlyShowHideControls("au");
                        return true;
                    }
                }, this);


            }
        }


    },

    onAL_cboFilePeriodChange: function(field, newValue, oldValue, eOpts) {
        var cboFilingPeriod = Ext.ComponentQuery.query("#AL_cboFilePeriod")[0];
        var record = cboFilingPeriod.findRecord(cboFilingPeriod.valueField || cboFilingPeriod.displayField,newValue); 

        var cboPeriod = Ext.ComponentQuery.query("#AL_cboPeriod")[0];
        cboPeriod.setValue('');


        if(record === false)
        {
            return;
        }
        else
        {
            cboPeriod.store.loadData(record.data.Period);
        }

    },

    onAppeal_txtPanBlur: function(component, e, eOpts) {
        this.LoadPanDetails();
        /*var txtPan = Ext.ComponentQuery.query("#Appeal_txtPan")[0];
        //console.log(txtPan.maxLength);

        var pan=txtPan.getValue();

        //console.log(pan.length);

        var panLength=pan.length;

        var maxLen=txtPan.maxLength;

        if(panLength<maxLen || panLength>maxLen)
        {
            msg("WARNING","कृपया स्था.ले.नं. नौ अंकको हाल्नुहोस् !");
            return;
        }
        else
        {
            this.LoadPanDetails();
        }
        */
    },

    onAppeal_txtAppeal_On_Ma_NoKeypress: function(textfield, e, eOpts) {
        /*if(e.keyCode === 13 || e.keyCode === 9)
        {
        this.ValidateMASPNo();
        }*/

    },

    onAL_txtTaxYearBlur: function(component, e, eOpts) {
        var me=this;
        var taxyear=Ext.ComponentQuery.query('#AL_txtTaxYear')[0].getValue();
        if(taxyear===null)
        {
            return;
        }

        //VALIDATING TAX YEAR
        ValidateTaxyear(taxyear,function(invalidMsg){
            if(invalidMsg!=='')
            {
                msg('INFO',invalidMsg);

                return;
            }
            //
        });
        //ENDS VALIDATING TAX YEAR
    },

    onAppeal_txtAppeal_On_Ma_NoBlur: function(component, e, eOpts) {
        var txtAppealOnMaNo = Ext.ComponentQuery.query("#Appeal_txtAppeal_On_Ma_No")[0];

        if(field.value === "")
        {
            msg("WARNING",'कृपया कर निर्धारण आदेश नं./विषेश आदेश नं. हाल्नुहोस् !');
            txtAppealOnMaNo.focus();
            return;
        }
        else
        {

            this.ValidateMASPNo();
        }

    },

    onAppeal_txtAppealDateBlur: function(component, e, eOpts) {
        /*var errDate = "";

        errDate = validateFutureDate(field.getValue(),"Y");
        errDate = errDate === ""?validateFutureDate(field.getValue(),"Y"):errDate;


        return errDate === ""?true:errDate;
        */
        return validateFutureDate(field.getValue(),"Y",function(){field.focus();});
    },

    onAppeal_txtOrderDateBlur: function(component, e, eOpts) {
        /*var errDate = "";

        errDate = validateFutureDate(field.getValue(),"Y");
        errDate = errDate === ""?validateFutureDate(field.getValue(),"Y"):errDate;


        return errDate === ""?true:errDate;*/

        return validateFutureDate(field.getValue(),"Y",function(){field.focus();});
    },

    onAL_txtAmountChange: function(field, newValue, oldValue, eOpts) {
        var apTotAmount=Ext.ComponentQuery.query('#Appeal_txtTotalAmount')[0];
        var amount=Ext.ComponentQuery.query('#AL_txtAmount')[0].getValue();
        var grd=Ext.ComponentQuery.query('#Appeal_grdTaxPeriod')[0];

        var store = grd.getStore();
        var selectedRow = grd.getSelectionModel();

        var record = grd.getSelectionModel().getSelection()[0];


        var countData=store.data.items.length;

        var totalAR=0;

        var rowIdx = store.indexOf(record);

        for(var i=0;i<countData;i++)
        {


            if(rowIdx==i)
            {
                totalAR=Number(totalAR)+Number(amount);
            }
            else
            {
                totalAR=Number(totalAR)+Number(store.data.items[i].data.Amount);
            }

        }

        apTotAmount.setValue(totalAR);
        /*

        var sum = 0; 

        var rowIdx = store.indexOf(record);
        var idx = 0;


        store.each(function (rec) {     
        //console.log("r",rec);

        if(rec.get('Amount') !=="" && rowIdx !== idx)
        {
            sum = parseInt(sum) + parseInt(rec.get('Amount')); 
        }

        idx++;

    });



    var overallTot = parseInt(sum)+parseInt(amount);

    apTotAmount.setValue(overallTot);
    */
    },

    onAppeal_txtAppealNoBlur: function(component, e, eOpts) {
        var me =this;
        var hdnAct=Ext.ComponentQuery.query('#hdnActAppeal')[0];
        var hdnAction = Ext.ComponentQuery.query('#hdnActionAppeal')[0];
        var txtAppealNo = Ext.ComponentQuery.query("#Appeal_txtAppealNo")[0];

        if(hdnAction.lastValue === "E" /*|| hdnAction.lastValue === "D"*/)
        {
            me.ReadOnlyData("e");
            // me.LoadApplHeaderWithApplLines();
            //return;
        }
        else if(hdnAction.lastValue === "P")
        {
            me.ReadOnlyData("d");
            me.Print();
            return;
        }
        else if(txtAppealNo.getValue() === "")
        {
            msg('WARNING',"कृपया पुनरावेदन नं हाल्नुहोस् !");
            return;
        }

        me.LoadApplHeaderWithApplLines();
    },

    onBtnPrintAppealClick: function(button, e, eOpts) {
        var me=this;
        me.ReadOnlyData("d");
        me.ClearControls("e");
        var hdnAction = Ext.ComponentQuery.query('#hdnActionAppeal')[0];
        var lblActionAppeal = Ext.ComponentQuery.query('#lblActionAppeal')[0];
        var txtAppealNo = Ext.ComponentQuery.query('#Appeal_txtAppealNo')[0];
        var txtOffCode = Ext.ComponentQuery.query('#Appeal_txtOffCode')[0];

        var btnSave = Ext.ComponentQuery.query('#Appeal_btnSave')[0];
        var btnEdit = Ext.ComponentQuery.query('#Appeal_btnEdit')[0];
        var btnDelete = Ext.ComponentQuery.query('#Appeal_btnDelete')[0];
        var btnSubmit = Ext.ComponentQuery.query('#Appeal_btnSubmit')[0];

        hdnAction.setValue("P");
        txtAppealNo.focus(true);
        btnSave.disable(true);
        btnEdit.disable(true);
        btnDelete.disable(true);
        btnSubmit.disable(true);


        lblActionAppeal.setValue("Printing ...............");
        msg('WARNING',"कृपया पुनरावेदन नं हाल्नुहोस् !");
    },

    onCboAppealSubjectAEChange: function(field, newValue, oldValue, eOpts) {
        /*var label = Ext.ComponentQuery.query('#lblAE')[0];
        var store=Ext.getStore('AppealOnSubjectStore');

        var txtPan = Ext.ComponentQuery.query("#Appeal_txtPan")[0];
        var pan = txtPan.getValue();

        var storeMA=Ext.getStore('AppealMA');

        var storeSP=Ext.getStore('AppealSP');

        var appealOnMASPNo = Ext.ComponentQuery.query('#Appeal_txtAppeal_On_Ma_No')[0];
        if(newValue === "MA")
        {
        label.setText("कर निर्धारण आदेश नं.");
        appealOnMASPNo.reset();

        storeMA.load({
        url:"../Handlers/VAT/ManagementAssessment/MaHeaderHandler.ashx?method=GetMaHeaderForAppeal",
        method:'POST',
        params: {pan:pan,acctType:'00'}

        });
        var winMA = Ext.create('MyApp.view.AppealMAWindow');
        winMA.maNo=Ext.ComponentQuery.query('#Appeal_txtAppeal_On_Ma_No')[0];
        winMA.show();
        }
        else if(newValue === "SP")
        {
        label.setText("विषेश आदेश नं.");
        appealOnMASPNo.reset();

        storeSP.load({
        url:"../Handlers/VAT/SpecialPenalty/SpecialPenaltyHandler.ashx?method=GetSpecialPenaltiesNoForAppeal",
        method:'POST',
        params: {pan:pan,acctType:'00'}

        });
        var winSP = Ext.create('MyApp.view.AppealSPWindow');
        winSP.spNo=Ext.ComponentQuery.query('#Appeal_txtAppeal_On_Ma_No')[0];
        winSP.show();


        }
        var cboAppealSubject = Ext.ComponentQuery.query("#cboAppealSubjectAE")[0];

        var record = cboAppealSubject.findRecord(cboAppealSubject.valueField || cboAppealSubject.displayField,newValue); 
        //console.log("rec",record);

        if(record === false)
        {
            return;
        }
        else
        {
            store.loadData(record.data.AppealOnSubjectStore);
        }*/
    },

    onCboAppealSubjectAEChange: function(field, newValue, oldValue, eOpts) {
        var store=Ext.getStore('AppealOnSubjectStore');

        var cboAppealSubject = Ext.ComponentQuery.query("#cboAppealSubjectAE")[0];

        var record = cboAppealSubject.findRecord(cboAppealSubject.valueField || cboAppealSubject.displayField,newValue); 
        //console.log("rec",record);

        if(record === false)
        {
            return;
        }
        else
        {
            store.loadData(record.data.AppealOnSubjectStore);
        }
    },

    onCboAppealSubjectAECollapse: function(field, eOpts) {
        //console.log('f',field.getValue());
        var label = Ext.ComponentQuery.query('#lblAE')[0];
        var store=Ext.getStore('AppealOnSubjectStore');

        var txtPan = Ext.ComponentQuery.query("#Appeal_txtPan")[0];
        var pan = txtPan.getValue();

        var storeMA=Ext.getStore('AppealMA');

        var storeSP=Ext.getStore('AppealSP');

        var appealOnMASPNo = Ext.ComponentQuery.query('#Appeal_txtAppeal_On_Ma_No')[0];
        if(field.getValue() === "MA")
        {
            label.setText("कर निर्धारण आदेश नं.");
            appealOnMASPNo.reset();

            storeMA.load({
                url:"../Handlers/VAT/ManagementAssessment/MaHeaderHandler.ashx?method=GetMaHeaderForAppeal",
                method:'POST',
                params: {pan:pan,acctType:'00'}

            });
            var winMA = Ext.create('MyApp.view.AppealMAWindow');
            winMA.maNo=Ext.ComponentQuery.query('#Appeal_txtAppeal_On_Ma_No')[0];
            winMA.show();
        }
        else if(field.getValue() === "SP")
        {
            label.setText("विषेश आदेश नं.");
            appealOnMASPNo.reset();

            storeSP.load({
                url:"../Handlers/VAT/SpecialPenalty/SpecialPenaltyHandler.ashx?method=GetSpecialPenaltiesNoForAppeal",
                method:'POST',
                params: {pan:pan,acctType:'00'}

            });
            var winSP = Ext.create('MyApp.view.AppealSPWindow');
            winSP.spNo=Ext.ComponentQuery.query('#Appeal_txtAppeal_On_Ma_No')[0];
            winSP.show();


        }
        /*var cboAppealSubject = Ext.ComponentQuery.query("#cboAppealSubjectAE")[0];

        var record = cboAppealSubject.findRecord(cboAppealSubject.valueField || cboAppealSubject.displayField,field.getValue()); 
        //console.log("rec",record);

        if(record === false)
        {
            return;
        }
        else
        {
            store.loadData(record.data.AppealOnSubjectStore);
        }*/
    },

    onAppeal_txtAppealReasonKeypress: function(textfield, e, eOpts) {
        return unicodeKeyPress(textfield,e,eOpts);
    },

    onAppeal_txtAppealReasonKeyup: function(textfield, e, eOpts) {
        return unicodeKeyUp(textfield,e,eOpts);

    },

    onAppeal_txtAppealReasonChange: function(field, newValue, oldValue, eOpts) {
        return unicodeChange(field, newValue, oldValue, eOpts);

    },

    onAppeal_txtAppealReasonFocus: function(component, e, eOpts) {
        return unicodeFocus(field,eOpts);

    },

    ClearControls: function(txt) {

        var txtOffCode = Ext.ComponentQuery.query("#Appeal_txtOffCode")[0];
        var txtAppealNo = Ext.ComponentQuery.query("#Appeal_txtAppealNo")[0];
        var txtAppealDate = Ext.ComponentQuery.query("#Appeal_txtAppealDate")[0];
        var txtPan = Ext.ComponentQuery.query("#Appeal_txtPan")[0];
        var txtTName = Ext.ComponentQuery.query("#Appeal_txtTaxPayerName")[0];
        var txtTAddress = Ext.ComponentQuery.query("#Appeal_txtTaxPayerAddress")[0];
        var txtAppealOnMaNo = Ext.ComponentQuery.query("#Appeal_txtAppeal_On_Ma_No")[0];
        var cboAppealLocCode = Ext.ComponentQuery.query("#Appeal_cboAppeal_Loc_Code")[0];
        var txtAppealLocCodeRegNo = Ext.ComponentQuery.query("#Appeal_txtAppeal_Loc_Code_RegNo")[0];
        var txtOrderNo = Ext.ComponentQuery.query("#Appeal_txtOrderNo")[0];
        var txtOrderDate = Ext.ComponentQuery.query("#Appeal_txtOrderDate")[0];
        var txtAppealReason = Ext.ComponentQuery.query("#Appeal_txtAppealReason")[0];
        var grdTP = Ext.ComponentQuery.query('#Appeal_grdTaxPeriod')[0];
        var lblActionAppeal =   Ext.ComponentQuery.query("#lblActionAppeal")[0];
        var txtTotalAmount = Ext.ComponentQuery.query("#Appeal_txtTotalAmount")[0];
        var hdnAction = Ext.ComponentQuery.query("#hdnActionAppeal")[0];

        var cboAppealSubject = Ext.ComponentQuery.query("#cboAppealSubjectAE")[0];

        var btnSave = Ext.ComponentQuery.query('#Appeal_btnSave')[0];
        var btnEdit = Ext.ComponentQuery.query('#Appeal_btnEdit')[0];
        var btnDelete = Ext.ComponentQuery.query('#Appeal_btnDelete')[0];
        var btnSubmit = Ext.ComponentQuery.query('#Appeal_btnSubmit')[0];
        var btnPrint = Ext.ComponentQuery.query('#btnPrintAppeal')[0];

        if(txt === "e")
        {
            //txtOffCode.reset();
            txtAppealDate.reset();
            txtPan.reset();
            txtTName.reset();
            txtTAddress.reset();
            txtAppealOnMaNo.reset();
            cboAppealLocCode.reset();
            txtAppealLocCodeRegNo.reset();
            txtOrderNo.reset();
            txtOrderDate.reset();
            txtAppealReason.reset();
            grdTP.getStore().removeAll();
            lblActionAppeal.reset();
            txtAppealNo.reset();
            txtAppealNo.setVisible(true);
            txtTotalAmount.reset();
            lblActionAppeal.setVisible(true);
            cboAppealSubject.reset();
        }
        else if(txt === "p")
        {
            txtAppealDate.reset();
            txtTName.reset();
            txtTAddress.reset();
            txtAppealOnMaNo.reset();
            cboAppealLocCode.reset();
            txtAppealLocCodeRegNo.reset();
            txtOrderNo.reset();
            txtOrderDate.reset();
            txtAppealReason.reset();
            grdTP.getStore().removeAll();
            lblActionAppeal.reset();
            txtAppealNo.reset();
            txtAppealNo.setVisible(false);
            txtTotalAmount.reset();
            hdnAction.setValue("");
            txtPan.setReadOnly(false);
            lblActionAppeal.setVisible(false);
            btnSave.enable(true);
            cboAppealSubject.reset();
        }
        else if(txt === "au")
        {
            txtAppealDate.reset();
            txtPan.reset();
            txtTName.reset();
            txtTAddress.reset();
            txtAppealOnMaNo.reset();
            cboAppealLocCode.reset();
            txtAppealLocCodeRegNo.reset();
            txtOrderNo.reset();
            txtOrderDate.reset();
            txtAppealReason.reset();
            grdTP.getStore().removeAll();
            lblActionAppeal.reset();
            txtAppealNo.reset();
            txtAppealNo.setVisible(false);
            txtTotalAmount.reset();
            hdnAction.setValue("");
            txtPan.setReadOnly(false);
            lblActionAppeal.setVisible(false);
            cboAppealSubject.reset();

        }
        else if(txt === "N")
        {
            txtAppealDate.reset();
            txtPan.reset();
            txtTName.reset();
            txtTAddress.reset();
            txtAppealOnMaNo.reset();
            cboAppealLocCode.reset();
            txtAppealLocCodeRegNo.reset();
            txtOrderNo.reset();
            txtOrderDate.reset();
            txtAppealReason.reset();
            grdTP.getStore().removeAll();
            lblActionAppeal.reset();
            txtTotalAmount.reset();
            hdnAction.setValue("");
            txtPan.setReadOnly(false);
            lblActionAppeal.setVisible(false);
            cboAppealSubject.reset();

        }
        else 
        {
            //txtOffCode.reset();
            txtAppealDate.reset();
            txtPan.reset();
            txtTName.reset();
            txtTAddress.reset();
            txtAppealOnMaNo.reset();
            cboAppealLocCode.reset();
            txtAppealLocCodeRegNo.reset();
            txtOrderNo.reset();
            txtOrderDate.reset();
            txtAppealReason.reset();
            grdTP.getStore().removeAll();
            lblActionAppeal.reset();
            txtAppealNo.reset();
            txtAppealNo.setVisible(false);
            txtTotalAmount.reset();
            hdnAction.setValue("");
            txtPan.setReadOnly(false);
            lblActionAppeal.setVisible(false);

            cboAppealSubject.reset();
            btnSave.enable(true);
            btnEdit.enable(true);
            btnDelete.enable(true);
            btnSubmit.enable(true);
            btnPrint.enable(true);
        }
    },

    LoadApplHeaderWithApplLines: function() {
        var me = this;
        var txtOffCode = Ext.ComponentQuery.query("#Appeal_txtOffCode")[0];
        var txtAppealNo = Ext.ComponentQuery.query("#Appeal_txtAppealNo")[0];
        var txtPan = Ext.ComponentQuery.query("#Appeal_txtPan")[0];
        var txtTaxPayerName = Ext.ComponentQuery.query("#Appeal_txtTaxPayerName")[0];
        var txtTaxPayerAddress = Ext.ComponentQuery.query("#Appeal_txtTaxPayerAddress")[0];
        var grdTP = Ext.ComponentQuery.query('#Appeal_grdTaxPeriod')[0];
        var offCode = txtOffCode.getValue();    
        var appealNo = txtAppealNo.getValue();

        if(offCode === "" || appealNo === "")
        {
            return;
        }

        var wait = watiMsg('loading ...');

        Ext.Ajax.request({
            url:"../Handlers/VAT/Appeal/AppealHeaderHandler.ashx?method=GetAppealHeader",
            params:{offCode:offCode,appealNo:appealNo},
            success: function ( result, request ) {            

                wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            
                // console.log(obj,obj.message);
                /* if(obj.success === "false")
                {   
                msg("WARNING",obj.message);
                return;
                }*/

                if(obj.message === "F")
                {
                    me.ClearControls("N");
                    me.ReadOnlyData("d");
                    msg("WARNING","पुनरावेदनमा गएको डाटा पहिला नै FINALIZED भइसक्यो !");
                    return;
                }
                if(obj.message === "D")
                {
                    me.ClearControls("N");
                    me.ReadOnlyData("d");
                    msg("WARNING","पुनरावेदनमा गएको डाटा पहिला नै DELETED भइसक्यो !");
                    return;
                }
                if(obj.message === "V")
                {
                    me.ClearControls("N");
                    me.ReadOnlyData("d");
                    msg("WARNING","पुनरावेदनमा गएको डाटा पहिला नै VERIFIED भइसक्यो !");
                    return;
                }
                if(obj.message === "")
                {
                    me.ReadOnlyData("e");
                }

                var txtAppealDate = Ext.ComponentQuery.query('#Appeal_txtAppealDate')[0];
                var cboAppealSubject = Ext.ComponentQuery.query("#cboAppealSubjectAE")[0];
                var txtAppealOnMaNo = Ext.ComponentQuery.query('#Appeal_txtAppeal_On_Ma_No')[0];
                var cboAppealLocCode = Ext.ComponentQuery.query('#Appeal_cboAppeal_Loc_Code')[0];
                var txtAppealLocCodeRegNo = Ext.ComponentQuery.query('#Appeal_txtAppeal_Loc_Code_RegNo')[0];
                var txtOrderNo = Ext.ComponentQuery.query('#Appeal_txtOrderNo')[0];
                var txtOrderDate = Ext.ComponentQuery.query('#Appeal_txtOrderDate')[0];
                var txtAppealReason = Ext.ComponentQuery.query('#Appeal_txtAppealReason')[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionAppeal')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnAppealTranNo')[0];
                var hdnAct=Ext.ComponentQuery.query('#hdnActAppeal')[0];
                hdnAct.setValue("");


                // if(obj.message === "" || obj.message === "F")
                // {       

                var data = obj.root; 
                // console.log("data",data);
                if(data === "")
                {
                    me.ClearControls("N");
                    me.ReadOnlyData("d");
                    msg("WARNING","यो पुनरावेदन नं. EXISTS छैन !");
                    return;
                }
                var taxpayer=data.TaxPayer;
                var bAddress =taxpayer.BusinessAddress.Address;
                txtPan.setValue(data.Pan);
                txtTaxPayerName.setValue(taxpayer.Name);
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var wn=bAddress.WardNo;
                var dn=bAddress.DistrictNameNep;
                var svn=sn +"/" + vt;
                var addr=svn + "-" + wn + "," + dn;
                txtTaxPayerAddress.setValue(addr);

                txtAppealDate.setValue(data.ApplDate);
                //alert(data.AppealOn);
                cboAppealSubject.setValue(data.AppealOn);
                txtAppealOnMaNo.setValue(data.ApplOnMaNo);
                cboAppealLocCode.setValue(data.ApplLocCode);
                txtAppealLocCodeRegNo.setValue(data.ApplRegNo);
                txtOrderNo.setValue(data.OrderNo);
                txtOrderDate.setValue(data.OrderDate);
                txtAppealReason.setValue(data.ApplReason);

                hdnTranNo.setValue(data.ApTranNo);



                var grd = Ext.ComponentQuery.query("#Appeal_grdTaxPeriod")[0];
                var store = Ext.getStore('AppealLines');
                var sum=0;
                var apTxtTotAmount = Ext.ComponentQuery.query("#Appeal_txtTotalAmount")[0];

                //store.add(data.AppealLinesLST); 
                store.loadData(data.AppealLinesLST); 
                store.clearFilter();
                store.filter(function(item){

                    return (item.data.AppealNo == appealNo) ;
                });

                store.each(function (rec) {
                    var seQNo=rec.get('SeqNo')===""?null:rec.get('SeqNo');
                    var filePer=rec.get('FilePer')===""?null:rec.get('FilePer');
                    var period = rec.get('Period') === ""? null:rec.get('Period');
                    var taxYear = rec.get('TaxYear') === ""? null:rec.get('TaxYear');
                    var appealOn = rec.get('AppealOn') === ""? null:rec.get('AppealOn');
                    var amount = rec.get('Amount') === ""? null:rec.get('Amount');

                    rec.data.SeqNo = seQNo;
                    rec.data.FilePer = filePer;
                    rec.data.Period = period ;
                    rec.data.TaxYear = taxYear;
                    rec.data.AppealOn = appealOn;
                    rec.data.Amount = amount;
                    sum = Number(sum) + Number(amount); 

                });
                apTxtTotAmount.setValue(sum);
                // grd.bindStore(store);
                // }


                //------------------------------//  

                /* var win1 = Ext.getCmp('AppealMAWindow');

                var win2 = Ext.getCmp('AppealSPWindow');


                if(data.AppealOn === "MA")
                {
                win1.close();
                }
                else if(data.AppealOn === "SP")
                {
                win2.close();
                }*/ 

                //-----------------------------//
            },
            failure: function ( result, request ) {

                wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    LoadPanDetails: function() {
        var me =this;
        var txtPan = Ext.ComponentQuery.query("#Appeal_txtPan")[0];
        var txtName = Ext.ComponentQuery.query("#Appeal_txtTaxPayerName")[0];
        var txtAddress = Ext.ComponentQuery.query("#Appeal_txtTaxPayerAddress")[0];
        var txtOffCode=Ext.ComponentQuery.query("#Appeal_txtOffCode")[0].getValue();
        var txtAppealNo = Ext.ComponentQuery.query("#Appeal_txtAppealNo")[0];

        var pan=txtPan.getValue();

        var acctType="00";
        if(txtPan === "")
        {
            return;
        }

        var flag = true;


        flag = LoadTaxpayerInfoWithValidPan(pan,acctType,function(data){

            //console.log(data.root.Taxpayer);

            var taxpayer=data.root.Taxpayer;

            //  console.log(taxpayer.Office.OfficeCode);
            var offCode=taxpayer.Office.OfficeCode;
            if(offCode != txtOffCode)
            {

                msg("WARNING","Pan is not registered in this office !!!");
                return false;
            }
            var bAddress =taxpayer.BusinessAddress.Address;

            txtName.setValue(taxpayer.Name);
            var sn= bAddress.StreetName;
            var vt=bAddress.VdcTown;
            var wn=bAddress.WardNo;
            var dn=bAddress.DistrictNameNep;
            var svn=sn +"/" + vt;
            var addr=svn + "-" + wn + "," + dn;
            txtAddress.setValue(addr);
            me.ReadOnlyData("");

        });
        if(flag === false)
        { 
            me.ReadOnlyData("p");
            me.ClearControls("p");
        }
    },

    SaveApplHeaderWithApplLines: function(rStatus) {
        var offCode=Ext.ComponentQuery.query('#Appeal_txtOffCode')[0].getValue();
        var appealDate=Ext.ComponentQuery.query('#Appeal_txtAppealDate')[0].getValue();
        var pan=Ext.ComponentQuery.query('#Appeal_txtPan')[0].getValue();
        var appealOnMaNo=Ext.ComponentQuery.query('#Appeal_txtAppeal_On_Ma_No')[0].getValue();
        var appealLocCode=Ext.ComponentQuery.query('#Appeal_cboAppeal_Loc_Code')[0].getValue();
        var appealRegNo=Ext.ComponentQuery.query('#Appeal_txtAppeal_Loc_Code_RegNo')[0].getValue();
        var orderNo=Ext.ComponentQuery.query('#Appeal_txtOrderNo')[0].getValue();
        var orderDate=Ext.ComponentQuery.query('#Appeal_txtOrderDate')[0].getValue();
        var appealReason=Ext.ComponentQuery.query('#Appeal_txtAppealReason')[0].getValue();
        var cboAppealSubject = Ext.ComponentQuery.query("#cboAppealSubjectAE")[0].getValue();

        var acctType="00";
        var tranDate="";
        var appealStatus="A";
        var userID="";
        var acOffcode="";
        var acDate="";
        var acDecisionNo="";
        var acUserID="";
        var acTranNo="";
        var appealNo ="";
        var action = Ext.ComponentQuery.query('#hdnActionAppeal')[0].getValue();
        var apTranNo = Ext.ComponentQuery.query('#hdnAppealTranNo')[0].getValue() === ""?null:Ext.ComponentQuery.query('#hdnAppealTranNo')[0].getValue();
        appealNo = Ext.ComponentQuery.query('#Appeal_txtAppealNo')[0].getValue() === "" ?0:Ext.ComponentQuery.query('#Appeal_txtAppealNo')[0].getValue();

        /*
        var loadMsg="";

        if(action == "E")
        {
        loadMsg = "Updating ...";
        }
        else
        {
        loadMsg = "Saving ...";
        }*/

        var appealLinesLST="";
        var storeAppealLines=Ext.getStore('AppealLines');
        storeAppealLines.clearFilter();

        if(storeAppealLines.getCount() > 0)
        {
            appealLinesLST = getJson(storeAppealLines); 
        }

        var applHeaders={
            'OffCode':offCode,
            'AppealNo':appealNo,
            'ApplDate':appealDate,
            'Pan':pan,
            'AppealOn':cboAppealSubject,
            'ApplOnMaNo':appealOnMaNo,
            'ApplLocCode':appealLocCode,
            'ApplRegNo':appealRegNo,
            'OrderDate':orderDate,
            'OrderNo':orderNo,
            'AcctType':acctType,
            'TranDate':tranDate,
            'ApplReason':appealReason,
            'ApplStatus':appealStatus,
            'UserID':userID,
            'ApTranNo':apTranNo,
            'AcOffCode':acOffcode,
            'AcDate':acDate,
            'AcDecisionNo':acDecisionNo,
            'AcUserID':acUserID,
            'AcTranNo':acTranNo,
            'Rstatus':rStatus,
            'Action':action,
            // 'AppealLinesLST':[]
            'AppealLinesLST':appealLinesLST!==""?appealLinesLST:null
        };

        //console.log(applHeaders);

        /*var applLines=[];
        var grdTaxPeriod=Ext.ComponentQuery.query('#Appeal_grdTaxPeriod')[0];
        var items=grdTaxPeriod.getStore().data.items;
        //console.log(items);
        for(var i=0;i<items.length;i++)
        {
            var seqNo=i+1;
            //var seqNo=items[i].data.seqNo;
            var filePer=items[i].data.FilePer;
            var period=items[i].data.Period;
            var taxYear=items[i].data.TaxYear;
            var appealOn=items[i].data.AppealOn;
            var amount=items[i].data.Amount;
            applLines[i]={
                'SeqNo':seqNo,
                'FilePer':filePer,
                'Period':period,
                'TaxYear':taxYear,
                'AppealOn':appealOn,
                'Amount':amount
            };
        }

        //console.log(applLines);

        applHeaders.AppealLinesLST=applLines;
        //console.log("APHL",applHeaders.AppealLinesLST);
        */
        //var waitSave = waitMsg(loadMsg);

        Ext.Ajax.request({
            method: 'POST',
            url: '../Handlers/VAT/Appeal/AppealHeaderHandler.ashx',
            params: {method:'SaveAppealHeader', appealHeader : JSON.stringify(applHeaders) },
            success: function( result, request ){

                //waitSave.hide();

                // var jsonMsg=Ext.decode(result.responseText);
                // msg(jsonMsg.success=="true"?"SUCCESS":"FAILURE",jsonMsg.message);

                var obj = Ext.decode(result.responseText);

                //  console.log('obj',obj.message);  
                var mmsg = obj.message;

                // console.log("mms",mmsg);
                // console.log("applNo",appealNo);
                var len=mmsg.length;

                if(appealNo === 0)
                {
                    appealNo= mmsg.substr(len-10,10);
                    // console.log("applNo",appealNo);  
                }


                if(obj.success === "false")
                {

                    msg("FAILURE",obj.message);
                    return;
                }


                if(rStatus === "F")
                {
                    Ext.Msg.confirm('Confirm Action','पुनरावेदनमा गएको डाटा सफलतापुर्वक Submit भयो ।<br>कृपया पुनरावेदन नं. टिप्नुहोस्:<B STYLE="COLOR:RED">' + appealNo + '<\B>' + '<br>Do you want to Print?', function(btn) {
                        if(btn == 'yes'){

                            var param = { 'OffCode':offCode,'AppealNo':appealNo };
                            var url="../../../Reporting/Vat/ReportHandlers/AppealEntryReportHandler.ashx?";
                            var winOption="width=730,height=345,left=100,top=100,resizable=yes,scrollbars=yes";

                            OpenWindowWithPost(url,winOption,"NewFile", param);


                            return true;
                        }
                    }, this);
                }
                else
                {
                    if(action === "")
                    {
                        msg('INFO','पुनरावेदनमा गएको डाटा सफलतापुर्वक Save भयो ।<br>कृपया पुनरावेदन नं. टिप्नुहोस्:<B STYLE="COLOR:RED">' + appealNo + '<\B>');
                    }
                    else
                    {
                        msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);
                    }
                }

            },
            failure: function ( result, request ) {

                // waitSave.hide();

                var obj = Ext.decode(result.responseText);

                msg("FAILURE",obj.message);
                return;
            }


        });
    },

    ReadOnlyData: function(txt) {
        var txtApplDate = Ext.ComponentQuery.query("#Appeal_txtAppealDate")[0];
        var txtPan = Ext.ComponentQuery.query("#Appeal_txtPan")[0];
        var txtName = Ext.ComponentQuery.query("#Appeal_txtTaxPayerName")[0];
        var txtAddress = Ext.ComponentQuery.query("#Appeal_txtTaxPayerAddress")[0];
        var txtApplOnMaNo = Ext.ComponentQuery.query("#Appeal_txtAppeal_On_Ma_No")[0];
        var cboApplLocCode = Ext.ComponentQuery.query("#Appeal_cboAppeal_Loc_Code")[0];
        var txtRegNo = Ext.ComponentQuery.query("#Appeal_txtAppeal_Loc_Code_RegNo")[0];
        var txtOrderNo = Ext.ComponentQuery.query("#Appeal_txtOrderNo")[0];
        var txtOrderDate = Ext.ComponentQuery.query("#Appeal_txtOrderDate")[0];
        var txtApplReason = Ext.ComponentQuery.query("#Appeal_txtAppealReason")[0];
        var grd= Ext.ComponentQuery.query('#Appeal_grdTaxPeriod')[0];
        var btnAdd = Ext.ComponentQuery.query("#appeal_btnAdd")[0];
        var cboAppealSubject = Ext.ComponentQuery.query("#cboAppealSubjectAE")[0];

        if(txt === "e")
        {
            txtApplDate.setReadOnly(false);
            txtPan.setReadOnly(true);
            txtName.setReadOnly(true);
            txtAddress.setReadOnly(true);
            txtApplOnMaNo.setReadOnly(false);
            cboApplLocCode.setReadOnly(false);
            txtRegNo.setReadOnly(false);
            txtOrderNo.setReadOnly(false);
            txtOrderDate.setReadOnly(false);
            txtApplReason.setReadOnly(false);
            btnAdd.enable(true);
            cboAppealSubject.setReadOnly(false);
        }

        else if(txt === "d")
        {
            txtApplDate.setReadOnly(true);
            txtPan.setReadOnly(true);
            txtName.setReadOnly(true);
            txtAddress.setReadOnly(true);
            txtApplOnMaNo.setReadOnly(true);
            cboApplLocCode.setReadOnly(true);
            txtRegNo.setReadOnly(true);
            txtOrderNo.setReadOnly(true);
            txtOrderDate.setReadOnly(true);
            txtApplReason.setReadOnly(true);
            btnAdd.disable(false);
            cboAppealSubject.setReadOnly(true);
        }
        else if(txt === "p")
        {
            txtApplDate.setReadOnly(true);
            txtPan.setReadOnly(false);
            txtName.setReadOnly(true);
            txtAddress.setReadOnly(true);
            txtApplOnMaNo.setReadOnly(true);
            cboApplLocCode.setReadOnly(true);
            txtRegNo.setReadOnly(true);
            txtOrderNo.setReadOnly(true);
            txtOrderDate.setReadOnly(true);
            txtApplReason.setReadOnly(true);
            txtApplReason.disable(true);
            btnAdd.disable(true);
            cboAppealSubject.setReadOnly(true);
        }
        else
        {
            txtApplDate.setReadOnly(false);
            txtPan.setReadOnly(false);
            txtName.setReadOnly(true);
            txtAddress.setReadOnly(true);
            txtApplOnMaNo.setReadOnly(false);
            cboApplLocCode.setReadOnly(false);
            txtRegNo.setReadOnly(false);
            txtOrderNo.setReadOnly(false);
            txtOrderDate.setReadOnly(false);
            txtApplReason.setReadOnly(false);
            btnAdd.enable(true);
            cboAppealSubject.setReadOnly(false);
            txtApplReason.enable(true);
        }

    },

    ReadOnlyShowHideControls: function(txt) {
        var form=(Ext.ComponentQuery.query('#frmAppealEntry')[0]).getForm();
        var fields = form.getFields();

        var txtAppealNo = Ext.ComponentQuery.query("#Appeal_txtAppealNo")[0];
        var cboApplLocCode = Ext.ComponentQuery.query("#Appeal_cboAppeal_Loc_Code")[0];
        var lblActionAppeal = Ext.ComponentQuery.query("#lblActionAppeal")[0];
        var fCntAppl = Ext.ComponentQuery.query("#fCntAppeal")[0];
        var btnAdd = Ext.ComponentQuery.query("#appeal_btnAdd")[0];
        var fCntBack = Ext.ComponentQuery.query("#fCntBack")[0];
        var txtPan = Ext.ComponentQuery.query("#Appeal_txtPan")[0];
        var cboAppealSubject = Ext.ComponentQuery.query("#cboAppealSubjectAE")[0];

        var btnEdit = Ext.ComponentQuery.query('#Appeal_btnEdit')[0];
        var btnPrint = Ext.ComponentQuery.query('#btnPrintAppeal')[0];
        var btnDelete = Ext.ComponentQuery.query('#Appeal_btnDelete')[0];
        var btnCancel = Ext.ComponentQuery.query('#Appeal_btnCancel')[0];


        if(txt === "t")
        {
            //Convert All Fields To Read Only\r",

            Ext.each(fields.items, function (f) {
                f.inputEl.dom.disabled = true;
            });
            //End Converting Fields To Read Only\r",

            txtAppealNo.setVisible(true);
            cboApplLocCode.setReadOnly(true);
            lblActionAppeal.setVisible(false);
            fCntAppl.setVisible(false);
            btnAdd.setVisible(false);
            //fCntBack.setVisible(true);
            cboAppealSubject.setReadOnly(true);

        }
        else if(txt === "au")
        {
            txtAppealNo.setVisible(true);
            btnEdit.disable(true);
            btnPrint.disable(true);
            btnDelete.disable(true);
            btnCancel.disable(true);
        }
        else
        {
            txtAppealNo.setVisible(false);
            cboApplLocCode.setReadOnly(false);
            lblActionAppeal.setVisible(true);
            fCntAppl.setVisible(true);
            btnAdd.setVisible(true);
            // fCntBack.setVisible(false);
            cboAppealSubject.setReadOnly(false);
            btnEdit.enable(true);
            btnPrint.enable(true);
            btnDelete.enable(true);
            btnCancel.enable(true);
        }
    },

    LoadUserOffice: function() {
        var txtOffCode=Ext.ComponentQuery.query("#Appeal_txtOffCode")[0];

        Ext.Ajax.request({
            url:"../Handlers/Security/OfficeUserHandler.ashx?method=GetUserOffice",
            params:{},
            success: function ( result, request ) {            


                var obj = Ext.decode(result.responseText);  
                // console.log(obj.root.OfficeCode);
                var data=obj.root;
                var offCode=data.OfficeCode;

                txtOffCode.setValue(offCode);

            },
            failure: function ( result, request ) {


                msg("FAILURE","Error in Fetching Data !!!");
            }
        });
    },

    validateTaxDuration: function() {
        var filePerMsg = Ext.ComponentQuery.query("#hdnAppealFilePer")[0].getValue();
        var pan = Ext.ComponentQuery.query("#Appeal_txtPan")[0].getValue();
        var cboFilingPeriod = Ext.ComponentQuery.query("#AL_cboFilePeriod")[0];
        var cboPeriod = Ext.ComponentQuery.query("#AL_cboPeriod")[0];
        var txtTaxYear = Ext.ComponentQuery.query("#AL_txtTaxYear")[0];
        var acctType = "00";

        var filePer = cboFilingPeriod.getValue();
        var period = cboPeriod.getValue();
        var year = txtTaxYear.getValue();

        var flag = true;


        var  wait = watiMsg('Validating ...');

        Ext.Ajax.request({
            url: '../Handlers/VAT/VatUtilitiesHandler.ashx',
            params: {
                method:'GetFilePeriodWithEndDate',
                filePer: filePer,
                taxyear:year,
                period:period,
                pan: pan,
                acctType:acctType
            },
            async:false,
            success: function(result, request){
                wait.hide();

                var obj = Ext.decode(result.responseText);
                var message = "";

                message = obj.success === 'true'?(obj.message !== filePer?"Please Enter valid Filing Period <br>": obj.message):obj.message; 

                if(obj.success === 'false')
                {
                    flag = false;
                    msg("WARNING",message);
                }
                else if(obj.success === 'true' && obj.message !== filePer)
                {
                    flag = false;
                    msg("WARNING",message);
                }
                else if(obj.success == 'true' && obj.message === filePer)
                {
                    //hdnFilePerVpa.setValue(message);
                    flag = true;
                }
                else
                {
                    flag = false;                                        
                    msg("WARNING",message);
                }

            },
            failure: function ( result, request ) {

                wait.hide();

                var obj = Ext.decode(result.responseText);

                msg("FAILURE",obj.message);
            }

        });

        return flag;
    },

    LoadMASP: function() {
        var flag = true;
        //var cboAppealSubject = Ext.ComponentQuery.query("#cboAppealSubjectAE")[0];
        var txtPan = Ext.ComponentQuery.query("#Appeal_txtPan")[0];
        var txtAppealOnMaNo = Ext.ComponentQuery.query("#Appeal_txtAppeal_On_Ma_No")[0];
        var acctType="00";
        //var applSubject=cboAppealSubject.getValue();
        var pan=txtPan.getValue();
        var applOnMaNo=txtAppealOnMaNo.getValue();

        var grd = Ext.ComponentQuery.query('#Appeal_grdTaxPeriod')[0];

        var cboFilingPeriod = Ext.ComponentQuery.query("#AL_cboFilePeriod")[0];
        var cboPeriod = Ext.ComponentQuery.query("#AL_cboPeriod")[0];
        var txtTaxYear = Ext.ComponentQuery.query("#AL_txtTaxYear")[0];
        var txtAmount = Ext.ComponentQuery.query("#AL_txtAmount")[0];
        var cboApplOn = Ext.ComponentQuery.query("#AL_cboAppealOn")[0];

        var filePer = cboFilingPeriod.getValue();
        var period = cboPeriod.getValue();
        var year = txtTaxYear.getValue();
        var amount = txtAmount.getValue();
        var appealOn = cboApplOn.getValue();

        if(appealOn === "MA" || appealOn === "MP" || appealOn === "MI")
        {
            // alert("MA check");
            Ext.Ajax.request({
                url:"../Handlers/VAT/ManagementAssessment/MaLinesHandler.ashx?method=GetMaLinesForAppeal",
                params:{pan:pan, acctType:acctType,maNo:applOnMaNo,taxyear:year,fileper:filePer,period:period},
                async:false,
                success: function ( result, request ) {            


                    var obj = Ext.decode(result.responseText);  
                    //  console.log("total",obj.total);
                    if(obj.total === "0")
                    {
                        msg("WARNING","यो अवधि कर निर्धारण भएको छैन !");
                        flag = false;
                        //return false;
                    }
                    else
                    {
                        var data=obj.root[0];
                        // console.log('data',data);

                        var filePer=data.FilePer;
                        var period=data.Period;
                        var year=data.TaxYear;
                        var maAmount=data.MaAmount;
                        var addAmount=data.AddAmount;
                        var intAmount=data.IntAmount;
                        var penAmount=data.PenAmount;
                        var mpAmount=Number(addAmount)+Number(penAmount);



                        if(filePer == filePer && period == period && year == year)
                        {
                            if(appealOn == "MA" && amount > maAmount)
                            {
                                msg("WARNING","कृपया पुनरावेदनमा गएको रकम कर निर्धारण आदेशको रकम भन्दा बढी नहाल्नुहोस् !");
                                flag = false;
                                // return false;
                            }
                            if(appealOn == "MP" && amount > mpAmount)
                            {
                                msg("WARNING","कृपया पुनरावेदनमा गएको रकम कर निर्धारण आदेशको रकम भन्दा बढी नहाल्नुहोस् !");
                                flag = false;
                                //return false;
                            }
                            if(appealOn == "MI" && amount > intAmount)
                            {
                                msg("WARNING","कृपया पुनरावेदनमा गएको रकम कर निर्धारण आदेशको रकम भन्दा बढी नहाल्नुहोस् !");
                                flag = false;
                                //return false;
                            }
                        }

                    }

                },
                failure: function ( result, request ) {


                    msg("FAILURE","Error in Fetching Data !!!");
                    return;
                }

            });

        }

        else if(appealOn === "SP")
        {
            // alert("SP check");

            Ext.Ajax.request({
                url:"../Handlers/VAT/SpecialPenalty/SpecialPenaltyHandler.ashx?method=GetSpecialPenalties",
                params:{pan:pan, acctType:acctType, specialPenaltyNo:applOnMaNo,taxyear:year,fileper:filePer,period:period},
                async:false,
                success: function ( result, request ) {            


                    var obj = Ext.decode(result.responseText);  

                    //console.log("total",obj.total);
                    if(obj.total === "0")
                    {
                        msg("WARNING","यो अवधि कर निर्धारण भएको छैन !");
                        flag = false;
                        //return false;
                    }
                    else
                    {
                        var data=obj.root[0];
                        //console.log("SP",data);
                        var filePer=data.FilePer;
                        var period=data.Period;
                        var year=data.TaxYear;
                        var spAmount=data.Amount;

                        if(filePer == filePer && period == period && year == year )
                        {
                            if(appealOn == "SP" && amount > spAmount)
                            {
                                msg("WARNING","कृपया पुनरावेदनमा गएको रकम विषेश आदेशको रकम भन्दा बढी नहाल्नुहोस् !");
                                flag = false;
                                //return false;
                            }

                        }

                    }
                },
                failure: function ( result, request ) {


                    msg("FAILURE","Error in Fetching Data !!!");
                    return;
                }
            });

        }

        return flag;
    },

    ValidateMASPNo: function() {
        /*var flag = true;
        var cboAppealSubject = Ext.ComponentQuery.query("#cboAppealSubjectAE")[0];
        var txtPan = Ext.ComponentQuery.query("#Appeal_txtPan")[0];
        var txtAppealOnMaNo = Ext.ComponentQuery.query("#Appeal_txtAppeal_On_Ma_No")[0];
        var acctType="00";
        var applSubject=cboAppealSubject.getValue();
        var pan=txtPan.getValue();
        var applOnMaNo=txtAppealOnMaNo.getValue();

        var grd = Ext.ComponentQuery.query('#Appeal_grdTaxPeriod')[0];



        if(applSubject === "MA")
        {
        // alert("MA check");
        Ext.Ajax.request({
            url:"../Handlers/VAT/ManagementAssessment/MaLinesHandler.ashx?method=GetMaLines",
            params:{pan:pan, acctType:acctType, maNo:applOnMaNo},
            async:false,
            success: function ( result, request ) {            


                var obj = Ext.decode(result.responseText);  

                //  console.log("total",obj.total);
                if(obj.total === "0")
                {
                    msg("WARNING","यो कर निर्धारण आदेश नं. भेटाउन सकेन !");
                    flag = false;
                    // return false;
                }
                else
                {
                    var data=obj.root[0];
                }

            },
            failure: function ( result, request ) {


                msg("FAILURE","Error in Fetching Data !!!");
                return;
            }

        });

    }

    else if(applSubject === "SP")
    {
        // alert("SP check");

        Ext.Ajax.request({
            url:"../Handlers/VAT/SpecialPenalty/SpecialPenaltyHandler.ashx?method=GetSpecialPenalties",
            params:{pan:pan, acctType:acctType, specialPenaltyNo:applOnMaNo},
            async:false,
            success: function ( result, request ) {            


                var obj = Ext.decode(result.responseText);  

                //  console.log("total",obj.total);
                if(obj.total === "0")
                {
                    msg("WARNING","यो विषेश आदेश नं. भेटाउन सकेन !");
                    flag = false;
                    //return false;
                }
                else
                {
                    var data=obj.root[0];

                }
            },
            failure: function ( result, request ) {


                msg("FAILURE","Error in Fetching Data !!!");
                return;
            }
        });

    }

    return flag;*/
    },

    Print: function() {
        var txtOffCode = Ext.ComponentQuery.query("#Appeal_txtOffCode")[0];
        var txtAppealNo = Ext.ComponentQuery.query("#Appeal_txtAppealNo")[0];
        var txtPan = Ext.ComponentQuery.query("#Appeal_txtPan")[0];
        var txtTaxPayerName = Ext.ComponentQuery.query("#Appeal_txtTaxPayerName")[0];
        var txtTaxPayerAddress = Ext.ComponentQuery.query("#Appeal_txtTaxPayerAddress")[0];

        var offCode = txtOffCode.getValue();    
        var appealNo = txtAppealNo.getValue();

        var hdnAction = Ext.ComponentQuery.query('#hdnActionAppeal')[0];

        if(offCode === "" || appealNo === "")
        {
            return;
        }

        var wait = waitMsg('loading ...');

        Ext.Ajax.request({
            url:"../Handlers/VAT/Appeal/AppealHeaderHandler.ashx?method=GetAppealHeader",
            params:{offCode:offCode,appealNo:appealNo},
            success: function ( result, request ) {            

                wait.hide();            
                //console.log("r",result);
                // console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                if(obj.root === "")
                {
                    msg("WARNING","यो पुनरावेदन नं. भेटाऊन सकेन !");
                    return;        
                }

                else if(obj.message === "F")
                {
                    Ext.Msg.confirm('Confirm Action','<br>पुनरावेदनमा गएको डाटा पहिला नै FINALIZED भइसक्यो ।. <br>Do you want to Print?', function(btn) {
                        if(btn == 'yes'){

                            var param = { 'OffCode':offCode,'AppealNo':appealNo };
                            var url="../../../Reporting/Vat/ReportHandlers/AppealEntryReportHandler.ashx?";
                            var winOption="width=730,height=345,left=100,top=100,resizable=yes,scrollbars=yes";

                            OpenWindowWithPost(url,winOption,"NewFile", param);


                            return true;
                        }
                    }, this);
                }
                else 
                {
                    Ext.Msg.confirm('Confirm Action','<br>पुनरावेदनमा गएको डाटा FINALIZED भएको छैन ।. <br>Do you want to Print?', function(btn) {
                        if(btn == 'yes'){

                            var param = { 'OffCode':offCode,'AppealNo':appealNo };
                            var url="../../../Reporting/Vat/ReportHandlers/AppealEntryReportHandler.ashx?";
                            var winOption="width=730,height=345,left=100,top=100,resizable=yes,scrollbars=yes";

                            OpenWindowWithPost(url,winOption,"NewFile", param);


                            return true;
                        }
                    }, this);
                }

            },
            failure: function ( result, request ) {

                wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    LoadAppealHeaderWithTranNo: function() {
        var objParam = Ext.ComponentQuery.query('#pnlAppealEntry')[0].extraParam;
        //console.log(objParam);

        var tranNo= objParam.params.tranNo;

        //alert("tran No : " + tranNo);

        var wait = waitMsg('loading ...');

        Ext.Ajax.request({
            url:"../Handlers/VAT/Appeal/AppealHeaderHandler.ashx?method=GetAppealHeaderWithTranNo",
            params:{tranNo:tranNo},
            success: function ( result, request ) {            

                wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }
                var txtOffCode = Ext.ComponentQuery.query("#Appeal_txtOffCode")[0];
                var txtAppealNo = Ext.ComponentQuery.query("#Appeal_txtAppealNo")[0];
                var txtPan = Ext.ComponentQuery.query("#Appeal_txtPan")[0];
                var txtTaxPayerName = Ext.ComponentQuery.query("#Appeal_txtTaxPayerName")[0];
                var txtTaxPayerAddress = Ext.ComponentQuery.query("#Appeal_txtTaxPayerAddress")[0];

                var txtAppealDate = Ext.ComponentQuery.query('#Appeal_txtAppealDate')[0];
                var cboAppealSubject = Ext.ComponentQuery.query("#cboAppealSubjectAE")[0];
                var txtAppealOnMaNo = Ext.ComponentQuery.query('#Appeal_txtAppeal_On_Ma_No')[0];
                var cboAppealLocCode = Ext.ComponentQuery.query('#Appeal_cboAppeal_Loc_Code')[0];
                var txtAppealLocCodeRegNo = Ext.ComponentQuery.query('#Appeal_txtAppeal_Loc_Code_RegNo')[0];
                var txtOrderNo = Ext.ComponentQuery.query('#Appeal_txtOrderNo')[0];
                var txtOrderDate = Ext.ComponentQuery.query('#Appeal_txtOrderDate')[0];
                var txtAppealReason = Ext.ComponentQuery.query('#Appeal_txtAppealReason')[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionAppeal')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnAppealTranNo')[0];


                var data = obj.root; 
                //console.log("data",data);
                txtOffCode.setValue(data.OffCode);
                txtAppealNo.setValue(data.AppealNo);
                var taxpayer=data.TaxPayer;
                var bAddress =taxpayer.BusinessAddress.Address;
                txtPan.setValue(data.Pan);
                txtTaxPayerName.setValue(taxpayer.Name);
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var wn=bAddress.WardNo;
                var dn=bAddress.DistrictNameNep;
                var svn=sn +"/" + vt;
                var addr=svn + "-" + wn + "," + dn;
                txtTaxPayerAddress.setValue(addr);

                txtAppealDate.setValue(data.ApplDate);
                cboAppealSubject.setValue(data.AppealOn);
                txtAppealOnMaNo.setValue(data.ApplOnMaNo);
                cboAppealLocCode.setValue(data.ApplLocCode);
                txtAppealLocCodeRegNo.setValue(data.ApplRegNo);
                txtOrderNo.setValue(data.OrderNo);
                txtOrderDate.setValue(data.OrderDate);
                txtAppealReason.setValue(data.ApplReason);

                hdnTranNo.setValue(data.ApTranNo);



                //-----------------------------//

                /* if(hdnAction.getValue() !== "D")
                {
                hdnAction.setValue(data.Action);
                }*/
                var grd = Ext.ComponentQuery.query("#Appeal_grdTaxPeriod")[0];
                var store = Ext.getStore('AppealLines');
                var sum=0;
                var apTxtTotAmount = Ext.ComponentQuery.query("#Appeal_txtTotalAmount")[0];

                //store.add(data.AppealLinesLST);  
                store.loadData(data.AppealLinesLST); 
                store.clearFilter();
                store.filter(function(item){

                    return (item.data.TranNo == tranNo) ;
                });

                store.each(function (rec) {
                    var seQNo=rec.get('SeqNo')===""?null:rec.get('SeqNo');
                    var filePer=rec.get('FilePer')===""?null:rec.get('FilePer');
                    var period = rec.get('Period') === ""? null:rec.get('Period');
                    var taxYear = rec.get('TaxYear') === ""? null:rec.get('TaxYear');
                    var appealOn = rec.get('AppealOn') === ""? null:rec.get('AppealOn');
                    var amount = rec.get('Amount') === ""? null:rec.get('Amount');

                    rec.data.SeqNo = seQNo;
                    rec.data.FilePer = filePer;
                    rec.data.Period = period ;
                    rec.data.TaxYear = taxYear;
                    rec.data.AppealOn = appealOn;
                    rec.data.Amount = amount;
                    sum = Number(sum) + Number(amount); 

                });
                apTxtTotAmount.setValue(sum);
                // grd.bindStore(store);

                //------------------------------//  

                /* var win1 = Ext.getCmp('AppealMAWindow');

                var win2 = Ext.getCmp('AppealSPWindow');


                if(data.AppealOn === "MA")
                {
                win1.close();
                }
                else if(data.AppealOn === "SP")
                {
                win2.close();
                } */

            },
            failure: function ( result, request ) {

                wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });
    },

    LoadAppealHeaderWithAU: function() {
        var objParam = Ext.ComponentQuery.query('#pnlAppealEntry')[0].extraParam;
        //console.log('obj',objParam);

        var offCodeAU = objParam.params.offCode;
        var requestNo = objParam.params.requestNo;

        Ext.Ajax.request({
            url:"../Handlers/VAT/Appeal/AppealHeaderHandler.ashx?method=GetAppealHeaderAU",
            params:{offCodeAU:offCodeAU,requestNo:requestNo},
            success: function ( result, request ) {            

                //wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                /* if(obj.success === "false")
                {   
                msg("WARNING",obj.message);
                return;
                }*/
                var txtOffCode = Ext.ComponentQuery.query("#Appeal_txtOffCode")[0];
                var txtAppealNo = Ext.ComponentQuery.query("#Appeal_txtAppealNo")[0];
                var txtPan = Ext.ComponentQuery.query("#Appeal_txtPan")[0];
                var txtTaxPayerName = Ext.ComponentQuery.query("#Appeal_txtTaxPayerName")[0];
                var txtTaxPayerAddress = Ext.ComponentQuery.query("#Appeal_txtTaxPayerAddress")[0];

                var txtAppealDate = Ext.ComponentQuery.query('#Appeal_txtAppealDate')[0];
                var cboAppealSubject = Ext.ComponentQuery.query("#cboAppealSubjectAE")[0];
                var txtAppealOnMaNo = Ext.ComponentQuery.query('#Appeal_txtAppeal_On_Ma_No')[0];
                var cboAppealLocCode = Ext.ComponentQuery.query('#Appeal_cboAppeal_Loc_Code')[0];
                var txtAppealLocCodeRegNo = Ext.ComponentQuery.query('#Appeal_txtAppeal_Loc_Code_RegNo')[0];
                var txtOrderNo = Ext.ComponentQuery.query('#Appeal_txtOrderNo')[0];
                var txtOrderDate = Ext.ComponentQuery.query('#Appeal_txtOrderDate')[0];
                var txtAppealReason = Ext.ComponentQuery.query('#Appeal_txtAppealReason')[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionAppeal')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnAppealTranNo')[0];
                var grdTP = Ext.ComponentQuery.query('#Appeal_grdTaxPeriod')[0];
                var hdnAct=Ext.ComponentQuery.query('#hdnActAppeal')[0];
                hdnAct.setValue("");

                if(obj.message === "F")
                {
                    msg("WARNING","पुनरावेदनमा गएको डाटा पहिला नै FINALIZED भइसक्यो !");
                    return;
                }
                var data = obj.root; 
                // console.log("data",data);
                if(data === "")
                {
                    txtPan.reset();
                    txtTaxPayerName.reset();
                    txtTaxPayerAddress.reset();
                    cboAppealSubject.reset();
                    txtAppealOnMaNo.reset();
                    cboAppealLocCode.reset();
                    txtAppealLocCodeRegNo.reset();
                    txtOrderNo.reset();
                    txtOrderDate.reset();
                    txtAppealReason.reset();
                    txtAppealDate.reset();
                    grdTP.getStore().removeAll();
                    msg("WARNING","यो पुनरावेदन नं. भेटाऊन सकेन !");
                    return;
                }
                txtOffCode.setValue(data.OffCode);
                txtAppealNo.setValue(data.AppealNo);
                var taxpayer=data.TaxPayer;
                var bAddress =taxpayer.BusinessAddress.Address;
                txtPan.setValue(data.Pan);
                txtTaxPayerName.setValue(taxpayer.Name);
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var wn=bAddress.WardNo;
                var dn=bAddress.DistrictNameNep;
                var svn=sn +"/" + vt;
                var addr=svn + "-" + wn + "," + dn;
                txtTaxPayerAddress.setValue(addr);
                txtAppealDate.setValue(data.ApplDate);
                cboAppealSubject.setValue(data.AppealOn);
                txtAppealOnMaNo.setValue(data.ApplOnMaNo);
                cboAppealLocCode.setValue(data.ApplLocCode);
                txtAppealLocCodeRegNo.setValue(data.ApplRegNo);
                txtOrderNo.setValue(data.OrderNo);
                txtOrderDate.setValue(data.OrderDate);
                txtAppealReason.setValue(data.ApplReason);

                hdnTranNo.setValue(data.ApTranNo);



                var grd = Ext.ComponentQuery.query("#Appeal_grdTaxPeriod")[0];
                var store = Ext.getStore('AppealLines');
                var sum=0;
                var apTxtTotAmount = Ext.ComponentQuery.query("#Appeal_txtTotalAmount")[0];

                store.loadData(data.AppealLinesLST); 

                store.each(function (rec) {
                    var seQNo=rec.get('SeqNo')===""?null:rec.get('SeqNo');
                    var filePer=rec.get('FilePer')===""?null:rec.get('FilePer');
                    var period = rec.get('Period') === ""? null:rec.get('Period');
                    var taxYear = rec.get('TaxYear') === ""? null:rec.get('TaxYear');
                    var appealOn = rec.get('AppealOn') === ""? null:rec.get('AppealOn');
                    var amount = rec.get('Amount') === ""? null:rec.get('Amount');

                    rec.data.SeqNo = seQNo;
                    rec.data.FilePer = filePer;
                    rec.data.Period = period ;
                    rec.data.TaxYear = taxYear;
                    rec.data.AppealOn = appealOn;
                    rec.data.Amount = amount;
                    sum = Number(sum) + Number(amount); 

                });
                apTxtTotAmount.setValue(sum);
                //grd.bindStore(store);
                //------------------------------//  

                /* var win1 = Ext.getCmp('AppealMAWindow');

                var win2 = Ext.getCmp('AppealSPWindow');


                if(data.AppealOn === "MA")
                {
                win1.close();
                }
                else if(data.AppealOn === "SP")
                {
                win2.close();
                } */

                //-----------------------------//

            },
            failure: function ( result, request ) {

                // wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    LoadPostedAppealHeader: function() {
        var objParam = Ext.ComponentQuery.query('#pnlAppealEntry')[0].extraParam;
        //console.log(objParam);

        var offCodeAU = objParam.params.offCode;
        var requestNo = objParam.params.requestNo;
        var offCode = objParam.params.pks[0].data.Value;
        var appealNo = objParam.params.pks[1].data.Value;

        Ext.Ajax.request({
            url:"../Handlers/VAT/Appeal/AppealHeaderHandler.ashx?method=GetPostedAppealHeader",
            params:{offCodeAU:offCodeAU,requestNo:requestNo,offCode:offCode,appealNo:appealNo},
            success: function ( result, request ) {            

                //wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                /* if(obj.success === "false")
                {   
                msg("WARNING",obj.message);
                return;
                }*/
                var txtOffCode = Ext.ComponentQuery.query("#Appeal_txtOffCode")[0];
                var txtAppealNo = Ext.ComponentQuery.query("#Appeal_txtAppealNo")[0];
                var txtPan = Ext.ComponentQuery.query("#Appeal_txtPan")[0];
                var txtTaxPayerName = Ext.ComponentQuery.query("#Appeal_txtTaxPayerName")[0];
                var txtTaxPayerAddress = Ext.ComponentQuery.query("#Appeal_txtTaxPayerAddress")[0];

                var txtAppealDate = Ext.ComponentQuery.query('#Appeal_txtAppealDate')[0];
                var cboAppealSubject = Ext.ComponentQuery.query("#cboAppealSubjectAE")[0];
                var txtAppealOnMaNo = Ext.ComponentQuery.query('#Appeal_txtAppeal_On_Ma_No')[0];
                var cboAppealLocCode = Ext.ComponentQuery.query('#Appeal_cboAppeal_Loc_Code')[0];
                var txtAppealLocCodeRegNo = Ext.ComponentQuery.query('#Appeal_txtAppeal_Loc_Code_RegNo')[0];
                var txtOrderNo = Ext.ComponentQuery.query('#Appeal_txtOrderNo')[0];
                var txtOrderDate = Ext.ComponentQuery.query('#Appeal_txtOrderDate')[0];
                var txtAppealReason = Ext.ComponentQuery.query('#Appeal_txtAppealReason')[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionAppeal')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnAppealTranNo')[0];
                var grdTP = Ext.ComponentQuery.query('#Appeal_grdTaxPeriod')[0];
                var hdnAct=Ext.ComponentQuery.query('#hdnActAppeal')[0];
                hdnAct.setValue("");

                if(obj.message === "F")
                {
                    msg("WARNING","पुनरावेदनमा गएको डाटा पहिला नै FINALIZED भइसक्यो !");
                    return;
                }
                var data = obj.root; 
                //console.log("data",data);
                if(data === "")
                {
                    txtPan.reset();
                    txtTaxPayerName.reset();
                    txtTaxPayerAddress.reset();
                    cboAppealSubject.reset();
                    txtAppealOnMaNo.reset();
                    cboAppealLocCode.reset();
                    txtAppealLocCodeRegNo.reset();
                    txtOrderNo.reset();
                    txtOrderDate.reset();
                    txtAppealReason.reset();
                    txtAppealDate.reset();
                    grdTP.getStore().removeAll();
                    msg("WARNING","यो पुनरावेदन नं. भेटाऊन सकेन !");
                    return;
                }
                txtOffCode.setValue(offCode);
                txtAppealNo.setValue(appealNo);
                var taxpayer=data.TaxPayer;
                var bAddress =taxpayer.BusinessAddress.Address;
                txtPan.setValue(data.Pan);
                txtTaxPayerName.setValue(taxpayer.Name);
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var wn=bAddress.WardNo;
                var dn=bAddress.DistrictNameNep;
                var svn=sn +"/" + vt;
                var addr=svn + "-" + wn + "," + dn;
                txtTaxPayerAddress.setValue(addr);
                txtAppealDate.setValue(data.ApplDate);
                cboAppealSubject.setValue(data.AppealOn);
                txtAppealOnMaNo.setValue(data.ApplOnMaNo);
                cboAppealLocCode.setValue(data.ApplLocCode);
                txtAppealLocCodeRegNo.setValue(data.ApplRegNo);
                txtOrderNo.setValue(data.OrderNo);
                txtOrderDate.setValue(data.OrderDate);
                txtAppealReason.setValue(data.ApplReason);

                hdnTranNo.setValue(data.ApTranNo);



                var grd = Ext.ComponentQuery.query("#Appeal_grdTaxPeriod")[0];
                var store = Ext.getStore('AppealLines');
                var sum=0;
                var apTxtTotAmount = Ext.ComponentQuery.query("#Appeal_txtTotalAmount")[0];

                store.loadData(data.AppealLinesLST); 

                store.each(function (rec) {
                    var seQNo=rec.get('SeqNo')===""?null:rec.get('SeqNo');
                    var filePer=rec.get('FilePer')===""?null:rec.get('FilePer');
                    var period = rec.get('Period') === ""? null:rec.get('Period');
                    var taxYear = rec.get('TaxYear') === ""? null:rec.get('TaxYear');
                    var appealOn = rec.get('AppealOn') === ""? null:rec.get('AppealOn');
                    var amount = rec.get('Amount') === ""? null:rec.get('Amount');

                    rec.data.SeqNo = seQNo;
                    rec.data.FilePer = filePer;
                    rec.data.Period = period ;
                    rec.data.TaxYear = taxYear;
                    rec.data.AppealOn = appealOn;
                    rec.data.Amount = amount;
                    sum = Number(sum) + Number(amount); 

                });
                apTxtTotAmount.setValue(sum);
                //grd.bindStore(store);
                //------------------------------//  

                /* var win1 = Ext.getCmp('AppealMAWindow');

                var win2 = Ext.getCmp('AppealSPWindow');


                if(data.AppealOn === "MA")
                {
                win1.close();
                }
                else if(data.AppealOn === "SP")
                {
                win2.close();
                } */

                //-----------------------------//

            },
            failure: function ( result, request ) {

                // wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    SaveApplHeaderWithApplLinesAU: function(rStatus,action) {
        var offCode=Ext.ComponentQuery.query('#Appeal_txtOffCode')[0].getValue();
        var appealNo = Ext.ComponentQuery.query('#Appeal_txtAppealNo')[0].getValue();
        var appealDate=Ext.ComponentQuery.query('#Appeal_txtAppealDate')[0].getValue();
        var pan=Ext.ComponentQuery.query('#Appeal_txtPan')[0].getValue();
        var appealOnMaNo=Ext.ComponentQuery.query('#Appeal_txtAppeal_On_Ma_No')[0].getValue();
        var appealLocCode=Ext.ComponentQuery.query('#Appeal_cboAppeal_Loc_Code')[0].getValue();
        var appealRegNo=Ext.ComponentQuery.query('#Appeal_txtAppeal_Loc_Code_RegNo')[0].getValue();
        var orderNo=Ext.ComponentQuery.query('#Appeal_txtOrderNo')[0].getValue();
        var orderDate=Ext.ComponentQuery.query('#Appeal_txtOrderDate')[0].getValue();
        var appealReason=Ext.ComponentQuery.query('#Appeal_txtAppealReason')[0].getValue();
        var cboAppealSubject = Ext.ComponentQuery.query("#cboAppealSubjectAE")[0].getValue();

        var param = Ext.ComponentQuery.query('#pnlAppealEntry')[0].extraParam.params;
        //console.log("param",param);
        var offCodeAU = param.offCode;
        var requestNo = param.requestNo;
        var tranNo = param.tranNo;

        var acctType="00";
        var tranDate="";
        var appealStatus="A";
        var userID="";
        var acOffcode="";
        var acDate="";
        var acDecisionNo="";
        var acUserID="";
        var acTranNo="";

        //var action = Ext.ComponentQuery.query('#hdnActionAppeal')[0].getValue();
        //var apTranNo = Ext.ComponentQuery.query('#hdnAppealTranNo')[0].getValue() === ""?null:Ext.ComponentQuery.query('#hdnAppealTranNo')[0].getValue();
        //alert(action);
        /*
        var loadMsg="";

        if(action == "E")
        {
        loadMsg = "Updating ...";
        }
        else
        {
        loadMsg = "Saving ...";
        }*/
        //alert(action);
        var appealLinesLST="";
        var storeAppealLines=Ext.getStore('AppealLines');
        storeAppealLines.clearFilter();

        if(storeAppealLines.getCount() > 0)
        {
            appealLinesLST = getJson(storeAppealLines); 
        }

        var applHeaders={
            'OffCodeAU':offCodeAU,
            'RequestNo':requestNo,
            'OffCode':offCode,
            'AppealNo':appealNo,
            'ApplDate':appealDate,
            'Pan':pan,
            'AppealOn':cboAppealSubject,
            'ApplOnMaNo':appealOnMaNo,
            'ApplLocCode':appealLocCode,
            'ApplRegNo':appealRegNo,
            'OrderDate':orderDate,
            'OrderNo':orderNo,
            'AcctType':acctType,
            'TranDate':tranDate,
            'ApplReason':appealReason,
            'ApplStatus':appealStatus,
            'UserID':userID,
            'ApTranNo':tranNo,
            'AcOffCode':acOffcode,
            'AcDate':acDate,
            'AcDecisionNo':acDecisionNo,
            'AcUserID':acUserID,
            'AcTranNo':acTranNo,
            'Rstatus':rStatus,
            'Action':action,
            // 'AppealLinesLST':[]
            'AppealLinesLST':appealLinesLST!==""?appealLinesLST:null
        };


        Ext.Ajax.request({
            method: 'POST',
            url: '../Handlers/VAT/Appeal/AppealHeaderHandler.ashx',
            params: {method:'SaveAppealHeaderAU', appealHeader : JSON.stringify(applHeaders) },
            success: function( result, request ){

                var obj = Ext.decode(result.responseText);
                // console.log('obj',obj.message);  

                if(rStatus === "F")
                {
                    msg('INFO','पुनरावेदनमा गएको डाटा सफलतापुर्वक Submit भयो ।');
                    return;
                }
                else
                {
                    if(action === "E")
                    {
                        msg('INFO','पुनरावेदनमा गएको डाटा सफलतापुर्वक Save भयो ।');
                        return;
                    }
                    else
                    {
                        msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);
                    }
                }

            }
        });
    },

    init: function(application) {
        this.control({
            "#pnlAppealEntry": {
                afterrender: this.onPnlAppealEntryAfterRender
            },
            "#Appeal_txtPan": {
                keypress: this.onAppeal_txtPanKeypress,
                blur: this.onAppeal_txtPanBlur
            },
            "#appeal_btnAdd": {
                click: this.onAppeal_btnAddClick
            },
            "#Appeal_btnCancel": {
                click: this.onAppeal_btnCancelClick
            },
            "#btnBackAppeal": {
                click: this.onBtnBackAppealClick
            },
            "#cntBottomAppeal": {
                beforerender: this.onCntBottomAppealBeforeRender,
                afterrender: this.onCntBottomAppealAfterRender
            },
            "#Appeal_txtAppealNo": {
                keypress: this.onAppeal_txtAppealNoKeypress,
                blur: this.onAppeal_txtAppealNoBlur
            },
            "#Appeal_btnSave": {
                click: this.onAppeal_btnSaveClick
            },
            "#Appeal_btnEdit": {
                click: this.onAppeal_btnEditClick
            },
            "#Appeal_btnDelete": {
                click: this.onAppeal_btnDeleteClick
            },
            "#Appeal_btnSubmit": {
                click: this.onAppeal_btnSubmitClick
            },
            "#AL_cboFilePeriod": {
                change: this.onAL_cboFilePeriodChange
            },
            "#Appeal_txtAppeal_On_Ma_No": {
                keypress: this.onAppeal_txtAppeal_On_Ma_NoKeypress,
                blur: this.onAppeal_txtAppeal_On_Ma_NoBlur
            },
            "#AL_txtTaxYear": {
                blur: this.onAL_txtTaxYearBlur
            },
            "#Appeal_txtAppealDate": {
                blur: this.onAppeal_txtAppealDateBlur
            },
            "#Appeal_txtOrderDate": {
                blur: this.onAppeal_txtOrderDateBlur
            },
            "#AL_txtAmount": {
                change: this.onAL_txtAmountChange
            },
            "#btnPrintAppeal": {
                click: this.onBtnPrintAppealClick
            },
            "#cboAppealSubjectAE": {
                change: this.onCboAppealSubjectAEChange,
                change: this.onCboAppealSubjectAEChange,
                collapse: this.onCboAppealSubjectAECollapse
            },
            "#Appeal_txtAppealReason": {
                keypress: this.onAppeal_txtAppealReasonKeypress,
                keyup: this.onAppeal_txtAppealReasonKeyup,
                change: this.onAppeal_txtAppealReasonChange,
                focus: this.onAppeal_txtAppealReasonFocus
            }
        });
    }

});
