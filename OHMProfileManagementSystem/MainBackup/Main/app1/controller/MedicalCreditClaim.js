/*
 * File: app/controller/MedicalCreditClaim.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.MedicalCreditClaim', {
    extend: 'Ext.app.Controller',

    stores: [
        'MedicalCreditClaimAnx11',
        'MedServiceTypAnx11',
        'FiscalYear',
        'IncomeTaxAcctType'
    ],

    onDdlMCC_ActTypeChange: function(field, newValue, oldValue, eOpts) {
        this.MedicalCreditClaimTaxpayerInfo();


    },

    onBtnAddMCCDetailClick: function(button, e, eOpts) {
        var me = this;
        var count = 0;
        var errorMsg = "";
        var loadMsg = "";

        var txtMCC_PanNo = Ext.ComponentQuery.query('#txtMCC_PanNo')[0].getValue(); 
        var ddlMCC_ActType = Ext.ComponentQuery.query('#ddlMCC_ActType')[0].getValue();
        var txtMCC_FiscalYear =  Ext.ComponentQuery.query('#txtMCC_FiscalYear')[0].getValue();
        var txtMCC_ClainDate = Ext.ComponentQuery.query('#txtMCC_ClainDate')[0].getValue();


        if(txtMCC_ClainDate === "" || txtMCC_ClainDate === null)
        {

            count++;
            errorMsg = errorMsg + '<br/>' + count + ") कृपया दावी मिति भर्नुहोस् !!!";

        }

        if(txtMCC_PanNo === "" ||  txtMCC_PanNo === null)
        {

            count++;
            errorMsg = errorMsg + '<br/>' + count + ") कृपया स्था . ले . नं . भर्नुहोस् !!!";

        }

        if(ddlMCC_ActType === "" || ddlMCC_ActType === null)
        {

            count++;
            errorMsg = errorMsg + '<br/>' + count + ") कृपया खाताको किसिम भर्नुहोस् !!!";

        }

        if(txtMCC_FiscalYear === "" || txtMCC_FiscalYear === null)
        {

            count++;
            errorMsg = errorMsg + '<br/>' + count + ") कृपया आय बर्ष छान्नुहोस् !!! ";

        }

        if(count >0)
        {
            msg("WARNING",errorMsg);
            return false;
        }



        var grd = Ext.ComponentQuery.query('#grdMedicalCrClaimDetails')[0];

        var rec={
            MedicalSno:null,
            MedicalExpDate:'',
            MedicalServiceProvider:'',
            MedicalServiceType:'',
            MedicalExpAmt:null
        };

        grd.store.add(rec);
        /*
        if(grd.store.add(rec))
        {
        var btnAddMCCDetail= Ext.ComponentQuery.query('#btnAddMCCDetail')[0];
        btnAddMCCDetail.disable(true);
        }
        */
        var col = grd.headerCt.getHeaderAtIndex(0);
        var rows = grd.store.data.items;
        var record = rows[rows.length-1];
        grd.getPlugin('plugingrdMedicalCrClaimDetails').startEdit(record, col);

    },

    onGrdMedicalCrClaimDetailsBeforeRender: function(component, eOpts) {
        var grd = Ext.ComponentQuery.query('#grdMedicalCrClaimDetails')[0];

        grd.columns[3].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";    

            var items = Ext.getStore("MedServiceTypAnx11").data.items;

            for(var i=0;i<items.length;i++)
            {        

                if(items[i].data.MedServiceTypID === value)
                {           
                    temp = items[i].data.MedServiceTypName;
                    break;
                }        
            }

            return temp;

        };

    },

    onTxtMCC_TotalMedExpCFYChange: function(field, newValue, oldValue, eOpts) {
        var me = this;
        me.CalMedicalTaxCrRemaining();
    },

    onTxtMCC_MedCrclRemLFYChange: function(field, newValue, oldValue, eOpts) {
        var me = this;
        me.CalMedicalTaxCrRemaining();
    },

    onBtnMCC_SaveClick: function(button, e, eOpts) {
        var me = this;
        var frm_MedicalCrClaim = Ext.ComponentQuery.query('#frm_MedicalCrClaim')[0].getForm();
        this.SaveMedicalCreditClaim("I"); 
        /*
        if(frm_MedicalCrClaim.isValid())
        {
        this.SaveMedicalCreditClaim("I"); 

        }
        else
        {
        msg("WARNING","Please Fill the required fields !!!");   
        return;

        }
        */
    },

    onBtnMCC_submitClick: function(button, e, eOpts) {

        var me = this;
        var count = 0;
        var errorMsg = "";
        var loadMsg = "";
        var form = button.up('form').getForm();
        var action =  Ext.ComponentQuery.query('#hdnMCC_Action')[0].getValue();
        /*
        if(action == "E" && Ext.ComponentQuery.query('#dispMedicalCrClaim_submissionNo')[0].getValue()  === "")
        {
        msg("WARNING","Please Enter Assessment No !!!");

        return;
        }

        if(!form.isValid())
        {
        msg("WARNING","Please Fill the required fields !!!");   
        return;

        }
        */



        var txtMCC_PanNo = Ext.ComponentQuery.query('#txtMCC_PanNo')[0].getValue(); 
        var ddlMCC_ActType = Ext.ComponentQuery.query('#ddlMCC_ActType')[0].getValue();
        var txtMCC_FiscalYear =  Ext.ComponentQuery.query('#txtMCC_FiscalYear')[0].getValue();
        var txtMCC_ClainDate = Ext.ComponentQuery.query('#txtMCC_ClainDate')[0].getValue();


        if(txtMCC_ClainDate === "" || txtMCC_ClainDate === null)
        {

            count++;
            errorMsg = errorMsg + '<br/>' + count + ") कृपया दावी मिति भर्नुहोस् !!!";

        }

        if(txtMCC_PanNo === "" ||  txtMCC_PanNo === null)
        {

            count++;
            errorMsg = errorMsg + '<br/>' + count + ") कृपया स्था . ले . नं . भर्नुहोस् !!!";

        }

        if(ddlMCC_ActType === "" || ddlMCC_ActType === null)
        {

            count++;
            errorMsg = errorMsg + '<br/>' + count + ") कृपया खाताको किसिम भर्नुहोस् !!!";

        }

        if(txtMCC_FiscalYear === "" || txtMCC_FiscalYear === null)
        {

            count++;
            errorMsg = errorMsg + '<br/>' + count + ") कृपया आय बर्ष छान्नुहोस् !!! ";

        }

        if(count >0)
        {
            msg("WARNING",errorMsg);
            return false;
        }




        if(action === "D")
        {

            //------------------------------------------------------
            // NB: Posting Data to Server
            //------------------------------------------------------

            Ext.Ajax.request({
                url:"../Handlers/IncomeTax/D03/DCTBMedicalCrClaimHandler.ashx?method=DeleteDCTBMedicalCrClaim" ,
                params:{assessmentNo:Ext.ComponentQuery.query('#dispMedicalCrClaim_submissionNo')[0].getValue()
                },
                success: function ( result, request ) {

                    var obj = Ext.decode(result.responseText);

                    msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);

                    if(obj.success === "false") return;


                    me.ClearMCC();



                },
                failure: function ( result, request ) {

                    var obj = Ext.decode(result.responseText);

                    msg("FAILURE",obj.message);
                    return;
                }

            });


        }

        else
        {
            Ext.Msg.confirm('Confirm Action', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
                if(btn == 'yes'){


                    me.SaveMedicalCreditClaim("F");

                    return true;
                }
            }, this);


        }

    },

    onBtnMCC_EditClick: function(button, e, eOpts) {
        var hdnMCC_Action = Ext.ComponentQuery.query('#hdnMCC_Action')[0];
        var hdnlblMedicalCrClaimAction  = Ext.ComponentQuery.query('#hdnlblMedicalCrClaimAction')[0];
        var txtMCC_ASSESSMENTNO = Ext.ComponentQuery.query('#txtMCC_ASSESSMENTNO')[0];
        hdnMCC_Action.setValue("E");
        hdnlblMedicalCrClaimAction.setValue("Updating ...कृपया ऐसिसमेनट नं भर्नुहोस् !!! ");
        txtMCC_ASSESSMENTNO.setDisabled(false);
        txtMCC_ASSESSMENTNO.focus();



    },

    onBtnMCC_DeleteClick: function(button, e, eOpts) {
        var me = this;
        var hdnMCC_Action = Ext.ComponentQuery.query('#hdnMCC_Action')[0];
        var hdnlblMedicalCrClaimAction  = Ext.ComponentQuery.query('#hdnlblMedicalCrClaimAction')[0];
        hdnMCC_Action.setValue("D");
        hdnlblMedicalCrClaimAction.setValue("Deleting  ... कृपया ऐसिसमेनट नं भर्नुहोस् !!!");

        //var txtMCC_ASSESSMENTNO = Ext.ComponentQuery.query('#txtMCC_ASSESSMENTNO')[0];
        //txtMCC_ASSESSMENTNO.focus();

    },

    onBtnMCC_CancelClick: function(button, e, eOpts) {
        var me = this;
        me.ClearMCC();
    },

    onTxtMCC_ASSESSMENTNOKeypress: function(textfield, e, eOpts) {
        var me=this;
        var objParam = Ext.ComponentQuery.query('#frm_MedicalCrClaims')[0];


        Ext.getStore('MedicalCreditClaimAnx11').loadData([],false);

        if(e.keyCode === 13 || e.keyCode === 9)
        {

            var txtMCC_ASSESSMENTNO = Ext.ComponentQuery.query('#txtMCC_ASSESSMENTNO')[0].getValue();
            Ext.ComponentQuery.query('#dispMedicalCrClaim_submissionNo')[0].setValue(txtMCC_ASSESSMENTNO);
            Ext.Ajax.request({
                url: '../Handlers/IncomeTax/D03/DCTBMedicalCrClaimHandler.ashx',
                params: {
                    method:'GetDCTBMedicalCrClaim',assessmentNo:txtMCC_ASSESSMENTNO,
                    id: 1
                },
                success: function(response){
                    var obj =Ext.decode( response.responseText);
                    var btnMCC_Save = Ext.ComponentQuery.query("#btnMCC_Save")[0];
                    var btnMCC_submit = Ext.ComponentQuery.query("#btnMCC_submit")[0];
                    var btnMCC_Delete = Ext.ComponentQuery.query("#btnMCC_Delete")[0];
                    var btnAddMCCDetail= Ext.ComponentQuery.query('#btnAddMCCDetail')[0];


                    if(obj.success === "false")
                    {   

                        if(obj.message === "D") 
                        {
                            btnMCC_Delete.setDisabled(true);
                            btnMCC_Save.setDisabled(true);
                            btnMCC_submit.setDisabled(true);
                            btnAddMCCDetail.setDisabled(true);
                            this.ReadOnlyControl(objParam);
                            msg("WARNING","This Record is already Deleted !!!");
                            return;            
                        }

                        else
                        {
                            msg("WARNING",obj.message);
                            return;
                        }
                    }



                    var dctbMedicalCrClaim = obj.root;
                    var taxpayer = dctbMedicalCrClaim.Taxpayer;
                    var office = taxpayer.Office;
                    var address = taxpayer.BusinessAddress.Address;

                    // console.log(dctbMedicalCrClaim);

                    // Load Taxpayer Info
                    //Ext.ComponentQuery.query('#hdnFTCC_Office_Code')[0].setValue(office.OfficeCode);
                    Ext.ComponentQuery.query('#MedicalCrClaim_IROName')[0].setValue(office.OfficeNameNepali);
                    Ext.ComponentQuery.query('#txtMCC_Name')[0].setValue(taxpayer.Name);
                    Ext.ComponentQuery.query('#txtMCC_Name')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtMCC_HouseNo')[0].setValue(address.HouseNo);
                    Ext.ComponentQuery.query('#txtMCC_HouseNo')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtMCC_WardNo')[0].setValue(address.WardNo);
                    Ext.ComponentQuery.query('#txtMCC_WardNo')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtMCC_ToleName')[0].setValue(address.StreetName);
                    Ext.ComponentQuery.query('#txtMCC_ToleName')[0].setReadOnly(true);

                    if(address.LocationType=='MM')
                    {
                        Ext.ComponentQuery.query('#rdl_MCC_Metro_Mun')[0].setValue(true);
                    }
                    else if(address.LocationType=='SM')
                    {
                        Ext.ComponentQuery.query('#rdl_MCC_Sub_Metro_Mun')[0].setValue(true);
                    }
                    else if(address.LocationType=='MN')
                    {
                        Ext.ComponentQuery.query('#rdl_MCC_Mun')[0].setValue(true);
                    }
                    else if(address.LocationType=='VD')
                    {
                        Ext.ComponentQuery.query('#rdl_MCC_VDC')[0].setValue(true);
                    }

                    Ext.ComponentQuery.query('#txtMCC_VDCName')[0].setValue(address.VdcTown);
                    Ext.ComponentQuery.query('#txtMCC_VDCName')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtMCC_DistrictName')[0].setValue(address.DistrictNameNep);
                    Ext.ComponentQuery.query('#txtMCC_DistrictName')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtMCC_Phone')[0].setValue(address.Telephone);
                    Ext.ComponentQuery.query('#txtMCC_Phone')[0].setReadOnly(true);
                    //Ext.ComponentQuery.query('#txtMCC_Mobile')[0].setValue(true);
                    Ext.ComponentQuery.query('#txtMCC_Email')[0].setValue(address.Email);
                    Ext.ComponentQuery.query('#txtMCC_Email')[0].setReadOnly(true);
                    if(taxpayer.AcctStatus==='A')
                    Ext.ComponentQuery.query('#MCC_TpOfficeType')[0].setValue('सक्रिय');

                    //Load MCC
                    Ext.ComponentQuery.query('#txtMCC_PanNo')[0].setValue(dctbMedicalCrClaim.PAN); 
                    Ext.ComponentQuery.query('#ddlMCC_ActType')[0].setValue(dctbMedicalCrClaim.AccType);
                    Ext.ComponentQuery.query('#txtMCC_FiscalYear')[0].setValue(dctbMedicalCrClaim.FiscalYear);
                    Ext.ComponentQuery.query('#txtMCC_ClainDate')[0].setValue(dctbMedicalCrClaim.AssessmentDate);
                    Ext.ComponentQuery.query('#hdnMCCTranNo')[0].setValue(dctbMedicalCrClaim.TranNo);
                    Ext.ComponentQuery.query('#hdnMCC_Office_Code')[0].setValue(dctbMedicalCrClaim.OfficeCode);
                    Ext.ComponentQuery.query('#txtMCC_TotalMedExpCFY')[0].setValue(dctbMedicalCrClaim.TotalMedExpCFY);
                    Ext.ComponentQuery.query('#txtMCC_MedCrclRemLFY')[0].setValue(dctbMedicalCrClaim.MedCrclRemLFY);
                    Ext.ComponentQuery.query('#txtMCC_MedicalTaxCrRemaining')[0].setValue(dctbMedicalCrClaim.MedicalTaxCrRemaining);
                    Ext.ComponentQuery.query('#txtMCC_MedCrClCFY')[0].setValue(dctbMedicalCrClaim.MedCrClCFY);


                    // LoadFTCC MCC Details

                    /*

                    var grd = Ext.ComponentQuery.query('#grdMedicalCrClaimDetails')[0];
                    var store  = Ext.getStore('MedicalCreditClaimAnx11');
                    store.add(dctbMedicalCrClaim.MedicalCrClaimDetail); 
                    grd.bindStore(store);
                    console.log(store);
                    */

                    var hdnMCC_Action = Ext.ComponentQuery.query('#hdnMCC_Action')[0];
                    if(hdnMCC_Action.getValue() !== "D")
                    hdnMCC_Action.setValue(dctbMedicalCrClaim.Action);

                    var grd = Ext.ComponentQuery.query('#grdMedicalCrClaimDetails')[0];
                    var store  = Ext.getStore('MedicalCreditClaimAnx11');
                    var sum = 0;
                    var finAmount = Ext.ComponentQuery.query('#txtMCC_TotalMedExpCFY')[0];

                    store.add(dctbMedicalCrClaim.MedicalCrClaimDetail);

                    store.each(function (rec) {     
                        var mAmount = rec.get('MedicalExpAmt') === ""? null:rec.get('MedicalExpAmt');

                        rec.data.MedicalExpAmt = mAmount;

                        var mAmount1 = (mAmount === null)?0:mAmount;

                        rec.data.MedicalExpAmt = mAmount1;

                        if(rec.data.MedicalExpAmt !== "")
                        {
                            sum = parseFloat(sum) + parseFloat(rec.data.MedicalExpAmt); 
                        }

                    });

                    grd.bindStore(store);
                    //alert(sum);
                    finAmount.setValue(sum);


                    if(obj.message === "F" || dctbMedicalCrClaim.RecordStatus === "F") 
                    {

                        btnMCC_Delete.setDisabled(true);
                        btnMCC_Save.setDisabled(true);
                        btnMCC_submit.setDisabled(true);
                        btnAddMCCDetail.setDisabled(true);
                        this.ReadOnlyControl(objParam);
                        msg("WARNING","This  Record is already Finalized !!!");

                        return;                
                    } 



                },
                failure: function ( result, request ) {
                    Ext.Msg.show({
                        title: 'Failure',
                        msg: 'ERROR OCURRED !!!' ,
                        buttons: Ext.MessageBox.OK,
                        icon:Ext.Msg.ERROR
                    });
                }
            });                    

        }

    },

    onTxtMCCMedicalExpAmtChange: function(field, newValue, oldValue, eOpts) {
        this.TotalMedExpCFY();
    },

    onFrm_MedicalCrClaimsAfterRender: function(component, eOpts) {
        var objParam = Ext.ComponentQuery.query('#frm_MedicalCrClaims')[0];

        if(objParam.extraParam)
        {
            var param = objParam.extraParam.params;
            var tranNo = param.tranNo;


            this.LoadMedicalCrClaimByTranNo(tranNo);
            this.ReadOnlyControl(objParam);




            return;
        }
    },

    SaveMedicalCreditClaim: function(rStatus) {
        var me = this;
        var count = 0;
        var errorMsg = "";
        var loadMsg = "";

        var txtMCC_PanNo = Ext.ComponentQuery.query('#txtMCC_PanNo')[0].getValue(); 
        var ddlMCC_ActType = Ext.ComponentQuery.query('#ddlMCC_ActType')[0].getValue();
        var txtMCC_FiscalYear =  Ext.ComponentQuery.query('#txtMCC_FiscalYear')[0].getValue();
        var txtMCC_ClainDate = Ext.ComponentQuery.query('#txtMCC_ClainDate')[0].getValue();
        var hdnMCCTranNo = Ext.ComponentQuery.query('#hdnMCCTranNo')[0].getValue();
        var hdnMCC_Office_Code = Ext.ComponentQuery.query('#hdnMCC_Office_Code')[0].getValue()=== "" ?null:Ext.ComponentQuery.query('#hdnMCC_Office_Code')[0].getValue();
        var txtMCC_TotalMedExpCFY = Ext.ComponentQuery.query('#txtMCC_TotalMedExpCFY')[0].getValue()=== "" ?null:Ext.ComponentQuery.query('#txtMCC_TotalMedExpCFY')[0].getValue();
        var txtMCC_MedCrclRemLFY = Ext.ComponentQuery.query('#txtMCC_MedCrclRemLFY')[0].getValue()=== "" ?null:Ext.ComponentQuery.query('#txtMCC_MedCrclRemLFY')[0].getValue();
        var txtMCC_MedicalTaxCrRemaining = Ext.ComponentQuery.query('#txtMCC_MedicalTaxCrRemaining')[0].getValue() === "" ?null:Ext.ComponentQuery.query('#txtMCC_MedicalTaxCrRemaining')[0].getValue();
        var txtMCC_MedCrClCFY = Ext.ComponentQuery.query('#txtMCC_MedCrClCFY')[0].getValue()=== "" ?null:Ext.ComponentQuery.query('#txtMCC_MedCrClCFY')[0].getValue();
        var action = Ext.ComponentQuery.query('#hdnMCC_Action')[0].getValue();



        if(txtMCC_ClainDate === "" || txtMCC_ClainDate === null)
        {

            count++;
            errorMsg = errorMsg + '<br/>'+ count + ") कृपया दावी मिति भर्नुहोस्!!!";

        }

        if(txtMCC_PanNo === "" || txtMCC_PanNo === null)
        {

            count++;
            errorMsg = errorMsg + '<br/>'+ count + ") कृपया स्था . ले . नं . भर्नुहोस्!!!";

        }

        if(ddlMCC_ActType === "" || ddlMCC_ActType === null)
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया खाताको किसिम  भर्नुहोस्!!!";

        }

        if(txtMCC_FiscalYear === "" || txtMCC_FiscalYear === null )
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया आय बर्ष छान्नुहोस्!!! ";

        }

        if(count >0)
        {
            msg("WARNING",errorMsg);
            return false;
        }




        if(action == "E")
        {
            loadMsg = "Updating ...";
        }
        else
        {
            loadMsg = "Saving ...";
        }


        var strMedicalCreditClaimAnx11 = Ext.getStore('MedicalCreditClaimAnx11');

        strMedicalCreditClaimAnx11.clearFilter();

        var dCTBMedicalCreditClaimDetail = "";
        var dCTBMedicalCreditClaim = "";


        if(strMedicalCreditClaimAnx11.getCount() > 0)
        {
            dCTBMedicalCreditClaimDetail = getJson(strMedicalCreditClaimAnx11); 

            strMedicalCreditClaimAnx11.filter(function(item){
                return item.get("Action")!= 'D';
            });
        }

        var SubmissionNo={
            SubmissionNumber:'',
            Username:'',
            Password:'',
            ContactNo:'',
            Emailid:'',
            submittedFor:'',
            SubmittedYN:'N',
            SubmittedDate:'',
            TranNo:'0',
            Address:'',
            RegOffice:'',
            Action:'A',
            PAN:txtMCC_PanNo,
            FiscalYear:txtMCC_FiscalYear
        };

        dCTBMedicalCreditClaim = { 
            AssessmentNo:Ext.ComponentQuery.query('#dispMedicalCrClaim_submissionNo')[0].getValue()!==null?Ext.ComponentQuery.query('#dispMedicalCrClaim_submissionNo')[0].getValue():0,
            AssessmentDate:txtMCC_ClainDate,
            OfficeCode:hdnMCC_Office_Code,
            PAN:txtMCC_PanNo,
            AccType:ddlMCC_ActType,     
            FiscalYear:txtMCC_FiscalYear, 
            MedCrCl:null, 
            TotalMedExpCFY:txtMCC_TotalMedExpCFY !== ""?txtMCC_TotalMedExpCFY:null, 
            MedCrclRemLFY:txtMCC_MedCrclRemLFY !== ""?txtMCC_MedCrclRemLFY:null, 
            MedicalTaxCrRemaining:txtMCC_MedicalTaxCrRemaining !== ""?txtMCC_MedicalTaxCrRemaining:null,
            MedCrClCFY:txtMCC_MedCrClCFY !== ""?txtMCC_MedCrClCFY:null,
            RecordStatus:rStatus,
            Terminal:'',
            TranDate:'',
            UserName:'',
            TranNo:hdnMCCTranNo !== ""?hdnMCCTranNo:null,
            Source:'MCC',
            Action:action!== ""?action:"",
            MedicalCrClaimDetail:dCTBMedicalCreditClaimDetail !== ""?dCTBMedicalCreditClaimDetail:null,
            SubmissionNo:SubmissionNo
        };

        var waitSave = watiMsg(loadMsg);

        //console.log();

        //------------------------------------------------------
        // NB: Posting Data to Server
        //------------------------------------------------------

        Ext.Ajax.request({
            url:"../Handlers/IncomeTax/D03/DCTBMedicalCrClaimHandler.ashx?method=SaveDCTBMedicalCrClaim",
            params:{dCTBMedicalCrClaim:JSON.stringify(dCTBMedicalCreditClaim)},
            success: function ( result, request ) {

                waitSave.hide();

                var obj = Ext.decode(result.responseText);

                msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);

                if(obj.success === "false") return;
                me.ClearMCC();


            },
            failure: function ( result, request ) {

                waitSave.hide();

                var errMsg = "Error in " + loadMsg;

                msg("FAILURE",errMsg);
                return;
            }

        });

        /*

        var txtMCCMedicalExpDate =  Ext.ComponentQuery.query('txtMCCMedicalExpDate')[0].getValue(); 
        var txtMCCMedicalServiceProvider=  Ext.ComponentQuery.query('txtMCCMedicalServiceProvider')[0].getValue(); 
        var ddlMCCMedicalServiceType=  Ext.ComponentQuery.query('ddlMCCMedicalServiceType')[0].getValue(); 
        var txtMCCMedicalExpAmt=  Ext.ComponentQuery.query('txtMCCMedicalExpAmt')[0].getValue(); 

        var loadMsg = "";
        var count1 = 0;
        var errorMsg = "";
        if(txtMCCMedicalExpDate === "")
        {

        count1++;
        errorMsg = errorMsg + '<br/>'+ count1 + ") कृपया मिति भर्नुहोस्!!!";

        }

        if(txtMCCMedicalServiceProvider  === "")
        {

        count1 ++;
        errorMsg = errorMsg + '<br/>'+ count1 + ") कृपया स्वास्थ्य सेवा दिनेको नाम  भर्नुहोस्!!!";

        }

        if(ddlMCCMedicalServiceType === "")
        {

        count1++;
        errorMsg = errorMsg +'<br/>'+ count1 + ") कृपया स्वास्थ्य सेवाको किसिम  छन्नुहोस्!!!";

        }
        if(txtMCCMedicalExpAmt === "")
        {

        count1++;
        errorMsg = errorMsg +'<br/>'+ count1 + ") कृपया औषधोपचार खर्च   भर्नुहोस्!!!";

        }

        if(count1 >0)
        {
        msg("WARNING",errorMsg);
        return false;
        }


        var Total = Ext.ComponentQuery.query('#txtMCC_TotalMedExpCFY')[0];
        var TotalAmt = Total.getValue()!==''?Total.getValue():0;
        var index = e.rowIdx;
        var items = e.store.data.items;
        var newRecord = editor.context.newValues;
        var count = 0;
        var message = "";
        if(newRecord.MedicalExpAmt !== '')
        {

        if(isNaN(newRecord.MedicalExpAmt))
        {
        count++;
        message = message + count +")"+" औषधोपचार खर्च गलत भयो!!!.<br/>" ;  
        }
        else
        {
        TotalAmt = Number(TotalAmt)+ Number(newRecord.MedicalExpAmt);

        }
        }
        else
        {
        count++;
        message = message + count +")"+" कृपया औषधोपचार खर्च   भर्नुहोस्!!!<br/>" ;   

        }
        e.cancel = count>0;

        if(e.cancel)
        {
        Ext.MessageBox.alert('Warning',message);
        }
        else
        {
        items[index].data.Action = newRecord.Action === ''?'':'E';

        }

        Total.setValue(TotalAmt);

        */







    },

    TotalMedExpCFY: function() {
        /*
        //Parent TextBox
        var txtMCC_TotalMedExpCFY = Ext.ComponentQuery.query('#txtMCC_TotalMedExpCFY')[0];

        //Child TextBox
        var txtMCCMedicalExpAmt = Ext.ComponentQuery.query('#txtMCCMedicalExpAmt')[0].getValue();

        var grdIn = Ext.ComponentQuery.query('#grdMedicalCrClaimDetails')[0];

        var store = Ext.getStore('MedicalCreditClaimAnx11');


        var totMedExpCFY= 0; 

        store.each(function(rec,idx){

            var MCCMedicalExpAmt  = (rec.data.MedicalExpAmt === "" || rec.data.MedicalExpAmt === null)?0:rec.data.MedicalExpAmt;
            totMedExpCFY = parseFloat(MCCMedicalExpAmt) + parseFloat(totMedExpCFY);


        });

        txtMCCMedicalExpAmt = (txtMCCMedicalExpAmt === "" ||txtMCCMedicalExpAmt === null)?0:txtMCCMedicalExpAmt;
        var grandTotMCCMedicalExpAmt = 0; 
        grandTotMCCMedicalExpAmt = parseFloat(totMedExpCFY) + parseFloat(txtMCCMedicalExpAmt);
        grdIn.bindStore(store);
        txtMCC_TotalMedExpCFY.setValue(grandTotMCCMedicalExpAmt); 
        */


        var grd = Ext.ComponentQuery.query('#grdMedicalCrClaimDetails')[0];
        var store = grd.getStore();
        var selectedRow = grd.getSelectionModel();
        var record = grd.getSelectionModel().getSelection()[0];
        var txtMCCMedicalExpAmt = Ext.ComponentQuery.query('#txtMCCMedicalExpAmt')[0].getValue();
        var finAmount = Ext.ComponentQuery.query('#txtMCC_TotalMedExpCFY')[0];
        var mAmount = (txtMCCMedicalExpAmt === "")?0:txtMCCMedicalExpAmt;
        var totAmount = parseFloat(mAmount);

        Ext.ComponentQuery.query('#txtMCCMedicalExpAmt')[0].setValue(totAmount);

        finAmount.setValue("");

        //This code sum numbers in certain column
        var sum = 0; 

        var rowIdx = store.indexOf(record);
        var idx = 0;


        store.each(function (rec) {     

            if(rec.get('MedicalExpAmt') !=="" && rowIdx !== idx)
            {
                sum = parseFloat(sum) + parseFloat(rec.get('MedicalExpAmt')); 
            }

            idx++;


        });

        var overallTot = parseFloat(sum) + parseFloat(totAmount);

        finAmount.setValue(overallTot);
    },

    CalMedicalTaxCrRemaining: function() {
        var txtMCC_TotalMedExpCFY = Ext.ComponentQuery.query('#txtMCC_TotalMedExpCFY')[0].getValue();
        var txtMCC_MedCrclRemLFY  = Ext.ComponentQuery.query('#txtMCC_MedCrclRemLFY')[0].getValue();
        var txtMCC_MedicalTaxCrRemaining  = Ext.ComponentQuery.query('#txtMCC_MedicalTaxCrRemaining')[0];
        var grandTotMCCMedicalExpAmt = 0;
        txtMCC_TotalMedExpCFY = (txtMCC_TotalMedExpCFY === "" ||txtMCC_TotalMedExpCFY === null)?0:txtMCC_TotalMedExpCFY;
        txtMCC_MedCrclRemLFY = (txtMCC_MedCrclRemLFY === "" ||txtMCC_MedCrclRemLFY === null)?0:txtMCC_MedCrclRemLFY;
        txtMCC_MedicalTaxCrRemaining = (txtMCC_MedicalTaxCrRemaining === "" ||txtMCC_MedicalTaxCrRemaining === null)?0:txtMCC_MedicalTaxCrRemaining;
        grandTotMCCMedicalExpAmt = parseFloat(txtMCC_TotalMedExpCFY) + parseFloat(txtMCC_MedCrclRemLFY);
        txtMCC_MedicalTaxCrRemaining.setValue(grandTotMCCMedicalExpAmt);

    },

    ClearMCC: function() {


        //Medical Cr Claim Clear 



        Ext.ComponentQuery.query('#hdnlblMedicalCrClaimAction')[0].setValue(""); 
        Ext.ComponentQuery.query('#txtMCC_PanNo')[0].setValue(""); 
        Ext.ComponentQuery.query('#txtMCC_PanNo')[0].clearInvalid();
        Ext.ComponentQuery.query('#ddlMCC_ActType')[0].setValue("");
        Ext.ComponentQuery.query('#ddlMCC_ActType')[0].clearInvalid();
        Ext.ComponentQuery.query('#txtMCC_FiscalYear')[0].setValue("");
        Ext.ComponentQuery.query('#txtMCC_FiscalYear')[0].clearInvalid();
        Ext.ComponentQuery.query('#txtMCC_ClainDate')[0].setValue("");
        Ext.ComponentQuery.query('#txtMCC_ClainDate')[0].clearInvalid();
        Ext.ComponentQuery.query('#hdnMCCTranNo')[0].setValue("");
        Ext.ComponentQuery.query('#hdnMCC_Office_Code')[0].setValue("");
        Ext.ComponentQuery.query('#txtMCC_TotalMedExpCFY')[0].setValue("");
        Ext.ComponentQuery.query('#txtMCC_MedCrclRemLFY')[0].setValue("");
        Ext.ComponentQuery.query('#txtMCC_MedicalTaxCrRemaining')[0].setValue(""); 
        Ext.ComponentQuery.query('#txtMCC_MedCrClCFY')[0].setValue("");
        Ext.ComponentQuery.query('#hdnMCC_Action')[0].setValue("");
        Ext.ComponentQuery.query('#txtMCC_TotalMedExpCFY')[0].setValue("");

        //Clear Taxpayer Info
        Ext.ComponentQuery.query('#MedicalCrClaim_IROName')[0].setValue("");
        Ext.ComponentQuery.query('#txtMCC_Name')[0].setValue("");
        Ext.ComponentQuery.query('#txtMCC_HouseNo')[0].setValue("");
        Ext.ComponentQuery.query('#txtMCC_WardNo')[0].setValue("");
        Ext.ComponentQuery.query('#txtMCC_ToleName')[0].setValue("");
        Ext.ComponentQuery.query('#rdl_MCC_Metro_Mun')[0].setValue(false);
        Ext.ComponentQuery.query('#rdl_MCC_Sub_Metro_Mun')[0].setValue(false);
        Ext.ComponentQuery.query('#rdl_MCC_Mun')[0].setValue(false);
        Ext.ComponentQuery.query('#rdl_MCC_VDC')[0].setValue(false);
        Ext.ComponentQuery.query('#txtMCC_VDCName')[0].setValue("");
        Ext.ComponentQuery.query('#txtMCC_DistrictName')[0].setValue("");
        Ext.ComponentQuery.query('#txtMCC_Phone')[0].setValue("");
        //Ext.ComponentQuery.query('#txtMCC_Mobile')[0].setValue(true);
        Ext.ComponentQuery.query('#txtMCC_Email')[0].setValue("");
        Ext.ComponentQuery.query('#MCC_TpOfficeType')[0].setValue("");
        Ext.getStore('MedicalCreditClaimAnx11').loadData([],false);

        var btnMCC_Save = Ext.ComponentQuery.query("#btnMCC_Save")[0];
        var btnMCC_submit = Ext.ComponentQuery.query("#btnMCC_submit")[0];
        var btnMCC_Delete = Ext.ComponentQuery.query("#btnMCC_Delete")[0];
        btnMCC_Delete.setDisabled(false);
        btnMCC_Save.setDisabled(false);
        btnMCC_submit.setDisabled(false);














    },

    MedicalCreditClaimTaxpayerInfo: function() {
        var offCode = Ext.ComponentQuery.query('#MedicalCreditClaimLoginOffice')[0].getValue();
        //alert(offCode);
        var pan = Ext.ComponentQuery.query('#txtMCC_PanNo')[0].getValue();
        var acctType = Ext.ComponentQuery.query('#ddlMCC_ActType')[0].getValue();

        LoadTaxpayerInfoWithValidPan(pan,acctType,function(data){

            var taxpayer = data.root.Taxpayer;
            var address = taxpayer.BusinessAddress.Address;
            var office = taxpayer.Office;

            if(taxpayer.TaxpayerCategoryId === "B")
            {

                msg("WARNING","तपाईले औषधोपचार कर मिलान दावीको विवरण राख्ने(अनुसूची -११)भर्न पाउनु हुन्न् !!! ");
                return;

            }

            if(taxpayer.AcctStatus === "D")
            {
                msg("WARNING","PAN is Deactivated !!!");
                return;
            }
            if(offCode != office.OfficeCode)
            {
                msg("WARNING","PAN is not Registered in this office !!!");

                return;
            }

            Ext.ComponentQuery.query('#txtMCC_PanNo')[0].setValue(pan);
            //Ext.ComponentQuery.query('#txtFTCC_PanNo')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#ddlMCC_ActType')[0].setValue(acctType);
            // Ext.ComponentQuery.query('#ddlMCC_ActType')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#hdnMCC_Office_Code')[0].setValue(office.OfficeCode);
            Ext.ComponentQuery.query('#MedicalCrClaim_IROName')[0].setValue(office.OfficeNameNepali);
            Ext.ComponentQuery.query('#txtMCC_Name')[0].setValue(taxpayer.Name);
            Ext.ComponentQuery.query('#txtMCC_Name')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtMCC_HouseNo')[0].setValue(address.HouseNo);
            Ext.ComponentQuery.query('#txtMCC_HouseNo')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtMCC_WardNo')[0].setValue(address.WardNo);
            Ext.ComponentQuery.query('#txtMCC_WardNo')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtMCC_ToleName')[0].setValue(address.StreetName);
            Ext.ComponentQuery.query('#txtMCC_ToleName')[0].setReadOnly(true);

            if(address.LocationType=='MM')
            {
                Ext.ComponentQuery.query('#rdl_MCC_Metro_Mun')[0].setValue(true);
            }
            else if(address.LocationType=='SM')
            {
                Ext.ComponentQuery.query('#rdl_MCC_Sub_Metro_Mun')[0].setValue(true);
            }
            else if(address.LocationType=='MN')
            {
                Ext.ComponentQuery.query('#rdl_MCC_Mun')[0].setValue(true);
            }
            else if(address.LocationType=='VD')
            {
                Ext.ComponentQuery.query('#rdl_MCC_VDC')[0].setValue(true);
            }

            Ext.ComponentQuery.query('#txtMCC_VDCName')[0].setValue(address.VdcTown);
            Ext.ComponentQuery.query('#txtMCC_VDCName')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtMCC_DistrictName')[0].setValue(address.DistrictNameNep);
            Ext.ComponentQuery.query('#txtMCC_DistrictName')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtMCC_Phone')[0].setValue(address.Telephone);
            Ext.ComponentQuery.query('#txtMCC_Phone')[0].setReadOnly(true);
            //Ext.ComponentQuery.query('#txtMCC_Mobile')[0].setValue(true);
            Ext.ComponentQuery.query('#txtMCC_Email')[0].setValue(address.Email);
            Ext.ComponentQuery.query('#txtMCC_Email')[0].setReadOnly(true);
            if(taxpayer.AcctStatus==='A')
            Ext.ComponentQuery.query('#MCC_TpOfficeType')[0].setValue('सक्रिय');



        });
    },

    LoadMedicalCrClaimByTranNo: function(tranNo) {
        var me=this;

        Ext.getStore('MedicalCreditClaimAnx11').loadData([],false);




        Ext.Ajax.request({
            url: '../Handlers/IncomeTax/D03/DCTBMedicalCrClaimHandler.ashx',
            params: {
                method:'GetDCTBMedicalCrClaimByTranNo',tranNo:tranNo,
                id: 1
            },
            success: function(response){
                var obj =Ext.decode( response.responseText);
                var btnMCC_Save = Ext.ComponentQuery.query("#btnMCC_Save")[0];
                var btnMCC_submit = Ext.ComponentQuery.query("#btnMCC_submit")[0];
                var btnMCC_Delete = Ext.ComponentQuery.query("#btnMCC_Delete")[0];
                var btnAddMCCDetail= Ext.ComponentQuery.query('#btnAddMCCDetail')[0];
                var cntMCC_button = Ext.ComponentQuery.query('#cntMCC_button')[0];


                if(obj.success === "false")
                {   

                    if(obj.message === "D") 
                    {
                        btnMCC_Delete.setDisabled(true);
                        btnMCC_Save.setDisabled(true);
                        btnMCC_submit.setDisabled(true);
                        btnAddMCCDetail.setDisabled(true);
                        cntMCC_button.setDisabled(true);
                        msg("WARNING","This Record is already Deleted !!!");
                        return;            
                    }

                    else
                    {
                        msg("WARNING",obj.message);
                        return;
                    }
                }



                var dctbMedicalCrClaim = obj.root;
                var taxpayer = dctbMedicalCrClaim.Taxpayer;
                var office = taxpayer.Office;
                var address = taxpayer.BusinessAddress.Address;

                console.log(dctbMedicalCrClaim);

                // Load Taxpayer Info
                //Ext.ComponentQuery.query('#hdnFTCC_Office_Code')[0].setValue(office.OfficeCode);
                Ext.ComponentQuery.query('#MedicalCrClaim_IROName')[0].setValue(office.OfficeNameNepali);
                Ext.ComponentQuery.query('#txtMCC_Name')[0].setValue(taxpayer.Name);
                Ext.ComponentQuery.query('#txtMCC_Name')[0].setReadOnly(true);
                Ext.ComponentQuery.query('#txtMCC_HouseNo')[0].setValue(address.HouseNo);
                Ext.ComponentQuery.query('#txtMCC_HouseNo')[0].setReadOnly(true);
                Ext.ComponentQuery.query('#txtMCC_WardNo')[0].setValue(address.WardNo);
                Ext.ComponentQuery.query('#txtMCC_WardNo')[0].setReadOnly(true);
                Ext.ComponentQuery.query('#txtMCC_ToleName')[0].setValue(address.StreetName);
                Ext.ComponentQuery.query('#txtMCC_ToleName')[0].setReadOnly(true);

                if(address.LocationType=='MM')
                {
                    Ext.ComponentQuery.query('#rdl_MCC_Metro_Mun')[0].setValue(true);
                }
                else if(address.LocationType=='SM')
                {
                    Ext.ComponentQuery.query('#rdl_MCC_Sub_Metro_Mun')[0].setValue(true);
                }
                else if(address.LocationType=='MN')
                {
                    Ext.ComponentQuery.query('#rdl_MCC_Mun')[0].setValue(true);
                }
                else if(address.LocationType=='VD')
                {
                    Ext.ComponentQuery.query('#rdl_MCC_VDC')[0].setValue(true);
                }

                Ext.ComponentQuery.query('#txtMCC_VDCName')[0].setValue(address.VdcTown);
                Ext.ComponentQuery.query('#txtMCC_VDCName')[0].setReadOnly(true);
                Ext.ComponentQuery.query('#txtMCC_DistrictName')[0].setValue(address.DistrictNameNep);
                Ext.ComponentQuery.query('#txtMCC_DistrictName')[0].setReadOnly(true);
                Ext.ComponentQuery.query('#txtMCC_Phone')[0].setValue(address.Telephone);
                Ext.ComponentQuery.query('#txtMCC_Phone')[0].setReadOnly(true);
                //Ext.ComponentQuery.query('#txtMCC_Mobile')[0].setValue(true);
                Ext.ComponentQuery.query('#txtMCC_Email')[0].setValue(address.Email);
                Ext.ComponentQuery.query('#txtMCC_Email')[0].setReadOnly(true);
                if(taxpayer.AcctStatus==='A')
                Ext.ComponentQuery.query('#MCC_TpOfficeType')[0].setValue('सक्रिय');

                //Load MCC
                Ext.ComponentQuery.query('#txtMCC_PanNo')[0].setValue(dctbMedicalCrClaim.PAN); 
                Ext.ComponentQuery.query('#ddlMCC_ActType')[0].setValue(dctbMedicalCrClaim.AccType);
                Ext.ComponentQuery.query('#txtMCC_FiscalYear')[0].setValue(dctbMedicalCrClaim.FiscalYear);
                Ext.ComponentQuery.query('#txtMCC_ClainDate')[0].setValue(dctbMedicalCrClaim.AssessmentDate);
                Ext.ComponentQuery.query('#hdnMCCTranNo')[0].setValue(dctbMedicalCrClaim.TranNo);
                Ext.ComponentQuery.query('#hdnMCC_Office_Code')[0].setValue(dctbMedicalCrClaim.OfficeCode);
                Ext.ComponentQuery.query('#txtMCC_TotalMedExpCFY')[0].setValue(dctbMedicalCrClaim.TotalMedExpCFY);
                Ext.ComponentQuery.query('#txtMCC_MedCrclRemLFY')[0].setValue(dctbMedicalCrClaim.MedCrclRemLFY);
                Ext.ComponentQuery.query('#txtMCC_MedicalTaxCrRemaining')[0].setValue(dctbMedicalCrClaim.MedicalTaxCrRemaining);
                Ext.ComponentQuery.query('#txtMCC_MedCrClCFY')[0].setValue(dctbMedicalCrClaim.MedCrClCFY);


                // LoadFTCC MCC Details

                /*

                var grd = Ext.ComponentQuery.query('#grdMedicalCrClaimDetails')[0];
                var store  = Ext.getStore('MedicalCreditClaimAnx11');
                store.add(dctbMedicalCrClaim.MedicalCrClaimDetail); 
                grd.bindStore(store);
                console.log(store);
                */

                var hdnMCC_Action = Ext.ComponentQuery.query('#hdnMCC_Action')[0];
                if(hdnMCC_Action.getValue() !== "D")
                hdnMCC_Action.setValue(dctbMedicalCrClaim.Action);

                var grd = Ext.ComponentQuery.query('#grdMedicalCrClaimDetails')[0];
                var store  = Ext.getStore('MedicalCreditClaimAnx11');
                var sum = 0;
                var finAmount = Ext.ComponentQuery.query('#txtMCC_TotalMedExpCFY')[0];

                store.add(dctbMedicalCrClaim.MedicalCrClaimDetail);

                store.each(function (rec) {     
                    var mAmount = rec.get('MedicalExpAmt') === ""? null:rec.get('MedicalExpAmt');

                    rec.data.MedicalExpAmt = mAmount;

                    var mAmount1 = (mAmount === null)?0:mAmount;

                    rec.data.MedicalExpAmt = mAmount1;

                    if(rec.data.MedicalExpAmt !== "")
                    {
                        sum = parseFloat(sum) + parseFloat(rec.data.MedicalExpAmt); 
                    }

                });

                grd.bindStore(store);
                //alert(sum);
                finAmount.setValue(sum);


                if(obj.message === "F" || dctbMedicalCrClaim.RecordStatus === "F") 
                {

                    btnMCC_Delete.setDisabled(true);
                    btnMCC_Save.setDisabled(true);
                    btnMCC_submit.setDisabled(true);
                    btnAddMCCDetail.setDisabled(true);
                    cntMCC_button.setDisabled(true);
                    msg("WARNING","This  Record is already Finalized !!!");

                    return;                
                } 



            },
            failure: function ( result, request ) {
                Ext.Msg.show({
                    title: 'Failure',
                    msg: 'ERROR OCURRED !!!' ,
                    buttons: Ext.MessageBox.OK,
                    icon:Ext.Msg.ERROR
                });
            }
        });                    



    },

    ReadOnlyControl: function(ParentName) {
        ParentName.query('.field,.combo').forEach(function(c){c.setReadOnly(true);});
        ParentName.query('.grid').forEach(function(c){ c.on('beforeedit', function(editor, e) { return false;});});
    },

    init: function(application) {
        this.control({
            "#ddlMCC_ActType": {
                change: this.onDdlMCC_ActTypeChange
            },
            "#btnAddMCCDetail": {
                click: this.onBtnAddMCCDetailClick
            },
            "#grdMedicalCrClaimDetails": {
                beforerender: this.onGrdMedicalCrClaimDetailsBeforeRender
            },
            "#txtMCC_TotalMedExpCFY": {
                change: this.onTxtMCC_TotalMedExpCFYChange
            },
            "#txtMCC_MedCrclRemLFY": {
                change: this.onTxtMCC_MedCrclRemLFYChange
            },
            "#btnMCC_Save": {
                click: this.onBtnMCC_SaveClick
            },
            "#btnMCC_submit": {
                click: this.onBtnMCC_submitClick
            },
            "#btnMCC_Edit": {
                click: this.onBtnMCC_EditClick
            },
            "#btnMCC_Delete": {
                click: this.onBtnMCC_DeleteClick
            },
            "#btnMCC_Cancel": {
                click: this.onBtnMCC_CancelClick
            },
            "#txtMCC_ASSESSMENTNO": {
                keypress: this.onTxtMCC_ASSESSMENTNOKeypress
            },
            "#txtMCCMedicalExpAmt": {
                change: this.onTxtMCCMedicalExpAmtChange
            },
            "#frm_MedicalCrClaims": {
                afterrender: this.onFrm_MedicalCrClaimsAfterRender
            }
        });
    }

});
