/*
 * File: app/controller/GetGeneralizedSubmissionNo.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.GetGeneralizedSubmissionNo', {
    extend: 'Ext.app.Controller',

    stores: [
        'FiscalYear'
    ],

    onGetGeneralizedSubmissionNoAfterRender: function(abstractcomponent, options) {
        //console.log('extparam',Ext.getCmp('GetGeneralizedSubmissionNo').extraParam);
        var acctType ;
        var submittedFor ;

        var map = Ext.getCmp('CntSiteMapPath');
        var val = map.html;
        var arr = val.split(">>");
        var module = arr[arr.length-2].trim();

        //console.log("map:",map);

        var leaf = arr[arr.length-1].trim();

        var fyr = Ext.ComponentQuery.query('#ddlVatretFysicalyr')[0];

        Ext.ComponentQuery.query('#hdnGenLoginModule')[0].setValue(module);
        Ext.ComponentQuery.query('#hdnGenLoginLeaf')[0].setValue(leaf);

        var cntSelfAssessmentInstruction = Ext.ComponentQuery.query('#cntSelfAssessmentInstruction')[0];

        var cntVatEstRet = Ext.ComponentQuery.query('#cntVatEstRet')[0];
        //alert('module is ' + module +'leaf is'+ leaf);
        //alert(leaf);


        if(("Value Added Tax System" === module) &&("E-Vat Return Entry" === leaf))
        { 
            fyr.setVisible(false);
            cntSelfAssessmentInstruction.setVisible(false);
            cntVatEstRet.setVisible(true);
        }

        else if(("Value Added Tax System" === module)&&("E-Close Of Business Entry" === leaf)) // added by shanjeev
        {

            fyr.setVisible(false);
            cntSelfAssessmentInstruction.setVisible(false);
            cntVatEstRet.setVisible(true);

        }

        else if(("Value Added Tax System" === module) &&("Manual Vat Return Entry" === leaf))
        { 
            fyr.setVisible(false);
            cntSelfAssessmentInstruction.setVisible(false);
            cntVatEstRet.setVisible(true);
        }

        else if(("Income Tax System" === module) && ("E-Estimate Return/Estimate Revision Return/Estimate Revision Notice" === leaf ))


        { 
            fyr.setVisible(true);
            cntSelfAssessmentInstruction.setVisible(false);
            cntVatEstRet.setVisible(true);

        }


        else if(("Income Tax System" === module) && ("Manual Estimate Return/Estimate Revision Return/Estimate Revision Notice" === leaf ))
        {
            fyr.setVisible(true);
            cntSelfAssessmentInstruction.setVisible(false);
            cntVatEstRet.setVisible(true);

        } 
        else if(("Income Tax System" === module) && ("SelfAssessmentD01" === leaf ))

        { 
            fyr.setVisible(true);
            cntSelfAssessmentInstruction.setVisible(false);
            cntVatEstRet.setVisible(true);

        }

        else if(("Income Tax System" === module)&&("Self Assessment D03" === leaf))
        {

            fyr.setVisible(true);

            cntSelfAssessmentInstruction.setVisible(true);
            cntVatEstRet.setVisible(false);

        }
        else if(("Income Tax System" === module)&&("e-IncomeTax Self-Assessment" === leaf))
        {

            fyr.setVisible(true);
            cntSelfAssessmentInstruction.setVisible(true);
            cntVatEstRet.setVisible(false);

        }

        else if(("Integrated Tax Menus" === module)&&("e-IncomeTax Self-Assessment" === leaf))
        {

            fyr.setVisible(true);
            cntSelfAssessmentInstruction.setVisible(true);
            cntVatEstRet.setVisible(false);

        }
        else if(("Income Tax System" === module)&&("Jeopardy Assessment" === leaf))
        {

            fyr.setVisible(true);
            cntSelfAssessmentInstruction.setVisible(true);
            cntVatEstRet.setVisible(false);

        }

        else if(("Integrated Tax Menus" === module)&&("Jeopardy Assessment" === leaf))
        {

            fyr.setVisible(true);
            cntSelfAssessmentInstruction.setVisible(true);
            cntVatEstRet.setVisible(false);

        }
        else if(("Income Tax System" === module)&&("Change Off Business" === leaf))
        {

            fyr.setVisible(true);
            cntSelfAssessmentInstruction.setVisible(true);
            cntVatEstRet.setVisible(false);

        }

        else if(("Integrated Tax Menus" === module)&&("Change Off Business" === leaf))
        {

            fyr.setVisible(true);
            cntSelfAssessmentInstruction.setVisible(true);
            cntVatEstRet.setVisible(false);

        } 


        else if(("Integrated Tax Menus" === module)&&("Change of Control" === leaf))
        {

            fyr.setVisible(true);
            cntSelfAssessmentInstruction.setVisible(true);
            cntVatEstRet.setVisible(false);

        }

        else if(("Integrated Tax Menus" === module)&&("Change of Control" === leaf))
        {

            fyr.setVisible(true);
            cntSelfAssessmentInstruction.setVisible(true);
            cntVatEstRet.setVisible(false);

        }


        /*

        else if(Ext.getCmp('GetGeneralizedSubmissionNo').extraParam.test=="Y")
        { 

        fyr.setVisible(true);

        cntSelfAssessmentInstruction.setVisible(true);
        cntVatEstRet.setVisible(false);

        }
        */



    },

    onBtnResetClick: function(button, e, options) {
        Ext.ComponentQuery.query("#txtVatUsername")[0].setValue("");
        Ext.ComponentQuery.query("#txtVatPassword")[0].setValue("");
        Ext.ComponentQuery.query("#txtVatReTypePassword")[0].setValue("");
        Ext.ComponentQuery.query("#txtVATPANNo")[0].setValue("");
        Ext.ComponentQuery.query("#txtVatEmailId")[0].setValue("");
        Ext.ComponentQuery.query("#txtVatPhoneNo")[0].setValue("");

        //Ext.ComponentQuery.query("#ddlVatretFysicalyr")[0].setValue("");
        //Ext.getStore('FiscalYear').loadData([],false);
    },

    onBtnRegisterClick: function(button, e, options) {
        var submittedFor;
        var acctType;
        var module=Ext.ComponentQuery.query('#hdnGenLoginModule')[0].getValue();
        var leaf=Ext.ComponentQuery.query('#hdnGenLoginLeaf')[0].getValue();

        var Fysicalyr = Ext.ComponentQuery.query("#ddlVatretFysicalyr")[0];
        var errMessage='';

        var PAN = Ext.ComponentQuery.query("#txtVATPANNo")[0].getValue();
        var txtVatPhoneNo  = Ext.ComponentQuery.query("#txtVatPhoneNo")[0].getValue();

        if((Ext.ComponentQuery.query("#txtVatPassword")[0].getValue())!== (Ext.ComponentQuery.query('#txtVatReTypePassword')[0].getValue()))
        {
            errMessage+='कृपया पासवर्ड र पुन: पासवर्ड मिलेन!!! <br/';
        }

        if(PAN.length!=9)
        {
            errMessage+='कृपया स्था . ले . नं .९ ओटा न. भर्नुहोस्!!! <br/ ';

        }

        if(txtVatPhoneNo === "")
        {
            errMessage+='कृपया सम्मपर्क नम्बर भर्नुहोस्!!! <br/'; 
        }
        if(errMessage!=='')
        {
            msg('INFO',errMessage);
            return;
        }

        errMessage='';


        if(("Value Added Tax System" === module) &&("E-Vat Return Entry" === leaf))
        { 
            acctType = "00";
            submittedFor = "VRET";
            Fysicalyr.setVisible(false);



        }

        else if(("Value Added Tax System" === module)&&("E-Close Of Business Entry" === leaf)) // added by shanjeev
        {

            acctType = "00";
            submittedFor = "VCB";
            Fysicalyr.setVisible(false);

        }



        else if(("Value Added Tax System" === module) &&("Manual Vat Return Entry" === leaf))
        { 
            acctType = "00";
            submittedFor = "VRET";
            Fysicalyr.setVisible(false);

        }

        else if(("Income Tax System" === module) && ("E-Estimate Return/Estimate Revision Return/Estimate Revision Notice" === leaf ))
        {
            acctType = "10";
            submittedFor = "INST"; 
            Fysicalyr.setVisible(true);

        }
        else if(("Income Tax System" === module) && ("Manual Estimate Return/Estimate Revision Return/Estimate Revision Notice" === leaf ))
        {
            acctType = "10";
            submittedFor = "INST"; 
            Fysicalyr.setVisible(true);

        }
        else if(("Income Tax System" === module) && ("e-IncomeTax Self-Assessment" === leaf ))
        {
            acctType = "10";
            submittedFor = "ASS03"; 
            Fysicalyr.setVisible(true);

        }
        else if(("Income Tax System" === module) && ("SelfAssessmentD01" === leaf ))
        { 
            var isValid = true;

            LoadTaxpayerInfoWithValidPan(PAN,'10',function(data){

                var taxpayer=obj.root.Taxpayer;
                var address=taxpayer.BusinessAddress.Address;

                if(taxpayer.TaxpayerCategoryId === "B")
                {
                    isValid = false;
                    msg("WARNING","तपाईले SelfAssessmentD01 भर्न पाउनु हुन्न् !!! ");

                }
                else
                {
                    acctType = "10";
                    submittedFor = "ASS01"; 
                    Fysicalyr.setVisible(true);
                }
            });

            if(!isValid)
            {
                return;
            }


        }

        else if(("Income Tax System" === module) && ("Self Assessment D03" === leaf ))
        {
            acctType = "10";
            submittedFor = "ASS03"; 
            Fysicalyr.setVisible(true);

        }

        else if(("Income Tax System" === module) && ("Jeopardy Assessment" === leaf ))
        {
            acctType = "10";
            submittedFor = "JA"; 
            Fysicalyr.setVisible(true);


        }
        else if(("Income Tax System" === module) && ("Change Off Business" === leaf ))
        {
            acctType = "10";
            submittedFor = "CB"; 
            Fysicalyr.setVisible(true);


        }
        else if(("Income Tax System" === module) && ("Change of Control" === leaf ))
        {
            acctType = "10";
            submittedFor = "BH"; 
            Fysicalyr.setVisible(true);


        }

        // above code is written by shanjeev Self Assessment D03 e-IncomeTax Self-Assessment

        var validateForm=Ext.getCmp('frmVatReturnsSubNo');
        var form = button.up('form').getForm();



        var Username=Ext.ComponentQuery.query("#txtVatUsername")[0].value;  

        var Fysicalyrr = Fysicalyr.getValue();
        //alert('fyr = ' + Fysicalyrr);   

        var TPOFfice;
        var me=this;

        if(Ext.ComponentQuery.query("#txtVatPassword")[0].getValue()===Ext.ComponentQuery.query('#txtVatReTypePassword')[0].getValue())
        {
            if(Ext.ComponentQuery.query("#txtVATPANNo")[0].value!=='')
            {

                Ext.Ajax.request({
                    url: '../Handlers/Registration/Taxpayer/TaxpayerHandler.ashx',
                    params: {method:'ValidatePan',
                        pan: Ext.ComponentQuery.query("#txtVATPANNo")[0].value,
                        accountType:acctType
                    },
                    success: function(response){
                        var JSONResponse=Ext.decode(response.responseText);
                        if(JSONResponse.success=='true')
                        {   

                            //Get Taxpayer Current Office
                            Ext.Ajax.request({
                                url: '../Handlers/Registration/Taxpayer/TaxpayerHandler.ashx',
                                params: {
                                    method:'GetTaxpayerCurrOffice',
                                    pan: Ext.ComponentQuery.query("#txtVATPANNo")[0].value,
                                    acctType:acctType,
                                    id: 1
                                },
                                success: function(taxpayerCurrOffice){
                                    TPOffice =Ext.decode( taxpayerCurrOffice.responseText);

                                    if(JSON.stringify(TPOffice.root.Success)=='false')
                                    {
                                        me.msg('INFO',TPOffice.root.Message);
                                    }
                                    else
                                    {

                                        //Sets Login TBs Info
                                        var LoginTBs={
                                            SubmissionNo:'',
                                            Username:Username,
                                            Password:Ext.ComponentQuery.query("#txtVatPassword")[0].value,
                                            PAN:PAN,
                                            Emailid:Ext.ComponentQuery.query("#txtVatEmailId")[0].value,
                                            ContactNo:Ext.ComponentQuery.query("#txtVatPhoneNo")[0].value,
                                            submittedFor:submittedFor,
                                            SubmittedYN:'N',
                                            SubmittedDate:Ext.decode(AppWakeUpJSON).root.NepaliDate,
                                            TranNo:'0',
                                            Address:'',
                                            RegOffice:TPOffice.root.TaxpayerOffice.OfficeCode,
                                            Action:'',
                                            FiscalYear:Fysicalyrr
                                        };





                                        //Form Submit

                                        if(form.isValid()){
                                            form.submit({
                                                url: '../Handlers/Vat/VatReturnsSubmissionNumberHandler.ashx',
                                                waitMsg: 'Generating Submission Number...',
                                                params:{method:'SaveVatReturnSubmissionNo',LoginTBS:JSON.stringify(LoginTBs)},
                                                success: function(p1,p2) {
                                                    //loadDynamicPanel('vat returns@@VatReturnsEntry');
                                                    var uiConfig = {menuLink:'ShowGeneralizedSubmissionNo',
                                                        pageTitle:"Show Generalized SubmissionNo"
                                                    };

                                                    //console.log("p1----------------",p1);
                                                    //console.log("p2 ---------------",p2);


                                                    DynamicUI(uiConfig,function(){

                                                        Ext.ComponentQuery.query("#lblSubmissionNo")[0].setValue(p2.result.root);
                                                        Ext.ComponentQuery.query("#lblUsername")[0].setValue(Username);
                                                        Ext.ComponentQuery.query("#lblPan")[0].setValue(PAN);
                                                        Ext.ComponentQuery.query("#hdnFysicalyr")[0].setValue(Fysicalyrr);

                                                        Ext.ComponentQuery.query('#hdnAcctType')[0].setValue(acctType);
                                                        Ext.ComponentQuery.query('#hdnsubmittedFor')[0].setValue(submittedFor);
                                                        Ext.ComponentQuery.query('#hdnLeaf')[0].setValue(leaf);
                                                        //alert(Ext.ComponentQuery.query("#lblSubmissionNo")[0].setValue(p2.result.root));
                                                        //console.log(Ext.ComponentQuery.query("#lblSubmissionNo")[0].setValue(p2.result.root));
                                                    });

                                                },
                                                failure:function(fp, o) {                        
                                                    me.msg('INFO','Error in Getting Submission Number <br/ ');
                                                }
                                            });  
                                        }     


                                    }

                                }
                            });
                        }
                        else
                        {
                            me.msg('INFO',JSONResponse.message);
                        }
                    }
                });
            }

        }   
        else
        {
            me.msg('INFO','कृपया प्रयोगकर्ताको नाम र पासवर्ड  मिलेन!!! <br/');
        }

    },

    onBtnGenLoginClick: function(button, e, options) {
        var module=Ext.ComponentQuery.query('#hdnGenLoginModule')[0].getValue();
        var leaf=Ext.ComponentQuery.query('#hdnGenLoginLeaf')[0].getValue();
        var modtitle = module + '>>' + leaf;

        var uiConfig = {menuLink:'GeneralizedLogin',
            pageTitle:module + '>>' + leaf
        };

        /*
        var uiConfig = {menuLink:'GeneralizedLogin',
        pageTitle:"GeneralizedLogin"
        };

        */
        DynamicUI(uiConfig,function(){
            //ComponentQuery.query('#hdnGenLoginSubFor')[0].setValue(); 
            Ext.ComponentQuery.query('#hdnGenLoginModule')[0].setValue(module); 
            Ext.ComponentQuery.query('#hdnGenLoginLeaf')[0].setValue(leaf); 


        });
        Ext.getCmp('CntSiteMapPath').update(modtitle);
    },

    msg: function(title, message) {
        var rqdIcon = Ext.MessageBox.INFO;

        if(title == "FAILURE")
        rqdIcon = Ext.Msg.ERROR;
        else if(title == "WARNING")
        rqdIcon = Ext.Msg.WARNING;

        Ext.Msg.show({
            title: title,
            msg: message ,
            buttons: Ext.MessageBox.OK,
            icon: rqdIcon
        });
    },

    init: function(application) {
        this.control({
            "#pnlGetGeneralizedSubmissionNo": {
                afterrender: this.onGetGeneralizedSubmissionNoAfterRender
            },
            "#btnReset": {
                click: this.onBtnResetClick
            },
            "#btnRegister": {
                click: this.onBtnRegisterClick
            },
            "#btnGenLogin": {
                click: this.onBtnGenLoginClick
            }
        });
    }

});
