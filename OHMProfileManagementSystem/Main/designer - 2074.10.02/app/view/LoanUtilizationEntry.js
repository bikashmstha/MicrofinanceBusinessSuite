/*
 * File: app/view/LoanUtilizationEntry.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.LoanUtilizationEntry', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.grid.Panel',
        'Ext.grid.column.Number',
        'Ext.grid.column.Date',
        'Ext.grid.column.Boolean',
        'Ext.grid.View'
    ],

    frame: true,
    title: 'Loan Utilization Entry',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    id: 'frmLoanUtilizationEntry',
                    itemId: 'frmLoanUtilizationEntry',
                    bodyPadding: 10,
                    title: '',
                    items: [
                        {
                            xtype: 'container',
                            layout: {
                                type: 'table',
                                columns: 3
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    colspan: 1,
                                    itemId: 'txtCenterCode',
                                    width: 295,
                                    fieldLabel: 'Center Code',
                                    labelWidth: 120,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    size: 64,
                                    listeners: {
                                        afterrender: {
                                            fn: me.onTxtCenterCodeAfterRender,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 1,
                                    itemId: 'txtCenterDesc',
                                    fieldLabel: 'Center Code',
                                    hideLabel: true,
                                    labelWidth: 120,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    size: 64
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtFirstCollectionDateBS',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'First Collection Date(B.S.)',
                                    labelWidth: 140,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtEmployeeCode',
                                    fieldLabel: 'Employee Code',
                                    labelWidth: 120,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 1,
                                    itemId: 'txtEmployeeDesc',
                                    margin: '0 0 0 5',
                                    fieldLabel: '',
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                                    size: 40
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtFirstCollectionDateAD',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'First Collection Date(A.D.)',
                                    labelWidth: 142,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtInstallmentInterval',
                                    fieldLabel: 'Installment Interval',
                                    labelWidth: 120,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlCenterType',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Center Type',
                                    labelWidth: 140,
                                    emptyText: '--- SELECT ---',
                                    displayField: 'RefDtlName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'ReferenceShortStore',
                                    valueField: 'RefDtlCode'
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            title: '',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'string',
                                    text: 'String'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    dataIndex: 'number',
                                    text: 'Number'
                                },
                                {
                                    xtype: 'datecolumn',
                                    dataIndex: 'date',
                                    text: 'Date'
                                },
                                {
                                    xtype: 'booleancolumn',
                                    dataIndex: 'bool',
                                    text: 'Boolean'
                                }
                            ]
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFrmLoanUtilizationEntryAfterRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onTxtCenterCodeAfterRender: function(component, eOpts) {
        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectLoanUtilizationCenterPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });
    },

    onFrmLoanUtilizationEntryAfterRender: function(component, eOpts) {
        var referenceShortStore=Ext.getStore('ReferenceShortStore');
        referenceShortStore.removeAll();

        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',referenceCode:'DAY_DATE'
            },
            success: function(response){

            var data=Ext.decode(response.responseText);
            referenceShortStore.removeAll();
            referenceShortStore.add(data.root);


        }
        });
    }

});