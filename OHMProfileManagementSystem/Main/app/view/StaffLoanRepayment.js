/*
 * File: app/view/StaffLoanRepayment.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.StaffLoanRepayment', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.form.FieldSet',
        'Ext.form.field.Checkbox',
        'Ext.button.Button',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.selection.RowModel',
        'Ext.grid.column.Action'
    ],

    frame: true,
    title: 'Staff Loan Repayment',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    itemId: 'frmStaffLoanRepayment',
                    autoScroll: true,
                    bodyPadding: 10,
                    layout: {
                        type: 'table',
                        columns: 4
                    },
                    items: [
                        {
                            xtype: 'container',
                            colspan: 4,
                            layout: {
                                type: 'table',
                                columns: 4
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    colspan: 3,
                                    itemId: 'txtPaymentDateBS',
                                    fieldLabel: 'Payment Date (B.S)',
                                    labelWidth: 145,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtPaymentDateAD',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Payment Date (A.D)',
                                    labelWidth: 120,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 4,
                                    itemId: 'ddlLoanProduct',
                                    fieldLabel: 'Loan Product',
                                    labelWidth: 145,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    displayField: 'LoanProductName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'LoanProductForStaffLoanDisbursementStore',
                                    valueField: 'LoanProductCode'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 4,
                                    itemId: 'txtLoanNo',
                                    fieldLabel: 'Loan No.',
                                    labelWidth: 145,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    size: 64,
                                    listeners: {
                                        afterrender: {
                                            fn: me.onTxtLoanNoAfterRender,
                                            scope: me
                                        },
                                        change: {
                                            fn: me.onTxtLoanNoChange,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 4,
                                    itemId: 'txtStaffName',
                                    fieldLabel: 'Staff Name',
                                    labelWidth: 145,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                                    size: 64
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtManagerCode',
                                    fieldLabel: 'Manager',
                                    labelWidth: 145,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtManagerName',
                                    margin: '0 0 0 5',
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                                    size: 40
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            colspan: 2,
                            title: 'Due',
                            layout: {
                                type: 'table',
                                columns: 2
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtPastPrincipal',
                                    fieldLabel: 'Past Principal',
                                    labelWidth: 130,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtCurrentPrincipal',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Current Principal',
                                    labelWidth: 115,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtPastInterest',
                                    fieldLabel: 'Past Interest',
                                    labelWidth: 130,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtCurrentInterest',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Current Interest',
                                    labelWidth: 115,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtPenaltyOnInterest',
                                    fieldLabel: 'Penalty On Interest',
                                    labelWidth: 130,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtInstallmentAmount',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Installment Amount',
                                    labelWidth: 115,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            colspan: 2,
                            height: 108,
                            margin: '0 0 0 10',
                            title: 'Balance',
                            layout: {
                                type: 'table',
                                columns: 2
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtPrincipalBalance',
                                    fieldLabel: 'Principal Balance',
                                    labelWidth: 120,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtInterestBalance',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Interest Balance',
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtPenaltyBalance',
                                    fieldLabel: 'Penalty Balance',
                                    labelWidth: 120,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtTotalBalance',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Total Balance',
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            colspan: 4,
                            height: 28,
                            margin: '5 0 0 5',
                            layout: {
                                type: 'hbox',
                                align: 'stretch',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtReceivedAmount',
                                    fieldLabel: 'Received Amount',
                                    labelWidth: 110
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            colspan: 4,
                            layout: {
                                type: 'table',
                                columns: 4
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtPrincipalReceived',
                                    fieldLabel: 'Principal Received',
                                    labelWidth: 145,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtInterestReceived',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Interest Received',
                                    labelWidth: 110,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    itemId: 'chkTransferFromSaving',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Transfer From Saving ',
                                    labelWidth: 125
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtSavingAccount',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Saving Account',
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtPenaltyReceived',
                                    fieldLabel: 'Penalty Received',
                                    labelWidth: 145,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtTotalReceived',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Total Received',
                                    labelWidth: 110,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtCurrentBalance',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Current Saving Balance',
                                    labelWidth: 120,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtChequeNo',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Cheque No.'
                                },
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlContraAccount',
                                    fieldLabel: 'Contra Account',
                                    labelWidth: 145,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    size: 40,
                                    displayField: 'AccountDesc',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'ContraAccountSearchShortStore',
                                    valueField: 'AccountCode'
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            colspan: 4,
                            height: 28,
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'btnRepaymentSlip',
                                    text: 'Repayment Slip'
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            colspan: 4,
                            height: 28,
                            layout: {
                                type: 'hbox',
                                align: 'stretch',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'btnLoanRepayment',
                                    text: 'Loan Repayment',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnLoanRepaymentClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'btnDeleteRepayment',
                                    text: 'Delete',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnDeleteRepaymentClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            colspan: 4,
                            title: 'Search',
                            layout: {
                                type: 'table',
                                columns: 2
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtPaymentDateFromBS',
                                    fieldLabel: 'Payment Date From (B.S)',
                                    labelWidth: 145
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtPayementDateToBS',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Payment Date To (A.D)',
                                    labelWidth: 150
                                },
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlSearchLoanNo',
                                    fieldLabel: 'Loan No.',
                                    labelWidth: 145,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    size: 40,
                                    displayField: 'LoanNo',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'LoanNoShortStore',
                                    valueField: 'LoanDno',
                                    listeners: {
                                        select: {
                                            fn: me.onDdlSearchLoanNoSelect,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtSearchMemberName',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Member Name',
                                    labelWidth: 150,
                                    size: 40
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'btnSearch',
                                    text: 'Search',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnSearchClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            colspan: 4,
                            itemId: 'grdStaffLoanRepaymentDetail',
                            store: 'StaffLoanRepaymentDetailStore',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'PaymentBs',
                                    text: 'Payment Date'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 121,
                                    dataIndex: 'LoanDno',
                                    text: 'Loan No'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 186,
                                    dataIndex: 'ClientName',
                                    text: 'Member Name'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 142,
                                    dataIndex: 'TotalPrincipalOutstanding',
                                    text: 'Total Principal Outstanding'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'InstallmentAmount',
                                    text: 'Installment Amount'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'PaidAmount',
                                    text: 'Paid Amount'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 119,
                                    dataIndex: 'PrincipalPaidAmount',
                                    text: 'Principal Paid Amount'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'InterestPaidAmount',
                                    text: 'Interest Paid Amount'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'PenaltyPaidAmount',
                                    text: 'Penalty Paid Amount'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'VoucherNo',
                                    text: 'Voucher No'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                Ext.ComponentQuery.query('#grdStaffLoanRepaymentDetail')[0].getSelectionModel().select(rowIndex);
                                                //get reference of store
                                                var store = Ext.getStore('StaffLoanRepaymentDetailStore');

                                                //get selected row using rowindex
                                                var row = store.getAt(rowIndex).data;


                                                // set values
                                                console.log('row',row);

                                                Ext.ComponentQuery.query('#txtCurrentInterest')[0].setValue(row.InterestAmount);
                                                Ext.ComponentQuery.query('#txtPenaltyOnInterest')[0].setValue(row.PenaltyAmount);
                                                Ext.ComponentQuery.query('#txtCurrentPrincipal')[0].setValue(row.CurrentPrincipalSchedule);
                                                Ext.ComponentQuery.query('#txtPrincipalBalance')[0].setValue(row.TotalPrincipalOutstanding);
                                                Ext.ComponentQuery.query('#txtInterestBalance')[0].setValue(row.InterestAmount);
                                                Ext.ComponentQuery.query('#txtPenaltyBalance')[0].setValue(row.PenaltyAmount);
                                                Ext.ComponentQuery.query('#txtTotalBalance')[0].setValue(row.CurrentPrincipalSchedule);
                                                Ext.ComponentQuery.query('#txtReceivedAmount')[0].setValue(row.PaidAmount);
                                                Ext.ComponentQuery.query('#txtCurrentBalance')[0].setValue(row.CurrentPrincipalSchedule);
                                                Ext.ComponentQuery.query('#txtPrincipalReceived')[0].setValue(row.PrincipalPaidAmount);
                                                Ext.ComponentQuery.query('#txtInterestReceived')[0].setValue(row.InterestPaidAmount);
                                                Ext.ComponentQuery.query('#txtPenaltyReceived')[0].setValue(row.PenaltyPaidAmount);
                                                Ext.ComponentQuery.query('#txtTotalReceived')[0].setValue(row.PaidAmount);
                                                //Ext.ComponentQuery.query('#txtStaffName')[0].setValue(row.LoanDate);
                                                Ext.ComponentQuery.query('#txtPaymentDateBS')[0].setValue(row.PaymentBs);
                                                Ext.ComponentQuery.query('#txtPaymentDateAD')[0].setValue(row.PaymentDate);
                                                Ext.ComponentQuery.query('#ddlLoanProduct')[0].setValue(row.LoanProductCode);
                                                Ext.ComponentQuery.query('#txtManagerCode')[0].setValue(row.EmployeeId);
                                                Ext.ComponentQuery.query('#txtManagerName')[0].setValue(row.EmpName);
                                                Ext.ComponentQuery.query('#txtPastPrincipal')[0].setValue(row.PastPrincipalDue);
                                                Ext.ComponentQuery.query('#txtPastInterest')[0].setValue(row.PastInterestDue);
                                                Ext.ComponentQuery.query('#txtInstallmentAmount')[0].setValue(row.InstallmentAmount);
                                                Ext.ComponentQuery.query('#chkTransferFromSaving')[0].setValue(row.AdjustFromSaving=='Y'?true:false);
                                                Ext.ComponentQuery.query('#txtSavingAccount')[0].setValue(row.SavingAccountNo);
                                                Ext.ComponentQuery.query('#txtChequeNo')[0].setValue(row.ChequeNo);
                                                Ext.ComponentQuery.query('#ddlContraAccount')[0].setValue(row.ContraAccount);
                                                Ext.ComponentQuery.query('#txtLoanNo')[0].setValue(row.LoanDno);




                                                //set buttons visible

                                                //Ext.ComponentQuery.query('#btnDeleteRepayment')[0].setVisible(true);
                                                //Ext.ComponentQuery.query('#btnLoanRepayment')[0].setVisible(false);
                                            },
                                            icon: '../ITS/resources/images/icons/Modify.png'
                                        }
                                    ]
                                }
                            ],
                            selModel: Ext.create('Ext.selection.RowModel', {

                            })
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            itemId: 'hdnLoanNo',
                            fieldLabel: 'Label'
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFrmStaffLoanRepaymentAfterRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onTxtLoanNoAfterRender: function(component, eOpts) {
        component.getEl().on('dblclick', function(){
            var winPopup = Ext.create('MyApp.view.SelectStaffLoanRepaymentLoanNumberPopup',{

            });
            winPopup.extraParam={param:null};
            winPopup.show();
        });
    },

    onTxtLoanNoChange: function(field, newValue, oldValue, eOpts) {
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/EditTransaction/CalLoanBalanceStatusHandler.ashx',
            params: {
                method:'GetCalLoanBalanceStatus',
                OfficeCode:getOfficeCode(),
                LoanNo:Ext.ComponentQuery.query('#txtLoanNo')[0].getValue(),
                RepayDate:Ext.ComponentQuery.query('#txtPaymentDateAD')[0].getValue()
            },
            success: function ( response, request ) {

                var out=Ext.decode(response.responseText);

                var rec=out.root[0];
                if(out.success==="true")
                {
                    Ext.ComponentQuery.query('#txtCurrentPrincipal')[0].setValue(rec.CurrPr_Amount);
                    Ext.ComponentQuery.query('#txtPastPrincipal')[0].setValue(rec.PastPr_Amount);
                    Ext.ComponentQuery.query('#txtPenaltyBalance')[0].setValue(rec.PenaltyBalance);
                    Ext.ComponentQuery.query('#txtPrincipalBalance')[0].setValue(rec.PrcipalBalance);
                    Ext.ComponentQuery.query('#txtInterestBalance')[0].setValue(rec.TerestBalance);
                    Ext.ComponentQuery.query('#txtTotalBalance')[0].setValue(rec.TotalBalance);
                    Ext.ComponentQuery.query('#txtInstallmentAmount')[0].setValue(rec.TotalStallment_Amount);
                    Ext.ComponentQuery.query('#txtCurrentInterest')[0].setValue(rec.CurrT_Amount);
                    Ext.ComponentQuery.query('#txtPastInterest')[0].setValue(rec.PastT_Amount);
                    Ext.ComponentQuery.query('#txtPenaltyOnInterest')[0].setValue(rec.PenaltyAmount);

                }
                else
                {
                    msg("FAILURE",out.message);
                }

            },
            failure: function ( response, request )
            {

                var out=Ext.decode(response.responseText);
                msg("FAILURE",out.message);
            }

        });
    },

    onBtnLoanRepaymentClick: function(button, e, eOpts) {
        var p_LoanNo = Ext.ComponentQuery.query('#hdnLoanNo')[0];
        var p_PaymentDate = Ext.ComponentQuery.query('#txtPaymentDateAD')[0];
        var p_PaidAmount = Ext.ComponentQuery.query('#txtReceivedAmount')[0];
        var p_TotalBalance = Ext.ComponentQuery.query('#txtTotalBalance')[0];
        var p_TotalPrincipalOutstanding = Ext.ComponentQuery.query('#txtPrincipalBalance')[0];
        var p_PastPrincipalDue = Ext.ComponentQuery.query('#txtPastPrincipal')[0];
        var p_CurrentPrincipalSchedule = Ext.ComponentQuery.query('#txtCurrentPrincipal')[0];
        var p_PastInterestDue = Ext.ComponentQuery.query('#txtPastInterest')[0];
        var p_InterestAmount = Ext.ComponentQuery.query('#txtCurrentInterest')[0];
        var p_PenaltyAmount = Ext.ComponentQuery.query('#txtPenaltyBalance')[0];
        var p_PrincipalPaidAmount = Ext.ComponentQuery.query('#txtPrincipalReceived')[0];
        var p_InterestPaidAmount = Ext.ComponentQuery.query('#txtInterestReceived')[0];
        var p_PenaltyPaidAmount = Ext.ComponentQuery.query('#txtPenaltyReceived')[0];
        var p_AdjustFromSaving = Ext.ComponentQuery.query('#chkTransferFromSaving')[0];
        var p_SavingAccountNo = Ext.ComponentQuery.query('#txtSavingAccount')[0];
        var p_ContraAccount = Ext.ComponentQuery.query('#ddlContraAccount')[0];
        var p_EmployeeId = Ext.ComponentQuery.query('#txtManagerCode')[0];
        var p_TranOfficeCode = getOfficeCode();
        var p_User1 = getCurrentUser();
        var p_InsertUpdate ='I';


        var objStaffLoanRepayment ={
                        LoanNo : p_LoanNo.getValue(),
                        PaymentDate : p_PaymentDate.getValue(),
                        PaidAmount : p_PaidAmount.getValue(),
                        TotalBalance : p_TotalBalance.getValue(),
                        TotalPrincipalOutstanding : p_TotalPrincipalOutstanding.getValue(),
                        PastPrincipalDue : p_PastPrincipalDue.getValue(),
                        CurrentPrincipalSchedule : p_CurrentPrincipalSchedule.getValue(),
                        PastInterestDue : p_PastInterestDue.getValue(),
                        InterestAmount : p_InterestAmount.getValue(),
                        PenaltyAmount : p_PenaltyAmount.getValue(),
                        PrincipalPaidAmount : p_PrincipalPaidAmount.getValue(),
                        InterestPaidAmount : p_InterestPaidAmount.getValue(),
                        PenaltyPaidAmount : p_PenaltyPaidAmount.getValue(),
                        AdjustFromSaving : p_AdjustFromSaving.getValue(),
                        SavingAccountNo : p_SavingAccountNo.getValue(),
                        ContraAccount : p_ContraAccount.getValue(),
                        VoucherNo : null,
                        EmployeeId : p_EmployeeId.getValue(),
                        TotalPrincipalPaid_Amount : '0',
                        TotalInterestPaid_Amount : '0',
                        TotalPenaltyPaid_Amount : '0',
                        Remarks : null,
                        TranOfficeCode : p_TranOfficeCode,
                        User1 : p_User1,
                        InsertUpdate : p_InsertUpdate,

        };


        //start Code for Save
        var waitSave = watiMsg('Please wait ...');
        Ext.Ajax.request({
            url:'../Handlers/Finance/Transaction/StaffLoanTransaction/StaffLoanRepaymentHandler.ashx',
            params:{
                method:'SaveStaffLoanRepayment',
                staffLoanRepayment:JSON.stringify(objStaffLoanRepayment)
            },
            success: function ( result, request ) {
                waitSave.hide();
                var obj = Ext.decode(result.responseText);
                if(obj.success === 'true'){
                    msg('SUCCESS',out.message);
                }
                else{
                    msg('FAILURE',out.message);


                }
            },
            failure: function(form, action) {
                waitSave.hide();
                var out=Ext.decode(response.responseText);
                msg('FAILURE',out.message);     }
        });
        //end Code for Save
    },

    onBtnDeleteRepaymentClick: function(button, e, eOpts) {
        var p_LoanNo = Ext.ComponentQuery.query('#hdnLoanNo')[0];
        var p_PaymentDate = Ext.ComponentQuery.query('#txtPaymentDateAD')[0];
        var p_PaidAmount = Ext.ComponentQuery.query('#txtReceivedAmount')[0];
        var p_TotalBalance = Ext.ComponentQuery.query('#txtTotalBalance')[0];
        var p_TotalPrincipalOutstanding = Ext.ComponentQuery.query('#txtPrincipalBalance')[0];
        var p_PastPrincipalDue = Ext.ComponentQuery.query('#txtPastPrincipal')[0];
        var p_CurrentPrincipalSchedule = Ext.ComponentQuery.query('#txtCurrentPrincipal')[0];
        var p_PastInterestDue = Ext.ComponentQuery.query('#txtPastInterest')[0];
        var p_InterestAmount = Ext.ComponentQuery.query('#txtCurrentInterest')[0];
        var p_PenaltyAmount = Ext.ComponentQuery.query('#txtPenaltyBalance')[0];
        var p_PrincipalPaidAmount = Ext.ComponentQuery.query('#txtPrincipalReceived')[0];
        var p_InterestPaidAmount = Ext.ComponentQuery.query('#txtInterestReceived')[0];
        var p_PenaltyPaidAmount = Ext.ComponentQuery.query('#txtPenaltyReceived')[0];
        var p_AdjustFromSaving = Ext.ComponentQuery.query('#chkTransferFromSaving')[0];
        var p_SavingAccountNo = Ext.ComponentQuery.query('#txtSavingAccount')[0];
        var p_ContraAccount = Ext.ComponentQuery.query('#ddlContraAccount')[0];
        var p_EmployeeId = Ext.ComponentQuery.query('#txtManagerCode')[0];
        var p_TranOfficeCode = getOfficeCode();
        var p_User1 = getCurrentUser();
        var p_InsertUpdate ='D';


        var objStaffLoanRepayment ={
                        LoanNo : p_LoanNo.getValue(),
                        PaymentDate : p_PaymentDate.getValue(),
                        PaidAmount : p_PaidAmount.getValue(),
                        TotalBalance : p_TotalBalance.getValue(),
                        TotalPrincipalOutstanding : p_TotalPrincipalOutstanding.getValue(),
                        PastPrincipalDue : p_PastPrincipalDue.getValue(),
                        CurrentPrincipalSchedule : p_CurrentPrincipalSchedule.getValue(),
                        PastInterestDue : p_PastInterestDue.getValue(),
                        InterestAmount : p_InterestAmount.getValue(),
                        PenaltyAmount : p_PenaltyAmount.getValue(),
                        PrincipalPaidAmount : p_PrincipalPaidAmount.getValue(),
                        InterestPaidAmount : p_InterestPaidAmount.getValue(),
                        PenaltyPaidAmount : p_PenaltyPaidAmount.getValue(),
                        AdjustFromSaving : p_AdjustFromSaving.getValue(),
                        SavingAccountNo : p_SavingAccountNo.getValue(),
                        ContraAccount : p_ContraAccount.getValue(),
                        VoucherNo : null,
                        EmployeeId : p_EmployeeId.getValue(),
                        TotalPrincipalPaid_Amount : '0',
                        TotalInterestPaid_Amount : '0',
                        TotalPenaltyPaid_Amount : '0',
                        Remarks : null,
                        TranOfficeCode : p_TranOfficeCode,
                        User1 : p_User1,
                        InsertUpdate : p_InsertUpdate,

        };


        //start Code for Save
        var waitSave = watiMsg('Please wait ...');
        Ext.Ajax.request({
            url:'../Handlers/Finance/Transaction/StaffLoanTransaction/StaffLoanRepaymentHandler.ashx',
            params:{
                method:'SaveStaffLoanRepayment',
                staffLoanRepayment:JSON.stringify(objStaffLoanRepayment)
            },
            success: function ( result, request ) {
                waitSave.hide();
                var obj = Ext.decode(result.responseText);
                if(obj.success === 'true'){
                    msg('SUCCESS',out.message);
                }
                else{
                    msg('FAILURE',out.message);


                }
            },
            failure: function(form, action) {
                waitSave.hide();
                var out=Ext.decode(response.responseText);
                msg('FAILURE',out.message);     }
        });
        //end Code for Save
    },

    onDdlSearchLoanNoSelect: function(combo, records, eOpts) {
        Ext.ComponentQuery.query('#txtSearchMemberName')[0].setValue(records[0].data.ClientName);
    },

    onBtnSearchClick: function(button, e, eOpts) {
        var waitSave = watiMsg('Please wait ...');
                Ext.Ajax.request({
                    url: '../Handlers/Finance/Transaction/StaffLoanTransaction/StaffLoanRepayDetailHandler.ashx',
                    params:{
                        method:'GetStaffLoanRepayDetail',
                        OfficeCode:getOfficeCode(),
                        RepaymentNo:null,
                        LoanDno:Ext.ComponentQuery.query('#ddlSearchLoanNo')[0].getValue(),
                        ClientName:Ext.ComponentQuery.query('#txtSearchMemberName')[0].getValue(),
                        FromDate:null,
                        ToDate:null
                    },
                    success: function ( result, request ) {
                        waitSave.hide();
                        var obj = Ext.decode(result.responseText);
                        if(obj.success === 'true'){
                            var store =Ext.getStore('StaffLoanRepaymentDetailStore');
                            store.removeAll();
                            store.add(obj.root);


                        }
                        else{
                            msg("FAILURE","Could Not Load Data");
                        }

                    },
                    failure: function(form, action) {
                        msg("FAILURE","Could Not Load Data");
                    }
                });
    },

    onFrmStaffLoanRepaymentAfterRender: function(component, eOpts) {
        Ext.ComponentQuery.query('#txtPaymentDateBS')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtPaymentDateFromBS')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtPayementDateToBS')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtPaymentDateAD')[0].setValue(getMisDateAD());

        var staffLoanRepaymentDetailStore=Ext.getStore('StaffLoanRepaymentDetailStore');
        staffLoanRepaymentDetailStore.removeAll();



        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/StaffLoanTransaction/StaffLoanDisbursementProductHandler.ashx',
            params: {
                method:'GetStaffLoanDisProd',
                ProductName:null
            },
            success: function(response){


                var obj = Ext.decode(response.responseText);

                if(obj.success === "true")
                {

                    var store=Ext.getStore('LoanProductForStaffLoanDisbursementStore');
                    store.removeAll();
                    store.add(obj.root);

                }
                else
                {

                    msg("FAILURE",obj.message);
                }

            }
        });


        var contraStore=Ext.getStore('ContraAccountSearchShortStore');
        getContraAccount(getOfficeCode(),null,function(data){
            contraStore.removeAll();
            contraStore.add(data.root);
        });


        /*Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/StaffLoanTransaction/StaffLoanRepayAdjustmentSavingHandler.ashx',
            params: {
                method:'GetStaffLoanRepayAdjSav',
                OfficeCode:getofficeCode(),
                ClientNo:null
            },
            success: function(response){


                var obj = Ext.decode(response.responseText);

                if(obj.success === "true")
                {

                    var store=Ext.getStore('LoanNoShortStore');
                    store.removeAll();
                    store.add(obj.root);

                }
                else
                {

                    msg("FAILURE",obj.message);
                }

            }
        });*/
    }

});