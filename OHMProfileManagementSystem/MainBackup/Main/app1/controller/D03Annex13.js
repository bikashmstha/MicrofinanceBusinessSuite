/*
 * File: app/controller/D03Annex13.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.D03Annex13', {
    extend: 'Ext.app.Controller',

    stores: [
        'Annex13',
        'TradeTypeAnx13',
        'TaxpayerTranDetailAnx13'
    ],

    onPnlD03Annex13AfterRender: function(component, eOpts) {
        var me = this;
        var view = Ext.ComponentQuery.query('#pnlD03Annex13')[0];
        var user = me.getController('MyApp.controller.LoginSecurity'); 
        var hdnTranAction = Ext.ComponentQuery.query("#hdnTranActionAnx13")[0];
        var pan = "";
        var fiscalYear = "";
        var assessmentNo = "";

        var grd = Ext.ComponentQuery.query("#grdFinanDescD03Anx13")[0];
        var txtAssessmentNo = Ext.ComponentQuery.query("#txtAssessmentNoAnx13")[0];
        var txtFiscalYr = Ext.ComponentQuery.query("#txtFiscalYearAnx13")[0];
        var txtPan = Ext.ComponentQuery.query("#txtPanAnx13")[0];
        var strAnnex = Ext.getStore("Annex13"); 

        var param = me.validateParam();

        pan = param.pan;
        fiscalYear =param.fiscalYear;
        assessmentNo = param.submissionNo;

        strAnnex.load();
        strAnnex.sort('DispSeq','ASC');

        //console.log("strAnnex>>",strAnnex.data.items);


        grd.bindStore(strAnnex);

        txtAssessmentNo.setValue(assessmentNo);
        txtFiscalYr.setValue(fiscalYear);
        txtPan.setValue(pan);
        hdnTranAction.setValue("");


        if(param.action === "E")
        {
            //var wait  = waitMsg('Saving ...');
            //-----------------------------------------------------------------------------------------------
            // NB: Posting Data to Server
            //-----------------------------------------------------------------------------------------------

            var url = "../Handlers/IncomeTax/D03/DCTBTaxpayerTranHandler.ashx?method=GetDCTBTaxpayerTran" ;
            var args = {offCode:param.offCode,assessmentNo:param.submissionNo};

            if(param.from === "AU")
            {  
                url = "../Handlers/IncomeTax/D03/DCTBTaxpayerTranHandler.ashx?method=GetDCTBTaxpayerTranAU";
                args = {offCodeAU:param.offCodeAU,requestNo:param.requestNo,offCode:param.offCode,assessmentNo:param.submissionNo};
            }

            Ext.Ajax.request({
                url:url,
                params:args,
                success: function ( result, request ) {

                    var store = Ext.getStore("TaxpayerTranDetailAnx13");            
                    var obj = Ext.decode(result.responseText);   

                    var taxPayerTranDetails = obj.root.TaxPayerTranDetails;
                    var tranExists = obj.root.TranExist;

                    store.loadData([],false);
                    store.add(taxPayerTranDetails);            

                    var txtTotTranDetail = Ext.ComponentQuery.query("#txtTotTranDetailAnx13")[0];
                    var chkTranExists = Ext.ComponentQuery.query("#chkTranExistsAnx13")[0];

                    var sum = 0; 

                    if(tranExists === "Y")
                    {         
                        if(store.getCount() > 0)
                        {
                            hdnTranAction.setValue("E");

                            var btnSubmit = Ext.ComponentQuery.query('#btnSubmitTaxpyrTranAnx13')[0];            
                            btnSubmit.setText("Update Taxpayer");
                        }

                        store.each(function (rec) {     

                            if(rec.get('Amount') !=="")
                            {
                                sum = parseFloat(sum) + parseFloat(rec.get('Amount')); 
                            }
                        });


                        txtTotTranDetail.setValue(sum);
                    }
                    else
                    {
                        chkTranExists.setValue(true);
                    }

                },
                failure: function ( result, request ) {

                    //wait.hide();

                    msg("FAILURE",result.statusText);
                    return;
                }

            });

        }


        //----------------------------------------------------------------
        // NB: Return to SetAnnex	
        //----------------------------------------------------------------
        if(param.from === "MV")
        {
            var annexD03 = me.getController('MyApp.controller.SetAnnexD03');

            var el = Ext.get('lnkRedirectTopAnx13');

            el.on('click', function(e,t,eOpts){

                Ext.Msg.confirm('Confirm Action', 'के तपाई पछाडि गएर अनुसुची तय गर्न चाहनुहुन्छ?', function(btn) {
                    if(btn == 'yes'){        

                        param.action ="";
                        annexD03.redirectToAnnexD03(param);
                    }
                }, this);
            });

        }

    },

    onBtnAddNewAnx13Click: function(button, e, eOpts) {
        var grd = Ext.ComponentQuery.query('#grdTaxpayerTranDetailAnx13')[0];

        var rec={    
            OffCode :"",
            BatchNo :"",
            BatchType :"",
            AssessmentNo :"",
            AssessmentDate:"", 
            Pan:"",
            FiscalYear:"",
            RepPan:"",
            Amount :null,
            Sorp :"",
            SNo :null,
            TradeNameNep :"",
            TradeNameEng  :"",
            RecordStatus :"",
            Terminal :"",
            TranDate :"",
            UserName :"",
            Action  :"A"

        };

        grd.store.add(rec);

        var col = grd.headerCt.getHeaderAtIndex(0);
        var rows = grd.store.data.items;
        var record = rows[rows.length-1];
        grd.getPlugin('pluginFinancialAnx13').startEdit(record, col);








    },

    onGrdTaxpayerTranDetailAnx13BeforeRender: function(component, eOpts) {
        var grd = Ext.ComponentQuery.query('#grdTaxpayerTranDetailAnx13')[0];

        grd.columns[3].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";    

            var items = Ext.getStore("TradeTypeAnx13").data.items;

            for(var i=0;i<items.length;i++)
            {        

                if(items[i].data.TradeID === value)
                {           
                    temp = items[i].data.TradeName;
                    break;
                }        
            }

            return temp;

        };

    },

    onGrdFinanDescD03Anx13AfterRender: function(component, eOpts) {
        var me = this;
        var grid = Ext.ComponentQuery.query("#grdFinanDescD03Anx13")[0];

        var param = me.validateParam();
        var strAnx13 = "";

        if( param.action === "E")
        {        
            strAnx13 = me.loadDataForUpdate(param); 

            strAnx13.sort('ItemID','ASC'); 

        }

        grid.columns[2].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var id = Ext.id();
            var anxValue = null;  


            anxValue = me.getAnnexValue(param,strAnx13,rowIndex,1);

            Ext.Function.defer(function(){
                var txtBox = "";      

                txtBox = new Ext.form.TextField({
                    id:"txtFinDesc"+rowIndex+"Anx13",
                    itemId:"txtFinDesc"+rowIndex+"Anx13",
                    value: anxValue,
                    renderTo: id,
                    height: 22,
                    width:150,
                    fieldCls: 'TxtRight',
                    // maskRe: /[0-9]/,
                    maskRe: /[0-9.-]/,
                    maxLength: 10,
                    enableKeyEvents: true,
                    validator: function(value) {
                        return /^\-{0,1}[0-9]{0,254}\.{0,1}[0-9]{0,2}$/.test(value)? true : msg("WARNING","Enter the valid value upto 2 decimals point");
                    }
                });



                txtBox.on('keyup', function(e){
                    me.calAnnex13Value(rowIndex);

                }, this);

            },25);

            return '<div id="' + id +'"></div>';

        };

    },

    onBtnSubmitAnx13Click: function(button, e, eOpts) {
        var me = this;
        var view = Ext.ComponentQuery.query('#pnlD03Annex13')[0];
        var user = me.getController('MyApp.controller.LoginSecurity');

        var pan = "";
        var fiscalYear = "";
        var assessmentNo = "";
        var offCode = "";
        var action = "A";

        var param = me.validateParam();

        pan = param.pan;
        fiscalYear =param.fiscalYear;
        assessmentNo = param.submissionNo;
        offCode = param.offCode;

        if(param.action === "E")
        {
            action = param.action;
        }


        var DCTBAnnex13Tran = "";
        var store = Ext.getStore("Annex13");

        var strDCTBAnnex13Tran = new Ext.data.Store({
            fields:['OffCode',
            'BatchNo',
            'BatchType',
            'AssessmentNo',
            'AssessmentDate',
            'Pan',
            'FiscalYear',
            'ItemID',
            'Value',
            'RecordStatus',
            'Terminal',
            'TranDate',
            'UserName',
            'Action']
        });


        //-----------------------------------------------------------------------------------------------
        // NB: Manage Annex13Tran data for post
        //-----------------------------------------------------------------------------------------------
        me.calAnnex13Value();

        store.each(function(rec,idx){

            var  record = { OffCode :offCode,
                    BatchNo :"SA",
                    BatchType :"",
                    AssessmentNo :assessmentNo,
                    AssessmentDate :"",
                    Pan :pan,
                    FiscalYear :fiscalYear,
                    ItemID :rec.data.ItemID.toString(),
                    Value :(rec.data.ItemValue === "" || rec.data.ItemValue === undefined)?null:rec.data.ItemValue,
                    RecordStatus :"",
                    Terminal :"",
                    TranDate :"",
                    UserName :"",
                    Action  :action
                };


            strDCTBAnnex13Tran.add(record);    
        });


        if(strDCTBAnnex13Tran.getCount() > 0)
        {
            DCTBAnnex13Tran = getJson(strDCTBAnnex13Tran);
        }


        var wait  = waitMsg('Saving ...');
        //-----------------------------------------------------------------------------------------------
        // NB: Posting Data to Server
        //-----------------------------------------------------------------------------------------------

        var url = "../Handlers/IncomeTax/D03/DCTBAnnex13TranHandler.ashx?method=Save" ;
        var args = {DCTBAnnex13Tran:JSON.stringify(DCTBAnnex13Tran)};

        if(param.from === "AU")
        {  
            url = "../Handlers/IncomeTax/D03/DCTBAnnex13TranHandler.ashx?method=SaveAU";
            args = {offCodeAU:param.offCodeAU,requestNo:param.requestNo,DCTBAnnex13Tran:JSON.stringify(DCTBAnnex13Tran)}
        }

        Ext.Ajax.request({
            url:url,
            params:args,
            success: function ( result, request ) {

                wait.hide();

                var obj = Ext.decode(result.responseText);

                if(action == "A")
                {        
                    var annexD03 = me.getController('MyApp.controller.SetAnnexD03');
                    annexD03.loadAnxSummary(assessmentNo);
                }

                msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);


            },
            failure: function ( result, request ) {

                waitSave.hide();

                msg("FAILURE","Error in Saving !!!");
                return;
            }

        });
    },

    onBtnSubmitTaxpyrTranAnx13Click: function(button, e, eOpts) {
        var me = this;
        var view = Ext.ComponentQuery.query('#pnlD03Annex13')[0];
        var user = me.getController('MyApp.controller.LoginSecurity');
        var hdnTranAction = Ext.ComponentQuery.query("#hdnTranActionAnx13")[0];

        var pan = "";
        var fiscalYear = "";
        var assessmentNo = "";
        var offCode = "";
        var action = "A";

        var param = me.validateParam();

        pan = param.pan;
        fiscalYear =param.fiscalYear;
        assessmentNo = param.submissionNo;
        offCode = param.offCode;

        /*
        if(param.action === "E")
        {
        action = param.action;
        }

        */

        if(hdnTranAction.getValue() === "E")
        {
            action = "E";
        }



        var isTranExists = Ext.ComponentQuery.query("#chkTranExistsAnx13")[0].getValue();
        var DCTBTaxpayerTran = null;
        var DCTBTaxpayerTranDetail = null;
        var tranExists = "Y";

        var store = Ext.getStore("TaxpayerTranDetailAnx13");

        if(isTranExists)
        {
            tranExists = "N";
        }


        store.clearFilter();

        if(store.getCount() > 0 && tranExists === "Y")
        {
            DCTBTaxpayerTranDetail = getJson(store); 

            store.filter(function(item){
                return item.get("Action")!= 'D';
            });
        }



        DCTBTaxpayerTran = {
            OffCode :offCode,
            BatchNo :"SA",
            BatchType :"",
            AssessmentNo :assessmentNo,
            AssessmentDate :"",
            Pan :pan,
            FiscalYear :fiscalYear,
            RecordStatus :"",
            Terminal :"",
            TranDate:"", 
            UserName :"",
            TranExist :tranExists,
            Action :action,
            TaxPayerTranDetails :DCTBTaxpayerTranDetail                
        };


        var wait  = waitMsg('Saving ...');
        //-----------------------------------------------------------------------------------------------
        // NB: Posting Data to Server
        //-----------------------------------------------------------------------------------------------
        var url = "../Handlers/IncomeTax/D03/DCTBTaxpayerTranHandler.ashx?method=Save";
        var args = {DCTBTaxpayerTran:JSON.stringify(DCTBTaxpayerTran)};

        if(param.from === "AU")
        {  
            url = "../Handlers/IncomeTax/D03/DCTBTaxpayerTranHandler.ashx?method=SaveAU";
            args = {offCodeAU:param.offCodeAU,requestNo:param.requestNo,DCTBTaxpayerTran:JSON.stringify(DCTBTaxpayerTran)}
        }


        Ext.Ajax.request({
            url:url,
            params:args,
            success: function ( result, request ) {

                wait.hide();        

                var obj = Ext.decode(result.responseText);

                if(obj.success === "true")
                {
                    if(obj.root !== null && obj.root.TaxPayerTranDetails !== null)
                    {               
                        store.loadData([],false);
                        store.add(obj.root.TaxPayerTranDetails);
                    }

                    if(action == "A")
                    {
                        hdnTranAction.setValue("E");


                        var btnSubmit = Ext.ComponentQuery.query('#btnSubmitTaxpyrTranAnx13')[0];            
                        btnSubmit.setText("Update Taxpayer");
                        /*
                        store.each(function (rec) {
                        rec.data.Action = "E";

                        });
                        */
                    }
                }

                msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);

            },
            failure: function ( result, request ) {

                wait.hide();

                msg("FAILURE",result.statusText);
                return;
            }

        });
    },

    onChkTranExistsAnx13Change: function(field, newValue, oldValue, eOpts) {
        var store = Ext.getStore("TaxpayerTranDetailAnx13");
        var btnAdd = Ext.ComponentQuery.query("#btnAddNewAnx13")[0];



        if(newValue === true)
        {
            store.loadData([],false);
            btnAdd.setDisabled(true);
        }
        else
        {
            btnAdd.setDisabled(false);
        }
    },

    onTxtAmountAnx13Keypress: function(textfield, e, eOpts) {

    },

    onTxtAmountAnx13Change: function(field, newValue, oldValue, eOpts) {
        var me = this;

        me.calTotTranDetail();
    },

    onLblRedirectAnx13Click: function(label) {
        var me = this;

        Ext.Msg.confirm('Confirm Action', 'के तपाई पछाडि गएर अनुसुची तय गर्न चाहनुहुन्छ?', function(btn) {
            if(btn == 'yes'){        

                var annexD03 = me.getController('MyApp.controller.SetAnnexD03');

                var param = me.validateParam();
                param.action ="";

                annexD03.redirectToAnnexD03(param);
            }
        }, this);

    },

    calAnnex13Value: function(idx) {
        /*
        var anxValue = Ext.ComponentQuery.query("#txtFinDesc"+idx+"Anx13")[0].getValue();
        var store = Ext.getStore("Annex13");
        var row = store.getAt(idx).data;

        row.ItemValue = anxValue === ""?null:anxValue;

        */
        var store = Ext.getStore("Annex13");

        for(var i=0;i<store.getCount()-1;i++){

            var id = "#txtFinDesc" + i + "Anx13";
            var val = Ext.ComponentQuery.query(id)[0].getValue();
            var row = store.getAt(i).data;

            val = (val === "")?0:val;
            row.ItemValue = val === 0?null:val;

        }
    },

    calTotTranDetail: function() {
        var grd = Ext.ComponentQuery.query('#grdTaxpayerTranDetailAnx13')[0];
        var store = grd.getStore();
        var selectedRow = grd.getSelectionModel();

        var record = grd.getSelectionModel().getSelection()[0];
        var txtTotTranDetail = Ext.ComponentQuery.query("#txtTotTranDetailAnx13")[0];
        var amount = Ext.ComponentQuery.query("#txtAmountAnx13")[0].getValue();
        var grandTotal = 0;

        var rowIdx = store.indexOf(record);
        var idx = 0;
        var sum = 0; 

        store.each(function (rec) {     


            if(rec.get('Amount') !=="" && rowIdx !== idx)
            {
                sum = parseFloat(sum) + parseFloat(rec.get('Amount')); 
            }

            idx++;


        });

        amount = (amount === "")?0:amount;

        grandTotal = parseFloat(sum)+parseFloat(amount);
        txtTotTranDetail.setValue(grandTotal);
    },

    onLaunch: function() {
        var me = this;
        var param = me.validateParam();
        var annexD03 = me.getController('MyApp.controller.SetAnnexD03');

        var el = Ext.get('lnkRedirectTopAnx13');

        el.on('click', function(e,t,eOpts){

            Ext.Msg.confirm('Confirm Action', 'के तपाई पछाडि गएर अनुसुची तय गर्न चाहनुहुन्छ?', function(btn) {
                if(btn == 'yes'){        

                    param.action ="";
                    annexD03.redirectToAnnexD03(param);
                }
            }, this);
        });

    },

    loadDataForUpdate: function(param) {
        var me = this;
        //var wait  = waitMsg('Loading ...');
        //var strAnnex = Ext.getStore("Annex13"); 

        var strDCTBAnnex13Tran = new Ext.data.Store({
            fields: ['OffCode',
            'BatchNo',
            'BatchType',
            'AssessmentNo',
            'AssessmentDate',
            'Pan',
            'FiscalYear',
            'ItemID',
            'Value',
            'RecordStatus',
            'Terminal',
            'TranDate',
            'UserName',
            'Action'  ]
        });

        var url = "../Handlers/IncomeTax/D03/DCTBAnnex13TranHandler.ashx?method=GetDCTBAnnex13Tran" ;
        var args = {offCode:param.offCode,assessmentNo:param.submissionNo};

        if(param.from === "AU")
        {  
            url = "../Handlers/IncomeTax/D03/DCTBAnnex13TranHandler.ashx?method=GetDCTBAnnex13TranAU" ;
            args = {offCodeAU:param.offCodeAU,requestNo:param.requestNo,offCode:param.offCode,assessmentNo:param.submissionNo};
        }

        Ext.Ajax.request({
            url:url,
            params:args,
            async:false,
            success:function(result, request)
            {      
                //wait.hide();
                var obj = Ext.decode(result.responseText); 

                strDCTBAnnex13Tran.add(obj.root);

            },

            failure:function(result, request){
                msg('ERROR OCURRED !!!', 'Error');                 
            }

        });

        return strDCTBAnnex13Tran;
    },

    validateParam: function() {
        var me = this;
        var view = Ext.ComponentQuery.query('#pnlD03Annex13')[0];
        var user = me.getController('MyApp.controller.LoginSecurity');  
        var param = "";

        if(view.extraParam === null)
        {
            user.clearSession();

            return;

        }
        else
        {
            return view.extraParam;
        }
    },

    getAnnexValue: function(param,store,itemID,startIdx) {
        var annexValue = null;
        var rowIdx;
        if(param.action === "E")
        {
            rowIdx = store.findBy(
            function(record, id){

                if(record.get('ItemID') == (startIdx + itemID))
                {
                    annexValue = record.get('Value');

                    return true ;  // a record with this data exists
                }
                return false;  // there is no record in the store with this data
            });

        }
        return annexValue;

    },

    init: function(application) {
        this.control({
            "#pnlD03Annex13": {
                afterrender: this.onPnlD03Annex13AfterRender
            },
            "#btnAddNewAnx13": {
                click: this.onBtnAddNewAnx13Click
            },
            "#grdTaxpayerTranDetailAnx13": {
                beforerender: this.onGrdTaxpayerTranDetailAnx13BeforeRender
            },
            "#grdFinanDescD03Anx13": {
                afterrender: this.onGrdFinanDescD03Anx13AfterRender
            },
            "#btnSubmitAnx13": {
                click: this.onBtnSubmitAnx13Click
            },
            "#btnSubmitTaxpyrTranAnx13": {
                click: this.onBtnSubmitTaxpyrTranAnx13Click
            },
            "#chkTranExistsAnx13": {
                change: this.onChkTranExistsAnx13Change
            },
            "#txtAmountAnx13": {
                keypress: this.onTxtAmountAnx13Keypress,
                change: this.onTxtAmountAnx13Change
            },
            "#lblRedirectAnx13": {
                click: this.onLblRedirectAnx13Click
            }
        });
    }

});
