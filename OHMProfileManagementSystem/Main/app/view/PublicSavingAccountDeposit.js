/*
 * File: app/view/PublicSavingAccountDeposit.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.PublicSavingAccountDeposit', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.form.Label',
        'Ext.form.field.Checkbox',
        'Ext.button.Button',
        'Ext.form.FieldSet',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Action',
        'Ext.selection.RowModel'
    ],

    title: 'Public Saving Account Deposit',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    itemId: 'frmPublicSavingAccountDeposit',
                    bodyPadding: 10,
                    layout: {
                        type: 'table',
                        columns: 3
                    },
                    items: [
                        {
                            xtype: 'container',
                            colspan: 3,
                            layout: {
                                type: 'table',
                                columns: 3
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtDepositDateBs',
                                    fieldLabel: 'Deposit Date (B.S)',
                                    labelWidth: 140,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtDepositDateAd',
                                    fieldLabel: 'Deposit Date (A.D)',
                                    labelWidth: 130,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtValueDateNepali',
                                    fieldLabel: 'Value Date(B.S)',
                                    labelWidth: 140,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'container',
                                    width: 420
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtValueDateAd',
                                    fieldLabel: 'Value Date(A.D)',
                                    labelWidth: 130,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            colspan: 3,
                            layout: {
                                type: 'table',
                                columns: 2
                            },
                            items: [
                                {
                                    xtype: 'combobox',
                                    colspan: 3,
                                    itemId: 'ddlOffice',
                                    fieldLabel: 'Office',
                                    labelWidth: 140,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    size: 60,
                                    displayField: 'OfficeName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'OfficeShortStore',
                                    valueField: 'OfficeCode'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 3,
                                    itemId: 'ddlSavingProduct',
                                    fieldLabel: ' Saving Product',
                                    labelWidth: 140,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    size: 60,
                                    displayField: 'ProductName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'ProductTypeStore',
                                    valueField: 'ProductCode'
                                }
                            ]
                        },
                        {
                            xtype: 'textfield',
                            colspan: 3,
                            itemId: 'txtSavingAccountNo',
                            fieldLabel: 'Saving Account No.',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            size: 60,
                            listeners: {
                                afterrender: {
                                    fn: me.onTxtSavingAccountNoAfterRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            colspan: 3,
                            itemId: 'txtMemberName',
                            fieldLabel: 'Member Name',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 60
                        },
                        {
                            xtype: 'container',
                            colspan: 3,
                            layout: {
                                type: 'table',
                                columns: 2
                            },
                            items: [
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlContraAccount',
                                    fieldLabel: 'Contra Account',
                                    labelWidth: 140,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    size: 60,
                                    displayField: 'AccountDesc',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'ContraAccountSearchShortStore',
                                    valueField: 'AccountCode'
                                }
                            ]
                        },
                        {
                            xtype: 'textfield',
                            colspan: 3,
                            itemId: 'txtDepositBy',
                            fieldLabel: 'Deposit By',
                            labelWidth: 140,
                            size: 60
                        },
                        {
                            xtype: 'textfield',
                            colspan: 3,
                            itemId: 'txtRemarks',
                            fieldLabel: 'Remarks',
                            labelWidth: 140,
                            size: 60
                        },
                        {
                            xtype: 'container',
                            colspan: 3,
                            layout: {
                                type: 'table',
                                columns: 3
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtPresentBal',
                                    fieldLabel: 'Present Bal',
                                    labelWidth: 140,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'label'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtCurrentAmountDue',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Current Amount Due',
                                    labelWidth: 130,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtChargeVoucherNo',
                                    fieldLabel: 'Charge Voucher No.',
                                    labelWidth: 140,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtChargeVoucherDate',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Charge Voucher Date',
                                    labelWidth: 130,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtChargeAmount',
                                    fieldLabel: 'Charge Amount',
                                    labelWidth: 140,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 2,
                                    itemId: 'ddlChargeType',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Charge Type',
                                    labelWidth: 130,
                                    displayField: 'RefDtlName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'MsReferenceCodeDetailsDestinationFormatStore',
                                    valueField: 'RefDtlCode'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtFixedCollectionAmount',
                                    fieldLabel: 'Fixed Collection Amount',
                                    labelWidth: 140,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlChargeSource',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Charge Source',
                                    labelWidth: 130,
                                    displayField: 'RefDtlName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'MsReferenceCodeDetailsDestinationParameterStore',
                                    valueField: 'RefDtlCode'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtPenaltyAmount',
                                    fieldLabel: 'Penalty Amt',
                                    labelWidth: 140
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtFixedAmountDue',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Fixed Amount Due',
                                    labelWidth: 130,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtDepositAmount',
                                    fieldLabel: 'Deposit Amt',
                                    labelWidth: 140
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtPenaltyCalculation',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Penalty Cal%',
                                    labelWidth: 130,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtTotalAmountReceivedInFigure',
                                    margin: '0 0 0 0 ',
                                    fieldLabel: 'Total Amt Received',
                                    labelWidth: 140,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtTotalAmountReceivedInWords',
                                    margin: '0 0 0 5',
                                    fieldLabel: '',
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                                    size: 60
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            colspan: 3,
                            margin: '5 0 0 0',
                            layout: {
                                type: 'table',
                                columns: 4
                            },
                            items: [
                                {
                                    xtype: 'checkboxfield',
                                    itemId: 'chkTransfer',
                                    fieldLabel: 'Transfer from Saving',
                                    labelWidth: 140
                                },
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlFormSavingAccount',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'From Saving Account',
                                    labelWidth: 120,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    displayField: 'SavingAccountNo',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'FromSavingAccountStore',
                                    valueField: 'SavingAccountNo'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtCurrentSavingBalance',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Current Saving balance',
                                    labelWidth: 130,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlChequeNo',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Cheque No.',
                                    labelWidth: 70,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    emptyText: '- - - Select - - -',
                                    displayField: 'ChequeNo',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'AccountChequeStore',
                                    valueField: 'ChequeNo'
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            colspan: 3,
                            height: 28,
                            layout: {
                                type: 'hbox',
                                align: 'stretch',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    margins: '5 0 0 0',
                                    itemId: 'btnDeposit',
                                    defaultAlign: '',
                                    text: 'Deposit',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnDepositClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    hidden: true,
                                    itemId: 'btnDelete',
                                    text: 'Delete',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnDeleteClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            colspan: 3,
                            height: 37,
                            layout: {
                                type: 'hbox',
                                align: 'stretch',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    height: 28,
                                    itemId: 'btnGoRoSavingWithdraw',
                                    margin: '5 0 0 0',
                                    text: 'Go To Saving Withdraw'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            colspan: 3,
                            margin: '10 0 0 0 ',
                            title: 'Search',
                            items: [
                                {
                                    xtype: 'container',
                                    layout: {
                                        type: 'table',
                                        columns: 3
                                    },
                                    items: [
                                        {
                                            xtype: 'combobox',
                                            colspan: 3,
                                            itemId: 'ddlSearchOffice',
                                            fieldLabel: 'Office Code',
                                            labelWidth: 150,
                                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                            size: 50,
                                            displayField: 'OfficeName',
                                            forceSelection: true,
                                            queryMode: 'local',
                                            store: 'OfficeSearchShortStore',
                                            valueField: 'OfficeCode'
                                        },
                                        {
                                            xtype: 'textfield',
                                            itemId: 'txtDepositDateFromBs',
                                            fieldLabel: 'Deposit Date From (B.S)',
                                            labelWidth: 150
                                        },
                                        {
                                            xtype: 'container',
                                            width: 390
                                        },
                                        {
                                            xtype: 'textfield',
                                            itemId: 'txtDepositDateToBs',
                                            margin: '0 0 0 5',
                                            fieldLabel: 'Deposit Date To (B.S)',
                                            labelWidth: 150
                                        },
                                        {
                                            xtype: 'combobox',
                                            colspan: 2,
                                            itemId: 'ddlSearchSavingAccountNo',
                                            fieldLabel: 'Saving Account Number',
                                            labelWidth: 150,
                                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                            size: 50,
                                            displayField: 'SavingAccountNo',
                                            forceSelection: true,
                                            queryMode: 'local',
                                            store: 'SavingAccountNumberSearchShortStore',
                                            valueField: 'SavingAccountNo',
                                            listeners: {
                                                select: {
                                                    fn: me.onDdlSearchSavingAccountNoSelect,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'textfield',
                                            itemId: 'txtSearchMemberName',
                                            margin: '0 0 0 5',
                                            fieldLabel: 'Member Name',
                                            labelWidth: 150,
                                            size: 50
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    height: 28,
                                    layout: {
                                        type: 'hbox',
                                        align: 'stretch',
                                        pack: 'center'
                                    },
                                    items: [
                                        {
                                            xtype: 'button',
                                            itemId: 'btnSearch',
                                            text: 'Search',
                                            listeners: {
                                                click: {
                                                    fn: me.onBtnSearchClick,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            itemId: 'grdSearchPublicSavingDeposit',
                            store: 'SavingAccountDepositDetailStore',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'DepositNo',
                                    text: 'Deposit No'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 117,
                                    dataIndex: 'SavingAccountNo',
                                    text: 'Saving Account No'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 263,
                                    dataIndex: 'ClientName',
                                    text: 'Client Name'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'DepositAmount',
                                    text: 'Deposit Amount'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'CurrentBalance',
                                    text: 'Current Balance'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'ChargeVoucherNo',
                                    text: 'Voucher No'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                Ext.ComponentQuery.query('#grdSearchPublicSavingDeposit')[0].getSelectionModel().select(rowIndex);
                                                //get reference of store
                                                var store = Ext.getStore('SavingAccountDepositDetailStore');

                                                //get selected row using rowindex
                                                var row = store.getAt(rowIndex).data;


                                                // set values
                                                console.log('row',row);

                                                Ext.ComponentQuery.query('#hdnDepositNo')[0].setValue(row.DepositNo);
                                                Ext.ComponentQuery.query('#txtDepositDateAd')[0].setValue(row.DepositDate);
                                                Ext.ComponentQuery.query('#txtDepositDateBs')[0].setValue(row.DepositDateBs);
                                                Ext.ComponentQuery.query('#txtMemberName')[0].setValue(row.ClientName);
                                                Ext.ComponentQuery.query('#txtSavingAccountNo')[0].setValue(row.SavingAccountNo);
                                                Ext.ComponentQuery.query('#hdnAccountNo')[0].setValue(row.AccountNo);
                                                Ext.ComponentQuery.query('#ddlContraAccount')[0].setValue(row.ContraAccount);
                                                Ext.ComponentQuery.query('#txtPresentBal')[0].setValue(row.CurrentBalance);
                                                Ext.ComponentQuery.query('#txtDepositAmount')[0].setValue(row.DepositAmount);
                                                Ext.ComponentQuery.query('#txtRemarks')[0].setValue(row.Remarks);
                                                Ext.ComponentQuery.query('#txtChargeVoucherNo')[0].setValue(row.ChargeVoucherNo);
                                                Ext.ComponentQuery.query('#ddlSavingProduct')[0].setValue(row.ProductCode);
                                                Ext.ComponentQuery.query('#txtDepositBy')[0].setValue(row.DepositBy);
                                                Ext.ComponentQuery.query('#ddlOffice')[0].setValue(row.AcOfficeCode);
                                                Ext.ComponentQuery.query('#txtChargeAmount')[0].setValue(row.ChargeAmount);
                                                Ext.ComponentQuery.query('#ddlChargeType')[0].setValue(row.ChargeType);
                                                Ext.ComponentQuery.query('#txtPenaltyAmount')[0].setValue(row.PenaltyAmount);
                                                Ext.ComponentQuery.query('#ddlChargeSource')[0].setValue(row.ChargeSource);
                                                Ext.ComponentQuery.query('#txtChargeVoucherDate')[0].setValue(row.ChargeVoucherDate);
                                                Ext.ComponentQuery.query('#txtValueDateAd')[0].setValue(row.ValueDate);






                                                //set buttons visible

                                                Ext.ComponentQuery.query('#btnDelete')[0].setVisible(true);

                                            },
                                            icon: '../ITS/resources/images/icons/Modify.png'
                                        }
                                    ]
                                }
                            ],
                            selModel: Ext.create('Ext.selection.RowModel', {

                            })
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            itemId: 'hdnAccountNo',
                            fieldLabel: 'Label'
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            itemId: 'hdnDepositNo',
                            fieldLabel: 'Label'
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFrmPublicSavingAccountDepositAfterRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onTxtSavingAccountNoAfterRender: function(component, eOpts) {
        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectPublicSavingDepositAccountNumberPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });
    },

    onBtnDepositClick: function(button, e, eOpts) {
        var insObj={
        AccountNo:Ext.ComponentQuery.query('#hdnAccountNo')[0].getValue(),
        DepositDate:Ext.ComponentQuery.query('#txtDepositDateAd')[0].getValue(),
        DepositAmount:Ext.ComponentQuery.query('#txtDepositAmount')[0].getValue(),
        ContraAccount:Ext.ComponentQuery.query('#ddlContraAccount')[0].getValue(),
        MandatorySavingType:'ND',//accToProdClass
        PenaltyAmount:Ext.ComponentQuery.query('#txtPenaltyAmount')[0].getValue(),
        ChargeAmount:Ext.ComponentQuery.query('#txtChargeAmount')[0].getValue(),
        ChargeType:Ext.ComponentQuery.query('#ddlChargeType')[0].getValue(),
        VoucherNo:null,
        EmpId:null,
        Remarks:Ext.ComponentQuery.query('#txtRemarks')[0].getValue(),
        DepositBy:Ext.ComponentQuery.query('#txtDepositBy')[0].getValue(),
        TranOfficeCode:getOfficeCode(),
        AcOfficeCode:Ext.ComponentQuery.query('#ddlOffice')[0].getValue(),
        ValueDate:Ext.ComponentQuery.query('#txtValueDateAd')[0].getValue(),
        ChargeSource:Ext.ComponentQuery.query('#ddlChargeSource')[0].getValue(),
        AdjustFromSaving:Ext.ComponentQuery.query('#chkTransfer')[0].getValue()? 'Y' : 'N',
        AdjustAccountNo:Ext.ComponentQuery.query('#ddlFormSavingAccount')[0].getValue(),
        AdjustChequeNo:Ext.ComponentQuery.query('#ddlChequeNo')[0].getValue(),
        CreatedBy:getCurrentUser(),
        Action:'I',
        };
        var waitSave = watiMsg("Depositing Public Saving.Please wait ...");
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/EditTransaction/PublicSavingDepositHandler.ashx',
            params: {
                method:'SavePublicSavingDeposit',
                publicSavingDeposit:JSON.stringify(insObj)

            },
           success: function ( response, request ) {
                         waitSave.hide();
                            var out=Ext.decode(response.responseText);
                            console.log(out);

                            if(out.success==="true")
                                {
                                   msg("SUCCESS",out.message);
                              }
                                else
                                    {
                                        msg("FAILURE",out.message);
                                    }
                            },
        	failure: function ( result, request ) {
        		waitSave.hide();
        		var out=Ext.decode(response.responseText);
        		msg("FAILURE",out.message);
        	}



        });
    },

    onBtnDeleteClick: function(button, e, eOpts) {
        var insObj={
        AccountNo:Ext.ComponentQuery.query('#hdnAccountNo')[0].getValue(),
        DepositDate:Ext.ComponentQuery.query('#txtDepositDateAd')[0].getValue(),
        DepositAmount:Ext.ComponentQuery.query('#txtDepositAmount')[0].getValue(),
        ContraAccount:Ext.ComponentQuery.query('#ddlContraAccount')[0].getValue(),
        MandatorySavingType:'ND',//accToProdClass
        PenaltyAmount:Ext.ComponentQuery.query('#txtPenaltyAmount')[0].getValue(),
        ChargeAmount:Ext.ComponentQuery.query('#txtChargeAmount')[0].getValue(),
        ChargeType:Ext.ComponentQuery.query('#ddlChargeType')[0].getValue(),
        VoucherNo:null,
        EmpId:null,
        Remarks:Ext.ComponentQuery.query('#txtRemarks')[0].getValue(),
        DepositBy:Ext.ComponentQuery.query('#txtDepositBy')[0].getValue(),
        TranOfficeCode:getOfficeCode(),
        AcOfficeCode:Ext.ComponentQuery.query('#ddlOffice')[0].getValue(),
        ValueDate:Ext.ComponentQuery.query('#txtValueDateAd')[0].getValue(),
        ChargeSource:Ext.ComponentQuery.query('#ddlChargeSource')[0].getValue(),
        AdjustFromSaving:Ext.ComponentQuery.query('#chkTransfer')[0].getValue()? 'Y' : 'N',
        AdjustAccountNo:Ext.ComponentQuery.query('#ddlFormSavingAccount')[0].getValue(),
        AdjustChequeNo:Ext.ComponentQuery.query('#ddlChequeNo')[0].getValue(),
        CreatedBy:getCurrentUser(),
        Action:'D',
        };
        var waitSave = watiMsg("Deleting Public Saving.Please wait ...");
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/EditTransaction/PublicSavingDepositHandler.ashx',
            params: {
                method:'SavePublicSavingDeposit',
                publicSavingDeposit:JSON.stringify(insObj)

            },
           success: function ( response, request ) {
                         waitSave.hide();
                            var out=Ext.decode(response.responseText);
                            console.log(out);

                            if(out.success==="true")
                                {
                                   msg("SUCCESS",out.message);
                              }
                                else
                                    {
                                        msg("FAILURE",out.message);
                                    }
                            },
        	failure: function ( result, request ) {
        		waitSave.hide();
        		var out=Ext.decode(response.responseText);
        		msg("FAILURE",out.message);
        	}



        });
    },

    onDdlSearchSavingAccountNoSelect: function(combo, records, eOpts) {
        Ext.ComponentQuery.query('#txtSearchMemberName')[0].setValue(records[0].data.ClientDesc);
    },

    onBtnSearchClick: function(button, e, eOpts) {
        var waitSave = watiMsg('Loading Data. Please wait ...');
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/EditTransaction/PubSavingDepositDetailHandler.ashx',
            params: {
                method:'GetPubSavDepoDetail',
                OfficeCode:Ext.ComponentQuery.query('#ddlSearchOffice')[0].getValue(),
                DepositNo:null,
                SavingAccountNo:Ext.ComponentQuery.query('#ddlSearchSavingAccountNo')[0].getValue(),
                ClientName:Ext.ComponentQuery.query('#txtSearchMemberName')[0].getValue(),
                FromDate:null,//Ext.ComponentQuery.query('#txtDepositDateFromBs')[0].getValue(),
                ToDate:null,//Ext.ComponentQuery.query('#txtDepositDateToBs')[0].getValue()



            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('SavingAccountDepositDetailStore');
                    store.removeAll();
                    store.add(obj.root);


                }
                else
                {
                    msg("FAILURE",obj.message);
                }
                waitSave.hide();
            }
        });
    },

    onFrmPublicSavingAccountDepositAfterRender: function(component, eOpts) {
        Ext.ComponentQuery.query('#txtDepositDateBs')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtDepositDateAd')[0].setValue(getMisDateAD());
        Ext.ComponentQuery.query('#txtDepositDateFromBs')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtDepositDateToBs')[0].setValue(getMisDateAD());

        var savingAccountDepositDetailStore=Ext.getStore('SavingAccountDepositDetailStore');
        savingAccountDepositDetailStore.removeAll();

        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/Office/OfficeHandler.ashx',
            params: {
                method:'GetOfficeList',
                userCode:getCurrentUser(),
                officeName:null

            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('OfficeShortStore');
                    store.removeAll();
                    store.add(obj.root);
                    Ext.ComponentQuery.query('#ddlOffice')[0].select('01020');

                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });


        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/EditTransaction/PubSavingProductHandler.ashx',
            params: {
                method:'GetPubSavingProd',
                ProductName:null,


            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('ProductTypeStore');
                    store.removeAll();
                    store.add(obj.root);
                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });


        Ext.Ajax.request({
            url: '../Handlers/Finance/Maintenance/AccountHeadEntryHandler.ashx',
            params: {
                method:'GetContraAccount',
                offCode:getOfficeCode(),
                accountDesc:null


            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('ContraAccountSearchShortStore');
                    store.removeAll();
                    store.add(obj.root);
                    Ext.ComponentQuery.query('#ddlContraAccount')[0].select('100000021000002');
                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });


        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'CHARGE_TYPE'
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                            var Store=Ext.getStore('MsReferenceCodeDetailsDestinationFormatStore');
                            Store.removeAll();
                            Store.add(obj.root);



                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });


        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'CHARGE_SOURCE_ABBS'
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                            var Store=Ext.getStore('MsReferenceCodeDetailsDestinationParameterStore');
                            Store.removeAll();
                            Store.add(obj.root);

                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });


        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/EditTransaction/PubSavingAccountSearchHandler.ashx',
            params: {
                method:'GetPubSavAccSearch',
                OfficeCode:getOfficeCode(),
                SavingAccountNo:null
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                            var Store=Ext.getStore('SavingAccountNumberSearchShortStore');
                            Store.removeAll();
                            Store.add(obj.root);

                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });


        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/Office/OfficeHandler.ashx',
            params: {
                method:'GetOfficeList',
                userCode:getCurrentUser(),
                officeName:null

            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('OfficeSearchShortStore');
                    store.removeAll();
                    store.add(obj.root);
                    Ext.ComponentQuery.query('#ddlSearchOffice')[0].select('01020');

                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });



        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/PublicSavingTransaction/PublicAdjustmentdepositaccountHandler.ashx',
            params: {
                method:'GetPubAdjDepoAcc',
                OfficeCode:Ext.ComponentQuery.query('#ddlOffice')[0].getValue(),
                AccountNo:Ext.ComponentQuery.query('#hdnAccountNo')[0].getValue()

            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('FromSavingAccountStore');
                    store.removeAll();
                    store.add(obj.root);


                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });


        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/PublicSavingTransaction/PublicAccountChequeHandler.ashx',
            params: {
                method:'GetPubAccCheque',
                AccountNo:Ext.ComponentQuery.query('#hdnAccountNo')[0].getValue(),
                ChequeNo:null

            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('AccountChequeStore');
                    store.removeAll();
                    store.add(obj.root);


                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });



    }

});