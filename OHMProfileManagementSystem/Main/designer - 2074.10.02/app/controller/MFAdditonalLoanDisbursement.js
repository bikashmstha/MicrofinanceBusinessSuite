/*
 * File: app/controller/MFAdditonalLoanDisbursement.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.MFAdditonalLoanDisbursement', {
    extend: 'Ext.app.Controller',

    stores: [
        'SearchCenterStore',
        'ContraAccountStore',
        'AdjustToSavingStore',
        'ReferenceShortStore',
        'InstallmentTypeRefShortStore',
        'InterestRateRefShortStore',
        'LoanNoMFStore',
        'SearchMFAddLoanDisburseStore',
        'SearchLoanNoStore'
    ],

    onBtnDisburseLoanClick: function(button, e, eOpts) {

        var objMFAddLoanDis = {
         LoanNo : Ext.ComponentQuery.query('#ddlLoanNo')[0].getValue(),
         LoanProduct_Code :Ext.ComponentQuery.query('#txtLoanHeadingCode')[0].getValue(),
         DisburseDate :Ext.ComponentQuery.query('#txtDateAD')[0].getValue(),
         LoanAmount :Ext.ComponentQuery.query('#txtAddDisburseAmt')[0].getValue(),
         ContraAccount :Ext.ComponentQuery.query('#ddlContraAcc')[0].getValue(),
         EmployeeId :Ext.ComponentQuery.query('#txtFieldAssistantCode')[0].getValue(),
         TranOffice_Code :getOfficeCode(),
         Deduction1Code :Ext.ComponentQuery.query('#')[0].getValue(),
         Deduction1Desc :Ext.ComponentQuery.query('#')[0].getValue(),
         DeductionAmount1 :Ext.ComponentQuery.query('#')[0].getValue(),
         Deduction2Code :Ext.ComponentQuery.query('#')[0].getValue(),
         Deduction2Desc :Ext.ComponentQuery.query('#')[0].getValue(),
         DeductionAmount2 :Ext.ComponentQuery.query('#')[0].getValue(),
         Deduction3Code :Ext.ComponentQuery.query('#')[0].getValue(),
         Deduction3Desc :Ext.ComponentQuery.query('#')[0].getValue(),
         DeductionAmount3 :Ext.ComponentQuery.query('#')[0].getValue(),
         Deduction4Code :Ext.ComponentQuery.query('#')[0].getValue(),
         Deduction4Desc :Ext.ComponentQuery.query('#')[0].getValue(),
         DeductionAmount4 :Ext.ComponentQuery.query('#')[0].getValue(),
         ChkAdjust_Saving :Ext.ComponentQuery.query('#chkAdjustSaving')[0].getValue()?'Y':'N',
         SavingAccount_No :Ext.ComponentQuery.query('#ddlAdjustSaving')[0].getValue(),
         User1 : getCurrentUser(),
         InsertUpdate : 'I'
        };


        var waitSave = watiMsg('Saving . Please wait ...');
        Ext.Ajax.request({
                            url:'../Handlers/Finance/Transaction/LoanTransaction/MfAdditionalLoanDisbursementHandler.ashx',
                            params:{method:'Save', mfAdditionalLoanDisbursement : JSON.stringify(objMFAddLoanDis)
                },
                            success: function ( result, request ) {

                                var obj = Ext.decode(result.responseText);
                                if(obj.success === 'true'){
                                    console.log("Resu",obj.root);

                                    waitSave.hide();



                                }else{msg('FAILURE','Could Not Load Data');}
                            },
                            failure: function(form, action) {
                                msg("FAILURE","Could Not Load Data");    }
                        });
    },

    onDdlLoanNoSelect: function(combo, records, eOpts) {
        var clientName = records[0].data.ClientName;
        Ext.ComponentQuery.query('#txtSearchMemberName')[0].setValue(clientName);
    },

    onBtnSearchMFAddLoanDisburseClick: function(button, e, eOpts) {
        var waitSave = watiMsg('Loading data. Please wait ...');
        Ext.Ajax.request({
                            url:'../Handlers/Finance/Transaction/LoanTransaction/MfAdditionalLoanDetailHandler.ashx',
                            params:{method:'GetMfAdditionalLoanDetail', offCode : getOfficeCode(),
                                    clientName : Ext.ComponentQuery.query('#txtSearchMemberName')[0].getValue(),
                                    loanNo : Ext.ComponentQuery.query('#ddlSearchLoanNo')[0].getValue(),
                                    dateFrom : Ext.ComponentQuery.query('#txtSearchDisburseDateFromBS')[0].getValue(),
                                    dateTo :Ext.ComponentQuery.query('#txtSearchDisburseDateToBS')[0].getValue()
                },
                            success: function ( result, request ) {

                                var obj = Ext.decode(result.responseText);
                                if(obj.success === 'true'){
                                    console.log("Resu",obj.root);
                                    var store =Ext.getStore('SearchMFAddLoanDisburseStore');
                                    store.removeAll();
                                    store.add(obj.root);
                                    waitSave.hide();



                                }else{msg('FAILURE','Could Not Load Data');}
                            },
                            failure: function(form, action) {
                                msg("FAILURE","Could Not Load Data");    }
                        });
    },

    onFrmMFAdditonalLoanDisbursementAfterRender: function(component, eOpts) {
        var waitSave = watiMsg('Loading data. Please wait ...');


        //get for center
        Ext.Ajax.request({
                            url:'../Handlers/Finance/Maintenance/CenterHandler.ashx',
                            params:{method:'GetTransferCenterList',offCode:getOfficeCode(), centerName:null, oldCenterCode:null
                },
                            success: function ( result, request ) {

                                var obj = Ext.decode(result.responseText);
                                if(obj.success === 'true'){
                                    console.log("Resu",obj.root);
                                    var store =Ext.getStore('SearchCenterStore');
                                    store.removeAll();
                                    store.add(obj.root);



                                }else{msg('FAILURE','Could Not Load Data');}
                            },
                            failure: function(form, action) {
                                msg("FAILURE","Could Not Load Data");    }
                        });
        //get for loan no.


        Ext.Ajax.request({
                            url:'../Handlers/Finance/Transaction/LoanTransaction/MfAdditionalLoanHandler.ashx',
                            params:{method:'GetMfAdditionalLoan', offCode : getOfficeCode(), centerCode : null, clientName :null
                },
                            success: function ( result, request ) {

                                var obj = Ext.decode(result.responseText);
                                if(obj.success === 'true'){
                                    console.log("Resu",obj.root);
                                    var store =Ext.getStore('LoanNoMFStore');
                                    store.removeAll();
                                    store.add(obj.root);



                                }else{msg('FAILURE','Could Not Load Data');}
                            },
                            failure: function(form, action) {
                                msg("FAILURE","Could Not Load Data");    }
                        });
        //get for product type

        Ext.Ajax.request({
                            url:'../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
                            params:{method:'GetReferenceDetailListShort',referenceCode:'LOAN_PERIOD_TYPE'
                },
                            success: function ( result, request ) {

                                var obj = Ext.decode(result.responseText);
                                if(obj.success === 'true'){
                                    console.log("Resu",obj.root);
                                    var store =Ext.getStore('ReferenceShortStore');
                                    store.removeAll();
                                    store.add(obj.root);



                                }else{msg('FAILURE','Could Not Load Data');}
                            },
                            failure: function(form, action) {
                                msg("FAILURE","Could Not Load Data");    }
                        });
        //get for installment type

        Ext.Ajax.request({
                            url:'../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
                            params:{method:'GetReferenceDetailListShort',referenceCode:'INSTALLMENT_PERIOD_TYPE'
                },
                            success: function ( result, request ) {

                                var obj = Ext.decode(result.responseText);
                                if(obj.success === 'true'){
                                    console.log("Resu",obj.root);
                                    var store =Ext.getStore('InstallmentTypeRefShortStore');
                                    store.removeAll();
                                    store.add(obj.root);



                                }else{msg('FAILURE','Could Not Load Data');}
                            },
                            failure: function(form, action) {
                                msg("FAILURE","Could Not Load Data");    }
                        });
        //get for interest rate
        Ext.Ajax.request({
                            url:'../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
                            params:{method:'GetReferenceDetailListShort',referenceCode:'MF_INTEREST_RATE'
                },
                            success: function ( result, request ) {

                                var obj = Ext.decode(result.responseText);
                                if(obj.success === 'true'){
                                    console.log("Resu",obj.root);
                                    var store =Ext.getStore('InterestRateRefShortStore');
                                    store.removeAll();
                                    store.add(obj.root);



                                }else{msg('FAILURE','Could Not Load Data');}
                            },
                            failure: function(form, action) {
                                msg("FAILURE","Could Not Load Data");    }
                        });
        //get for contra account
        Ext.Ajax.request({
                            url:'../Handlers/Finance/Maintenance/AccountHeadEntryHandler.ashx',
                            params:{method:'GetContraAccount',offCode:getOfficeCode(), accountDesc:null
                },
                            success: function ( result, request ) {

                                var obj = Ext.decode(result.responseText);
                                if(obj.success === 'true'){
                                    console.log("Resu",obj.root);
                                    var store =Ext.getStore('ContraAccountStore');
                                    store.removeAll();
                                    store.add(obj.root);
                                    Ext.ComponentQuery.query('#ddlContraAcc')[0].select('100000021000002');



                                }else{msg('FAILURE','Could Not Load Data');}
                            },
                            failure: function(form, action) {
                                msg("FAILURE","Could Not Load Data");    }
                        });

        //get for adjust saving



        Ext.Ajax.request({
                            url:'../Handlers/Finance/Transaction/LoanTransaction/MfAdjustSavingHandler.ashx',
                            params:{method:'GetMfAdjustSaving',offCode:getOfficeCode(),clientNo:null,productName :null
                },
                            success: function ( result, request ) {

                                var obj = Ext.decode(result.responseText);
                                if(obj.success === 'true'){
                                    console.log("Resu",obj.root);
                                    var store =Ext.getStore('AdjustToSavingStore');
                                    store.removeAll();
                                    store.add(obj.root);



                                }else{msg('FAILURE','Could Not Load Data');}
                            },
                            failure: function(form, action) {
                                msg("FAILURE","Could Not Load Data");    }
                        });

        //get for loan no in search field

        Ext.Ajax.request({
                            url:'../Handlers/Finance/Transaction/LoanTransaction/MfLoanSearchHandler.ashx',
                            params:{method:'GetMfLoanSearch', offCode : getOfficeCode(), loanDno : Ext.ComponentQuery.query('#ddlLoanNo')[0].getValue()
                },
                            success: function ( result, request ) {

                                var obj = Ext.decode(result.responseText);
                                if(obj.success === 'true'){
                                    console.log("Resu",obj.root);
                                    var store =Ext.getStore('SearchLoanNoStore');
                                    store.removeAll();
                                    store.add(obj.root);
                                    waitSave.hide();



                                }else{msg('FAILURE','Could Not Load Data');}
                            },
                            failure: function(form, action) {
                                msg("FAILURE","Could Not Load Data");    }
                        });
    },

    init: function(application) {
        this.control({
            "#btnDisburseLoan": {
                click: this.onBtnDisburseLoanClick
            },
            "#ddlSearchLoanNo": {
                select: this.onDdlLoanNoSelect
            },
            "#btnSearchMFAddLoanDisburse": {
                click: this.onBtnSearchMFAddLoanDisburseClick
            },
            "#frmMFAdditonalLoanDisbursement": {
                afterrender: this.onFrmMFAdditonalLoanDisbursementAfterRender
            }
        });
    }

});
