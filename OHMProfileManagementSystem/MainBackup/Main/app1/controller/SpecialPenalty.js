/*
 * File: app/controller/SpecialPenalty.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.SpecialPenalty', {
    extend: 'Ext.app.Controller',

    stores: [
        'FilingPeriodStore',
        'SPReasonStore'
    ],

    onFrmVRSpecialPenaltyAfterRender: function(component, eOpts) {

        var userActivity={
            ApplicationID:'VAT',
            ModuleID:'VSPenalty',
            UserID:'',
            Action:'ENTER'
        };

        LogUserActivity(userActivity);


        var offCode=Ext.get('offCode').dom.innerHTML;
        Ext.ComponentQuery.query('#txtOfficeCode')[0].setValue(offCode);



        //Ext.ComponentQuery.query('#txtAccountType')[0].setValue('00');

        //*************************** LOAD REFERENCE BASIS *********************************************************
        var strSPR = Ext.getStore('SPReasonStore');
        strSPR.load();



        var objParam = Ext.ComponentQuery.query('#SpecialPenalty')[0];

        console.log('SP Param', objParam);

        if(objParam.extraParam)
        {
            if(objParam.extraParam.params.from=='MV')
            {
                alert('MV');
            }
            else if(objParam.extraParam.params.from=='AU')
            {
                alert('AU');
            }

        }
    },

    onTxtSpecialPenaltyNoBlur: function(component, e, eOpts) {
        var action=Ext.ComponentQuery.query('#hfSPAction')[0].getValue();
        if(action!='E' && action!='D')
        {
            msg('INFO','Please, Select the Actions(EDIT OR DELETE)');
            return;
        }

        var me=this;

        var offCode=Ext.ComponentQuery.query('#txtOfficeCode')[0].getValue();
        var specialPenaltyNo=Ext.ComponentQuery.query('#txtSpecialPenaltyNo')[0].getValue();

        if(offCode==='')
        {
            return;
        }

        me.LoadSpecialPenaltyControls(offCode,specialPenaltyNo);

    },

    onTxtPanBlur: function(component, e, eOpts) {

        var me=this;
        var acctType='00'
        var action=Ext.ComponentQuery.query('#hfSPAction')[0].getValue();
        var pan=Ext.ComponentQuery.query("#txtPan")[0].getValue();

        if(pan==='')
        {
            return;
        }
        else if(pan.length!=9)
        {
            msg('INFO','तपाईले भर्नु भए‍को प्यान ९ अंकको हुनुपर्छ।');
            return;
        }
        else
        {


            Ext.ComponentQuery.query('#txtAccountType')[0].setValue(acctType);

            LoadTaxpayerInfoWithValidPan(pan,acctType,function(obj){

                if(obj.root.Message!==null)
                {

                    msg('INFO',obj.root.Message);
                    Ext.ComponentQuery.query("#txtTradeName")[0].setValue('');
                    Ext.ComponentQuery.query('#hdnRegistrationDate')[0].setValue('');
                }
                else
                {
                    var taxpayer=obj.root.Taxpayer;
                    var office=taxpayer.Office;

                    if(taxpayer.AcctStatus!='A')
                    {
                        msg('INFO', 'यो प्यान सक्रिय छैन।');
                        Ext.ComponentQuery.query('#txtPan')[0].setValue('');
                        Ext.ComponentQuery.query("#txtTradeName")[0].setValue('');
                        Ext.ComponentQuery.query('#hdnRegistrationDate')[0].setValue('');
                        return;
                    }
                    if(office.OfficeCode!=Ext.ComponentQuery.query('#txtOfficeCode')[0].getValue())
                    {
                        msg('INFO', 'यो करदाता यो कार्यालामा दर्ता छैन।<BR><BR>तपाईले यो करदाताको विवरण भर्न पाउनु हुन्न।');
                        Ext.ComponentQuery.query('#txtPan')[0].setValue('');
                        Ext.ComponentQuery.query("#txtTradeName")[0].setValue('');
                        Ext.ComponentQuery.query('#hdnRegistrationDate')[0].setValue('');
                        return;
                    }

                    Ext.ComponentQuery.query("#txtTradeName")[0].setValue(taxpayer.Name);
                    Ext.ComponentQuery.query('#hdnRegistrationDate')[0].setValue(taxpayer.RegistrationDate);
                }

            });

        }




    },

    onTxtTaxyearBlur: function(component, e, eOpts) {

        var me=this;



        var taxyear=Ext.ComponentQuery.query("#txtTaxyear")[0].getValue();


        if(taxyear===null)
        {
            return;
        }


        ValidateTaxyear(taxyear,function(invalidMsg){
            if(invalidMsg!=='')
            {

                //msg('INFO',invalidMsg);


                Ext.Msg.show({
                    title:'INFO',
                    msg:invalidMsg,
                    buttons: Ext.Msg.OK,
                    fn:function(){Ext.ComponentQuery.query("#txtTaxyear")[0].focus();}
                });


                //SETS TAX YEAR VALIDATION INFO
                Ext.ComponentQuery.query('#hdnVTaxyear')[0].setValue('INVALID');

            }
            else
            {
                Ext.ComponentQuery.query('#hdnVTaxyear')[0].setValue('');
                //Ext.ComponentQuery.query('#ddlFilingPeriod')[0].focus();
            }

        });




    },

    onDdlFilingPeriodChange: function(field, newValue, oldValue, eOpts) {




        var combo=Ext.ComponentQuery.query("#ddlFilingPeriod")[0];
        var v = combo.getValue(); 

        if(v===''||v===null)
        {
            return;
        }

        var taxyear=Ext.ComponentQuery.query("#txtTaxyear")[0].getValue();
        var pan=Ext.ComponentQuery.query("#txtPan")[0].getValue();

        if(pan===''||pan===null)
        {
            msg('INFO', 'कृपया पहिला प्यान भर्नुहोला।');
            combo.setValue('');
            return;
        }

        if(taxyear==='0'||taxyear===null)
        {
            msg('INFO', 'कृपया पहिला कर वर्ष भर्नुहोला।');
            combo.setValue('');
            return;
        }



        //LOADING PERIOD AS PER FILE PERIOD
        var record = combo.findRecord(combo.valueField || combo.displayField, v); 
        var index = combo.store.indexOf(record);

        var ddlPeriod=Ext.ComponentQuery.query("#ddlPeriod")[0];
        ddlPeriod.setValue('');

        ddlPeriod.store.loadData(record.data.Period);
        //ENDS LOADING PERIOD

    },

    onDdlSPReasonChange: function(field, newValue, oldValue, eOpts) {
        var SPReason=Ext.ComponentQuery.query('#ddlSPReason')[0].getRawValue();

        if(SPReason===''||SPReason===null)
        {
            return;
        }
        else if(SPReason=='Others')
        {
            Ext.ComponentQuery.query('#txtRFP')[0].setVisible(true);
        }
        else
        {
            Ext.ComponentQuery.query('#txtRFP')[0].setVisible(false);
        }
    },

    onBtnSaveClick: function(button, e, eOpts) {
        var me=this;


        var userActivity={
            ApplicationID:'VAT',
            ModuleID:'VSPenalty',
            UserID:'',
            Action:'SAVE'
        };

        LogUserActivity(userActivity);

        var offCode=Ext.ComponentQuery.query("#txtOfficeCode")[0].getValue();



        var specialPenaltyNo=Ext.ComponentQuery.query('#txtSpecialPenaltyNo')[0].getValue();
        var pan=Ext.ComponentQuery.query("#txtPan")[0].getValue();
        var acctType=Ext.ComponentQuery.query("#txtAccountType")[0].getValue();
        var taxYear=Ext.ComponentQuery.query("#txtTaxyear")[0].getValue();
        var filPer=Ext.ComponentQuery.query("#ddlFilingPeriod")[0].value;
        var period=Ext.ComponentQuery.query("#ddlPeriod")[0].value;
        var effDate=Ext.ComponentQuery.query("#txtEffectiveDate")[0].getValue();
        var amount=Ext.ComponentQuery.query("#txtAmount")[0].getValue();
        var sprCode=Ext.ComponentQuery.query("#ddlSPReason")[0].getValue();
        var penaltyReason=Ext.ComponentQuery.query("#ddlSPReason")[0].getRawValue()=='Others'? Ext.ComponentQuery.query("#txtRFP")[0].value:'';
        var spicUpto=Ext.ComponentQuery.query("#txtEffectiveDate")[0].getValue();
        var action=Ext.ComponentQuery.query("#hfSPAction")[0].getValue()===''?'A':Ext.ComponentQuery.query("#hfSPAction")[0].getValue();



        var objSpecialPenalty={
            OffCode: offCode,
            SpecialPenaltyNo : specialPenaltyNo,
            PAN : pan,
            AcctType : acctType,
            TaxYear : taxYear,
            FilePer : filPer,
            Period : period,
            TranDate : Ext.get('nepDate').dom.innerHTML,
            EffDate : effDate,
            Amount : amount,
            SPRCode : sprCode,
            PenaltyReason :penaltyReason,
            UserId :'',
            BatchNo : '',
            SPICUpto : spicUpto,
            Status:'',
            Action : action
        };

        var strMsg=me.ValidateSpecialPenalty(objSpecialPenalty);
        if(strMsg!=='')
        {
            msg('INFO',strMsg);
        }
        else
        {

            var frm=Ext.getCmp('frmVRSpecialPenalty');

            var form = button.up('form').getForm();
            if(form)
            {
                console.log(form);
            }


            //---------------------------------------------------------------------------------------
            //--------------------------  SAVE OR EDIT SPECIAL PENALTY------------------------------------ 
            //---------------------------------------------------------------------------------------

            if(form.isValid()){

                form.submit({
                    url: '../Handlers/Vat/SpecialPenalty/SpecialPenaltyHandler.ashx',
                    waitMsg: 'Saving Special Penalty...',
                    params:{method:'SaveSpecialPenalty',
                    specialPenalty:JSON.stringify(objSpecialPenalty)},
                    success: function(p1, o) {
                        var JSONResponse=Ext.decode(o.response.responseText);
                        console.log(JSONResponse);
                        if(JSONResponse.success=='true')
                        {  
                            Ext.Msg.show({
                                title:'INFO',
                                msg: 'विशेष आदेश सफलतापुर्वक सेभ भयो।<BR> तपाईको विशेष आदेश नं : '+JSONResponse.message,
                                buttons: Ext.Msg.OK,
                                fn: function (btn){
                                    if(btn=='ok'){
                                        Ext.ComponentQuery.query('#lblSPAction')[0].setValue('');
                                        Ext.ComponentQuery.query('#hfSPAction')[0].setValue('A');

                                        me.ResetSpecialPenaltyControls();

                                        Ext.Ajax.request({
                                            url: '../Handlers/Security/OfficeUserHandler.ashx',
                                            params: {
                                                method:'GetUserOffice',
                                                id: 1
                                            },
                                            success: function(response){
                                                var obj =Ext.decode( response.responseText);
                                                console.log(obj);
                                                Ext.ComponentQuery.query('#txtOfficeCode')[0].setValue(obj.root.OfficeCode);
                                                Ext.ComponentQuery.query('#btnDelete')[0].enable(true);
                                                Ext.ComponentQuery.query('#btnEdit')[0].enable(true);
                                                Ext.ComponentQuery.query('#txtSpecialPenaltyNo')[0].disable(true);

                                            }
                                        });


                                    }
                                }
                            });
                        }
                        else
                        {
                            msg('INFO','Failed Saving Special Penalty');
                        }
                    },
                    failure:function(fp, o) {
                        alert("err");
                    }
                });

            }

            //---------------------------------------------------------------------------------------
            //-------------------------- END SAVE OR EDIT SPECIAL PENALTY----------------------------
            //---------------------------------------------------------------------------------------

        }

    },

    onBtnDeleteClick: function(button, e, eOpts) {
        var userActivity={
            ApplicationID:'VAT',
            ModuleID:'VSPenalty',
            UserID:'',
            Action:'DELETE'
        };

        LogUserActivity(userActivity);

        Ext.ComponentQuery.query('#lblSPAction')[0].setValue('Deleting . . .');
        Ext.ComponentQuery.query('#hfSPAction')[0].setValue('D');
        Ext.ComponentQuery.query('#txtOfficeCode')[0].focus(true);
        Ext.ComponentQuery.query('#btnSave')[0].disable(true);
        Ext.ComponentQuery.query('#btnDelete')[0].disable(true);
        Ext.ComponentQuery.query('#btnEdit')[0].disable(true);
        Ext.ComponentQuery.query('#txtSpecialPenaltyNo')[0].enable(true);

    },

    onBtnEditClick: function(button, e, eOpts) {
        var userActivity={
            ApplicationID:'VAT',
            ModuleID:'VSPenalty',
            UserID:'',
            Action:'EDIT'
        };

        LogUserActivity(userActivity);

        Ext.ComponentQuery.query('#lblSPAction')[0].setValue('Editing . . .');
        Ext.ComponentQuery.query('#hfSPAction')[0].setValue('E');
        Ext.ComponentQuery.query('#txtOfficeCode')[0].focus(true);
        Ext.ComponentQuery.query('#btnDelete')[0].disable(true);
        Ext.ComponentQuery.query('#btnEdit')[0].disable(true);
        Ext.ComponentQuery.query('#txtSpecialPenaltyNo')[0].enable(true);
    },

    onBtnCancelClick: function(button, e, eOpts) {
        var me=this;
        Ext.ComponentQuery.query('#lblSPAction')[0].setValue('');
        Ext.ComponentQuery.query('#hfSPAction')[0].setValue('A');
        Ext.ComponentQuery.query('#txtOfficeCode')[0].focus(true);
        //Ext.ComponentQuery.query('#btnSave')[0].disable(false);

        Ext.ComponentQuery.query('#btnSave')[0].enable(true);
        Ext.ComponentQuery.query('#btnDelete')[0].enable(true);
        Ext.ComponentQuery.query('#btnEdit')[0].enable(true);
        Ext.ComponentQuery.query('#txtSpecialPenaltyNo')[0].disable(true);

        me.ResetSpecialPenaltyControls();

        Ext.Ajax.request({
            url: '../Handlers/Security/OfficeUserHandler.ashx',
            params: {
                method:'GetUserOffice',
                id: 1
            },
            success: function(response){
                var obj =Ext.decode( response.responseText);
                console.log(obj);
                Ext.ComponentQuery.query('#txtOfficeCode')[0].setValue(obj.root.OfficeCode);
            }
        });

    },

    onBtnSubmitClick: function(button, e, eOpts) {
        var me =this;

        var userActivity={
            ApplicationID:'VAT',
            ModuleID:'VSPenalty',
            UserID:'',
            Action:'SUBMIT'
        };

        LogUserActivity(userActivity);



        if(Ext.ComponentQuery.query('#hdnVTaxyear')[0].getValue()=='INVALID')
        {
            msg('INFO','तपाईले भर्नु भएको कर वर्ष मिलेन।');
            return;
        }


        if(Ext.ComponentQuery.query('#hdnSPFilingPeriod')[0].getValue()=='INVALID')
        {
            msg('INFO','तपाईले भर्नु भएको फाईलिंग पिरियड मिलेन।');
            return;
        }

        var offCode=Ext.ComponentQuery.query("#txtOfficeCode")[0].getValue();
        var specialPenaltyNo=Ext.ComponentQuery.query('#txtSpecialPenaltyNo')[0].getValue();
        var pan=Ext.ComponentQuery.query("#txtPan")[0].getValue();
        var acctType=Ext.ComponentQuery.query("#txtAccountType")[0].getValue();
        var taxYear=Ext.ComponentQuery.query("#txtTaxyear")[0].getValue();
        var filPer=Ext.ComponentQuery.query("#ddlFilingPeriod")[0].value;
        var period=Ext.ComponentQuery.query("#ddlPeriod")[0].value;
        var effDate=Ext.ComponentQuery.query("#txtEffectiveDate")[0].getValue();
        var amount=Ext.ComponentQuery.query("#txtAmount")[0].getValue();
        var sprCode=Ext.ComponentQuery.query("#ddlSPReason")[0].getValue();
        var penaltyReason=Ext.ComponentQuery.query("#ddlSPReason")[0].getRawValue()=='Others'? Ext.ComponentQuery.query("#txtRFP")[0].value:'';
        var spicUpto=Ext.ComponentQuery.query("#txtEffectiveDate")[0].getValue();
        var action=Ext.ComponentQuery.query("#hfSPAction")[0].getValue()===''?'A':Ext.ComponentQuery.query("#hfSPAction")[0].getValue();



        var objSpecialPenalty={
            OffCode: offCode,
            SpecialPenaltyNo : specialPenaltyNo,
            PAN : pan,
            AcctType : acctType,
            TaxYear : taxYear,
            FilePer : filPer,
            Period : period,
            TranDate : Ext.get('nepDate').dom.innerHTML,
            EffDate : effDate,
            Amount : amount,
            SPRCode : sprCode,
            PenaltyReason :penaltyReason,
            UserId :'',
            BatchNo : '',
            SPICUpto : spicUpto,
            Status:'',
            Action : action
        };

        var frm=Ext.getCmp('frmVRSpecialPenalty');

        var form = button.up('form').getForm();
        if(form)
        {
            console.log(form);
        }

        var strMsg=me.ValidateSpecialPenalty(objSpecialPenalty);
        if(strMsg!=='')
        {
            msg('INFO',strMsg);
        }
        else
        {

            //---------------------------------------------------------------------------------------
            //---------------------------  DELETE SPECIAL PENALTY------------------------------------ 
            //---------------------------------------------------------------------------------------
            if(action=='D')
            {

                if(form.isValid()){

                    form.submit({
                        url: '../Handlers/Vat/SpecialPenalty/SpecialPenaltyHandler.ashx',
                        waitMsg: 'Deleting Special Penalty...',
                        params:{
                            method:'DeleteSpecialPenalty',
                            offCode:offCode,
                            specialPenaltyNo:specialPenaltyNo       
                        },
                        success: function(p1, o) {
                            var JSONResponse=Ext.decode(o.response.responseText);
                            console.log(JSONResponse);
                            if(JSONResponse.success=='True')
                            {  

                                Ext.Msg.show({
                                    title:'INFO',
                                    msg: '* बिशेष आदेश सफलतापुर्वक मेटियो।',
                                    buttons: Ext.Msg.OK,
                                    fn: function (btn){
                                        if(btn=='ok'){
                                            Ext.ComponentQuery.query('#lblSPAction')[0].setValue('');
                                            Ext.ComponentQuery.query('#hfSPAction')[0].setValue('A');
                                            me.ResetSpecialPenaltyControls();

                                            Ext.Ajax.request({
                                                url: '../Handlers/Security/OfficeUserHandler.ashx',
                                                params: {
                                                    method:'GetUserOffice',
                                                    id: 1
                                                },
                                                success: function(response){
                                                    var obj =Ext.decode( response.responseText);
                                                    console.log(obj);
                                                    Ext.ComponentQuery.query('#txtOfficeCode')[0].setValue(obj.root.OfficeCode);
                                                    Ext.ComponentQuery.query('#btnDelete')[0].enable(true);
                                                    Ext.ComponentQuery.query('#btnEdit')[0].enable(true);
                                                    Ext.ComponentQuery.query('#txtSpecialPenaltyNo')[0].disable(true);
                                                }
                                            });


                                        }
                                    }
                                });

                            }
                            else
                            {
                                msg('INFO','Failed Deleting Special Penalty');
                            }
                        },
                        failure:function(fp, o) {
                            alert("err");
                        }
                    });
                }
            }
            //---------------------------------------------------------------------------------------
            //--------------------------- END DELETE SPECIAL PENALTY---------------------------------
            //---------------------------------------------------------------------------------------


            //---------------------------------------------------------------------------------------
            //--------------------------  SUBMIT SPECIAL PENALTY ------------------------------------ 
            //---------------------------------------------------------------------------------------
            else 
            {
                if(form.isValid()){

                    form.submit({
                        url: '../Handlers/Vat/SpecialPenalty/SpecialPenaltyHandler.ashx',
                        waitMsg: 'Submitting Special Penalty...',
                        params:{method:'SubmitSpecialPenalty',
                        specialPenalty:JSON.stringify(objSpecialPenalty)},
                        success: function(p1, o) {
                            var JSONResponse=Ext.decode(o.response.responseText);
                            console.log(JSONResponse);
                            if(JSONResponse.success=='true')
                            {  
                                Ext.Msg.show({
                                    title:'INFO',
                                    msg: 'बिशेष आदेश सफलतापुर्वक सब्मित भयो।<BR> तपाईको बिशेष आदेश नं : '+JSONResponse.message,
                                    buttons: Ext.Msg.OK,
                                    fn: function (btn){
                                        if(btn=='ok'){
                                            Ext.ComponentQuery.query('#lblSPAction')[0].setValue('');
                                            Ext.ComponentQuery.query('#hfSPAction')[0].setValue('A');

                                            me.ResetSpecialPenaltyControls();

                                            Ext.Ajax.request({
                                                url: '../Handlers/Security/OfficeUserHandler.ashx',
                                                params: {
                                                    method:'GetUserOffice',
                                                    id: 1
                                                },
                                                success: function(response){
                                                    var obj =Ext.decode( response.responseText);
                                                    console.log(obj);
                                                    Ext.ComponentQuery.query('#txtOfficeCode')[0].setValue(obj.root.OfficeCode);
                                                    Ext.ComponentQuery.query('#btnDelete')[0].enable(true);
                                                    Ext.ComponentQuery.query('#btnEdit')[0].enable(true);
                                                    Ext.ComponentQuery.query('#txtSpecialPenaltyNo')[0].disable(true);
                                                }
                                            });

                                        }
                                    }
                                });
                            }
                            else
                            {
                                msg('INFO','Failed Saving Special Penalty');
                            }
                        },
                        failure:function(fp, o) {
                            alert("err");
                        }
                    });

                }
            }
            //---------------------------------------------------------------------------------------
            //-------------------------- END SUBMIT SPECIAL PENALTY----------------------------
            //---------------------------------------------------------------------------------------
        }

    },

    onDdlPeriodChange: function(field, newValue, oldValue, eOpts) {

        var me=this;
        var filePer=Ext.ComponentQuery.query("#ddlFilingPeriod")[0].getValue();
        var taxyear=Ext.ComponentQuery.query("#txtTaxyear")[0].getValue();
        var period=Ext.ComponentQuery.query("#ddlPeriod")[0].getValue();
        var pan=Ext.ComponentQuery.query("#txtPan")[0].getValue();
        var acctType=Ext.ComponentQuery.query("#txtAccountType")[0].getValue();
        var registrationDate=Ext.ComponentQuery.query('#hdnRegistrationDate')[0].getValue();
        //var date;

        //var t=(period<1&&period>12);
        //alert(t);
        if(period==='')
        {
            return;
        }

        if(period<1||period>12)
        {
            return;
        }
        if(pan===''||pan===null)
        {
            me.msg('INFO', 'कृपया पहिला प्यान भर्नुहोला');
            return;
        }
        if(taxyear==='0'||taxyear===null)
        {
            me.msg('INFO', 'कृपया पहिला कर वर्ष मिलेन।');
            return;
        }

        if(Ext.ComponentQuery.query('#hdnVTaxyear')[0].getValue()=='INVALID')
        {
            msg('INFO', 'तपाईले भर्नु भएको फाईलिंग पिरियड मिलेन।');
            return;
        }


        ValidateFilingPeriod(pan,acctType,filePer,taxyear,period,registrationDate,function(errMessage){
            if(errMessage!=='')
            {
                msg('INFO',errMessage);
                Ext.ComponentQuery.query('#hdnSPFilingPeriod')[0].setValue('INVALID');
                return;
            }
            else
            {
                Ext.ComponentQuery.query('#hdnSPFilingPeriod')[0].setValue('VALID');
            }
        });

    },

    onTxtEffectiveDateBlur: function(component, e, eOpts) {
        var nepDate=Ext.ComponentQuery.query('#txtEffectiveDate')[0].getValue();
        validateFutureDate(nepDate,'Y',function(obj){
            console.log(obj);
        });
    },

    ResetSpecialPenaltyControls: function() {
        Ext.ComponentQuery.query('#lblSPAction')[0].setValue('');
        Ext.ComponentQuery.query('#hfSPAction')[0].setValue('A');
        Ext.ComponentQuery.query('#txtOfficeCode')[0].setValue('');
        Ext.ComponentQuery.query('#txtSpecialPenaltyNo')[0].setValue('');
        Ext.ComponentQuery.query('#txtPan')[0].setValue('');
        Ext.ComponentQuery.query('#txtTradeName')[0].setValue('');
        Ext.ComponentQuery.query('#txtAccountType')[0].setValue('00');
        Ext.ComponentQuery.query('#txtTaxyear')[0].setValue('');
        Ext.ComponentQuery.query('#ddlFilingPeriod')[0].setValue('');
        Ext.ComponentQuery.query('#ddlPeriod')[0].setValue('');
        Ext.ComponentQuery.query('#ddlSPReason')[0].setValue('');
        Ext.ComponentQuery.query('#txtRFP')[0].setValue('');
        Ext.ComponentQuery.query('#txtEffectiveDate')[0].setValue('');
        Ext.ComponentQuery.query('#txtAmount')[0].setValue('');
        Ext.ComponentQuery.query('#btnSave')[0].enable(true);
        Ext.ComponentQuery.query('#btnDelete')[0].enable(true);
        Ext.ComponentQuery.query('#btnEdit')[0].enable(true);
    },

    ValidateSpecialPenalty: function(specialPenalty) {
        var strMsg='';

        if(specialPenalty.OffCode===''||specialPenalty.OffCode===null)
        {
            strMsg+='Office Code Cannot Be Left Blank.<BR>';
        }

        if((specialPenalty.Action=='E'||specialPenalty.Action=='D')&&(specialPenalty.SpecialPenaltyNo===''||specialPenalty.SpecialPenaltyNo===null))
        {
            strMsg+='* तपाईले विशेष आदेश नं अनिवार्य रूपमा भर्नुपर्छ।<BR>';
        }
        if(specialPenalty.PAN===''||specialPenalty.PAN===null)
        {
            strMsg+='* तपाईले प्यान नं अनिवार्य रूपमा भर्नुपर्छ।';
        }
        if(specialPenalty.TaxYear===''||specialPenalty.TaxYear===null)
        {
            strMsg+='* तपाईले कर वर्ष अनिवार्य रूपमा भर्नुपर्छ।<BR>';
        }
        if(specialPenalty.FilePer===''||specialPenalty.FilePer===null)
        {
            strMsg+='* तपाईले मा.\\ चौ. \\ व्दै अनिवार्य रूपमा छान्नुपर्छ।<BR>';
        }
        if(specialPenalty.Period===''||specialPenalty.Period===null)
        {
            strMsg+='* तपाईले महिना अनिवार्य रूपमा छान्नुपर्छ।<BR>';
        }
        if(specialPenalty.EffDate===''||specialPenalty.EffDate===null)
        {
            strMsg+='* तपाईले जारी मिति अनिवार्य रूपमा भर्नुपर्छ।<BR>';
        }
        if(specialPenalty.Amount===''||specialPenalty.Amount===null)
        {
            strMsg+='* तपाईले रकम अनिवार्य रूपमा भर्नुपर्छ।<BR>';
        }
        if(specialPenalty.SPRCode===''||specialPenalty.SPRCode===null)
        {
            strMsg+='* तपाईले विशेष आदेशको कारण अनिवार्य रूपमा छान्नुपर्छ।<BR>';
        }
        if(specialPenalty.SPRCode=='99999999'&& (specialPenalty.PenaltyReason===null||specialPenalty.PenaltyReason===''))
        {
            strMsg+='* तपाईले विशेष आदेशको कारण अनिवार्य रूपमा भर्नुपर्छ।';
        }

        return strMsg;


    },

    LoadSpecialPenaltyControls: function(offCode, specialPenaltyNo) {
        var specialPenalty;
        Ext.Ajax.request({
            url: '../Handlers/Vat/SpecialPenalty/SpecialPenaltyHandler.ashx',
            params: {
                method:'GetSpecialPenalty',
                offCode:offCode,
                specialPenaltyNo:specialPenaltyNo
            },
            success: function(response){
                specialPenalty =Ext.decode(response.responseText);

                console.log(specialPenalty);
                if(specialPenalty.root.Status==='')
                {
                    //Sets TaxPayer's Info
                    Ext.ComponentQuery.query("#txtPan")[0].setValue(specialPenalty.root.PAN);
                    Ext.ComponentQuery.query("#txtTradeName")[0].setValue(specialPenalty.root.TradeName);
                    Ext.ComponentQuery.query("#txtAccountType")[0].setValue(specialPenalty.root.AcctType);
                    Ext.ComponentQuery.query("#txtTaxyear")[0].setValue(specialPenalty.root.TaxYear);

                    Ext.ComponentQuery.query("#ddlFilingPeriod")[0].setValue(specialPenalty.root.FilePer);
                    Ext.ComponentQuery.query("#ddlPeriod")[0].setValue(specialPenalty.root.Period);
                    Ext.ComponentQuery.query("#ddlSPReason")[0].setValue(specialPenalty.root.SPRCode);
                    Ext.ComponentQuery.query("#txtRFP")[0].setValue(specialPenalty.root.PenaltyReason);

                    Ext.ComponentQuery.query("#txtEffectiveDate")[0].setValue(specialPenalty.root.EffDate);
                    Ext.ComponentQuery.query("#txtAmount")[0].setValue(specialPenalty.root.Amount);

                    LoadTaxpayerInfoWithValidPan(specialPenalty.root.PAN,'00',function(obj){
                        if(obj.root.Message!==null)
                        {
                            msg('INFO',obj.root.Message);
                            Ext.ComponentQuery.query("#txtTradeName")[0].setValue('');
                            Ext.ComponentQuery.query('#hdnRegistrationDate')[0].setValue('');
                        }
                        else
                        {
                            var taxpayer=obj.root.Taxpayer;
                            var office=taxpayer.Office;

                            if(taxpayer.AcctStatus!='A')
                            {
                                msg('INFO', 'तपाईले भर्नुभएको प्यान सक्रिय छैन।');
                                return;
                            }


                            Ext.ComponentQuery.query("#txtTradeName")[0].setValue(taxpayer.Name);
                            Ext.ComponentQuery.query('#hdnRegistrationDate')[0].setValue(taxpayer.RegistrationDate);
                        }

                    });

                }
                else if(specialPenalty.root.Status==='S')
                {
                    msg('INFO','विशेष आदेश सब्मित भैकेको छ।<BR><BR>तपाई यो विवरण सच्याउन सक्नु हुन्न।');
                    return;
                }
                else if(specialPenalty.root.Status==='D')
                {
                    msg('INFO','विशेष आदेश मेटिसकेको छ..');
                    return;
                }

            },
            failure:function(response)
            {
                msg('FAILURE',Ext.decode(response));
            }
        });
    },

    init: function(application) {
        this.control({
            "#frmVRSpecialPenalty": {
                afterrender: this.onFrmVRSpecialPenaltyAfterRender
            },
            "#txtSpecialPenaltyNo": {
                blur: this.onTxtSpecialPenaltyNoBlur
            },
            "#txtPan": {
                blur: this.onTxtPanBlur
            },
            "#txtTaxyear": {
                blur: this.onTxtTaxyearBlur
            },
            "#ddlFilingPeriod": {
                change: this.onDdlFilingPeriodChange
            },
            "#ddlSPReason": {
                change: this.onDdlSPReasonChange
            },
            "#btnSave": {
                click: this.onBtnSaveClick
            },
            "#btnDelete": {
                click: this.onBtnDeleteClick
            },
            "#btnEdit": {
                click: this.onBtnEditClick
            },
            "#btnCancel": {
                click: this.onBtnCancelClick
            },
            "#btnSubmit": {
                click: this.onBtnSubmitClick
            },
            "#ddlPeriod": {
                change: this.onDdlPeriodChange
            },
            "#txtEffectiveDate": {
                blur: this.onTxtEffectiveDateBlur
            }
        });
    }

});
