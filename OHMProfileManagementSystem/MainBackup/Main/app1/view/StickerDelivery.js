/*
 * File: app/view/StickerDelivery.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.StickerDelivery', {
    extend: 'Ext.panel.Panel',

    frame: true,
    itemId: 'pnlStickerDelivery',
    width: 811,
    autoScroll: true,
    title: 'Sticker Delivery',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'displayfield',
                    height: 25,
                    itemId: 'lblActionSD',
                    width: 800,
                    fieldStyle: '{color:red;}'
                },
                {
                    xtype: 'form',
                    border: 0,
                    frame: true,
                    id: 'stickerReceivedForm',
                    style: 'border:none',
                    width: 800,
                    layout: {
                        columns: 2,
                        type: 'table'
                    },
                    bodyPadding: 10,
                    items: [
                        {
                            xtype: 'combobox',
                            itemId: 'cboLocationSD',
                            margin: '',
                            width: 400,
                            fieldLabel: 'Location',
                            msgTarget: 'side',
                            name: 'location',
                            allowBlank: false,
                            emptyText: '.....छान्नुहोस्.....',
                            autoSelect: false,
                            displayField: 'LocationName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'UserLocationEASy',
                            typeAhead: true,
                            valueField: 'LocationID'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtReceivedDateSD',
                            margin: '0 0 0 100',
                            width: 200,
                            fieldLabel: 'Delivery Date',
                            msgTarget: 'side',
                            allowBlank: false,
                            emptyText: 'YYYY.MM.DD'
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            itemId: 'txtSeqNoSD',
                            margin: '20 0 0 0',
                            width: 150,
                            fieldLabel: 'Seq No',
                            msgTarget: 'side',
                            allowBlank: false,
                            enableKeyEvents: true,
                            maskRe: /[0-9]/,
                            maxLength: 4
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            itemId: 'txtDeliveryNoSD',
                            margin: '20 0 0 100',
                            fieldLabel: 'Delivery No',
                            msgTarget: 'side',
                            readOnly: true,
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtInvoiceNoSD',
                            margin: '15 0 0 0',
                            fieldLabel: 'Invoice Number',
                            name: 'invoiceNumber'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtInvoiceAmountSD',
                            margin: '20 0 0 100',
                            fieldLabel: 'Invoice Amount',
                            name: 'invoiceAmount',
                            maskRe: /[0-9]/
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtReceivedBySD',
                            margin: '20 0 0 0',
                            fieldLabel: 'Received By',
                            name: 'receivedBy'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtLCNoSD',
                            margin: '20 0 0 100',
                            fieldLabel: 'LC Number',
                            name: 'lcNumber'
                        }
                    ]
                },
                {
                    xtype: 'fieldcontainer',
                    height: 100,
                    itemId: 'fCntRemarksSD',
                    margin: '10 0 0 15',
                    width: 700,
                    defaults: {
                        hideLabel: true
                    },
                    fieldLabel: 'Remarks',
                    items: [
                        {
                            xtype: 'textareafield',
                            height: 100,
                            itemId: 'txtRemarksSD',
                            width: 550,
                            fieldLabel: 'Label'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    itemId: 'cntSDDetails',
                    margin: '0 0 0 10',
                    width: 950,
                    autoScroll: true,
                    items: [
                        {
                            xtype: 'gridpanel',
                            height: 200,
                            itemId: 'grdSDDetails',
                            margin: '10 0 0 0',
                            width: 950,
                            autoScroll: true,
                            title: 'Sticker Delivery Details',
                            columnLines: true,
                            store: 'StickerDeliveryDet',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    width: 300,
                                    dataIndex: 'StickerID',
                                    text: 'Sticker Type',
                                    editor: {
                                        xtype: 'combobox',
                                        itemId: 'cboStickerTypeSD',
                                        margin: '5 0 0 0',
                                        width: 300,
                                        fieldLabel: '',
                                        labelAlign: 'top',
                                        name: 'stickerType',
                                        emptyText: '.....छान्नुहोस्.....',
                                        displayField: 'StickerDescription',
                                        forceSelection: true,
                                        queryMode: 'local',
                                        store: 'StickerType',
                                        typeAhead: true,
                                        valueField: 'StickerID'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 150,
                                    dataIndex: 'OrderNo',
                                    text: 'Order No',
                                    editor: {
                                        xtype: 'combobox',
                                        itemId: 'cboOrderNoSD',
                                        margin: '5 0 0 0',
                                        width: 200,
                                        fieldLabel: '',
                                        labelAlign: 'top',
                                        name: 'orderNo',
                                        emptyText: '.....छान्नुहोस्.....',
                                        displayField: 'OrderNo',
                                        forceSelection: true,
                                        queryMode: 'local',
                                        store: 'StickerOrders',
                                        typeAhead: true,
                                        valueField: 'OrderNo'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'BoxNo',
                                    text: 'Box No',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtBoxNoSD',
                                        margin: '5 0 0 0',
                                        width: 80,
                                        fieldLabel: '',
                                        labelAlign: 'top',
                                        name: 'boxNo'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'Prefix',
                                    text: 'Prefix',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtPrefixSD',
                                        margin: '5 0 0 0',
                                        width: 60,
                                        fieldLabel: '',
                                        labelAlign: 'top',
                                        name: 'prefix'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 120,
                                    dataIndex: 'SeqFrom',
                                    text: 'SequenceFrom',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtSequenceFromSD',
                                        margin: '5 0 0 0',
                                        width: 100,
                                        fieldLabel: '',
                                        labelAlign: 'top',
                                        name: 'sequenceFrom',
                                        maskRe: /[0-9]/,
                                        maxLength: 18
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 120,
                                    dataIndex: 'SeqTo',
                                    text: 'SequenceTo',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtSequenceToSD',
                                        margin: '5 0 0 ',
                                        width: 100,
                                        fieldLabel: '',
                                        labelAlign: 'top',
                                        name: 'sequenceTo',
                                        maskRe: /[0-9]/,
                                        maxLength: 18
                                    }
                                },
                                {
                                    xtype: 'actioncolumn',
                                    itemId: 'deleteSDDet',
                                    width: 47,
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e) {
                                                var grid = Ext.ComponentQuery.query('#grdSDDetails')[0];
                                                var store = Ext.getStore('StickerDeliveryDet');
                                                var row = store.getAt(rowIndex).data;

                                                Ext.Msg.confirm('Confirm','के तपाई साचै डाटा हटाउन चाहनुहुन्छ?', function(btn) {
                                                    if(btn == 'yes'){

                                                        if(row.Action === "E")
                                                        {    
                                                            //alert("Deleting...");
                                                            row.Action = "D";
                                                            grid.bindStore(store);         
                                                            store.filter(function(item){
                                                                return item.get("Action")!= 'D';
                                                            });
                                                        }
                                                        else
                                                        {
                                                            //alert("New");
                                                            store.removeAt(rowIndex);
                                                        }

                                                        // store.removeAt(rowIndex);

                                                        return true;
                                                    }
                                                }, this);
                                            },
                                            icon: '../ITS/resources/images/icons/cancel.png'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'Action',
                                    text: 'Action'
                                }
                            ],
                            plugins: [
                                Ext.create('Ext.grid.plugin.RowEditing', {
                                    pluginId: 'grdSDDetailsPlugin',
                                    clicksToMoveEditor: 1,
                                    listeners: {
                                        validateedit: {
                                            fn: me.onGridroweditingpluginValidateedit,
                                            scope: me
                                        },
                                        canceledit: {
                                            fn: me.onGridroweditingpluginCanceledit,
                                            scope: me
                                        },
                                        beforeedit: {
                                            fn: me.onGridroweditingpluginBeforeEdit,
                                            scope: me
                                        }
                                    }
                                })
                            ],
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'top',
                                    items: [
                                        {
                                            xtype: 'button',
                                            itemId: 'btnAddSDDetails',
                                            iconCls: 'icon-add',
                                            text: 'Add'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'hiddenfield',
                            itemId: 'hdnActionSD',
                            fieldLabel: 'Label'
                        },
                        {
                            xtype: 'hiddenfield',
                            itemId: 'hdnTranNoSD',
                            fieldLabel: 'Label'
                        },
                        {
                            xtype: 'hiddenfield',
                            itemId: 'hdnSeqNoSD',
                            fieldLabel: 'Label'
                        }
                    ]
                },
                {
                    xtype: 'fieldcontainer',
                    height: 23,
                    itemId: 'fCntSD',
                    margin: '10 0 0 0',
                    width: 960,
                    layout: {
                        align: 'stretch',
                        pack: 'end',
                        type: 'hbox'
                    },
                    items: [
                        {
                            xtype: 'button',
                            height: 10,
                            itemId: 'btnSaveSD',
                            iconCls: 'icon-save',
                            text: 'Save'
                        },
                        {
                            xtype: 'splitter'
                        },
                        {
                            xtype: 'button',
                            itemId: 'btnEditSD',
                            iconCls: 'icon-edit',
                            text: 'Edit'
                        },
                        {
                            xtype: 'splitter'
                        },
                        {
                            xtype: 'button',
                            itemId: 'btnDeleteSD',
                            iconCls: 'icon-delete',
                            text: 'Delete'
                        },
                        {
                            xtype: 'splitter'
                        },
                        {
                            xtype: 'button',
                            itemId: 'btnSubmitSD',
                            iconCls: 'icon-ok',
                            text: 'Submit'
                        },
                        {
                            xtype: 'splitter'
                        },
                        {
                            xtype: 'button',
                            itemId: 'btnCancelSD',
                            iconCls: 'icon-cancel',
                            text: 'Cancel'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onGridroweditingpluginValidateedit: function(editor, e, eOpts) {
        //console.log('editor',editor);
        //console.log('e',e);
        var cboStickerType=Ext.ComponentQuery.query('#cboStickerTypeSD')[0];
        var cboOrdeNo=Ext.ComponentQuery.query('#cboOrderNoSD')[0];
        var txtBoxNo=Ext.ComponentQuery.query('#txtBoxNoSD')[0];
        var txtPrefix=Ext.ComponentQuery.query('#txtPrefixSD')[0];
        var txtSeqFrom=Ext.ComponentQuery.query('#txtSequenceFromSD')[0];
        var txtSeqTo=Ext.ComponentQuery.query('#txtSequenceToSD')[0];

        var stickerType=cboStickerType.getValue();
        var ordeNo=cboOrdeNo.getValue();
        var boxNo=txtBoxNo.getValue();
        var prefix=txtPrefix.getValue();
        var seqFrom=txtSeqFrom.getValue();
        var seqTo=txtSeqTo.getValue();
        /*
        var grd= Ext.ComponentQuery.query('#grdSDDetails')[0];
        var store = Ext.getStore('StickerDeliveryDet');

        var cnt=store.data.items.length;

        var dat=store.data.items[e.rowIdx];
        //console.log('act',dat.data.Action);
        var action=dat.data.Action;

        var cancel=false;

        for(var rindx=0;rindx<cnt;rindx++)
        {

            if(e.rowIdx!=rindx)
            {

                var currRowData=store.data.items[0].data;

                var stickerId=currRowData.StickerID;
                var orderNo=currRowData.OrderNo;
                var boxxNo = currRowData.BoxNo;
                var prefixx = currRowData.Prefix;
                var seqF = currRowData.SeqFrom;
                var seqT = currRowData.SeqTo;

                var eStickerId = editor.context.newValues.StickerID;
                var eSeqF = editor.context.newValues.SeqFrom;
                var eSeqT = editor.context.newValues.SeqTo;
                var ePrefix = editor.context.newValues.Prefix;
                // console.log('cAct',currRowData.Action);
                if(action !="E")
                {
                    if(stickerId == eStickerId && prefixx == ePrefix && seqF == eSeqF || seqT == eSeqF )
                    {
                        e.cancel=true;
                        // alert('कृपया अर्को सिक्वेनस फ्रम हाल्नुहोस्');
                        msg('WARNING',"कृपया अर्को सिक्वेनस फ्रम हाल्नुहोस्");
                        return;
                    }
                }

                else
                {
                    cboStickerType.setReadOnly(true);
                    txtPrefix.setReadOnly(true);
                    txtSeqFrom.setReadOnly(true);
                }
            }
        }*/
        var sF=Number(seqFrom);
        var sT=Number(seqTo);

        var errMsg="";
        var errCount=0;

        if(!stickerType)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया स्टिकर किसिम छाल्नुहोस् !<br/>";
        }
        if(!ordeNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया अर्डर नं. छाल्नुहोस् !<br/>";
        }
        if(!boxNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया बक्स नं. हाल्नुहोस् !<br/>";
        }
        if(!prefix)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया प्रिफीक्स्. हाल्नुहोस् !<br/>";
        }
        if(!seqFrom)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया सिक्वेनस फ्रम हाल्नुहोस् !<br/>";
        }
        if(!seqTo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया सिक्वेनस टु हाल्नुहोस !<br/>";
        }

        if(sT<=sF)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया सिक्वेनस टुको भ्यालु सिक्वेनस फ्रम भन्दा बढी हाल्नुहोस !<br/>";
        }
        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }   
        e.cancel=false;
    },

    onGridroweditingpluginCanceledit: function(editor, e, eOpts) {
        var cboStickerType = Ext.ComponentQuery.query("#cboStickerTypeSD")[0].getValue();
        var cboOrderNo = Ext.ComponentQuery.query("#cboOrderNoSD")[0].getValue();

        if(!cboStickerType && !cboOrderNo)
        {
            grid.store.removeAt(grid.rowIdx);
        }
    },

    onGridroweditingpluginBeforeEdit: function(editor, e, eOpts) {
        var hdnAction = Ext.ComponentQuery.query('#hdnActionSD')[0];
        if(hdnAction.lastValue === "D")
        {
            return false;
        }
        else
        {
            return true;
        }
    }

});