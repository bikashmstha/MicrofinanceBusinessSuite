/*
 * File: app/view/VdcEntry.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.VdcEntry', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Action',
        'Ext.selection.RowModel',
        'Ext.grid.plugin.RowEditing',
        'Ext.button.Button',
        'Ext.toolbar.Paging'
    ],

    frame: true,
    title: 'VDC Setup',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    itemId: 'frmVdcEntry',
                    bodyPadding: 10,
                    title: '',
                    layout: {
                        type: 'table',
                        columns: 2
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            hidden: true,
                            itemId: 'txtxSearchVDCName',
                            fieldLabel: 'VDC/NP Name'
                        },
                        {
                            xtype: 'combobox',
                            frame: false,
                            itemId: 'ddlDistrict',
                            fieldLabel: 'District Name',
                            emptyText: '- - - Select- - - ',
                            displayField: 'DistrictDesc',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'VdcDistrictSearchStore',
                            valueField: 'DistrictCode',
                            listeners: {
                                collapse: {
                                    fn: me.onDdlDistrictCollapse,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            itemId: 'txtDistrictName',
                            margin: '0 0 0 5'
                        },
                        {
                            xtype: 'container',
                            colspan: 2,
                            height: 25,
                            layout: {
                                type: 'hbox',
                                align: 'stretch',
                                pack: 'center'
                            }
                        },
                        {
                            xtype: 'gridpanel',
                            colspan: 2,
                            height: 200,
                            itemId: 'grdVDC',
                            margin: '5 0 0 0',
                            width: 591,
                            store: 'VdcEntrySearchStore',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'VDCNPCode',
                                    text: 'VDC NP Code',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtVDCNPCode'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 291,
                                    dataIndex: 'VDCNPDesc',
                                    text: 'VDC NP Description',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtVDCNPDesc'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'Action',
                                    text: 'Action'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var district =Ext.ComponentQuery.query('#ddlDistrict')[0];
                                                if(district.getValue()===null||district.getValue()==='')
                                                {
                                                    msg('WARNING','Please, Select District.');
                                                    return;
                                                }
                                                Ext.Msg.confirm('Confirm Action', 'Do you want to Remove the selected VDC?', function(btn) {
                                                    if(btn == 'yes'){

                                                        var store = Ext.getStore('VdcEntrySearchStore');
                                                        var grd =  Ext.ComponentQuery.query('#grdVDC')[0];
                                                        var row = store.getAt(rowIndex).data;

                                                        var vdcObj ={
                                                            VDCNPCode : row.VDCNPCode,
                                                            VDCNPDesc: row.VDCNPDesc,
                                                            DistrictCode:district.getValue(),
                                                            Action:'D'
                                                        };

                                                        var wMsg='Deleting....';

                                                        var waitSave = watiMsg(wMsg);

                                                        Ext.Ajax.request({
                                                            url: '../Handlers/Common/VdcHandler.ashx',
                                                            params:{method:'Save',Vdc:JSON.stringify(vdcObj)},
                                                            success: function(response){
                                                                waitSave.hide();
                                                                var out=Ext.decode(response.responseText);

                                                                if(out.success)
                                                                {

                                                                    msg("SUCCESS",out.message,function(){
                                                                        //grd.bindStore(store);
                                                                        store.removeAt(rowIndex);
                                                                    });
                                                                }
                                                                else
                                                                {
                                                                    msg("FAILURE",out.message);
                                                                }
                                                            },
                                                            failure: function ( result, request ) {
                                                                waitSave.hide();
                                                                var out=Ext.decode(response.responseText);
                                                                msg("FAILURE",out.message);
                                                            }

                                                        });



                                                        return true;
                                                    }
                                                });
                                            },
                                            icon: '../ITS/resources/images/icons/cancel.png'
                                        }
                                    ]
                                }
                            ],
                            selModel: Ext.create('Ext.selection.RowModel', {

                            }),
                            plugins: [
                                Ext.create('Ext.grid.plugin.RowEditing', {
                                    listeners: {
                                        validateedit: {
                                            fn: me.onRowEditingValidateedit,
                                            scope: me
                                        },
                                        canceledit: {
                                            fn: me.onRowEditingCanceledit,
                                            scope: me
                                        }
                                    }
                                })
                            ],
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'top',
                                    width: 410,
                                    items: [
                                        {
                                            xtype: 'button',
                                            itemId: 'btnAddVDC',
                                            text: 'Add District',
                                            listeners: {
                                                click: {
                                                    fn: me.onBtnAddVDCClick,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    xtype: 'pagingtoolbar',
                                    dock: 'bottom',
                                    width: 360,
                                    displayInfo: true
                                }
                            ]
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFrmVdcEntryAfterRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onDdlDistrictCollapse: function(field, eOpts) {
        var district=Ext.ComponentQuery.query('#ddlDistrict')[0];

        var Vdc ={

                        VdcnpDesc : '',
                        DistrictCode : district.getValue()

        };

        Ext.Ajax.request({
             url:'../Handlers/Common/VdcHandler.ashx',
             params:{method:'GetVDCShort',Vdc:JSON.stringify(Vdc)},
             success: function ( result, request ) {

                  var obj = Ext.decode(result.responseText);
                  if(obj.success === 'true'){
        		  var store=Ext.getStore('VdcEntrySearchStore');
                            store.removeAll();
                            store.add(obj.root);

                  }else{msg('FAILURE','Could Not Load Data');}
             },
             failure: function(form, action) {
                 msg("FAILURE","Could Not Load Data");    }
         });
    },

    onRowEditingValidateedit: function(editor, e, eOpts) {

        var vdcNpCode=Ext.ComponentQuery.query('#txtVDCNPCode')[0];
        var vdcNpDesc=Ext.ComponentQuery.query('#txtVDCNPDesc')[0];
        var districtCode=Ext.ComponentQuery.query('#ddlDistrict')[0];

        var vdcObj ={
                        VdcnpCode : vdcNpCode.getValue(),
                        VdcnpDesc : vdcNpDesc.getValue(),
                        DistrictCode : districtCode.getValue(),
                        Action:e.newValues.Action
        };

        var waitSave = watiMsg('Please wait ...');
        Ext.Ajax.request({
             url: '../Handlers/Common/VdcHandler.ashx',
             params:{method:'Save',Vdc:JSON.stringify(vdcObj)},
             success: function ( response, request ) {
                waitSave.hide();
                    var out=Ext.decode(response.responseText);
                    console.log(out);

                    if(out.success==="true")
                        {
                           msg("SUCCESS",out.message,function(){
                                        var grd = Ext.ComponentQuery.query('#grdVDC')[0];

                                        var record = grd.getSelectionModel().getSelection()[0];
                                        record.set('Action','U');

                                    });
                      }
                        else
                            {
                                msg("FAILURE",out.message);
                            }
                    },
                    failure: function ( response, request ) {
                       waitSave.hide();
                        var out=Ext.decode(response.responseText);
                        msg("FAILURE",out.message);
                    }

                });


    },

    onRowEditingCanceledit: function(editor, e, eOpts) {

    },

    onBtnAddVDCClick: function(button, e, eOpts) {
        var ddlDistrict=Ext.ComponentQuery.query('#ddlDistrict')[0];
        if(ddlDistrict.getValue()===null || ddlDistrict.getValue()==='')
            {
                msg('WARNING','Please, Select District');
                return;
            }
        var store=Ext.getStore('VdcEntrySearchStore');
        var Vdc ={
                        VdcnpCode : "",
                        VdcnpDesc : "",
                        DistrictCode : "",
        				Action:"I"
        };

        store.add(Vdc);

    },

    onFrmVdcEntryAfterRender: function(component, eOpts) {
        var waitSave = watiMsg('Please wait ...');
                Ext.Ajax.request({
                     url: '../Handlers/Common/DistrictHandler.ashx',
                     params:{method:'SearchDistrict',districtCode:'',districtName:''},
                     success: function ( result, request ) {
                waitSave.hide();
                          var obj = Ext.decode(result.responseText);
                          if(obj.success === 'true'){
                              var store =Ext.getStore('VdcDistrictSearchStore');
                              store.removeAll();
                              store.add(obj.root);



                          } else {

                          }

                     },
                     failure: function(form, action) {
                     }
                });

        var vdcStore=Ext.getStore('VdcEntrySearchStore');
        vdcStore.removeAll();

    }

});