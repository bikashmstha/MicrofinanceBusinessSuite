{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "MFSavingAccountOpen",
        "stores": [
            "CenterCodeStore",
            "SearchMemberStore",
            "SavingProductStore",
            "ReferenceShortStore",
            "TransferTypeRefShortStore",
            "ContraAccountStore",
            "AccountStatusStore",
            "EmployeeSearchShortStore",
            "SavingAccountNumberSearchStore",
            "MFSavingAccOpenStore"
        ]
    },
    "configAlternates": {
        "designer|userClassName": "string",
        "stores": "typedarray"
    },
    "name": "MyController",
    "designerId": "9d8a41df-2bd8-4805-8969-fdaebf220d4e",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtCenterCode",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField217",
                "fn": "onTxtCenterCodeAfterRender",
                "implHandler": [
                    "component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SelectCenterPopup',{",
                    "",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });",
                    ""
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onTxtCenterCodeAfterRender",
            "designerId": "75e3054e-83fb-43d0-ac0e-d6138dab2160"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtMemberCode",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField219",
                "fn": "onTxtMemberCodeAfterRender",
                "implHandler": [
                    "component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SelectMFAccSavOpenMemberPopup',{",
                    "",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });",
                    ""
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onTxtMemberCodeAfterRender",
            "designerId": "c47d9703-ace9-4498-9ff2-4edfa6189d6d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtSavingProductCode",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField221",
                "fn": "onTxtSavingProductCodeAfterRender",
                "implHandler": [
                    "component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SelectSavingProductPopup',{",
                    "",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });",
                    ""
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onTxtSavingProductCodeAfterRender",
            "designerId": "dc085976-879d-4f85-9231-6f88c8ac2926"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtEmpId",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField224",
                "fn": "onTxtEmpIdAfterRender",
                "implHandler": [
                    "",
                    "component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SelectMFEmployeePopup',{",
                    "",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });"
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onTxtEmpIdAfterRender",
            "designerId": "e2767fcd-382f-40f6-81e5-bb013cf464ee"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnOpenAccount",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton31",
                "fn": "onBtnOpenAccountClick",
                "implHandler": [
                    "var obj={",
                    "    ClientNo : Ext.ComponentQuery.query('#txtMemberCode')[0].ClientNo ,",
                    "CenterCode : Ext.ComponentQuery.query('#txtCenterCode')[0].getValue(),",
                    "//ClientCenter : Ext.ComponentQuery.query('#')[0].getValue(),\t",
                    "SavingProductCode : Ext.ComponentQuery.query('#txtSavingProductCode')[0].getValue(),\t",
                    "AccountOpenDate : Ext.ComponentQuery.query('#txtAccOpenDateAD')[0].getValue(),\t",
                    "AccountStatus : Ext.ComponentQuery.query('#ddlAccStatus')[0].getValue(),\t",
                    "IntSchemeCode : Ext.ComponentQuery.query('#txtInterestSchemeCode')[0].getValue(),",
                    "CurrentBalance : Ext.ComponentQuery.query('#txtCurrentBalance')[0].getValue(),\t",
                    "SigneeName1 : Ext.ComponentQuery.query('#txtSigneeName')[0].getValue(),",
                    "SigneeName2 : '',//Ext.ComponentQuery.query('#')[0].getValue(),\t",
                    "ReasonForClosing :'',// Ext.ComponentQuery.query('#')[0].getValue(),\t",
                    "DueMandatoryAmount : Ext.ComponentQuery.query('#txtDueMandatoryAmt')[0].getValue(),",
                    "AccClosingCharge : Ext.ComponentQuery.query('#txtACClosingCharge')[0].getValue(),",
                    "TranOfficeCode : getOfficeCode(),\t",
                    "FixedCollectAmount : Ext.ComponentQuery.query('#txtFixedCollectionAmt')[0].getValue(),",
                    "DepositPeriod : Ext.ComponentQuery.query('#txtDepositPeriod')[0].getValue(),\t",
                    "EmployeeId : Ext.ComponentQuery.query('#txtEmpId')[0].getValue(),\t",
                    "ReferenceAccountNo :'',// Ext.ComponentQuery.query('#')[0].getValue(),",
                    "InsurancePolicyNo : Ext.ComponentQuery.query('#txtInsurancePolicyNo')[0].getValue(),",
                    "InsurancePolicyAmt : Ext.ComponentQuery.query('#txtInsurancePolicyAmt')[0].getValue(),\t",
                    "CollectionType : Ext.ComponentQuery.query('#ddlCollectionType')[0].getValue(),\t",
                    "DepositPeriodType :'M',// Ext.ComponentQuery.query('#')[0].getValue(),\t",
                    "AmtAtMaturity : Ext.ComponentQuery.query('#txtAmtAtMaturity')[0].getValue(),\t",
                    "MaturityDate : Ext.ComponentQuery.query('#txtMaturityDateAD')[0].getValue(),",
                    "InterestRate : Ext.ComponentQuery.query('#txtInterestRate')[0].getValue(),\t",
                    "TransferIntPeriodic : Ext.ComponentQuery.query('#ddlTransferType')[0].getValue(),\t",
                    "ThirdPartyData :'',// Ext.ComponentQuery.query('#')[0].getValue()\t",
                    "CreatedBy:getCurrentUser(),",
                    "ContraAccount : Ext.ComponentQuery.query('#ddlContraAccount')[0].getValue(),",
                    "Action : 'I'\t",
                    "\t",
                    "\t",
                    "};",
                    "",
                    "\t var waitSave = watiMsg('Saving. Please wait ...');",
                    "Ext.Ajax.request({",
                    "     url:'../Handlers/Finance/Transaction/SavingTransaction/ClientSavingAccountHandler.ashx',",
                    "     params:{method:'Save',clientSavingAccount:JSON.stringify(obj)},",
                    "     success: function ( result, request ) {",
                    "waitSave.hide();",
                    "          var out = Ext.decode(result.responseText);",
                    "\t\t\t\tif(out.success==='true'){",
                    "\t\t\t\t\tmsg('SUCCESS',out.message);",
                    "\t\t\t\t\t\t}",
                    "",
                    "\t\t\t\telse{msg('FAILURE',out.message);",
                    "",
                    "",
                    "          }",
                    "     },",
                    "     failure: function(form, action) {",
                    "waitSave.hide();var out=Ext.decode(response.responseText);msg('FAILURE',out.message);     }",
                    "});",
                    "\t",
                    "\t",
                    "\t"
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onBtnOpenAccountClick",
            "designerId": "b452171b-ed9e-45ab-a967-a5d168e8469a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtSearchSavingAccNo",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField246",
                "fn": "onTxtSearchSavingAccNoAfterRender",
                "implHandler": [
                    "component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SelectSavingAccNoPopup',{",
                    "",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });",
                    ""
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onTxtSearchSavingAccNoAfterRender",
            "designerId": "e07836f0-f2fa-49e9-950a-6b61dec45a96"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnSearch",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton34",
                "fn": "onBtnSearchClick",
                "implHandler": [
                    "Ext.Ajax.request({",
                    "    url:'../Handlers/Finance/Transaction/SavingTransaction/AccountOpenDetailHandler.ashx',",
                    "    params:{method:'GetAccountOpenDetail',",
                    "           withdrawlNo:'',",
                    "            offCode:getOfficeCode(),",
                    "            savingAccountNo:Ext.ComponentQuery.query('#txtSearchSavingAccNo')[0].getValue(),",
                    "            clientName:Ext.ComponentQuery.query('#txtMemberName')[0].getValue(),",
                    "            fromDate :Ext.ComponentQuery.query('#txtAccOpenDateFromBS')[0].getValue(),",
                    "            toDate :Ext.ComponentQuery.query('#txtAccOpenDateToBS')[0].getValue()",
                    "           },",
                    "    success: function ( result, request ) {",
                    "",
                    "        var obj = Ext.decode(result.responseText);",
                    "        if(obj.success === 'true'){",
                    "            //console.log(\"Resu\",obj.root);",
                    "            var store =Ext.getStore('MFSavingAccOpenStore');",
                    "            store.removeAll();",
                    "            store.add(obj.root);",
                    "",
                    "",
                    "        }else{msg('FAILURE','Could Not Load Data');}",
                    "    },",
                    "    failure: function(form, action) {",
                    "        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onBtnSearchClick",
            "designerId": "f1cfce57-5c83-4c8f-be09-2e01a6b8f872"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#frmMFSavingAccountOpen",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyForm14",
                "fn": "onFrmMFSavingAccountOpenAfterRender",
                "implHandler": [
                    "Ext.ComponentQuery.query('#txtAccOpenDateBS')[0].setValue(getMisDateBS());",
                    "Ext.ComponentQuery.query('#txtAccOpenDateAD')[0].setValue(getMisDateAD());",
                    "",
                    "",
                    "//GET FOR COLLECTION TYPE",
                    "",
                    "Ext.Ajax.request({",
                    "    url:'../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',",
                    "    params:{method:'GetReferenceDetailListShort',referenceCode:'INSTALLMENT_TYPE'",
                    "           },",
                    "    success: function ( result, request ) {",
                    "",
                    "        var obj = Ext.decode(result.responseText);",
                    "        if(obj.success === 'true'){",
                    "            //console.log(\"Resu\",obj.root);",
                    "            var store =Ext.getStore('ReferenceShortStore');",
                    "            store.removeAll();",
                    "            store.add(obj.root);",
                    "",
                    "",
                    "        }else{msg('FAILURE','Could Not Load Data');}",
                    "    },",
                    "    failure: function(form, action) {",
                    "        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "});",
                    "",
                    "//GET FOR TRANSFER TYPE",
                    "",
                    "Ext.Ajax.request({",
                    "    url:'../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',",
                    "    params:{method:'GetReferenceDetailListShort',referenceCode:'TRANSFER_INT_PERIODIC'",
                    "           },",
                    "    success: function ( result, request ) {",
                    "",
                    "        var obj = Ext.decode(result.responseText);",
                    "        if(obj.success === 'true'){",
                    "            //console.log(\"Resu\",obj.root);",
                    "            var store =Ext.getStore('TransferTypeRefShortStore');",
                    "            store.removeAll();",
                    "            store.add(obj.root);",
                    "",
                    "",
                    "        }else{msg('FAILURE','Could Not Load Data');}",
                    "    },",
                    "    failure: function(form, action) {",
                    "        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "});",
                    "",
                    "//GET FOR ACCOUNT STATUS",
                    "",
                    "",
                    "Ext.Ajax.request({",
                    "    url:'../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',",
                    "    params:{method:'GetReferenceDetailListShort',referenceCode:'SAVING_ACCOUNT_STATUS'",
                    "           },",
                    "    success: function ( result, request ) {",
                    "",
                    "        var obj = Ext.decode(result.responseText);",
                    "        if(obj.success === 'true'){",
                    "            //console.log(\"Resu\",obj.root);",
                    "            var store =Ext.getStore('AccountStatusStore');",
                    "            store.removeAll();",
                    "            store.add(obj.root);",
                    "            Ext.ComponentQuery.query('#ddlAccStatus')[0].select('A');",
                    "",
                    "",
                    "        }else{msg('FAILURE','Could Not Load Data');}",
                    "    },",
                    "    failure: function(form, action) {",
                    "        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "});",
                    "",
                    "//GET FOR CONTRA ACCOUNT",
                    "",
                    "Ext.Ajax.request({",
                    "    url:'../Handlers/Finance/Maintenance/AccountHeadEntryHandler.ashx',",
                    "    params:{method:'GetContraAccount',offCode:getOfficeCode(), accountDesc:null",
                    "           },",
                    "    success: function ( result, request ) {",
                    "",
                    "        var obj = Ext.decode(result.responseText);",
                    "        if(obj.success === 'true'){",
                    "            //console.log(\"Resu\",obj.root);",
                    "            var store =Ext.getStore('ContraAccountStore');",
                    "            store.removeAll();",
                    "            store.add(obj.root);",
                    "",
                    "",
                    "        }else{msg('FAILURE','Could Not Load Data');}",
                    "    },",
                    "    failure: function(form, action) {",
                    "        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "});",
                    ""
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onFrmMFSavingAccountOpenAfterRender",
            "designerId": "9cd54943-6ed6-41e4-a0c5-4036c0d75ac7"
        }
    ]
}