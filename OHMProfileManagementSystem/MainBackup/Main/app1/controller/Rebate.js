/*
 * File: app/controller/Rebate.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.Rebate', {
    extend: 'Ext.app.Controller',

    stores: [
        'RebateDetails',
        'RebateHeads',
        'FilingPeriodStore',
        'PeriodStore',
        'RebateOn'
    ],

    onTxtRebatePANKeypress: function(textfield, e, eOpts) {
        // for Panno and tradename
        var name = Ext.ComponentQuery.query('#txtRebatePAN')[0].getValue();


        if(e.keyCode === 13 || e.keyCode === 9)
        {
            this.loadPanDetails();
        }

    },

    onBtnRebateAddClick: function(button, e, eOpts) {
        var me = this;
        var txtRebatePAN = Ext.ComponentQuery.query('#txtRebatePAN')[0].getValue();
        var txtaccType = Ext.ComponentQuery.query('#txtAccType')[0].getValue();
        var txtEffectiveRebateDate = Ext.ComponentQuery.query('#txtEffectiveRebateDate')[0].getValue();
        var txtSeqNo = Ext.ComponentQuery.query('#txtRebateSeq')[0].getValue();

        var count = 0;
        var errorMsg = "";

        if(txtRebatePAN === "")
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया स्था . ले . नं . भर्नुहोस् !!!";

        }

        if(txtaccType === "")
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया खाताको किसिम  भर्नुहोस् !!!";

        }

        if(txtEffectiveRebateDate === "")
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ")कृपया मिनाहा मिति भर्नुहोस् !!! ";

        }

        if(count >0)
        {
            msg("WARNING",errorMsg);
            return false;
        }


        var grd = Ext.ComponentQuery.query('#grdRebateDetails')[0];
        var rec={
            PAN:'',
            AcctType:'',
            RebateDate:'',
            SeqNo:null,
            DSeqNo:null,
            TransDate:'',
            RebateOn:'',
            Amount:null,
            TaxYear:null,
            Period:null,
            FilePer:'',
            TranNo:null,
            Action:''
        };
        if(grd.store.add(rec))
        {
            var btnRebateAdd= Ext.ComponentQuery.query('#btnRebateAdd')[0];
            btnRebateAdd.disable(true);
        }
        //grd.store.add(rec);

        //console.log(rec);

        var col = grd.headerCt.getHeaderAtIndex(0);
        var recd = grd.store.data.items;
        var record = recd[recd.length-1];
        grd.getPlugin('plugingrdRebateDetails').startEdit(record, col);
    },

    onCmbRebateFilingPeriodChange: function(field, newValue, oldValue, eOpts) {
        var cboFilingPeriod = Ext.ComponentQuery.query("#cmbRebateFilingPeriod")[0];
        var record = cboFilingPeriod.findRecord(cboFilingPeriod.valueField || cboFilingPeriod.displayField,newValue); 

        var cboPeriod = Ext.ComponentQuery.query("#cmbRebatePeriod")[0];
        cboPeriod.setValue('');


        if(record === false)
        {
            return;
        }
        else
        {
            cboPeriod.store.loadData(record.data.Period);
        }


    },

    onRebateAfterRender: function(component, eOpts) {
        var strFilingPeriod = Ext.getStore("FilingPeriodStore");
        strFilingPeriod.load();

    },

    onBtnCancelRbtClick: function(button, e, eOpts) {
        var txtSeqNo = Ext.ComponentQuery.query('#txtRebateSeq')[0];
        txtSeqNo.setDisabled(true);
        this.ClearControl();

    },

    onBtnSubmitRbtClick: function(button, e, eOpts) {
        //alert("First name must be filled out");
        var me = this;
        var count = 0;
        var errorMsg = "";
        // Ext.ComponentQuery.query('#txtRebateSeq')[0].disabled=false;
        var frmRebate = Ext.ComponentQuery.query('#frmPnlRebateTop')[0].getForm();
        var action = Ext.ComponentQuery.query('#hdnRebateAction')[0].getValue();
        var txtRebatePAN = Ext.ComponentQuery.query('#txtRebatePAN')[0].getValue();
        var txtaccType = Ext.ComponentQuery.query('#txtAccType')[0].getValue();
        var txtEffectiveRebateDate = Ext.ComponentQuery.query('#txtEffectiveRebateDate')[0].getValue();
        var txtSeqNo = Ext.ComponentQuery.query('#txtRebateSeq')[0];


        /*
        if(!frmRebate.isValid())
        {
        msg("WARNING","कृपया छूटेका विवरण भर्नुहोस्!!!");   
        return;

        }
        */


        if(txtRebatePAN === "" || txtRebatePAN === null)
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया स्था . ले . नं . भर्नुहोस् !!!";

        }

        if(txtaccType === ""  || txtaccType === null)
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया खाताको किसिम  भर्नुहोस् !!!";

        }

        if(txtEffectiveRebateDate === "" || txtEffectiveRebateDate === null)
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + " ) कृपया मिनाहा मिति भर्नुहोस् !!! ";

        }

        if(count >0)
        {
            msg("WARNING",errorMsg);
            return false;
        }





        if(action === "D")
        {

            var RebatePAN = Ext.ComponentQuery.query('#txtRebatePAN')[0].getValue();
            var AccType = Ext.ComponentQuery.query('#txtAccType')[0].getValue();
            var EffectiveRebateDate = Ext.ComponentQuery.query('#txtEffectiveRebateDate')[0].getValue();
            var SeqNo = Ext.ComponentQuery.query('#txtRebateSeq')[0].getValue();

            //------------------------------------------------------
            // NB: Posting Data to Server
            //------------------------------------------------------

            Ext.Ajax.request({
                url:"../Handlers/VAT/VatRebate/RebateHeadsHandler.ashx?method=DeleteRebateHeads" ,
                params:{pan:RebatePAN,actType:AccType,rebateDate:EffectiveRebateDate,seqno:SeqNo},
                success: function ( result, request ) {

                    var obj = Ext.decode(result.responseText);



                    msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);

                    if(obj.success === "false") return;

                    me.ClearControl();


                },
                failure: function ( result, request ) {

                    var obj = Ext.decode(result.responseText);

                    msg("FAILURE",obj.message);
                    return;
                }

            });


        }

        else
        {
            Ext.Msg.confirm('Confirm Action', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
                if(btn == 'yes'){

                    me.SaveRebate("F"); 

                    return true;
                }
            }, this);


        }

    },

    onGrdRebateDetailsBeforeRender: function(component, eOpts) {

        var grid = Ext.ComponentQuery.query('#grdRebateDetails')[0];


        grid.columns[2].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";   

            var strFilPeriod = Ext.getStore("FilingPeriodStore");                
            var index = strFilPeriod.find('FilPeriod',value);
            var rec = strFilPeriod.getAt(index);

            var strPeriod = Ext.getStore("PeriodStore");

            var items=Ext.getStore('FilingPeriodStore').data.items;    


            for(var i=0;i<items.length;i++)
            {

                if(items[i].data.FilPeriod === value)
                {
                    temp=items[i].data.FilPeriodDesc;
                    break;
                }        
            }   


            // console.log("rec",rec);

            if(rec !== false && rec !== undefined)
            {
                strPeriod.loadData(rec.data.Period);
            } 


            return temp;
        };


        grid.columns[3].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";    

            var items = Ext.getStore('PeriodStore').data.items;

            for(var i=0;i<items.length;i++)
            {        
                if(items[i].data.Period == value)
                {           
                    temp=items[i].data.PeriodDesc;
                    break;
                }        
            }

            return temp;



        };
        grid.columns[4].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";    

            var items = Ext.getStore('RebateOn').data.items;

            for(var i=0;i<items.length;i++)
            {        
                if(items[i].data.RebateOnID == value)
                {           
                    temp=items[i].data.RebateOnName;
                    break;
                }        
            }

            return temp;



        };



    },

    onBtnRbtSaveClick: function(button, e, eOpts) {
        /*
        var frmRebate = Ext.ComponentQuery.query('#frmPnlRebateTop')[0].getForm();
        var action = Ext.ComponentQuery.query('#hdnRebateAction')[0].getValue();


        if(!frmRebate.isValid())
        {
        msg("WARNING","कृपया छूटेका विवरण भर्नुहोस्!!!");   
        return;

        }
        else
        {
        this.SaveRebate("I"); 
        }

        */



        this.SaveRebate("I"); 

    },

    onBtnRbtEditClick: function(button, e, eOpts) {

        var offCode=Ext.get('offCode').dom.innerHTML;
        Ext.ComponentQuery.query('#txtRebateOfficeCode')[0].setValue(offCode);
        //Ext.ComponentQuery.query('#btnRbtEdit')[0].disabled=true;
        Ext.ComponentQuery.query('#txtRebateSeq')[0].disabled=false;
        var hdnAction = Ext.ComponentQuery.query('#hdnRebateAction')[0];
        var lblRebateAction = Ext.ComponentQuery.query('#hdnlblRebateAction')[0];
        var txtRebatePAN = Ext.ComponentQuery.query('#txtRebatePAN')[0];
        var txtaccType = Ext.ComponentQuery.query('#txtAccType')[0];
        var txtEffectiveRebateDate = Ext.ComponentQuery.query('#txtEffectiveRebateDate')[0];

        txtRebatePAN.setReadOnly(false);
        txtRebatePAN.focus(true);
        var txtSeqNo = Ext.ComponentQuery.query('#txtRebateSeq')[0];
        txtSeqNo.setDisabled(false);
        //txtEffectiveRebateDate.setReadOnly(false);
        //txtEffectiveRebateDate.focus(true);
        hdnAction.setValue("E");
        lblRebateAction.setValue("Updating ..  कृपया स्था . ले . नं .,मिनाहा मिति र क्र.स. भर्नुहोस् र  क्र.स. मा ईन्टर थिच्नुहोस्....");

    },

    onGrdRebateDetailsAfterRender: function(component, eOpts) {


        var grd = Ext.ComponentQuery.query('#grdRebateDetails')[0];
        var txtAccType = Ext.ComponentQuery.query('#txtAccType')[0];
        //var txtRebateOfficeCode = Ext.ComponentQuery.query('#txtRebateOfficeCode')[0];
        txtAccType.setValue("00");



        grd.getStore().loadData([],false);

        var offCode=Ext.get('offCode').dom.innerHTML;
        Ext.ComponentQuery.query('#txtRebateOfficeCode')[0].setValue(offCode);
        /*
        grd.on('beforeedit', function(editor,e) {
        var valid=true;

        });

        */
        grd.on('validateedit', function(editor, e) {



        });

        grd.getPlugin('plugingrdRebateDetails').on('canceledit',function(e){    



        });


    },

    onBtnRbtDelClick: function(button, e, eOpts) {

        var txtSeqNo = Ext.ComponentQuery.query('#txtRebateSeq')[0];
        txtSeqNo.setDisabled(false);
        var hdnAction = Ext.ComponentQuery.query('#hdnRebateAction')[0];
        var lblRebateAction = Ext.ComponentQuery.query('#hdnlblRebateAction')[0];

        var txtRebatePAN = Ext.ComponentQuery.query('#txtRebatePAN')[0];

        var txtEffectiveRebateDate = Ext.ComponentQuery.query('#txtEffectiveRebateDate')[0];

        txtEffectiveRebateDate.setReadOnly(false);
        txtRebatePAN.focus(true);
        hdnAction.setValue("D");
        lblRebateAction.setValue("Deleting ...  कृपया स्था . ले . नं .,मिनहा मिति,क्र.स. भर्नुहोस् र क्र.स. मा ईन्टर थिच्नुहोस्....");

    },

    onTxtRebatePANBlur: function(component, e, eOpts) {
        this.loadPanDetails();
    },

    onTxtRebateSeqKeypress: function(textfield, e, eOpts) {
        var me = this;
        var loadMsg = "";
        var count = 0;
        var errorMsg = "";


        Ext.getStore('RebateDetails').loadData([],false);
        if(e.keyCode === 13 || e.keyCode === 9)
        {
            Ext.getStore('RebateDetails').loadData([],false);

            var txtRebatePAN = Ext.ComponentQuery.query('#txtRebatePAN')[0].getValue();
            var txtEffectiveRebateDate = Ext.ComponentQuery.query('#txtEffectiveRebateDate')[0].getValue();
            var txtaccTypeVal = Ext.ComponentQuery.query('#txtAccType')[0].getValue();
            var txtseqNo = Ext.ComponentQuery.query('#txtRebateSeq')[0].getValue();



            if(txtRebatePAN === "" || txtRebatePAN === null )
            {

                count++;
                errorMsg = errorMsg +'<br/>'+ count + ") कृपया स्था . ले . नं . भर्नुहोस् !!!";

            }

            if(txtaccTypeVal === ""  || txtaccTypeVal === null)
            {

                count++;
                errorMsg = errorMsg +'<br/>'+ count + ") कृपया खाताको किसिम  भर्नुहोस् !!!";

            }

            if(txtEffectiveRebateDate === "" || txtEffectiveRebateDate === "")
            {

                count++;
                errorMsg = errorMsg +'<br/>'+ count + ") कृपया मिनाहा मिति भर्नुहोस् !!! ";

            }

            if(txtseqNo === "" || txtseqNo === null)
            {

                count++;
                errorMsg = errorMsg +'<br/>'+ count + ") कृपया क्र.स. भर्नुहोस् !!! ";

            }   




            if(count >0)
            {
                msg("WARNING",errorMsg);
                return false;
            }


            var btnRbtSave = Ext.ComponentQuery.query("#btnRbtSave")[0];
            var btnSubmitRbt = Ext.ComponentQuery.query("#btnSubmitRbt")[0];
            var btnRbtDel = Ext.ComponentQuery.query("#btnRbtDel")[0];
            var btnRebateAdd= Ext.ComponentQuery.query('#btnRebateAdd')[0];

            var wait = watiMsg('loading ...');

            Ext.Ajax.request({
                url:"../Handlers/VAT/VatRebate/RebateHeadsHandler.ashx?method=GetRebateHeads" ,
                params:{pan:txtRebatePAN,acctType:txtaccTypeVal,rebateDate:txtEffectiveRebateDate,seqno:txtseqNo},
                success: function ( result, request ) 
                {            

                    wait.hide();            
                    var grd = Ext.ComponentQuery.query('#grdRebateDetails')[0];
                    var obj = Ext.decode(result.responseText);            

                    if(obj.success === "false")
                    {   

                        if(obj.message === "D") 
                        {


                            btnRbtDel.setDisabled(true);
                            btnRbtSave.setDisabled(true);
                            btnSubmitRbt.setDisabled(true);
                            btnRebateAdd.setDisabled(true);

                            msg("WARNING","This Record is already Deleted !!!");

                            return;                
                        }
                        else
                        {

                            msg("WARNING",obj.message);
                            return;

                        }
                    }


                    var txtRebateOfficeCode = Ext.ComponentQuery.query('#txtRebateOfficeCode')[0];
                    var txtRebatePAN = Ext.ComponentQuery.query('#txtRebatePAN')[0];
                    var txtRebateTradeName = Ext.ComponentQuery.query('#txtRebateTradeName')[0];
                    var txtEffectiveRebateDate = Ext.ComponentQuery.query('#txtEffectiveRebateDate')[0];
                    var txtRebateReason = Ext.ComponentQuery.query('#txtRebateReason')[0];
                    var action = Ext.ComponentQuery.query('#hdnRebateAction')[0];
                    var txtaccType = Ext.ComponentQuery.query('#txtAccType')[0];
                    var hdnTranNo = Ext.ComponentQuery.query('#hdnRebateTranNo')[0];
                    var hdnRebateregistrationDate = Ext.ComponentQuery.query('#hdnRebateregistrationDate')[0];


                    var store = Ext.getStore('RebateDetails');

                    var data = obj.root; 

                    txtRebateOfficeCode.setValue(data.OfficeCode);
                    txtRebatePAN.setValue(data.PAN);
                    txtEffectiveRebateDate.setValue(data.RebateDate);
                    txtRebateReason.setValue(data.RebateReason);
                    txtaccType.setValue(data.AcctType);
                    hdnTranNo.setValue(data.TranNo);

                    LoadTaxpayerInfoWithValidPan(data.PAN,"00",function(data){


                        var rec = data.root.Taxpayer;
                        var addr = rec.BusinessAddress.Address;
                        var office = rec.Office;

                        txtRebateTradeName.setValue(rec.Name);
                        hdnRebateregistrationDate.setValue(rec.RegistrationDate);


                    });

                    //this.loadPanDetails();

                    if(action.getValue() !== "D")
                    {
                        action.setValue(data.Action);
                    }


                    store.add(data.RebateDetails);   

                    store.each(function (rec) {

                        var taxYear = rec.get('TaxYear') === ""? null:rec.get('TaxYear');
                        var amount = rec.get('Amount') === ""? null:rec.get('Amount');
                        var period = rec.get('Period') === ""? null:rec.get('Period');

                        rec.data.TaxYear = taxYear;
                        rec.data.Amount = amount;
                        rec.data.Period = period;


                    });

                    grd.bindStore(store);


                    if(obj.message === "F" || data.RStatus === "F") 
                    {

                        btnRbtDel.setDisabled(true);
                        btnRbtSave.setDisabled(true);
                        btnSubmitRbt.setDisabled(true);
                        btnRebateAdd.setDisabled(true);
                        msg("WARNING","This Record is already Finalized !!!");

                        return;                
                    }




                },
                failure: function ( result, request ) {

                    wait.hide();


                    msg("FAILURE","Error in Fetching Data !!!");
                }
            });

        }

    },

    onPnlRebateAfterRender: function(component, eOpts) {
        var me = this;
        Ext.getStore('RebateDetails').loadData([],false);

        var objParam = Ext.ComponentQuery.query('#pnlRebate')[0];

        var hdnRebateReadOnly = Ext.ComponentQuery.query('#hdnRebateReadOnly')[0];

        hdnRebateReadOnly.setValue('R');

        if (!objParam.extraParam)
        {
            hdnRebateReadOnly.setValue("");

            return;
        }

        var param = objParam.extraParam.params;
        var tranNo = param.tranNo;

        me.LoadRebateByTranNo(tranNo);
    },

    loadPanDetails: function() {
        //this.clearControls("Pan");

        //var isValid = false;
        var txtPanRebate = Ext.ComponentQuery.query("#txtRebatePAN")[0];
        var txtRebateTradeName = Ext.ComponentQuery.query("#txtRebateTradeName")[0];
        var offCode = Ext.ComponentQuery.query('#txtRebateOfficeCode')[0].getValue();
        var hdnRebateregistrationDate = Ext.ComponentQuery.query('#hdnRebateregistrationDate')[0];
        var accType = Ext.ComponentQuery.query('#txtAccType')[0].getValue();


        if(txtPanRebate.getValue() === "")
        {
            //  msg("WARNING","Please Enter PAN !!!");
            return;
        }


        LoadTaxpayerInfoWithValidPan(txtPanRebate.getValue(),accType,function(data){


            var rec = data.root.Taxpayer;
            var addr = rec.BusinessAddress.Address;
            var office = rec.Office;




            if(rec.AcctStatus === "D")
            {
                msg("WARNING","PAN is Deactivated !!!");
                return;
            }


            if(offCode != office.OfficeCode)
            {
                msg("WARNING","PAN is not Registered in this office !!!");

                return;
            }



            txtRebateTradeName.setValue(rec.Name);
            txtRebateTradeName.setReadOnly(true);

            //txtRebateOfficeCode.setValue(office.OfficeCode);
            //txtRebateOfficeCode.setReadOnly(true);

            hdnRebateregistrationDate.setValue(rec.RegistrationDate);



        });





    },

    ClearControl: function() {
        var txtRebateOfficeCode = Ext.ComponentQuery.query('#txtRebateOfficeCode')[0];
        var txtRebatePAN = Ext.ComponentQuery.query('#txtRebatePAN')[0];
        var txtRebateTradeName = Ext.ComponentQuery.query('#txtRebateTradeName')[0];
        var txtEffectiveRebateDate = Ext.ComponentQuery.query('#txtEffectiveRebateDate')[0];
        var txtRebateReason = Ext.ComponentQuery.query('#txtRebateReason')[0];
        var txtaccType = Ext.ComponentQuery.query('#txtAccType')[0];
        var txtseqNo = Ext.ComponentQuery.query('#txtRebateSeq')[0];
        var hdnAction = Ext.ComponentQuery.query('#hdnRebateAction')[0];
        var lblRebateAction = Ext.ComponentQuery.query('#hdnlblRebateAction')[0];
        var hdnRebateregistrationDate = Ext.ComponentQuery.query('#hdnRebateregistrationDate')[0];

        var btnRbtSave = Ext.ComponentQuery.query("#btnRbtSave")[0];
        var btnSubmitRbt = Ext.ComponentQuery.query("#btnSubmitRbt")[0];
        var btnRbtDel = Ext.ComponentQuery.query("#btnRbtDel")[0];
        btnRbtDel.setDisabled(false);
        btnRbtSave.setDisabled(false);
        btnSubmitRbt.setDisabled(false);

        var btnRebateAdd= Ext.ComponentQuery.query('#btnRebateAdd')[0];
        btnRebateAdd.setDisabled(false);


        //txtRebateOfficeCode.setValue("");
        txtRebatePAN.setValue("");
        txtRebatePAN.clearInvalid();
        txtRebateTradeName.setValue("");
        txtEffectiveRebateDate.setValue("");
        txtEffectiveRebateDate.clearInvalid();
        txtseqNo.setValue("");
        //txtseqNo.setDisabled(true);
        txtRebateReason.setValue("");
        //txtaccType.setValue("00");
        //txtaccType.clearInvalid();
        hdnAction.setValue("");
        lblRebateAction.setValue("");
        hdnRebateregistrationDate.setValue("");
        Ext.getStore('RebateDetails').loadData([],false);







    },

    SaveRebate: function(rStatus) {
        var me = this;
        var loadMsg = "";

        var RebateOfficeCode = Ext.ComponentQuery.query('#txtRebateOfficeCode')[0].getValue();
        var RebatePAN = Ext.ComponentQuery.query('#txtRebatePAN')[0].getValue();
        var RebateTradeName = Ext.ComponentQuery.query('#txtRebateTradeName')[0].getValue();
        var EffectiveRebateDate = Ext.ComponentQuery.query('#txtEffectiveRebateDate')[0].getValue();
        var RebateReason = Ext.ComponentQuery.query('#txtRebateReason')[0].getValue();
        var action = Ext.ComponentQuery.query('#hdnRebateAction')[0].getValue();
        var accType = Ext.ComponentQuery.query('#txtAccType')[0].getValue();
        var seqNo = Ext.ComponentQuery.query('#txtRebateSeq')[0].getValue();
        var tranNo = Ext.ComponentQuery.query('#hdnRebateTranNo')[0].getValue();
        var count = 0;
        var errorMsg = "";

        if(RebatePAN === "" || RebatePAN === null )
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया स्था . ले . नं . भर्नुहोस्!!!";

        }

        if(accType === ""  || accType === null)
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ")कृपया खाताको किसिम  भर्नुहोस्!!!";

        }

        if(EffectiveRebateDate === "" || EffectiveRebateDate === "")
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ")कृपया मिनाहा मिति भर्नुहोस्!!! ";

        }

        if(count >0)
        {
            msg("WARNING",errorMsg);
            return false;
        }


        if(action == "E")
        {
            loadMsg = "Updating ...";
        }
        else
        {
            loadMsg = "Saving ...";
        }










        var strRebateDetails = Ext.getStore('RebateDetails');

        var rebateHeads = "";
        var rebateDetails = "";

        strRebateDetails.clearFilter();

        if(strRebateDetails.getCount() > 0)
        {
            rebateDetails = getJson(strRebateDetails);

            strRebateDetails.filter(function(item){
                return item.get("Action")!= 'D';
            });
        }

        rebatesHeads = { 
            PAN:RebatePAN,
            AcctType:accType,
            RebateDate:EffectiveRebateDate,
            SeqNo:seqNo !== ""?seqNo:null,
            RebateReason:RebateReason, 
            UserID:"",
            OfficeCode:RebateOfficeCode,
            TranNo:tranNo !== ""?tranNo:null,
            RStatus:rStatus,
            Action:action,
            RebateDetails:rebateDetails

        };

        var waitSave = watiMsg('Saving ...');


        //------------------------------------------------------
        // NB: Posting Data to Server
        //------------------------------------------------------

        Ext.Ajax.request({
            url:"../Handlers/VAT/VatRebate/RebateHeadsHandler.ashx?method=SaveRebateHeads",
            params:{rebateHeads:JSON.stringify(rebatesHeads)},
            success: function ( result, request ){
                waitSave.hide();
                var obj = Ext.decode(result.responseText);


                if(obj.success == "false" && obj.message === "ErrorDuplicate data !")
                {
                    msg("WARNING","Rebate is Already Exists !!!");
                    return;
                }

                msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);

                if(obj.success === "false") return;

                me.ClearControl();

            },

            failure: function ( result, request ){

                waitSave.hide();
                //var errMsg = "Error in " + loadMsg;
                msg("FAILURE","Error in Fetching Data !!!");
                return;
            }

        });



    },

    ValidateRebate: function() {
        var txtRebatePAN = Ext.ComponentQuery.query('#txtRebatePAN')[0].getValue();
        var txtaccType = Ext.ComponentQuery.query('#txtAccType')[0].getValue();
        var txtEffectiveRebateDate = Ext.ComponentQuery.query('#txtEffectiveRebateDate')[0].getValue();
        var me=this;
        var count = 0;
        var errorMsg = "";

        if(txtRebatePAN === "")
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया स्था . ले . नं . भर्नुहोस.!!!";

        }

        if(txtaccType === "")
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ")कृपया खाताको किसिम  भर्नुहोस.!!!";

        }

        if(txtEffectiveRebateDate ==="")
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया लागुहुने मिति भर्नुहोस.!!! ";

        }

        if(count >0)
        {
            me.msg("WARNING",errorMsg);
            return false;
        }

    },

    LoadRebateByTranNo: function(tranNo) {
        var me = this;
        var loadMsg = "";
        var count = 0;
        var errorMsg = "";


        Ext.getStore('RebateDetails').loadData([],false);


        var SeqNo = Ext.ComponentQuery.query('#txtRebateSeq')[0];


        var txtRebateOfficeCode = Ext.ComponentQuery.query('#txtRebateOfficeCode')[0];
        var txtRebatePAN = Ext.ComponentQuery.query('#txtRebatePAN')[0];
        var txtRebateTradeName = Ext.ComponentQuery.query('#txtRebateTradeName')[0];
        var txtEffectiveRebateDate = Ext.ComponentQuery.query('#txtEffectiveRebateDate')[0];
        var txtRebateReason = Ext.ComponentQuery.query('#txtRebateReason')[0];
        var action = Ext.ComponentQuery.query('#hdnRebateAction')[0];
        var txtaccType = Ext.ComponentQuery.query('#txtAccType')[0];
        var hdnTranNo = Ext.ComponentQuery.query('#hdnRebateTranNo')[0];
        var hdnRebateregistrationDate = Ext.ComponentQuery.query('#hdnRebateregistrationDate')[0];


        var btnRbtSave = Ext.ComponentQuery.query("#btnRbtSave")[0];
        var btnSubmitRbt = Ext.ComponentQuery.query("#btnSubmitRbt")[0];
        var btnRbtDel = Ext.ComponentQuery.query("#btnRbtDel")[0];
        var btnRebateAdd= Ext.ComponentQuery.query('#btnRebateAdd')[0];


        var btnRbtEdit = Ext.ComponentQuery.query('#btnRbtEdit')[0];
        var btnCancelRbt = Ext.ComponentQuery.query('#btnCancelRbt')[0];

        var wait = watiMsg('loading ...');

        Ext.Ajax.request({
            url:"../Handlers/VAT/VatRebate/RebateHeadsHandler.ashx?method=GetRebateHeadsByTranNo" ,
            params:{tranNo:tranNo},
            success: function ( result, request ) 
            {            

                wait.hide();            
                var grd = Ext.ComponentQuery.query('#grdRebateDetails')[0];
                var obj = Ext.decode(result.responseText); 


                if(obj.success === "false")
                {   

                    if(obj.message === "D") 
                    {


                        btnRbtDel.setDisabled(true);
                        btnRbtSave.setDisabled(true);
                        btnSubmitRbt.setDisabled(true);
                        btnRebateAdd.setDisabled(true);
                        btnRbtEdit.setDisabled(true);
                        btnCancelRbt.setDisabled(true);
                        txtRebatePAN.setReadOnly(true);
                        txtEffectiveRebateDate.setReadOnly(true);
                        txtRebateReason.setReadOnly(true);
                        SeqNo.setReadOnly(true);

                        msg("WARNING","This Record is already Deleted !!!");

                        return;                
                    }
                    else
                    {

                        msg("WARNING",obj.message);
                        return;

                    }
                }


                // Ext.getStore('RebateDetails').loadData([],false);

                var store = Ext.getStore('RebateDetails');
                store.loadData([],false);

                var data = obj.root; 

                txtRebateOfficeCode.setValue(data.OfficeCode);
                txtRebatePAN.setValue(data.PAN);
                txtEffectiveRebateDate.setValue(data.RebateDate);
                txtRebateReason.setValue(data.RebateReason);
                txtaccType.setValue(data.AcctType);
                hdnTranNo.setValue(data.TranNo);
                SeqNo.setValue(data.SeqNo);

                LoadTaxpayerInfoWithValidPan(data.PAN,"00",function(data){


                    var rec = data.root.Taxpayer;
                    var addr = rec.BusinessAddress.Address;
                    var office = rec.Office;

                    txtRebateTradeName.setValue(rec.Name);
                    hdnRebateregistrationDate.setValue(rec.RegistrationDate);


                });

                //this.loadPanDetails();

                if(action.getValue() !== "D")
                {
                    action.setValue(data.Action);
                }


                store.add(data.RebateDetails);   

                store.each(function (rec) {

                    var taxYear = rec.get('TaxYear') === ""? null:rec.get('TaxYear');
                    var amount = rec.get('Amount') === ""? null:rec.get('Amount');
                    var period = rec.get('Period') === ""? null:rec.get('Period');

                    rec.data.TaxYear = taxYear;
                    rec.data.Amount = amount;
                    rec.data.Period = period;


                });

                grd.bindStore(store);


                if(obj.message === "F" || data.RStatus === "F") 
                {

                    btnRbtDel.setDisabled(true);
                    btnRbtSave.setDisabled(true);
                    btnSubmitRbt.setDisabled(true);
                    btnRebateAdd.setDisabled(true);
                    btnRbtEdit.setDisabled(true);
                    btnCancelRbt.setDisabled(true);
                    txtRebatePAN.setReadOnly(true);
                    txtEffectiveRebateDate.setReadOnly(true);
                    txtRebateReason.setReadOnly(true);
                    SeqNo.setReadOnly(true);
                    msg("WARNING","This Record is already Finalized !!!");

                    return;                
                }




            },
            failure: function ( result, request ) {

                wait.hide();


                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    init: function(application) {
        this.control({
            "#txtRebatePAN": {
                keypress: this.onTxtRebatePANKeypress,
                blur: this.onTxtRebatePANBlur
            },
            "#btnRebateAdd": {
                click: this.onBtnRebateAddClick
            },
            "#cmbRebateFilingPeriod": {
                change: this.onCmbRebateFilingPeriodChange
            },
            "#Rebate": {
                afterrender: this.onRebateAfterRender
            },
            "#btnCancelRbt": {
                click: this.onBtnCancelRbtClick
            },
            "#btnSubmitRbt": {
                click: this.onBtnSubmitRbtClick
            },
            "#grdRebateDetails": {
                beforerender: this.onGrdRebateDetailsBeforeRender,
                afterrender: this.onGrdRebateDetailsAfterRender
            },
            "#btnRbtSave": {
                click: this.onBtnRbtSaveClick
            },
            "#btnRbtEdit": {
                click: this.onBtnRbtEditClick
            },
            "#btnRbtDel": {
                click: this.onBtnRbtDelClick
            },
            "#txtRebateSeq": {
                keypress: this.onTxtRebateSeqKeypress
            },
            "#pnlRebate": {
                afterrender: this.onPnlRebateAfterRender
            }
        });
    }

});
