/*
 * File: app/view/AccountChequeBook.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.AccountChequeBook', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.button.Button',
        'Ext.form.FieldSet',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.plugin.RowEditing',
        'Ext.grid.column.Column',
        'Ext.form.field.Checkbox'
    ],

    frame: true,
    autoScroll: true,
    title: 'Saving Account Cheque List',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    id: 'frm-AccountChequeBook',
                    itemId: 'frm-AccountChequeBook',
                    bodyPadding: 10,
                    title: '',
                    items: [
                        {
                            xtype: 'container',
                            layout: {
                                type: 'table',
                                columns: 4
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    colspan: 4,
                                    itemId: 'txtAccountCode',
                                    fieldLabel: 'Account Code:',
                                    labelWidth: 120,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                                    size: 65
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 4,
                                    itemId: 'ddlSavingProduct',
                                    fieldLabel: 'Saving Product',
                                    labelWidth: 120,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    size: 65,
                                    displayField: 'ProductName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'ProductTypeStore',
                                    valueField: 'ProductCode'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 4,
                                    itemId: 'txtMemberName',
                                    fieldLabel: 'Member Name',
                                    labelWidth: 120,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    size: 65,
                                    listeners: {
                                        afterrender: {
                                            fn: me.onTxtMemberNameAfterRender,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtNoOfLeafIssue',
                                    fieldLabel: 'No. Of Leaf Issue',
                                    labelWidth: 120
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtChequeNoFrom',
                                    fieldLabel: 'Cheque No. From',
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'button',
                                    colspan: 2,
                                    itemId: 'btnGenerateChequeBook',
                                    text: 'Generate Cheque Book',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnGenerateChequeBookClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtChequeNoTo',
                                    fieldLabel: 'Cheque No. To',
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'fieldset',
                                    colspan: 4,
                                    title: 'Account Cheque List',
                                    layout: {
                                        type: 'table',
                                        columns: 4
                                    },
                                    items: [
                                        {
                                            xtype: 'combobox',
                                            itemId: 'ddlChequeListChequeNoFrom',
                                            fieldLabel: 'Cheque No. From',
                                            displayField: 'DisplayNo',
                                            forceSelection: true,
                                            queryMode: 'local',
                                            store: 'AccountChequeStore',
                                            valueField: 'ChequeNo'
                                        },
                                        {
                                            xtype: 'combobox',
                                            itemId: 'ddlChequeListChequeNoTo',
                                            margin: '0 0 0 5',
                                            fieldLabel: 'Cheque No. To',
                                            labelWidth: 90,
                                            displayField: 'DisplayNo',
                                            forceSelection: true,
                                            queryMode: 'local',
                                            store: 'AccountChequeStore',
                                            valueField: 'ChequeNo'
                                        },
                                        {
                                            xtype: 'combobox',
                                            itemId: 'ddlChequeStatus',
                                            margin: '0 0 0 5',
                                            fieldLabel: 'Cheque Status',
                                            labelWidth: 90,
                                            emptyText: '--- SELECT ---',
                                            displayField: 'RefDtlName',
                                            forceSelection: true,
                                            queryMode: 'local',
                                            store: 'ReferenceShortStore',
                                            valueField: 'RefDtlCode'
                                        },
                                        {
                                            xtype: 'button',
                                            itemId: 'btnSearchCheque',
                                            margin: '0 0 0 5',
                                            text: 'Search Cheque',
                                            listeners: {
                                                click: {
                                                    fn: me.onBtnSearchChequeClick,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridpanel',
                                    colspan: 4,
                                    height: 300,
                                    itemId: 'grdSearchCheque',
                                    title: '',
                                    store: 'AccountChequeListStore',
                                    plugins: [
                                        Ext.create('Ext.grid.plugin.RowEditing', {
                                            listeners: {
                                                validateedit: {
                                                    fn: me.onRowEditingValidateedit,
                                                    scope: me
                                                },
                                                canceledit: {
                                                    fn: me.onRowEditingCanceledit,
                                                    scope: me
                                                }
                                            }
                                        })
                                    ],
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'DisplayNo',
                                            text: 'DisplayNo'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'Status',
                                            text: 'Status',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtStatus'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'ReasonForCancel',
                                            text: 'ReasonForCancel',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtReasonForCancel'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'CreatedOn',
                                            text: 'CreatedOn'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'ChequeNo',
                                            text: 'ChequeNo'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    colspan: 4,
                                    title: 'Destination',
                                    layout: {
                                        type: 'table',
                                        columns: 2
                                    },
                                    items: [
                                        {
                                            xtype: 'combobox',
                                            colspan: 1,
                                            itemId: 'ddlDestiantionChequeNoFrom',
                                            fieldLabel: 'Cheque No. From',
                                            labelWidth: 120,
                                            displayField: 'DisplayNo',
                                            forceSelection: true,
                                            queryMode: 'local',
                                            store: 'AccountChequeStore',
                                            valueField: 'ChequeNo'
                                        },
                                        {
                                            xtype: 'combobox',
                                            colspan: 2,
                                            itemId: 'ddlDestinationChqueNoTo',
                                            margin: '0 0 0 100',
                                            fieldLabel: 'Cheque No. To',
                                            displayField: 'DisplayNo',
                                            forceSelection: true,
                                            queryMode: 'local',
                                            store: 'AccountChequeStore',
                                            valueField: 'ChequeNo'
                                        },
                                        {
                                            xtype: 'combobox',
                                            colspan: 1,
                                            itemId: 'ddlDestiantionFormat',
                                            fieldLabel: 'Destination Format',
                                            labelWidth: 120,
                                            size: 30,
                                            displayField: 'RefDtlName',
                                            forceSelection: true,
                                            queryMode: 'local',
                                            store: 'MsReferenceCodeDetailsDestinationFormatStore',
                                            valueField: 'RefDtlCode'
                                        },
                                        {
                                            xtype: 'combobox',
                                            colspan: 1,
                                            itemId: 'ddlDestinationParameter',
                                            margin: '0 0 0 100',
                                            fieldLabel: 'Destination Parameter',
                                            size: 30,
                                            displayField: 'RefDtlName',
                                            forceSelection: true,
                                            queryMode: 'local',
                                            store: 'MsReferenceCodeDetailsDestinationParameterStore',
                                            valueField: 'RefDtlCode'
                                        },
                                        {
                                            xtype: 'combobox',
                                            colspan: 1,
                                            itemId: 'ddlDestiantionType',
                                            fieldLabel: 'Destination Type',
                                            labelWidth: 120,
                                            size: 35,
                                            displayField: 'RefDtlName',
                                            forceSelection: true,
                                            queryMode: 'local',
                                            store: 'MsReferenceCodeDetailsDestinationTypeStore',
                                            valueField: 'RefDtlCode'
                                        },
                                        {
                                            xtype: 'checkboxfield',
                                            colspan: 1,
                                            itemId: 'chkPrint',
                                            margin: '0 0 0 100',
                                            fieldLabel: 'Print?',
                                            boxLabel: ''
                                        },
                                        {
                                            xtype: 'container',
                                            colspan: 2,
                                            height: 23,
                                            layout: {
                                                type: 'hbox',
                                                align: 'stretch',
                                                pack: 'center'
                                            },
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    itemId: 'btnPrintChequeBook',
                                                    text: 'Print Cheque Book'
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    colspan: 4,
                                    height: 23,
                                    width: 800,
                                    title: '',
                                    layout: {
                                        type: 'hbox',
                                        align: 'stretch',
                                        pack: 'center'
                                    },
                                    items: [
                                        {
                                            xtype: 'button',
                                            itemId: 'btnAccountInfo',
                                            text: 'Account Info'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            hidden: true,
                            itemId: 'hdnAccountNo',
                            fieldLabel: 'Label'
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFrmAccountChequeBookAfterRender,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'textfield',
                    hidden: true,
                    itemId: 'hdnChequeNoFrom',
                    fieldLabel: 'Label'
                },
                {
                    xtype: 'textfield',
                    hidden: true,
                    itemId: 'hdnChequeNoTo',
                    fieldLabel: 'Label'
                }
            ]
        });

        me.callParent(arguments);
    },

    onTxtMemberNameAfterRender: function(component, eOpts) {
        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectChequeListSavingAccountNumberPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });
    },

    onBtnGenerateChequeBookClick: function(button, e, eOpts) {
        var insObj={
        	OfficeCode:getOfficeCode(),
        	AccountNo:Ext.ComponentQuery.query('#hdnAccountNo')[0].getValue(),
        	Status:'U',
        	UserName:getCurrentUser(),
        	FromChequeNo:Ext.ComponentQuery.query('#hdnChequeNoFrom')[0].getValue(),
        	ToChequeNo:Ext.ComponentQuery.query('#hdnChequeNoTo')[0].getValue()
        };

        var waitSave = watiMsg("Generating..Please wait ...");
        Ext.Ajax.request({
        	url: '../Handlers/Finance/Transaction/SavingTransaction/GenerateChequeSequenceHandler.ashx',
        	params: {
        		method:'GenerateChequeSequence',
        		generateChequeSequence:JSON.stringify(insObj)
        	},
        	success: function ( response, request )
            {
        		waitSave.hide();
        		var out=Ext.decode(response.responseText);
        		console.log(out);
        		if(out.success==="true")
        		{
        		   msg("SUCCESS",out.message);
        		}
        		else
        		{
        			msg("FAILURE",out.message);
        		}
        	},
        	failure: function ( result, request )
        	{
        		waitSave.hide();
        		var out=Ext.decode(response.responseText);
        		msg("FAILURE",out.message);
        	}
        });
    },

    onBtnSearchChequeClick: function(button, e, eOpts) {

        Ext.Ajax.request({

            url: '../Handlers/Finance/Transaction/PublicSavingTransaction/ChequePrintHandler.ashx',
            params: {
                method:'GetAccountChequeList',
                accountNo:Ext.ComponentQuery.query('#hdnAccountNo')[0].getValue(),
                fromChequeNo:Ext.ComponentQuery.query('#ddlChequeListChequeNoFrom')[0].getValue(),
                toChequeNo:Ext.ComponentQuery.query('#ddlChequeListChequeNoTo')[0].getValue()
            },
            success: function(response){
                var obj = Ext.decode(response.responseText);
                if(obj.success === "true")
                {
                    var store=Ext.getStore('AccountChequeListStore');
                    store.removeAll();
                    store.add(obj.root);



                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });
    },

    onRowEditingValidateedit: function(editor, e, eOpts) {

        var waitSave = watiMsg("Updating..Please wait ...");
        var insObj={
            OfficeCode:getOfficeCode(),
            AccountNo:Ext.ComponentQuery.query('#hdnAccountNo')[0].getValue(),
            ChequeNo:e.newValues.ChequeNo,
            Status:Ext.ComponentQuery.query('#txtStatus')[0].getValue(),
            Reason:Ext.ComponentQuery.query('#txtReasonForCancel')[0].getValue()


        };
        Ext.Ajax.request({
        	url: '../Handlers/Finance/Transaction/PublicSavingTransaction/PublicChequeUpdateHandler.ashx',
        	params: {
        		method:'SavePublicChequeUpdate',
        		publicChequeUpdate:JSON.stringify(insObj)
        	},
        	success: function ( response, request )
            {
        		waitSave.hide();
        		var out=Ext.decode(response.responseText);
        		console.log(out);
        		if(out.success==="true")
        		{
        		   msg("SUCCESS",out.message);
        		}
        		else
        		{
        			msg("FAILURE",out.message);
        		}
        	},
        	failure: function ( result, request )
        	{
        		waitSave.hide();
        		var out=Ext.decode(response.responseText);
        		msg("FAILURE",out.message);
        	}
        });
    },

    onRowEditingCanceledit: function(editor, e, eOpts) {

    },

    onFrmAccountChequeBookAfterRender: function(component, eOpts) {
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/EditTransaction/PubSavingProductHandler.ashx',
            params: {
                method:'GetPubSavingProd',
                ProductName:null,


            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('ProductTypeStore');
                    store.removeAll();
                    store.add(obj.root);
                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });

        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'REPORTS_DESFORMAT'
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                            var DestinationFormatStore=Ext.getStore('MsReferenceCodeDetailsDestinationFormatStore');
                            DestinationFormatStore.removeAll();
                            DestinationFormatStore.add(obj.root);

                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });
        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'REPORTS_PARAMETER_FORM'
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                            var DestinationParameterStore=Ext.getStore('MsReferenceCodeDetailsDestinationParameterStore');
                            DestinationParameterStore.removeAll();
                            DestinationParameterStore.add(obj.root);



                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });

        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'REPORTS_DESTYPE'
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                           var DestinationTypeStore=Ext.getStore('MsReferenceCodeDetailsDestinationTypeStore');
                            DestinationTypeStore.removeAll();
                            DestinationTypeStore.add(obj.root);


                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });


        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'CHEQUE_STATUS'
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                           var DestinationTypeStore=Ext.getStore('ReferenceShortStore');
                            DestinationTypeStore.removeAll();
                            DestinationTypeStore.add(obj.root);


                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });





    }

});