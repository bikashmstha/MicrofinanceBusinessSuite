/*
 * File: app/controller/ReviewAppealDecision.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.ReviewAppealDecision', {
    extend: 'Ext.app.Controller',

    stores: [
        'AppealLocationStore',
        'FiscalYear'
    ],

    onPnlReviewAppealDecisionAfterRender: function(component, eOpts) {
        var me =this;
        var offCode= Ext.get('offCode').dom.innerHTML;
        var txtOffCode = Ext.ComponentQuery.query("#txtOffCodeRAPDec")[0];
        //txtOffCode.setValue(offCode);

        var objParam = Ext.ComponentQuery.query('#pnlReviewAppealDecision')[0].extraParam;

        if(!objParam)
        {
            txtOffCode.setValue(offCode);
            //me.LoadUserOffice();
            me.ReadOnlyControls("");
            me.ClearControls("");
            return;
        }

        else if(objParam.params.from === "MV")
        {
            me.LoadRevAppDecWithTranNo();
            me.ReadOnlyControls("t");
        }

        else if(objParam.params.from === "AU")
        {

            if(objParam.params.auAction === "A")
            {

                me.LoadPostedReviewAppealDecision();

            }
            else if(objParam.params.auAction === "E" || objParam.params.auAction === "V")
            {
                if( objParam.params.auAction === "V")
                {
                    me.ReadOnlyShowHideControls("t");
                }
                me.LoadReviewAppealDecisionAU();

            }
            me.ReadOnlyControls("au");
        }
    },

    onTxtRevAppealNoRAPDecKeypress: function(textfield, e, eOpts) {
        /*var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPDec')[0];
        if(e.keyCode === 13)
        {

        if(hdnAction.lastValue === "D")
        {
        this.LoadRevAppDecision();
        }
        this.ReadOnlyControls("e");
        this.LoadRevAppDecision();

        }
        this.LoadRevAppDecision();*/
    },

    onBtnSaveRAPDecClick: function(button, e, eOpts) {
        var me =this;
        var txtRevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPDec')[0];
        var cboRevAppType = Ext.ComponentQuery.query('#cboRevAppealTypeRAPDec')[0];
        var txtRevAppDeciNo = Ext.ComponentQuery.query('#txtRevAppDeciNoRAPDec')[0];
        var txtRevAppDeciDate = Ext.ComponentQuery.query('#txtRevAppDeciDateRAPDec')[0];
        var txtOffDeciRegDate = Ext.ComponentQuery.query('#txtRevAppDeciRegDateRAPDec')[0];

        var revApplNo=txtRevAppNo.getValue();
        var revApplType=cboRevAppType.getValue();
        var revApplDeciNo=txtRevAppDeciNo.getValue();
        var revApplDeciDate=txtRevAppDeciDate.getValue();
        var offDeciRegDate=txtOffDeciRegDate.getValue();


        var errMsg="";
        var errCount=0;
        if(!revApplNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदन नं हाल्नुहोस् !<br/>";
            txtRevAppNo.focus();
        }
        if(!revApplType)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदन गरेको स्थान छाल्नुहोस् !<br/>";
            cboRevAppType.focus();
        }
        if(!revApplDeciNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदन निर्णय नं. हाल्नुहोस् !<br/>";
            txtRevAppDeciNo.focus();
        }
        if(!revApplDeciDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदन निर्णय मिति हाल्नुहोस् !<br/>";
            //txtRevAppDeciDate.focus();
        }
        if(!offDeciRegDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया प्रशासकिय पुनरावलोकनको निर्णय दर्ता मिति हाल्नुहोस् !<br/>";
            //txtOffDeciRegDate.focus();
        }
        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }

        var btnEdit = Ext.ComponentQuery.query('#btnEditRAPDec')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteRAPDec')[0];
        btnEdit.enable(true);  
        btnDelete.enable(true);

        var objParam = Ext.ComponentQuery.query('#pnlReviewAppealDecision')[0].extraParam;
        //console.log(objParam);
        if(!objParam)
        {
            me.SaveReviewAppealDecision("I");
            me.ClearControls("");
            me.ReadOnlyControls("");
        }
        else if(objParam.params.from === "AU")
        {
            me.SaveReviewAppealDecisionAU("I","E");
            me.ReadOnlyControls("au");
        }
    },

    onBtnEditRAPDecClick: function(button, e, eOpts) {
        var me=this;
        me.ClearControls("e");
        me.ReadOnlyControls("");
        var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPDec')[0];

        var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPDec')[0];
        var lblActionRAD = Ext.ComponentQuery.query('#lblActionRAPDec')[0];

        var btnSave = Ext.ComponentQuery.query('#btnSaveRAPDec')[0];
        var btnEdit = Ext.ComponentQuery.query('#btnEditRAPDec')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteRAPDec')[0];


        btnSave.enable(true);
        btnEdit.disable(true);
        btnDelete.disable(true);


        hdnAction.setValue("E");

        lblActionRAD.setValue("Updating ...............");

        if(txtrevAppNo.getValue() === "")
        {
            //msg('WARNING',"पुनरावेदन नं हाल्नुहोस् !");
            txtrevAppNo.focus(true);
            return;
        }

    },

    onBtnDeleteRAPDecClick: function(button, e, eOpts) {
        var me=this;
        me.ClearControls("e");
        me.ReadOnlyControls("");
        var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPDec')[0];
        var hdnAct = Ext.ComponentQuery.query('#hdnActRAPDec')[0];

        var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPDec')[0];
        var lblActionRAD = Ext.ComponentQuery.query('#lblActionRAPDec')[0];

        hdnAction.setValue("D");
        hdnAct.setValue("D");

        var btnSave = Ext.ComponentQuery.query('#btnSaveRAPDec')[0];
        var btnEdit = Ext.ComponentQuery.query('#btnEditRAPDec')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteRAPDec')[0];

        btnSave.disable(true);
        btnEdit.disable(true);
        btnDelete.disable(true);

        lblActionRAD.setValue("Deleting ...............");
        if(txtrevAppNo.getValue() === "")
        {
            // msg('WARNING',"पुनरावेदन नं हाल्नुहोस् !");
            txtrevAppNo.focus(true);
            return;
        }

    },

    onBtnSubmitRAPDecClick: function(button, e, eOpts) {
        var me = this;

        var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPDec')[0];
        var hdnAct = Ext.ComponentQuery.query('#hdnActRAPDec')[0];

        var txtRevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPDec')[0];
        var cboRevAppType = Ext.ComponentQuery.query('#cboRevAppealTypeRAPDec')[0];
        var txtRevAppDeciNo = Ext.ComponentQuery.query('#txtRevAppDeciNoRAPDec')[0];
        var txtRevAppDeciDate = Ext.ComponentQuery.query('#txtRevAppDeciDateRAPDec')[0];
        var txtOffDeciRegDate = Ext.ComponentQuery.query('#txtRevAppDeciRegDateRAPDec')[0];

        var revApplNo=txtRevAppNo.getValue();
        var revApplType=cboRevAppType.getValue();
        var revApplDeciNo=txtRevAppDeciNo.getValue();
        var revApplDeciDate=txtRevAppDeciDate.getValue();
        var offDeciRegDate=txtOffDeciRegDate.getValue();


        var errMsg="";
        var errCount=0;
        if(!revApplNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदन नं हाल्नुहोस् !<br/>";
            txtRevAppNo.focus();
        }
        if(!revApplType)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदन गरेको स्थान छाल्नुहोस् !<br/>";
            cboRevAppType.focus();
        }
        if(!revApplDeciNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदन निर्णय नं. हाल्नुहोस् !<br/>";
            txtRevAppDeciNo.focus();
        }
        if(!revApplDeciDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदन निर्णय मिति हाल्नुहोस् !<br/>";
            // txtRevAppDeciDate.focus();
        }
        if(!offDeciRegDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया प्रशासकिय पुनरावलोकनको निर्णय दर्ता मिति हाल्नुहोस् !<br/>";
            //txtOffDeciRegDate.focus();
        }
        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }





        ///


        var objParam = Ext.ComponentQuery.query('#pnlReviewAppealDecision')[0].extraParam;
        //console.log(objParam);
        if(!objParam)
        {
            if(hdnAction.lastValue === "D" || hdnAct.lastValue === "D")
            {  
                Ext.Msg.confirm('Confirm', 'के तपाई साचै नै डाटा DELETE गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.SaveReviewAppealDecision("D");
                        this.ClearControls("");
                        this.ReadOnlyControls("");
                        return true;
                    }
                }, this);


            }
            else
            {
                Ext.Msg.confirm('Confirm', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.SaveReviewAppealDecision("F");
                        this.ClearControls("");
                        this.ReadOnlyControls("");
                        return true;
                    }
                }, this);


            }

        }
        else if(objParam.params.from === "AU")
        {


            if(hdnAction.lastValue === "D")
            {  
                Ext.Msg.confirm('Confirm', 'के तपाई साचै नै डाटा DELETE गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.SaveReviewAppealDecisionAU("D","D");
                        return true;
                    }
                }, this);


            }
            else
            {
                Ext.Msg.confirm('Confirm', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.SaveReviewAppealDecisionAU("F","E");
                        me.ClearControls("");
                        me.ReadOnlyControls("au");
                        return true;
                    }
                }, this);


            }
        }
    },

    onBtnCancelRAPDecClick: function(button, e, eOpts) {
        var me=this;
        var btnEdit = Ext.ComponentQuery.query('#btnEditRAPDec')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteRAPDec')[0];
        btnEdit.enable(true);
        btnDelete.enable(true);

        me.ClearControls("");
        me.ReadOnlyControls("c");


    },

    onTxtRevAppealDateRAPDecBlur: function(component, e, eOpts) {
        return validateFutureDate(field.getValue(),"Y",function(){field.focus();});
    },

    onTxtRevAppDeciRegDateRAPDecBlur: function(component, e, eOpts) {
        return validateFutureDate(field.getValue(),"Y",function(){field.focus();});
    },

    onTxtRevAppDeciDateRAPDecBlur: function(component, e, eOpts) {
        return validateFutureDate(field.getValue(),"Y",function(){field.focus();});
    },

    onTxtRevAppealNoRAPDecBlur: function(component, e, eOpts) {
        // this.LoadRevAppDecision();
        //var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPDec')[0];
        var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPDec')[0];
        if(txtrevAppNo.getValue() === "")
        {
            msg("WARNING","कृपया पुनरावेदन नं हाल्नुहोस् !");
            txtrevAppNo.focus(true);
            return;
        }
        else
        {
            /* this.LoadRevAppDecision();
            if(hdnAction.lastValue === "D")
            {
            this.LoadRevAppDecision();
            }
            this.ReadOnlyControls("e");*/
            this.LoadRevAppDecision();
        }


    },

    onBtnBackRAPDecClick: function(button, e, eOpts) {
        var param=Ext.ComponentQuery.query('#pnlReviewAppealDecision')[0].extraParam;
        var tNo=param.tranNo;
        var idxM=param.indexM;
        var idxT=param.indexT;

        uiConfig = {menuLink:'ModuleVerification',pageTitle:'Module Verification'};
        DynamicUI(uiConfig,null,{tranNo:tNo,indexM:idxM,indexT:idxT });
    },

    onTxtRevAppDeciRegDateRAPDecKeypress: function(textfield, e, eOpts) {
        /*if(e.keyCode === 9)
        {
        return validateFutureDate(textfield.getValue(),"Y",function(){textfield.focus();});
        }*/
    },

    onTxtRevAppDeciDescRAPDecKeypress: function(textfield, e, eOpts) {
        return unicodeKeyPress(textfield,e,eOpts);
    },

    onTxtRevAppDeciDescRAPDecKeyup: function(textfield, e, eOpts) {
        return unicodeKeyUp(textfield,e,eOpts);
    },

    onTxtRevAppDeciDescRAPDecChange: function(field, newValue, oldValue, eOpts) {
        return unicodeChange(field, newValue, oldValue, eOpts);

    },

    onTxtRevAppDeciDescRAPDecFocus: function(component, e, eOpts) {
        return unicodeFocus(field,eOpts);
    },

    SaveReviewAppealDecision: function(dStatus) {
        var revAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPDec')[0].getValue();
        var pan = Ext.ComponentQuery.query("#txtPanRAPDec")[0].getValue();
        var offCode = Ext.ComponentQuery.query('#txtOffCodeRAPDec')[0].getValue();
        var revApplDate = Ext.ComponentQuery.query('#txtRevAppealDateRAPDec')[0].getValue();
        var txtFiscalYr = Ext.ComponentQuery.query('#txtFiscalYrRAPDec')[0].getValue();
        var cboRevAppType = Ext.ComponentQuery.query('#cboRevAppealTypeRAPDec')[0].getValue();
        var revAppDeciNo = Ext.ComponentQuery.query('#txtRevAppDeciNoRAPDec')[0].getValue();
        var revAppDeciDate = Ext.ComponentQuery.query('#txtRevAppDeciDateRAPDec')[0].getValue();
        var revAppDeciDesc = Ext.ComponentQuery.query('#txtRevAppDeciDescRAPDec')[0].getValue();
        var offDeciRegNo = Ext.ComponentQuery.query('#txtRevAppDeciRegNoRAPDec')[0].getValue();
        var offDeciRegDate = Ext.ComponentQuery.query('#txtRevAppDeciRegDateRAPDec')[0].getValue();

        var tranDate="";
        var userName="";
        var terminal="";

        var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPDec')[0];
        var action =hdnAction.lastValue;
        //alert(action);
        var tranNo = Ext.ComponentQuery.query('#hdnTranNoRAPDec')[0].getValue() === ""?null:Ext.ComponentQuery.query('#hdnTranNoRAPDec')[0].getValue();
        var officeDeciRegNo = offDeciRegNo === "" ?0: offDeciRegNo;

        /*var loadMsg="";

        if(action == "E")
        {
        loadMsg = "Updating ...";
        }
        else
        {
        loadMsg = "Saving ...";
        }*/

        var RAPDeci={
            'OffCode':offCode,
            'RevAppNo':revAppNo,
            'Pan':pan,
            'RevAppDate':revApplDate,
            'FiscalYear':txtFiscalYr,
            'RevAppType':cboRevAppType,
            'RevAppDeciNo':revAppDeciNo,
            'RevAppDeciDate':revAppDeciDate,
            'RevAppDeciDesc':revAppDeciDesc,
            'OffDeciRegNo':officeDeciRegNo,
            'OffDeciRegDate':offDeciRegDate,
            'TranDate':tranDate,
            'UserName':userName,
            'TranNo':tranNo,
            'Terminal':terminal,
            'Rstatus':dStatus,
            'Action':action

        };
        //console.log(RAPDeci);
        //var waitSave = watiMsg(loadMsg);

        Ext.Ajax.request({
            method: 'POST',
            url: '../Handlers/IncomeTax/ReviewAppeal/ReviewAppealDecisionHandler.ashx',
            params: {method:'SaveReviewAppealDecision', reviewAppealDecision : JSON.stringify(RAPDeci) },
            success: function( result, request ){

                // waitSave.hide();

                // var jsonMsg=Ext.decode(result.responseText);
                // msg(jsonMsg.success=="true"?"SUCCESS":"FAILURE",jsonMsg.message);

                var obj = Ext.decode(result.responseText);

                if(obj.success === "false")
                {

                    msg("FAILURE",obj.message);
                    return;
                }

                // alert(dStatus);
                if(dStatus === "F")
                {
                    msg('INFO','पुनरावेदन निर्णय गरिएको डाटा सफलतापुर्वक Submit भयो ।');
                    return;

                }
                else if(dStatus === "D")
                {
                    msg('INFO','पुनरावेदन निर्णय गरिएको डाटा सफलतापुर्वक Delete भयो ।');
                    return;
                }
                else if(dStatus === "I")
                {
                    msg('INFO','पुनरावेदन निर्णय गरिएको डाटा सफलतापुर्वक Save भयो ।');
                    return;
                }

                else
                {
                    msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);
                }

            },
            failure: function ( result, request ) {

                // waitSave.hide();

                var obj = Ext.decode(result.responseText);

                msg("FAILURE",obj.message);
                return;
            }


        }); 
    },

    LoadRevAppDecision: function() {
        var me = this;
        var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPDec')[0];
        var txtPan = Ext.ComponentQuery.query("#txtPanRAPDec")[0];
        var txtName = Ext.ComponentQuery.query("#txtTaxPayerNameRAPDec")[0];
        var txtAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRAPDec")[0];

        var revApplNo=txtrevAppNo.getValue();
        /*if( txtrevAppNo === "")
        {
        return;
        }
        */
        //var wait = watiMsg('loading ...');

        Ext.Ajax.request({
            url:"../Handlers/IncomeTax/ReviewAppeal/ReviewAppealDecisionHandler.ashx?method=GetReviewAppealDecision",
            params:{revAppealNo:revApplNo},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }

                var txtOffCode=Ext.ComponentQuery.query('#txtOffCodeRAPDec')[0];
                var txtRevApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPDec')[0];
                var txtFiscalYr=Ext.ComponentQuery.query('#txtFiscalYrRAPDec')[0];
                var cboRevAppType = Ext.ComponentQuery.query('#cboRevAppealTypeRAPDec')[0];
                var revAppDeciNo = Ext.ComponentQuery.query('#txtRevAppDeciNoRAPDec')[0];
                var revAppDeciDate = Ext.ComponentQuery.query('#txtRevAppDeciDateRAPDec')[0];
                var revAppDeciDesc = Ext.ComponentQuery.query('#txtRevAppDeciDescRAPDec')[0];
                var offDeciRegNo = Ext.ComponentQuery.query('#txtRevAppDeciRegNoRAPDec')[0];
                var offDeciRegDate = Ext.ComponentQuery.query('#txtRevAppDeciRegDateRAPDec')[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPDec')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnTranNoRAPDec')[0];

                var txtHouseNo = Ext.ComponentQuery.query("#txtHouseNoRAPDec")[0];
                var txtWardNo = Ext.ComponentQuery.query("#txtWardNoRAPDec")[0];
                var txtvdcStreetName = Ext.ComponentQuery.query("#txtVdcTownStreetNameRAPDec")[0];
                var txtLocationType = Ext.ComponentQuery.query("#txtLocationTypeRAPDec")[0];
                var txtDistrictName = Ext.ComponentQuery.query("#txtDistrictNameRAPDec")[0];
                var txtPhoneNo = Ext.ComponentQuery.query("#txtPhoneNoRAPDec")[0];


                var btnSave = Ext.ComponentQuery.query('#btnSaveRAPDec')[0];
                var btnSubmit = Ext.ComponentQuery.query('#btnSubmitRAPDec')[0];
                var btnEdit = Ext.ComponentQuery.query('#btnEditRAPDec')[0];
                var btnDelete = Ext.ComponentQuery.query('#btnDeleteRAPDec')[0];
                var hdnActRAPDec = Ext.ComponentQuery.query('#hdnActRAPDec')[0];
                var data = obj.root; 

                //console.log("data", data);
                // alert(data.Action );

                if(data.RevAppNo === 0)
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("dec");
                    msg("MESSAGE","यो पुनरावेदन नं रूजु भएको छैन!");
                    return;
                }
                if(data.Action === "A")
                {
                    var dat=data.RAPA;
                    var tp=dat.TaxPayer; 
                    /* if(tp === null)
                    {
                    msg("MESSAGE","यो पुनरावेदन नं रूजु भएको छैन!");
                    return;
                    }*/
                    var bAddr =tp.BusinessAddress.Address;

                    txtOffCode.setValue(dat.OffCode);
                    txtRevApplDate.setValue(dat.RevAppDate);
                    txtFiscalYr.setValue(dat.FiscalYear);

                    txtPan.setValue(dat.Pan);
                    txtName.setValue(tp.Name);
                    txtPhoneNo.setValue(bAddr.Telephone);
                    txtHouseNo.setValue(bAddr.HouseNo);
                    txtWardNo.setValue(bAddr.WardNo);                 
                    var sn1= bAddr.StreetName;
                    var vt1=bAddr.VdcTown;
                    var svn1=sn1 + "/" + vt1;
                    txtvdcStreetName.setValue(svn1);
                    txtLocationType.setValue(bAddr.LocationType);
                    txtDistrictName.setValue(bAddr.DistrictNameNep);

                    // msg("MESSAGE","यो बिबरण रूजु भएको छैन!");
                    btnSave.enable(true);
                    btnSubmit.enable(true);
                    btnEdit.disable(true);
                    btnDelete.disable(true);
                    hdnAction.setValue("");  
                    me.ReadOnlyControls("e");
                }
                else
                {
                    var taxpayer=data.TaxPayer; 
                    var bAddress =taxpayer.BusinessAddress.Address;

                    txtOffCode.setValue(data.OffCode);
                    txtRevApplDate.setValue(data.RevAppDate);
                    txtFiscalYr.setValue(data.FiscalYear);
                    cboRevAppType.setValue(data.RevAppType);
                    revAppDeciNo.setValue(data.RevAppDeciNo);
                    revAppDeciDate.setValue(data.RevAppDeciDate);
                    revAppDeciDesc.setValue(data.RevAppDeciDesc);
                    offDeciRegNo.setValue(data.OffDeciRegNo);
                    offDeciRegDate.setValue(data.OffDeciRegDate);
                    txtPan.setValue(data.Pan);
                    txtName.setValue(taxpayer.Name);
                    txtPhoneNo.setValue(bAddress.Telephone);
                    txtHouseNo.setValue(bAddress.HouseNo);
                    txtWardNo.setValue(bAddress.WardNo);                 
                    var sn= bAddress.StreetName;
                    var vt=bAddress.VdcTown;
                    var svn=sn + "/" + vt;
                    txtvdcStreetName.setValue(svn);
                    txtLocationType.setValue(bAddress.LocationType);
                    txtDistrictName.setValue(bAddress.DistrictNameNep);
                    hdnAction.setValue("E");

                    if(data.Rstatus === "I" && data.Action === "E")
                    {
                        //console.log('a',hdnAction.lastValue);
                        //alert(hdnAction.lastValue);
                        // alert(hdnActRAPDec.lastValue);

                        if(hdnAction.lastValue === "D" || hdnActRAPDec.lastValue === "D")
                        {
                            msg("MESSAGE","यो बिबरण परिबर्तन गर्न पाउने छैन !");
                            btnSave.disable(true);
                            me.ReadOnlyControls("dec"); 
                        }
                        else
                        {
                            btnSave.enable(true);
                            btnSubmit.enable(true);
                            btnEdit.disable(true);
                            btnDelete.disable(true);
                            me.ReadOnlyControls("e"); 
                        }

                    }
                    else if(data.Rstatus === "D" && data.Action === "E")
                    {
                        msg("MESSAGE","यो बिबरण परिबर्तन गर्न पाउने छैन !<br>यो बिबरण पहिला नै DELETE भइसक्यो !");
                        btnSave.disable(true);
                        btnSubmit.disable(true);
                        btnEdit.disable(true);
                        btnDelete.disable(true);
                        me.ReadOnlyControls("dec");
                    }
                    else if(data.Rstatus === "F" && data.Action === "E")
                    {
                        msg("MESSAGE","यो बिबरण परिबर्तन गर्न पाउने छैन !<br>यो बिबरण पहिला नै FINALIZED भइसक्यो !");
                        btnSave.disable(true);
                        btnSubmit.disable(true);
                        btnEdit.disable(true);
                        btnDelete.disable(true);
                        me.ReadOnlyControls("dec"); 
                    }
                    if(data.Rstatus === "V" &&  data.Action === "E")
                    {
                        msg("MESSAGE","यो बिबरण परिबर्तन गर्न पाउने छैन !<br>यो बिबरण पहिला नै VERIFIED भइसक्यो !");
                        btnSave.disable(true);
                        btnSubmit.disable(true);
                        btnEdit.disable(true);
                        btnDelete.disable(true);
                        me.ReadOnlyControls("dec"); 
                    }
                }
                var chkMM = Ext.ComponentQuery.query('#chkMMRAPDec')[0];
                var chkSM = Ext.ComponentQuery.query('#chkSMRAPDec')[0];
                var chkMN = Ext.ComponentQuery.query('#chkMNRAPDec')[0];
                var chkVD = Ext.ComponentQuery.query('#chkVDRAPDec')[0];


                if(txtLocationType.getValue() === "MM")
                {
                    chkMM.setValue(true);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }
                else if(txtLocationType.getValue() === "SM")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(true);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }

                else if(txtLocationType.getValue() === "MN")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(true);
                    chkVD.setValue(false);
                }
                else if(txtLocationType.getValue() === "VD")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(true);
                }
                else
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }


                hdnTranNo.setValue(data.TranNo);

                /* if(hdnAction.getValue() !== "D")
                {
                hdnAction.setValue(data.Action);
                }*/

            },
            failure: function ( result, request ) {

                // wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    ClearControls: function(txt) {
        var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPDec')[0];
        var txtPan = Ext.ComponentQuery.query("#txtPanRAPDec")[0];
        var txtName = Ext.ComponentQuery.query("#txtTaxPayerNameRAPDec")[0];
        var txtAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRAPDec")[0];
        var txtOffCode=Ext.ComponentQuery.query('#txtOffCodeRAPDec')[0];
        var txtRevApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPDec')[0];
        var txtFiscalYr=Ext.ComponentQuery.query('#txtFiscalYrRAPDec')[0];
        var cboRevAppType = Ext.ComponentQuery.query('#cboRevAppealTypeRAPDec')[0];
        var revAppDeciNo = Ext.ComponentQuery.query('#txtRevAppDeciNoRAPDec')[0];
        var revAppDeciDate = Ext.ComponentQuery.query('#txtRevAppDeciDateRAPDec')[0];
        var revAppDeciDesc = Ext.ComponentQuery.query('#txtRevAppDeciDescRAPDec')[0];
        var offDeciRegNo = Ext.ComponentQuery.query('#txtRevAppDeciRegNoRAPDec')[0];
        var offDeciRegDate = Ext.ComponentQuery.query('#txtRevAppDeciRegDateRAPDec')[0];
        var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPDec')[0];
        var hdnAct = Ext.ComponentQuery.query('#hdnActRAPDec')[0];
        var hdnTranNo = Ext.ComponentQuery.query('#hdnTranNoRAPDec')[0];

        var txtHouseNo = Ext.ComponentQuery.query("#txtHouseNoRAPDec")[0];
        var txtWardNo = Ext.ComponentQuery.query("#txtWardNoRAPDec")[0];
        var txtvdcStreetName = Ext.ComponentQuery.query("#txtVdcTownStreetNameRAPDec")[0];
        var txtLocationType = Ext.ComponentQuery.query("#txtLocationTypeRAPDec")[0];
        var txtDistrictName = Ext.ComponentQuery.query("#txtDistrictNameRAPDec")[0];
        var txtPhoneNo = Ext.ComponentQuery.query("#txtPhoneNoRAPDec")[0];

        var chkMM = Ext.ComponentQuery.query('#chkMMRAPDec')[0];
        var chkSM = Ext.ComponentQuery.query('#chkSMRAPDec')[0];
        var chkMN = Ext.ComponentQuery.query('#chkMNRAPDec')[0];
        var chkVD = Ext.ComponentQuery.query('#chkVDRAPDec')[0];

        var lblAction=Ext.ComponentQuery.query('#lblActionRAPDec')[0];

        var btnSave = Ext.ComponentQuery.query('#btnSaveRAPDec')[0];
        var btnSubmit = Ext.ComponentQuery.query('#btnSubmitRAPDec')[0];
        var btnEdit = Ext.ComponentQuery.query('#btnEditRAPDec')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteRAPDec')[0];

        if(txt === "e")
        {
            txtrevAppNo.reset();
            txtPan.reset(); 
            txtName.reset(); 
            txtAddress.reset();
            // txtOffCode.reset();
            txtRevApplDate.reset();
            txtFiscalYr.reset();
            cboRevAppType.reset();
            revAppDeciNo.reset(); 
            revAppDeciDate.reset(); 
            revAppDeciDesc.reset(); 
            offDeciRegNo.reset(); 
            offDeciRegDate.reset(); 
            hdnAction.reset();
            hdnAct.reset();
            hdnTranNo.reset();
            txtHouseNo.reset();
            txtWardNo.reset(); 
            txtvdcStreetName.reset();
            txtLocationType.reset(); 
            txtDistrictName.reset(); 
            txtPhoneNo.reset();
            chkMM.setValue(false); 
            chkSM.setValue(false);  
            chkMN.setValue(false);  
            chkVD.setValue(false);
            lblAction.setVisible(true);
        }
        else if(txt === "N")
        {
            //  txtrevAppNo.reset();
            txtPan.reset(); 
            txtName.reset(); 
            txtAddress.reset();
            // txtOffCode.reset();
            txtRevApplDate.reset();
            txtFiscalYr.reset();
            cboRevAppType.reset();
            revAppDeciNo.reset(); 
            revAppDeciDate.reset(); 
            revAppDeciDesc.reset(); 
            offDeciRegNo.reset(); 
            offDeciRegDate.reset(); 
            hdnAction.reset();
            hdnAct.reset();
            hdnTranNo.reset();
            txtHouseNo.reset();
            txtWardNo.reset(); 
            txtvdcStreetName.reset();
            txtLocationType.reset(); 
            txtDistrictName.reset(); 
            txtPhoneNo.reset();
            chkMM.setValue(false); 
            chkSM.setValue(false);  
            chkMN.setValue(false);  
            chkVD.setValue(false);
            lblAction.setVisible(false);
            btnSave.disable(true);
            btnSubmit.disable(true);
            btnEdit.disable(true);
            btnDelete.disable(true);
        }
        else
        {
            txtrevAppNo.reset();
            txtPan.reset(); 
            txtName.reset(); 
            txtAddress.reset();
            // txtOffCode.reset();
            txtRevApplDate.reset();
            txtFiscalYr.reset();
            cboRevAppType.reset();
            revAppDeciNo.reset(); 
            revAppDeciDate.reset(); 
            revAppDeciDesc.reset(); 
            offDeciRegNo.reset(); 
            offDeciRegDate.reset(); 
            hdnAction.reset();
            hdnAct.reset();
            hdnTranNo.reset();
            txtHouseNo.reset();
            txtWardNo.reset(); 
            txtvdcStreetName.reset();
            txtLocationType.reset(); 
            txtDistrictName.reset(); 
            txtPhoneNo.reset();
            chkMM.setValue(false); 
            chkSM.setValue(false);  
            chkMN.setValue(false);  
            chkVD.setValue(false); 
            lblAction.setValue("");
            lblAction.setVisible(false);
            btnSave.enable(true);
            btnSubmit.enable(true);
            // btnEdit.enable(true);
            // btnDelete.enable(true);

        }
    },

    LoadUserOffice: function() {
        var txtOffCode=Ext.ComponentQuery.query("#txtOffCodeRAPDec")[0];

        Ext.Ajax.request({
            url:"../Handlers/Security/OfficeUserHandler.ashx?method=GetUserOffice",
            params:{},
            success: function ( result, request ) {            


                var obj = Ext.decode(result.responseText);  
                // console.log(obj.root.OfficeCode);
                var data=obj.root;
                var offCode=data.OfficeCode;

                txtOffCode.setValue(offCode);

            },
            failure: function ( result, request ) {


                msg("FAILURE","Error in Fetching Data !!!");
            }
        });
    },

    ReadOnlyControls: function(txt) {
        var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPDec')[0];
        var txtOffCode=Ext.ComponentQuery.query('#txtOffCodeRAPDec')[0];
        var txtRevApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPDec')[0];
        var txtFiscalYr=Ext.ComponentQuery.query('#txtFiscalYrRAPDec')[0];

        var cboRevAppType = Ext.ComponentQuery.query('#cboRevAppealTypeRAPDec')[0];
        var revAppDeciNo = Ext.ComponentQuery.query('#txtRevAppDeciNoRAPDec')[0];
        var revAppDeciDate = Ext.ComponentQuery.query('#txtRevAppDeciDateRAPDec')[0];
        var revAppDeciDesc = Ext.ComponentQuery.query('#txtRevAppDeciDescRAPDec')[0];
        var offDeciRegNo = Ext.ComponentQuery.query('#txtRevAppDeciRegNoRAPDec')[0];
        var offDeciRegDate = Ext.ComponentQuery.query('#txtRevAppDeciRegDateRAPDec')[0];

        var lblAction = Ext.ComponentQuery.query('#lblActionRAPDec')[0];
        var fCntButton = Ext.ComponentQuery.query('#fCntButtonRAPDec')[0];
        var fCntBack = Ext.ComponentQuery.query('#fCntBackRAPDec')[0];

        var btnEdit = Ext.ComponentQuery.query('#btnEditRAPDec')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteRAPDec')[0];
        var btnCancel = Ext.ComponentQuery.query('#btnCancelRAPDec')[0];

        if(txt === "e")
        {
            cboRevAppType.setReadOnly(false);
            revAppDeciNo.setReadOnly(false);
            revAppDeciDate.setReadOnly(false);
            revAppDeciDesc.setReadOnly(false);
            offDeciRegNo.setReadOnly(true);
            offDeciRegDate.setReadOnly(false);
            //lblAction.setVisible(true);
        }
        else if(txt === "t")
        {
            txtrevAppNo.setReadOnly(true);
            txtOffCode.setReadOnly(true);
            txtRevApplDate.setReadOnly(true);
            txtFiscalYr.setReadOnly(true);

            cboRevAppType.setReadOnly(true);
            revAppDeciNo.setReadOnly(true);
            revAppDeciDate.setReadOnly(true);
            revAppDeciDesc.setReadOnly(true);
            offDeciRegNo.setReadOnly(true);
            offDeciRegDate.setReadOnly(true);
            offDeciRegNo.setReadOnly(true);
            offDeciRegNo.enable(true);

            fCntButton.setVisible(false);
            // fCntBack.setVisible(true);

        }
        else if(txt === "c")
        {
            txtRevApplDate.setReadOnly(true);
            txtFiscalYr.setReadOnly(true);

            cboRevAppType.setReadOnly(true);
            revAppDeciNo.setReadOnly(true);
            revAppDeciDate.setReadOnly(true);
            revAppDeciDesc.setReadOnly(true);
            offDeciRegNo.setReadOnly(true);
            offDeciRegDate.setReadOnly(true);
            offDeciRegNo.setReadOnly(true);
            offDeciRegNo.disable(true);
        }
        else if(txt === "dec")
        {
            txtRevApplDate.setReadOnly(true);
            txtFiscalYr.setReadOnly(true);

            cboRevAppType.setReadOnly(true);
            revAppDeciNo.setReadOnly(true);
            revAppDeciDate.setReadOnly(true);
            revAppDeciDesc.setReadOnly(true);
            offDeciRegNo.setReadOnly(true);
            offDeciRegDate.setReadOnly(true);
            offDeciRegNo.setReadOnly(true);
            offDeciRegNo.enable(true);
        }
        else if(txt === "au")
        {
            btnEdit.disable(true);
            btnDelete.disable(true);
            btnCancel.disable(true);
        }
        else
        {
            txtrevAppNo.setReadOnly(false);
            // txtOffCode.setReadOnly(false);
            txtRevApplDate.setReadOnly(false);
            txtFiscalYr.setReadOnly(false);

            cboRevAppType.setReadOnly(true);
            revAppDeciNo.setReadOnly(true);
            revAppDeciDate.setReadOnly(true);
            revAppDeciDesc.setReadOnly(true);
            offDeciRegNo.setReadOnly(true);
            offDeciRegDate.setReadOnly(true);
            offDeciRegNo.disable(true);

            fCntButton.setVisible(true);
            // fCntBack.setVisible(false);
            btnEdit.enable(true);
            btnDelete.enable(true);
            btnCancel.enable(true);

        }

    },

    LoadRevAppDecWithTranNo: function() {
        var objParam = Ext.ComponentQuery.query('#pnlReviewAppealDecision')[0].extraParam;
        //console.log(objParam);
        var tranNo= objParam.params.tranNo;
        //alert(tranNo);

        Ext.Ajax.request({
            url:"../Handlers/IncomeTax/ReviewAppeal/ReviewAppealDecisionHandler.ashx?method=GetReviewAppealDecisionWithTranNo",
            params:{tranNo:tranNo},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }
                var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPDec')[0];
                var txtPan = Ext.ComponentQuery.query("#txtPanRAPDec")[0];
                var txtName = Ext.ComponentQuery.query("#txtTaxPayerNameRAPDec")[0];
                var txtAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRAPDec")[0];
                var txtOffCode=Ext.ComponentQuery.query('#txtOffCodeRAPDec')[0];
                var txtRevApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPDec')[0];
                var txtFiscalYr=Ext.ComponentQuery.query('#txtFiscalYrRAPDec')[0];
                var cboRevAppType = Ext.ComponentQuery.query('#cboRevAppealTypeRAPDec')[0];
                var revAppDeciNo = Ext.ComponentQuery.query('#txtRevAppDeciNoRAPDec')[0];
                var revAppDeciDate = Ext.ComponentQuery.query('#txtRevAppDeciDateRAPDec')[0];
                var revAppDeciDesc = Ext.ComponentQuery.query('#txtRevAppDeciDescRAPDec')[0];
                var offDeciRegNo = Ext.ComponentQuery.query('#txtRevAppDeciRegNoRAPDec')[0];
                var offDeciRegDate = Ext.ComponentQuery.query('#txtRevAppDeciRegDateRAPDec')[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPDec')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnTranNoRAPDec')[0];

                var txtHouseNo = Ext.ComponentQuery.query("#txtHouseNoRAPDec")[0];
                var txtWardNo = Ext.ComponentQuery.query("#txtWardNoRAPDec")[0];
                var txtvdcStreetName = Ext.ComponentQuery.query("#txtVdcTownStreetNameRAPDec")[0];
                var txtLocationType = Ext.ComponentQuery.query("#txtLocationTypeRAPDec")[0];
                var txtDistrictName = Ext.ComponentQuery.query("#txtDistrictNameRAPDec")[0];
                var txtPhoneNo = Ext.ComponentQuery.query("#txtPhoneNoRAPDec")[0];

                var data = obj.root; 


                if(data.Action == "E")
                {
                    var taxpayer=data.TaxPayer; 
                    var bAddress =taxpayer.BusinessAddress.Address;

                    txtrevAppNo.setValue(data.RevAppNo);
                    txtOffCode.setValue(data.OffCode);
                    txtRevApplDate.setValue(data.RevAppDate);
                    txtFiscalYr.setValue(data.FiscalYear);
                    cboRevAppType.setValue(data.RevAppType);
                    revAppDeciNo.setValue(data.RevAppDeciNo);
                    revAppDeciDate.setValue(data.RevAppDeciDate);
                    revAppDeciDesc.setValue(data.RevAppDeciDesc);
                    offDeciRegNo.setValue(data.OffDeciRegNo);
                    offDeciRegDate.setValue(data.OffDeciRegDate);
                    txtPan.setValue(data.Pan);
                    txtName.setValue(taxpayer.Name);
                    txtPhoneNo.setValue(bAddress.Telephone);
                    txtHouseNo.setValue(bAddress.HouseNo);
                    txtWardNo.setValue(bAddress.WardNo);                 
                    var sn= bAddress.StreetName;
                    var vt=bAddress.VdcTown;
                    var svn=sn + "/" + vt;
                    txtvdcStreetName.setValue(svn);
                    txtLocationType.setValue(bAddress.LocationType);
                    txtDistrictName.setValue(bAddress.DistrictNameNep);
                }
                else if(data.Action === "A")
                {
                    var dat=data.RAPA;
                    var tp=dat.TaxPayer; 
                    var bAddr =tp.BusinessAddress.Address;

                    txtOffCode.setValue(dat.OffCode);
                    txtRevApplDate.setValue(dat.RevAppDate);
                    txtFiscalYr.setValue(dat.FiscalYear);

                    txtPan.setValue(dat.Pan);
                    txtName.setValue(tp.Name);
                    txtPhoneNo.setValue(bAddr.Telephone);
                    txtHouseNo.setValue(bAddr.HouseNo);
                    txtWardNo.setValue(bAddr.WardNo);                 
                    var sn1= bAddr.StreetName;
                    var vt1=bAddr.VdcTown;
                    var svn1=sn1 + "/" + vt1;
                    txtvdcStreetName.setValue(svn1);
                    txtLocationType.setValue(bAddr.LocationType);
                    txtDistrictName.setValue(bAddr.DistrictNameNep);
                }
                var chkMM = Ext.ComponentQuery.query('#chkMMRAPDec')[0];
                var chkSM = Ext.ComponentQuery.query('#chkSMRAPDec')[0];
                var chkMN = Ext.ComponentQuery.query('#chkMNRAPDec')[0];
                var chkVD = Ext.ComponentQuery.query('#chkVDRAPDec')[0];


                if(txtLocationType.getValue() === "MM")
                {
                    chkMM.setValue(true);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }
                else if(txtLocationType.getValue() === "SM")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(true);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }

                else if(txtLocationType.getValue() === "MN")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(true);
                    chkVD.setValue(false);
                }
                else if(txtLocationType.getValue() === "VD")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(true);
                }
                else
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }


                hdnTranNo.setValue(data.TranNo);

            },
            failure: function ( result, request ) {

                // wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });
    },

    LoadPostedReviewAppealDecision: function() {
        var me = this; 
        var objParam = Ext.ComponentQuery.query('#pnlReviewAppealDecision')[0].extraParam;
        //console.log(objParam);

        var offCodeAU = objParam.params.offCode;
        var requestNo = objParam.params.requestNo;
        var revAppealNo = objParam.params.pks[0].data.Value;

        //var wait = watiMsg('loading ...');

        Ext.Ajax.request({
            url:"../Handlers/IncomeTax/ReviewAppeal/ReviewAppealDecisionHandler.ashx?method=GetPostedReviewAppealDecision",
            params:{offCodeAU:offCodeAU,requestNo:requestNo,revAppealNo:revAppealNo},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }

                var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPDec')[0];
                var txtPan = Ext.ComponentQuery.query("#txtPanRAPDec")[0];
                var txtName = Ext.ComponentQuery.query("#txtTaxPayerNameRAPDec")[0];
                var txtAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRAPDec")[0];

                var txtOffCode=Ext.ComponentQuery.query('#txtOffCodeRAPDec')[0];
                var txtRevApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPDec')[0];
                var txtFiscalYr=Ext.ComponentQuery.query('#txtFiscalYrRAPDec')[0];
                var cboRevAppType = Ext.ComponentQuery.query('#cboRevAppealTypeRAPDec')[0];
                var revAppDeciNo = Ext.ComponentQuery.query('#txtRevAppDeciNoRAPDec')[0];
                var revAppDeciDate = Ext.ComponentQuery.query('#txtRevAppDeciDateRAPDec')[0];
                var revAppDeciDesc = Ext.ComponentQuery.query('#txtRevAppDeciDescRAPDec')[0];
                var offDeciRegNo = Ext.ComponentQuery.query('#txtRevAppDeciRegNoRAPDec')[0];
                var offDeciRegDate = Ext.ComponentQuery.query('#txtRevAppDeciRegDateRAPDec')[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPDec')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnTranNoRAPDec')[0];

                var txtHouseNo = Ext.ComponentQuery.query("#txtHouseNoRAPDec")[0];
                var txtWardNo = Ext.ComponentQuery.query("#txtWardNoRAPDec")[0];
                var txtvdcStreetName = Ext.ComponentQuery.query("#txtVdcTownStreetNameRAPDec")[0];
                var txtLocationType = Ext.ComponentQuery.query("#txtLocationTypeRAPDec")[0];
                var txtDistrictName = Ext.ComponentQuery.query("#txtDistrictNameRAPDec")[0];
                var txtPhoneNo = Ext.ComponentQuery.query("#txtPhoneNoRAPDec")[0];


                var btnSave = Ext.ComponentQuery.query('#btnSaveRAPDec')[0];
                var btnSubmit = Ext.ComponentQuery.query('#btnSubmitRAPDec')[0];
                var btnEdit = Ext.ComponentQuery.query('#btnEditRAPDec')[0];
                var btnDelete = Ext.ComponentQuery.query('#btnDeleteRAPDec')[0];
                var hdnActRAPDec = Ext.ComponentQuery.query('#hdnActRAPDec')[0];
                var data = obj.root; 

                //console.log("data", data);
                // alert(data.Action );

                var taxpayer=data.TaxPayer; 
                var bAddress =taxpayer.BusinessAddress.Address;

                txtOffCode.setValue(data.OffCode);
                txtrevAppNo.setValue(data.RevAppNo);
                txtRevApplDate.setValue(data.RevAppDate);
                txtFiscalYr.setValue(data.FiscalYear);
                cboRevAppType.setValue(data.RevAppType);
                revAppDeciNo.setValue(data.RevAppDeciNo);
                revAppDeciDate.setValue(data.RevAppDeciDate);
                revAppDeciDesc.setValue(data.RevAppDeciDesc);
                offDeciRegNo.setValue(data.OffDeciRegNo);
                offDeciRegDate.setValue(data.OffDeciRegDate);
                txtPan.setValue(data.Pan);
                txtName.setValue(taxpayer.Name);
                txtPhoneNo.setValue(bAddress.Telephone);
                txtHouseNo.setValue(bAddress.HouseNo);
                txtWardNo.setValue(bAddress.WardNo);                 
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var svn=sn + "/" + vt;
                txtvdcStreetName.setValue(svn);
                txtLocationType.setValue(bAddress.LocationType);
                txtDistrictName.setValue(bAddress.DistrictNameNep);
                hdnAction.setValue("E");
                var chkMM = Ext.ComponentQuery.query('#chkMMRAPDec')[0];
                var chkSM = Ext.ComponentQuery.query('#chkSMRAPDec')[0];
                var chkMN = Ext.ComponentQuery.query('#chkMNRAPDec')[0];
                var chkVD = Ext.ComponentQuery.query('#chkVDRAPDec')[0];


                if(txtLocationType.getValue() === "MM")
                {
                    chkMM.setValue(true);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }
                else if(txtLocationType.getValue() === "SM")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(true);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }

                else if(txtLocationType.getValue() === "MN")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(true);
                    chkVD.setValue(false);
                }
                else if(txtLocationType.getValue() === "VD")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(true);
                }
                else
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }


                hdnTranNo.setValue(data.TranNo);

                /* if(hdnAction.getValue() !== "D")
                {
                hdnAction.setValue(data.Action);
                }*/

            },
            failure: function ( result, request ) {

                // wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    LoadReviewAppealDecisionAU: function() {
        var me = this; 
        var objParam = Ext.ComponentQuery.query('#pnlReviewAppealDecision')[0].extraParam;
        //console.log(objParam);

        var offCodeAU = objParam.params.offCode;
        var requestNo = objParam.params.requestNo;

        //var wait = watiMsg('loading ...');

        Ext.Ajax.request({
            url:"../Handlers/IncomeTax/ReviewAppeal/ReviewAppealDecisionHandler.ashx?method=GetReviewAppealDecisionAU",
            params:{offCodeAU:offCodeAU,requestNo:requestNo},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }

                var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPDec')[0];
                var txtPan = Ext.ComponentQuery.query("#txtPanRAPDec")[0];
                var txtName = Ext.ComponentQuery.query("#txtTaxPayerNameRAPDec")[0];
                var txtAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRAPDec")[0];

                var txtOffCode=Ext.ComponentQuery.query('#txtOffCodeRAPDec')[0];
                var txtRevApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPDec')[0];
                var txtFiscalYr=Ext.ComponentQuery.query('#txtFiscalYrRAPDec')[0];
                var cboRevAppType = Ext.ComponentQuery.query('#cboRevAppealTypeRAPDec')[0];
                var revAppDeciNo = Ext.ComponentQuery.query('#txtRevAppDeciNoRAPDec')[0];
                var revAppDeciDate = Ext.ComponentQuery.query('#txtRevAppDeciDateRAPDec')[0];
                var revAppDeciDesc = Ext.ComponentQuery.query('#txtRevAppDeciDescRAPDec')[0];
                var offDeciRegNo = Ext.ComponentQuery.query('#txtRevAppDeciRegNoRAPDec')[0];
                var offDeciRegDate = Ext.ComponentQuery.query('#txtRevAppDeciRegDateRAPDec')[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPDec')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnTranNoRAPDec')[0];

                var txtHouseNo = Ext.ComponentQuery.query("#txtHouseNoRAPDec")[0];
                var txtWardNo = Ext.ComponentQuery.query("#txtWardNoRAPDec")[0];
                var txtvdcStreetName = Ext.ComponentQuery.query("#txtVdcTownStreetNameRAPDec")[0];
                var txtLocationType = Ext.ComponentQuery.query("#txtLocationTypeRAPDec")[0];
                var txtDistrictName = Ext.ComponentQuery.query("#txtDistrictNameRAPDec")[0];
                var txtPhoneNo = Ext.ComponentQuery.query("#txtPhoneNoRAPDec")[0];


                var btnSave = Ext.ComponentQuery.query('#btnSaveRAPDec')[0];
                var btnSubmit = Ext.ComponentQuery.query('#btnSubmitRAPDec')[0];
                var btnEdit = Ext.ComponentQuery.query('#btnEditRAPDec')[0];
                var btnDelete = Ext.ComponentQuery.query('#btnDeleteRAPDec')[0];
                var hdnActRAPDec = Ext.ComponentQuery.query('#hdnActRAPDec')[0];
                var data = obj.root; 

                //console.log("data", data);
                // alert(data.Action );

                var taxpayer=data.TaxPayer; 
                var bAddress =taxpayer.BusinessAddress.Address;

                txtOffCode.setValue(data.OffCode);
                txtrevAppNo.setValue(data.RevAppNo);
                txtRevApplDate.setValue(data.RevAppDate);
                txtFiscalYr.setValue(data.FiscalYear);
                cboRevAppType.setValue(data.RevAppType);
                revAppDeciNo.setValue(data.RevAppDeciNo);
                revAppDeciDate.setValue(data.RevAppDeciDate);
                revAppDeciDesc.setValue(data.RevAppDeciDesc);
                offDeciRegNo.setValue(data.OffDeciRegNo);
                offDeciRegDate.setValue(data.OffDeciRegDate);
                txtPan.setValue(data.Pan);
                txtName.setValue(taxpayer.Name);
                txtPhoneNo.setValue(bAddress.Telephone);
                txtHouseNo.setValue(bAddress.HouseNo);
                txtWardNo.setValue(bAddress.WardNo);                 
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var svn=sn + "/" + vt;
                txtvdcStreetName.setValue(svn);
                txtLocationType.setValue(bAddress.LocationType);
                txtDistrictName.setValue(bAddress.DistrictNameNep);
                hdnAction.setValue("E");
                var chkMM = Ext.ComponentQuery.query('#chkMMRAPDec')[0];
                var chkSM = Ext.ComponentQuery.query('#chkSMRAPDec')[0];
                var chkMN = Ext.ComponentQuery.query('#chkMNRAPDec')[0];
                var chkVD = Ext.ComponentQuery.query('#chkVDRAPDec')[0];


                if(txtLocationType.getValue() === "MM")
                {
                    chkMM.setValue(true);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }
                else if(txtLocationType.getValue() === "SM")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(true);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }

                else if(txtLocationType.getValue() === "MN")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(true);
                    chkVD.setValue(false);
                }
                else if(txtLocationType.getValue() === "VD")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(true);
                }
                else
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }


                hdnTranNo.setValue(data.TranNo);

                /* if(hdnAction.getValue() !== "D")
                {
                hdnAction.setValue(data.Action);
                }*/

            },
            failure: function ( result, request ) {

                // wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    SaveReviewAppealDecisionAU: function(rStatus,action) {
        var param = Ext.ComponentQuery.query('#pnlReviewAppealDecision')[0].extraParam.params;
        //console.log("param",param);
        var offCodeAU = param.offCode;
        var requestNo = param.requestNo;
        var tranNo = param.tranNo;

        var revAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPDec')[0].getValue();
        var pan = Ext.ComponentQuery.query("#txtPanRAPDec")[0].getValue();
        var offCode = Ext.ComponentQuery.query('#txtOffCodeRAPDec')[0].getValue();
        var revApplDate = Ext.ComponentQuery.query('#txtRevAppealDateRAPDec')[0].getValue();
        var txtFiscalYr = Ext.ComponentQuery.query('#txtFiscalYrRAPDec')[0].getValue();
        var cboRevAppType = Ext.ComponentQuery.query('#cboRevAppealTypeRAPDec')[0].getValue();
        var revAppDeciNo = Ext.ComponentQuery.query('#txtRevAppDeciNoRAPDec')[0].getValue();
        var revAppDeciDate = Ext.ComponentQuery.query('#txtRevAppDeciDateRAPDec')[0].getValue();
        var revAppDeciDesc = Ext.ComponentQuery.query('#txtRevAppDeciDescRAPDec')[0].getValue();
        var offDeciRegNo = Ext.ComponentQuery.query('#txtRevAppDeciRegNoRAPDec')[0].getValue();
        var offDeciRegDate = Ext.ComponentQuery.query('#txtRevAppDeciRegDateRAPDec')[0].getValue();

        var tranDate="";
        var userName="";
        var terminal="";

        //var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPDec')[0];
        //var action =hdnAction.lastValue;
        //alert(action);
        //var tranNo = Ext.ComponentQuery.query('#hdnTranNoRAPDec')[0].getValue() === ""?null:Ext.ComponentQuery.query('#hdnTranNoRAPDec')[0].getValue();
        var officeDeciRegNo = offDeciRegNo === "" ?0: offDeciRegNo;

        /*var loadMsg="";

        if(action == "E")
        {
        loadMsg = "Updating ...";
        }
        else
        {
        loadMsg = "Saving ...";
        }*/

        var RAPDeci={
            'OffCodeAU':offCodeAU,
            'RequestNo':requestNo,
            'OffCode':offCode,
            'RevAppNo':revAppNo,
            'Pan':pan,
            'RevAppDate':revApplDate,
            'FiscalYear':txtFiscalYr,
            'RevAppType':cboRevAppType,
            'RevAppDeciNo':revAppDeciNo,
            'RevAppDeciDate':revAppDeciDate,
            'RevAppDeciDesc':revAppDeciDesc,
            'OffDeciRegNo':officeDeciRegNo,
            'OffDeciRegDate':offDeciRegDate,
            'TranDate':tranDate,
            'UserName':userName,
            'TranNo':tranNo,
            'Terminal':terminal,
            'Rstatus':rStatus,
            'Action':action

        };
        //console.log(RAPDeci);
        //var waitSave = watiMsg(loadMsg);

        Ext.Ajax.request({
            method: 'POST',
            url: '../Handlers/IncomeTax/ReviewAppeal/ReviewAppealDecisionHandler.ashx',
            params: {method:'SaveReviewAppealDecisionAU', revAppealDecision : JSON.stringify(RAPDeci) },
            success: function( result, request ){

                // waitSave.hide();


                var obj = Ext.decode(result.responseText);

                /*if(obj.success === "false")
                {

                msg("FAILURE",obj.message);
                return;
                }*/


                if(rStatus === "F")
                {
                    msg('INFO','पुनरावेदन निर्णय गरिएको डाटा सफलतापुर्वक Submit भयो ।');
                    return;

                }

                else if(rStatus === "I")
                {
                    msg('INFO','पुनरावेदन निर्णय गरिएको डाटा सफलतापुर्वक Save भयो ।');
                    return;
                }

                else
                {
                    msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);
                }

            },
            failure: function ( result, request ) {

                // waitSave.hide();

                var obj = Ext.decode(result.responseText);

                msg("FAILURE",obj.message);
                return;
            }


        }); 
    },

    init: function(application) {
        this.control({
            "#pnlReviewAppealDecision": {
                afterrender: this.onPnlReviewAppealDecisionAfterRender
            },
            "#txtRevAppealNoRAPDec": {
                keypress: this.onTxtRevAppealNoRAPDecKeypress,
                blur: this.onTxtRevAppealNoRAPDecBlur
            },
            "#btnSaveRAPDec": {
                click: this.onBtnSaveRAPDecClick
            },
            "#btnEditRAPDec": {
                click: this.onBtnEditRAPDecClick
            },
            "#btnDeleteRAPDec": {
                click: this.onBtnDeleteRAPDecClick
            },
            "#btnSubmitRAPDec": {
                click: this.onBtnSubmitRAPDecClick
            },
            "#btnCancelRAPDec": {
                click: this.onBtnCancelRAPDecClick
            },
            "#txtRevAppealDateRAPDec": {
                blur: this.onTxtRevAppealDateRAPDecBlur
            },
            "#txtRevAppDeciRegDateRAPDec": {
                blur: this.onTxtRevAppDeciRegDateRAPDecBlur,
                keypress: this.onTxtRevAppDeciRegDateRAPDecKeypress
            },
            "#txtRevAppDeciDateRAPDec": {
                blur: this.onTxtRevAppDeciDateRAPDecBlur
            },
            "#btnBackRAPDec": {
                click: this.onBtnBackRAPDecClick
            },
            "#txtRevAppDeciDescRAPDec": {
                keypress: this.onTxtRevAppDeciDescRAPDecKeypress,
                keyup: this.onTxtRevAppDeciDescRAPDecKeyup,
                change: this.onTxtRevAppDeciDescRAPDecChange,
                focus: this.onTxtRevAppDeciDescRAPDecFocus
            }
        });
    }

});
