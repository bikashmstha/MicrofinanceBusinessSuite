/*
 * File: app/view/PrintTodaysCollectionSheetReport.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.PrintTodaysCollectionSheetReport', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Checkbox',
        'Ext.button.Button'
    ],

    frame: true,
    title: 'Print Todays Collection Sheet Report',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    bodyPadding: 10,
                    title: 'Report Options',
                    layout: {
                        type: 'table',
                        columns: 3
                    },
                    items: [
                        {
                            xtype: 'combobox',
                            colspan: 3,
                            itemId: 'ddlCenter',
                            fieldLabel: 'Center',
                            labelWidth: 110,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            displayField: 'CenterName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'CenterCodeStore',
                            valueField: 'CenterCode',
                            listeners: {
                                select: {
                                    fn: me.onDdlCenterSelect,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtCollectionDay',
                            fieldLabel: 'Collection Day',
                            labelWidth: 110,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            readOnly: true
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtCollectionDateBS',
                            margin: '0 0 0 15',
                            fieldLabel: 'Collection Date(B.S.)',
                            labelWidth: 120,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            readOnly: true
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtCollectionDateAD',
                            margin: '0 0 0 15',
                            fieldLabel: '(A.D.)',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtFieldAssistantCode',
                            fieldLabel: 'Field Asistant',
                            labelWidth: 110,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            readOnly: true
                        },
                        {
                            xtype: 'textfield',
                            colspan: 3,
                            itemId: 'txtFieldAssistantName',
                            margin: '0 0 0 15',
                            fieldLabel: '',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            readOnly: true,
                            size: 40
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFormAfterRender,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'form',
                    frame: true,
                    bodyPadding: 10,
                    title: 'Destination',
                    layout: {
                        type: 'table',
                        columns: 2
                    },
                    items: [
                        {
                            xtype: 'combobox',
                            itemId: 'ddlDestinationFormat',
                            width: 415,
                            fieldLabel: 'Destination Format',
                            labelWidth: 110,
                            emptyText: '---Select---',
                            displayField: 'RefDtlName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'MsReferenceCodeDetailsDestinationFormatStore',
                            valueField: 'RefDtlCode'
                        },
                        {
                            xtype: 'combobox',
                            itemId: 'ddlDestinationParameter',
                            margin: '0 0 0 15',
                            width: 395,
                            fieldLabel: 'Destination Parameter',
                            labelWidth: 130,
                            emptyText: '---Select---',
                            displayField: 'RefDtlName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'MsReferenceCodeDetailsDestinationParameterStore',
                            valueField: 'RefDtlCode'
                        },
                        {
                            xtype: 'combobox',
                            itemId: 'ddlDestinationType',
                            width: 415,
                            fieldLabel: 'Destination Type',
                            labelWidth: 110,
                            emptyText: '---Select---',
                            displayField: 'RefDtlName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'MsReferenceCodeDetailsDestinationTypeStore',
                            valueField: 'RefDtlCode'
                        },
                        {
                            xtype: 'checkboxfield',
                            itemId: 'chkPrint',
                            margin: '0 0 0 15',
                            fieldLabel: 'Print ?'
                        },
                        {
                            xtype: 'container',
                            height: 35,
                            layout: {
                                type: 'hbox',
                                align: 'stretch',
                                pack: 'end'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'btnSavingCollectionSheet',
                                    padding: 5,
                                    text: 'Saving Collection Sheet'
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            height: 35,
                            itemId: 'btn',
                            margin: '0 0 0 10',
                            layout: {
                                type: 'hbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    padding: 5,
                                    text: 'Loan Collection Sheet'
                                }
                            ]
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFormAfterRender1,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onDdlCenterSelect: function(combo, records, eOpts) {

        //console.log('districtCode',districtCode);
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/CollectionSheetTransaction/CenterDetailsFromCodeHandler.ashx',
            params: {
                method:'GetCenterDetailsFromCode',
                centerCode:records[0].data.CenterCode
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

              if(obj.success === "true")
                        {
                            Ext.ComponentQuery.query('#txtCollectionDay')[0].setValue(obj.root[0].CollectionDay);
                            Ext.ComponentQuery.query('#txtCollectionDateBS')[0].setValue(obj.root[0].CollectionDateBS);
                            Ext.ComponentQuery.query('#txtCollectionDateAD')[0].setValue(obj.root[0].CollectionDate);
                            Ext.ComponentQuery.query('#txtFieldAssistantCode')[0].setValue(obj.root[0].EmployeeId);
                            Ext.ComponentQuery.query('#txtFieldAssistantName')[0].setValue(obj.root[0].EmployeeName);

                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });
    },

    onFormAfterRender: function(component, eOpts) {
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/CollectionSheetTransaction/OnlineCollectionCenterHandler.ashx',
            params: {
                method:'GetOnlineCenterList',
                offCode:Ext.get('offCode').dom.innerHTML,
                centerName:null

            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                            var store=Ext.getStore('CenterCodeStore');
                            store.removeAll();
                            store.add(obj.root);

                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });
    },

    onFormAfterRender1: function(component, eOpts) {
        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'REPORTS_DESFORMAT'
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                            var DestinationFormatStore=Ext.getStore('MsReferenceCodeDetailsDestinationFormatStore');
                            DestinationFormatStore.removeAll();
                            DestinationFormatStore.add(obj.root);

                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'REPORTS_PARAMETER_FORM'
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                            var DestinationParameterStore=Ext.getStore('MsReferenceCodeDetailsDestinationParameterStore');
                            DestinationParameterStore.removeAll();
                            DestinationParameterStore.add(obj.root);



                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });

        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'REPORTS_DESTYPE'
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                           var DestinationTypeStore=Ext.getStore('MsReferenceCodeDetailsDestinationTypeStore');
                            DestinationTypeStore.removeAll();
                            DestinationTypeStore.add(obj.root);


                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });
    }

});