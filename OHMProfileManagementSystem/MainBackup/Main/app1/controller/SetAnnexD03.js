/*
 * File: app/controller/SetAnnexD03.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.SetAnnexD03', {
    extend: 'Ext.app.Controller',

    stores: [
        'AnnexGroup1',
        'AnnexGroup2',
        'AnnexGroup3',
        'AnnexGroup0'
    ],

    onPnlSetAnnexD03BeforeRender: function(component, eOpts) {
        var me = this;

        var view = Ext.ComponentQuery.query('#pnlSetAnnexD03')[0];
        var param = me.validateParam();
        var lblFinalStatus = Ext.ComponentQuery.query('#lblFinalStatus')[0];

        //console.log("setAnnex param >>",param);

        var strAnxGroup0 = Ext.getStore("AnnexGroup0");
        var strAnxGroup1 = Ext.getStore("AnnexGroup1");
        var strAnxGroup2 = Ext.getStore("AnnexGroup2");

        strAnxGroup0.clearFilter();
        strAnxGroup1.clearFilter();
        strAnxGroup2.clearFilter();

        if(param.taxPayerCatID)
        {
            strAnxGroup0.filter("AnnexType",param.taxPayerCatID);
        }

        if(param.taxPayerCatID == "B")
        {
            strAnxGroup1.filter("AnnexType","B");
            strAnxGroup2.filter("AnnexType","B"); 
        }

        if(param.recStatus === "F")
        {
            lblFinalStatus.setValue("(FINALIZED , So data cannot be Added or Updated !!!)");

            me.disableControls(view);
        }
        else
        {
            lblFinalStatus.setValue("");
        }


    },

    onPnlSetAnnexD03AfterRender: function(component, eOpts) {
        //var me = this;
        //var param = me.validateParam();
        /*
        var wait  = waitMsg('Please wait ...');
        var submissionNo = param.submissionNo;
        Ext.Ajax.request({
        url:"../Handlers/IncomeTax/D03/DCTBAnnexHandler.ashx?method=GetDCTBAnnexSummary" ,
        params:{assessmentNo:submissionNo},
        async : false,
        success: function ( result, request ) {   

        wait.hide();

        console.log("base");
        var obj = Ext.decode(result.responseText); 

        var strAnxSummary = Ext.create ('Ext.data.Store', {
        fields: ['AnnexID','Business','Action'],
        proxy: {
        type: 'ajax',
        url: '',
        reader: {
        type: 'json',
        root: 'root'
        }
        },
        storeId:'AnxSummary'
        });


        strAnxSummary.loadData([],false);
        strAnxSummary.add(obj.root);
        strAnxSummary.sort('AnnexID','ASC');

        //console.log("AnxSummary>>",strAnxSummary);

    },
    failure:  function ( result, request ) { 

        wait.hide();
        msg("FAILURE","Error in Saving data !!!");

    }
    });
    */
    },

    onBusiness1Grp1D03Click: function(gridcolumn) {
        var me = this;

        if(gridcolumn.getSelectionModel().getSelection().length < 1)
        {
            msg("WARNING","Please Select row first !!!");

            return;

        }
        else
        {
            var selectedRow = gridcolumn.getSelectionModel().getSelection()[0]; 

            var annexID = selectedRow.data.AnnexID;
            var annex = "D03Annex"+ annexID;
            var annexTitle = "Annex-"  + annexID;

            var uiConfig = {menuLink:annex,pageTitle:annexTitle};

            var param = me.validateParam();

            param.action = "E";
            param.annexIDSno = "1";
            //param.annexIDSno = annexID;

            //DynamicUI(uiConfig,null,param);

            if(param.from === "MV")
            {
                Ext.getCmp("PopupWindow").close();
                dynamicPopUp(annex,param);        
                Ext.getCmp("PopupWindow").setWidth(1140);
            }
            else
            {
                DynamicUI(uiConfig,null,param);
            }



        }

    },

    onBusiness2Grp1D03Click: function(gridcolumn) {
        var me = this;

        if(gridcolumn.getSelectionModel().getSelection().length < 1)
        {
            msg("WARNING","Please Select row first !!!");

            return;

        }
        else
        {
            var selectedRow = gridcolumn.getSelectionModel().getSelection()[0]; 

            var annexID = selectedRow.data.AnnexID;
            var annex = "D03Annex"+ annexID;
            var annexTitle = "Annex-"  + annexID;

            var uiConfig = {menuLink:annex,pageTitle:annexTitle};

            var param = me.validateParam();

            param.action = "E";
            param.annexIDSno = "2";

            //DynamicUI(uiConfig,null,param);

            if(param.from === "MV")
            {
                Ext.getCmp("PopupWindow").close();
                dynamicPopUp(annex,param);        
                Ext.getCmp("PopupWindow").setWidth(1140);
            }
            else
            {
                DynamicUI(uiConfig,null,param);
            }

        }

    },

    onBusiness3Grp1D03Click: function(gridcolumn) {
        var me = this;

        if(gridcolumn.getSelectionModel().getSelection().length < 1)
        {
            msg("WARNING","Please Select row first !!!");

            return;

        }
        else
        {
            var selectedRow = gridcolumn.getSelectionModel().getSelection()[0]; 

            var annexID = selectedRow.data.AnnexID;
            var annex = "D03Annex"+ annexID;
            var annexTitle = "Annex-"  + annexID;

            var uiConfig = {menuLink:annex,pageTitle:annexTitle};

            var param = me.validateParam();

            param.action = "E";
            param.annexIDSno = "3";

            //DynamicUI(uiConfig,null,param);

            if(param.from === "MV")
            {
                Ext.getCmp("PopupWindow").close();
                dynamicPopUp(annex,param);        
                Ext.getCmp("PopupWindow").setWidth(1140);
            }
            else
            {
                DynamicUI(uiConfig,null,param);
            }



        }

    },

    onBusiness4Grp1D03Click: function(gridcolumn) {
        var me = this;

        if(gridcolumn.getSelectionModel().getSelection().length < 1)
        {
            msg("WARNING","Please Select row first !!!");

            return;

        }
        else
        {
            var selectedRow = gridcolumn.getSelectionModel().getSelection()[0]; 

            var annexID = selectedRow.data.AnnexID;
            var annex = "D03Annex"+ annexID;
            var annexTitle = "Annex-"  + annexID;

            var uiConfig = {menuLink:annex,pageTitle:annexTitle};

            var param = me.validateParam();

            param.action = "E";
            param.annexIDSno = "4";

            //DynamicUI(uiConfig,null,param);
            if(param.from === "MV")
            {
                Ext.getCmp("PopupWindow").close();
                dynamicPopUp(annex,param);        
                Ext.getCmp("PopupWindow").setWidth(1140);
            }
            else
            {
                DynamicUI(uiConfig,null,param);
            }



        }

    },

    onBusiness5Grp1D03Click: function(gridcolumn) {
        var me = this;

        if(gridcolumn.getSelectionModel().getSelection().length < 1)
        {
            msg("WARNING","Please Select row first !!!");

            return;

        }
        else
        {
            var selectedRow = gridcolumn.getSelectionModel().getSelection()[0]; 

            var annexID = selectedRow.data.AnnexID;
            var annex = "D03Annex"+ annexID;
            var annexTitle = "Annex-"  + annexID;

            var uiConfig = {menuLink:annex,pageTitle:annexTitle};

            var param = me.validateParam();

            param.action = "E";
            param.annexIDSno = "5";

            //DynamicUI(uiConfig,null,param);

            if(param.from === "MV")
            {
                Ext.getCmp("PopupWindow").close();
                dynamicPopUp(annex,param);        
                Ext.getCmp("PopupWindow").setWidth(1140);
            }
            else
            {
                DynamicUI(uiConfig,null,param);
            }



        }

    },

    onBusiness6Grp1D03Click: function(gridcolumn) {
        var me = this;

        if(gridcolumn.getSelectionModel().getSelection().length < 1)
        {
            msg("WARNING","Please Select row first !!!");

            return;

        }
        else
        {
            var selectedRow = gridcolumn.getSelectionModel().getSelection()[0]; 

            var annexID = selectedRow.data.AnnexID;
            var annex = "D03Annex"+ annexID;
            var annexTitle = "Annex-"  + annexID;

            var uiConfig = {menuLink:annex,pageTitle:annexTitle};

            var param = me.validateParam();

            param.action = "E";
            param.annexIDSno = "6";

            //DynamicUI(uiConfig,null,param);

            if(param.from === "MV")
            {
                Ext.getCmp("PopupWindow").close();
                dynamicPopUp(annex,param);         
                Ext.getCmp("PopupWindow").setWidth(1140);
            }
            else
            {
                DynamicUI(uiConfig,null,param);
            }



        }

    },

    onGrdAnnexGroup0SaxAfterRender: function(component, eOpts) {
        var me = this;
        var grid = Ext.ComponentQuery.query('#grdAnnexGroup0Sax')[0];

        grid.columns[3].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            //var id = Ext.id();

            var row = grid.getStore().getAt(rowIndex);
            var anxID = row.data.AnnexID;

            var action = me.getAnnexValue(anxID);

            if(action == "E")
            {
                row.data.AnnexState = "Update";        
                return '<span style="color:blue;">( Update )</span>';
            }
            else
            {        
                row.data.AnnexState = "";
                return "";
            }

        };

    },

    onGrdAnnexGroup1SaxAfterRender: function(component, eOpts) {
        var me = this;
        var grid = Ext.ComponentQuery.query('#grdAnnexGroup1Sax')[0];

        grid.columns[3].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            //var id = Ext.id();

            var row = grid.getStore().getAt(rowIndex);
            var anxID = row.data.AnnexID;

            var bus = me.getAnnexValue(anxID,1);        

            if(bus === null)
            {
                return "";
            }
            else
            {
                return '<span style="text-decoration:underline;color:blue;cursor:pointer">Businees1</span>';
            }

        };

        grid.columns[4].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            //var id = Ext.id();
            //var anxID = 5 + rowIndex;

            var row = grid.getStore().getAt(rowIndex);
            var anxID = row.data.AnnexID;

            var bus = me.getAnnexValue(anxID,2);        

            if(bus === null)
            {
                return "";
            }
            else
            {
                return '<span style="text-decoration:underline;color:blue;cursor:pointer">Businees2</span>';
            }

        };

        grid.columns[5].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var row = grid.getStore().getAt(rowIndex);
            var anxID = row.data.AnnexID;

            var bus = me.getAnnexValue(anxID,3);        

            if(bus === null)
            {
                return "";
            }
            else
            {
                return '<span style="text-decoration:underline;color:blue;cursor:pointer">Businees3</span>';
            }

        };

        grid.columns[6].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var row = grid.getStore().getAt(rowIndex);
            var anxID = row.data.AnnexID;

            var bus = me.getAnnexValue(anxID,4);        

            if(bus === null)
            {
                return "";
            }
            else
            {
                return '<span style="text-decoration:underline;color:blue;cursor:pointer">Businees4</span>';
            }

        };

        grid.columns[7].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var row = grid.getStore().getAt(rowIndex);
            var anxID = row.data.AnnexID;

            var bus = me.getAnnexValue(anxID,5);        

            if(bus === null)
            {
                return "";
            }
            else
            {
                return '<span style="text-decoration:underline;color:blue;cursor:pointer">Businees5</span>';
            }

        };

        grid.columns[8].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var row = grid.getStore().getAt(rowIndex);
            var anxID = row.data.AnnexID;

            var bus = me.getAnnexValue(anxID,6);        

            if(bus === null)
            {
                return "";
            }
            else
            {
                return '<span style="text-decoration:underline;color:blue;cursor:pointer">Businees6</span>';
            }

        };

    },

    onGrdAnnexGroup2SaxAfterRender: function(component, eOpts) {
        var me = this;
        var grid = Ext.ComponentQuery.query('#grdAnnexGroup2Sax')[0];

        grid.columns[3].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            //var id = Ext.id();

            var row = grid.getStore().getAt(rowIndex);
            var anxID = row.data.AnnexID;

            var action = MyApp.app.getController('SetAnnexD03').getAnnexValue(anxID);

            if(action == "E")
            {
                row.data.AnnexState = "Update";        
                return '<span style="color:blue;">( Update )</span>';
            }
            else
            {        
                row.data.AnnexState = "";
                return "";
            }

        };

    },

    onGrdAnnexGroup3SaxAfterRender: function(component, eOpts) {
        var me = this;
        var grid = Ext.ComponentQuery.query('#grdAnnexGroup3Sax')[0];

        grid.columns[3].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var row = grid.getStore().getAt(rowIndex);
            var anxID = 13; 
            var action = MyApp.app.getController('SetAnnexD03').getAnnexValue(anxID);

            if(action == "E")
            {
                row.data.AnnexState = "Update";        
                return '<span style="color:blue;">( Update )</span>';
            }
            else
            {        
                row.data.AnnexState = "";
                return "";
            }


        };

    },

    onLblDocUpdSaxClick: function(label) {
        var me = this;
        var link = "DocUploadDo3";
        var title = "DocUploadDo3";

        var param = me.validateParam();
        var uiConfig = {menuLink:link,pageTitle:title};

        //DynamicUI(uiConfig,null,param);

        if(param.from === "MV")
        {
            Ext.getCmp("PopupWindow").close();
            dynamicPopUp("SetAnnexD03",param);
        }
        else
        {
            DynamicUI(uiConfig,null,param);
        }



    },

    onBtnSubmitSaxClick: function(button, e, eOpts) {
        var me = this;

        var view = Ext.ComponentQuery.query('#pnlSetAnnexD03')[0];
        var param = me.validateParam();

        Ext.Msg.confirm('Confirm Action', 'Do you want to Finalize Submit?', function(btn) {
            if(btn == 'yes'){


                var wait  = waitMsg('Finalizing Submit ...');

                Ext.Ajax.request({
                    url:'../Handlers/IncomeTax/D01/AssessmentSADoneHandler.ashx?method=FinalizedSubmitD03',
                    params:{moduleID:param.moduleID,assessmentNo:param.submissionNo},
                    success:function(result, request)
                    {
                        wait.hide();

                        var obj = Ext.decode(result.responseText); 
                        var lblFinalStatus = Ext.ComponentQuery.query('#lblFinalStatus')[0];

                        if(obj.success === "true")
                        {
                            param.recStatus = "F";                    

                            //lblFinalStatus.setValue("(FINALIZED , So data cannot be Added or Updated !!!)");
                            me.disableControls(view);
                        }

                        msg(obj.success === "true" ?"SUCCESS":"WARNING",obj.message);
                    },

                    failure:function(result, request){
                        wait.hide();
                        msg('ERROR OCURRED !!!', 'Error');                 
                    }


                });

            }
        }, this);
    },

    saveAnnex: function(annex,param) {
        var me = this;
        var url = "../Handlers/IncomeTax/D03/DCTBAnnexHandler.ashx?method=Save" ;
        var args = {DCTBAnnex:JSON.stringify(annex)};
        //console.log("saving param >> ",param);

        if(param.from === "AU")
        {  
            url = "../Handlers/IncomeTax/D03/DCTBAnnexHandler.ashx?method=SaveAU" ;
            args = {offCodeAU:param.offCodeAU,requestNo:param.requestNo,pan:param.pan,acctType:"10",fiscalYear:param.fiscalYear,DCTBAnnex:JSON.stringify(annex)};
        }


        var wait  = waitMsg('Saving ...');


        var message = "";

        Ext.Ajax.request({
            url:url,
            params:args,
            async : false,
            success: function ( result, request ) {   

                wait.hide();        
                var obj = Ext.decode(result.responseText); 

                message = obj.message;

                if(obj.success === "false")
                {
                    msg("FAILURE",message); 
                }
                else
                {  
                    if(param.action === "" || param.action === "A")
                    {
                        var arr = message.split("/");

                        param.action = "E";
                        param.tranNo = arr[2].trim();
                        param.annexIDSno = arr[1].trim();                


                        me.loadAnxSummary(param.submissionNo,param);
                        msg("SUCCESS",arr[0].trim()); 
                    }
                    else
                    {
                        me.loadAnxSummary(param.submissionNo,param);
                        msg("SUCCESS",message); 
                    }                
                }
            },
            failure:  function ( result, request ) { 

                wait.hide();

                msg("FAILURE","Error in Saving data !!!");        
            }
        });
    },

    getAnnexDetails: function(strSource,strTarget,start,end,assessmentNo,action) {
        var i = 0;

        strSource.each(function(rec,idx){

            var record = null;
            var flag = false;

            /*
            if(start === 0 && end <=1)
            {
            if(i >=start && i<= end)
            {
            flag = true;
            }
            }
            else 
            */

            if(i >= start && i < end)
            {
                flag = true;

            }

            if(flag)
            {
                // var amount = null;

                /* if(rec.data.ItemValue !== "" && rec.data.ItemValue !== undefined)
                {
                amount = rec.data.ItemValue;            
                }
                */
                record = {  
                    AssessmentNo:assessmentNo,
                    AnnexID:rec.data.AnnexID,
                    ItemID:rec.data.ItemID,
                    ItFromDate:rec.data.FromDate,                    
                    Amount:(rec.data.ItemValue === "" || rec.data.ItemValue === undefined)?null:rec.data.ItemValue,
                    //Amount:amount,
                    UserID:"",
                    Terminal:"",
                    TranDate:"",
                    AnnexIDSno:null,
                    ItemType:rec.data.ItemType,
                    RecordStatus:"",
                    TranNo:null,
                    Action:action
                };

                strTarget.add(record);
            }

            i++;

        });


        return strTarget;
    },

    redirectToAnnexD03: function(arg) {
        var param = arg?arg:{};
        var uiConfig = {menuLink:'SetAnnexD03',pageTitle:'Set Annex'};


        if(param.from === "MV")
        {
            Ext.getCmp("PopupWindow").close();
            dynamicPopUp("SetAnnexD03",param);    
        }
        else
        {
            DynamicUI(uiConfig,null,param);
        }

    },

    redirectOutInvalid: function() {
        var me = this;
        var user = me.getController('MyApp.controller.LoginSecurity'); 

        var el = Ext.get('logOUt');
        var elLoginTitle = Ext.get('LoginTitle');

        el.child('span').dom.innerHTML = "LogIn";
        elLoginTitle.dom.innerHTML = "Welcome";
        user.clearSession();
    },

    getAnnexValue: function(anx,bus) {
        var store = Ext.getStore("AnxSummary");

        if(store != undefined)
        {
            store.sort('AnnexID','ASC');

            //console.log("store>>",store);

            var business = null;
            var action = null;

            var rowIdx = store.findBy(
            function(record, id){

                if(bus !== null)
                {
                    if(record.get('AnnexID') == anx && record.get('Business') == bus)
                    {
                        business = record.get('Business');
                        action = record.get('Action');

                        return true ;
                    }
                }
                else
                {               
                    if(record.get('AnnexID') === anx)
                    {
                        business = record.get('Business');
                        action = record.get('Action');

                        return true ;
                    }
                }
                return false;
            });

            if(anx > 2 && anx < 10)
            {
                //console.log("before return >>",business);
                return business;
            }
            else
            {
                return action;
            }
        }
        else
        {
            return null;
        }
    },

    validateParam: function() {
        var me = this;
        var view = Ext.ComponentQuery.query('#pnlSetAnnexD03')[0];
        var user = me.getController('MyApp.controller.LoginSecurity');  
        var param = "";

        if(view.extraParam === null)
        {
            user.clearSession();

            return;

        }
        else
        {
            return view.extraParam;
        }
    },

    loadAnxSummary: function(submissionNo,param) {
        var me = this;
        var url = "../Handlers/IncomeTax/D03/DCTBAnnexHandler.ashx?method=GetDCTBAnnexSummary";
        var arg = {assessmentNo:submissionNo};

        if((param.from) && param.from === "AU")
        {  
            url = "../Handlers/IncomeTax/D03/DCTBAnnexHandler.ashx?method=GetDCTBAnnexSummaryAU";
            arg = {offCodeAU:param.offCode,requestNo:param.requestNo,assessmentNo:submissionNo};
        }


        Ext.Ajax.request({
            url: url,
            params:arg,
            // async : false,
            success: function ( result, request ) {   

                var obj = Ext.decode(result.responseText); 

                var strAnxSummary = Ext.create ('Ext.data.Store', {
                    fields: ['AnnexID','Business','Action'],
                    proxy: {
                        type: 'ajax',
                        url: '',
                        reader: {
                            type: 'json',
                            root: 'root'
                        }
                    },
                    storeId:'AnxSummary'
                });


                strAnxSummary.loadData([],false);
                strAnxSummary.add(obj.root);
                strAnxSummary.sort('AnnexID','ASC');

            },
            failure:  function ( result, request ) {

                msg("FAILURE","Error in Saving data !!!");

            }
        });

    },

    disableControls: function(view) {
        view.query('.button').forEach(function(c){c.setDisabled(true);});
        view.query('.field,.combo').forEach(function(c){c.setReadOnly(true);});
    },

    init: function(application) {
        this.control({
            "#pnlSetAnnexD03": {
                beforerender: this.onPnlSetAnnexD03BeforeRender,
                afterrender: this.onPnlSetAnnexD03AfterRender
            },
            "#business1Grp1D03": {
                click: this.onBusiness1Grp1D03Click
            },
            "#business2Grp1D03": {
                click: this.onBusiness2Grp1D03Click
            },
            "#business3Grp1D03": {
                click: this.onBusiness3Grp1D03Click
            },
            "#business4Grp1D03": {
                click: this.onBusiness4Grp1D03Click
            },
            "#business5Grp1D03": {
                click: this.onBusiness5Grp1D03Click
            },
            "#business6Grp1D03": {
                click: this.onBusiness6Grp1D03Click
            },
            "#grdAnnexGroup0Sax": {
                afterrender: this.onGrdAnnexGroup0SaxAfterRender
            },
            "#grdAnnexGroup1Sax": {
                afterrender: this.onGrdAnnexGroup1SaxAfterRender
            },
            "#grdAnnexGroup2Sax": {
                afterrender: this.onGrdAnnexGroup2SaxAfterRender
            },
            "#grdAnnexGroup3Sax": {
                afterrender: this.onGrdAnnexGroup3SaxAfterRender
            },
            "#lblDocUpdSax": {
                click: this.onLblDocUpdSaxClick
            },
            "#btnSubmitSax": {
                click: this.onBtnSubmitSaxClick
            }
        });
    }

});
