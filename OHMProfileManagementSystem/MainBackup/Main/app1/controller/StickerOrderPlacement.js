/*
 * File: app/controller/StickerOrderPlacement.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.StickerOrderPlacement', {
    extend: 'Ext.app.Controller',

    stores: [
        'CountryStore',
        'StickerType',
        'StickerOrdersDet'
    ],

    onBtnCancelSOPClick: function(button, e, eOpts) {
        this.ClearControls();
    },

    onBtnSaveSOPClick: function(button, e, eOpts) {
        var txtOrderDate=Ext.ComponentQuery.query('#txtOrderDateSOP')[0];
        var storeSOP=Ext.getStore('StickerOrdersDet');
        var orderDate=txtOrderDate.getValue();

        var errMsg="";
        var errCount=0;

        if(!orderDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया आदेश मिति हाल्नुहोस्  !<br/>";
            txtOrderDate.focus();
        }


        if(storeSOP.getCount() < 1)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया Sticker Order Details हाल्नलाई Add click गर्नुहोस् !<br/>";
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }

        this.SaveStickerOrderWithDetails("I");  
        this.ClearControls();

        /*if(txtOrderDate === "")
        {
        msg('WARNING',"कृपया आदेश मिति हाल्नुहोस् !");
        txtOrderDate.focus(true);
        return;

        }
        else if(storeSOP.getCount() < 1)
        {
        msg("WARNING","कृपया Sticker Order Details हाल्नलाई Add click गर्नुहोस् !");
        return false;
        }
        else
        {
        this.SaveStickerOrderWithDetails("I");  
        this.ClearControls();
        }
        */
    },

    onBtnAddSOPClick: function(button, e, eOpts) {
        var btnAddSOP=Ext.ComponentQuery.query('#btnAddSOP')[0];
        var storeSOP=Ext.getStore('StickerOrdersDet');
        var txtOrderDate=Ext.ComponentQuery.query('#txtOrderDateSOP')[0];

        if(txtOrderDate.getValue() === "")
        {
            msg('WARNING',"कृपया आदेश मिति हाल्नुहोस् !");
            txtOrderDate.focus(true);
            return;

        }

        var grdStickerOrderPlacement=Ext.ComponentQuery.query('#grdStickerOrderPlacement')[0];

        var rec={

            StickerType:'',
            Quantity:''
        };
        grdStickerOrderPlacement.store.add(rec);

        var col = grdStickerOrderPlacement.headerCt.getHeaderAtIndex(0);
        var recd = grdStickerOrderPlacement.store.data.items;
        var record = recd[recd.length-1];
        grdStickerOrderPlacement.getPlugin('pluginSOP').startEdit(record, col);

    },

    onBtmContSOPBeforeRender: function(component, eOpts) {
        var grid = Ext.ComponentQuery.query('#grdStickerOrderPlacement')[0];

        grid.columns[0].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";    


            var items=Ext.getStore('StickerType').data.items;


            for(var i=0;i<items.length;i++)
            {

                if(items[i].data.StickerID==value)
                {
                    temp=items[i].data.StickerDescription;
                    break;
                }        
            }


            return temp;
        };

    },

    onBtnEditSOPClick: function(button, e, eOpts) {
        var me=this;
        me.ClearControls("e");
        var hdnAction = Ext.ComponentQuery.query('#hdnActionSOP')[0];
        var txtOrderNo = Ext.ComponentQuery.query('#txtOrderNoSOP')[0];
        var lblAction = Ext.ComponentQuery.query('#lblActionSOP')[0];

        var btnSave = Ext.ComponentQuery.query('#btnSaveSOP')[0];
        var btnEdit = Ext.ComponentQuery.query('#btnEditSOP')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteSOP')[0];
        var btnAddSOP=Ext.ComponentQuery.query('#btnAddSOP')[0];

        btnSave.enable(true);
        btnEdit.disable(true);
        btnDelete.disable(true);
        btnAddSOP.enable(true);

        hdnAction.setValue("E");
        lblAction.setValue("Updating ...............");
        msg('WARNING',"कृपया आदेश नं हाल्नुहोस् !");
        //txtOrderNo.enable(true);
        txtOrderNo.focus(true);

    },

    onBtnSubmitSOPClick: function(button, e, eOpts) {
        var me=this;
        var txtOrderNo = Ext.ComponentQuery.query('#txtOrderNoSOP')[0].getValue();
        var action = Ext.ComponentQuery.query('#hdnActionSOP')[0];
        var lblAction = Ext.ComponentQuery.query('#lblActionSOP')[0];

        var txtOrderDate=Ext.ComponentQuery.query('#txtOrderDateSOP')[0];
        var storeSOP=Ext.getStore('StickerOrdersDet');
        var orderDate=txtOrderDate.getValue();

        var errMsg="";
        var errCount=0;

        if(!orderDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया आदेश मिति हाल्नुहोस्  !<br/>";
            txtOrderDate.focus();
        }


        if(storeSOP.getCount() < 1)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया Sticker Order Details हाल्नलाई Add click गर्नुहोस् !<br/>";
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }
        /*
        if(txtOrderDate === "")
        {
        msg('WARNING',"कृपया आदेश मिति हाल्नुहोस् !");
        txtOrderDate.focus(true);
        return;

        }
        else if(storeSOP.getCount() < 1)
        {
        msg("WARNING","कृपया Sticker Order Details हाल्नलाई Add click गर्नुहोस् !");
        return false;
        }
        if(action == "E" && txtOrderNo === "")
        {
        msg('WARNING',"कृपया आदेश मिति हाल्नुहोस् !");
        return;
        }
        */
        if(action.lastValue === "D")
        {  
            Ext.Msg.confirm('Confirm', 'के तपाई साचै नै डाटा DELETE गर्न चाहनुहन्छ ?', function(btn) {
                if(btn == 'yes'){

                    me.SaveStickerOrderWithDetails("D");
                    this.ClearControls();
                    return true;
                }
            }, this);


        }
        else
        {
            Ext.Msg.confirm('Confirm', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
                if(btn == 'yes'){

                    me.SaveStickerOrderWithDetails("F");
                    this.ClearControls();

                    return true;
                }
            }, this);


        }
    },

    onBtnDeleteSOPClick: function(button, e, eOpts) {
        var me=this;
        me.ClearControls("e");
        var hdnAction = Ext.ComponentQuery.query('#hdnActionSOP')[0];
        var txtOrderNo = Ext.ComponentQuery.query('#txtOrderNoSOP')[0];
        var lblAction = Ext.ComponentQuery.query('#lblActionSOP')[0];

        var btnSave = Ext.ComponentQuery.query('#btnSaveSOP')[0];
        var btnEdit = Ext.ComponentQuery.query('#btnEditSOP')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteSOP')[0];
        var btnAddSOP=Ext.ComponentQuery.query('#btnAddSOP')[0];

        btnSave.disable(true);
        btnEdit.disable(true);
        btnDelete.disable(true);
        btnAddSOP.disable(true);

        hdnAction.setValue("D");
        lblAction.setValue("Deleting ...............");
        msg('WARNING',"कृपया आदेश नं हाल्नुहोस् !");
        //txtOrderNo.enable(true);
        txtOrderNo.focus(true);

    },

    onTxtOrderNoSOPKeypress: function(textfield, e, eOpts) {
        var txtOrderNo= Ext.ComponentQuery.query('#txtOrderNoSOP')[0];
        if(e.keyCode === 13)
        {  
            if(txtOrderNo.getValue() === "")
            {
                msg('WARNING',"कृपया आदेश नं हाल्नुहोस् !");
                return;
            }
            else
            {
                this.LoadStickerOrderWithDetails();
            }
        }
    },

    onPnlSOPAfterRender: function(component, eOpts) {
        var storeC = Ext.getStore('CountryStore');
        storeC.load();
        var storeST = Ext.getStore('StickerType');
        storeST.load();
        var storeSODet = Ext.getStore('StickerOrdersDet');
        storeSODet.removeAll();
    },

    onTxtOrderDateSOPBlur: function(field, eOpts) {
        return validateFutureDate(field.getValue(),"Y",function(){field.focus();});
    },

    onTxtExptDelDateSOPBlur: function(field, eOpts) {
        return validateFutureDate(field.getValue(),"N",function(){field.focus();});
    },

    onTxtOrderNoSOPBlur: function(field, eOpts) {
        var txtOrderNo= Ext.ComponentQuery.query('#txtOrderNoSOP')[0];
        if(txtOrderNo.getValue() === "")
        {
            msg('WARNING',"कृपया आदेश नं हाल्नुहोस् !");
            return;
        }
        else
        {
            this.LoadStickerOrderWithDetails();
        }
    },

    SaveStickerOrderWithDetails: function(Status) {
        var txtOrderDateSOP=Ext.ComponentQuery.query('#txtOrderDateSOP')[0].getValue();
        var txtExptDelDate=Ext.ComponentQuery.query('#txtExptDelDateSOP')[0].getValue();
        var txtSupplierNameSOP=Ext.ComponentQuery.query('#txtSupplierNameSOP')[0].getValue();
        var cboSupplierCountrySOP=Ext.ComponentQuery.query('#cboSupplierCountrySOP')[0].getValue();
        var txtOrderNoSOP = Ext.ComponentQuery.query('#txtOrderNoSOP')[0].getValue() === ""?0:Ext.ComponentQuery.query('#txtOrderNoSOP')[0].getValue();

        var stickerOrdersDetLST="";
        var storeStickerOrdersDet=Ext.getStore('StickerOrdersDet');
        storeStickerOrdersDet.clearFilter();

        if(storeStickerOrdersDet.getCount() > 0)
        {
            stickerOrdersDetLST = getJson(storeStickerOrdersDet);

            console.log("stickerOrdersDetLST",stickerOrdersDetLST);
        }
        var action = Ext.ComponentQuery.query('#hdnActionSOP')[0].getValue();
        var tranNo = Ext.ComponentQuery.query('#hdnTranNoSOP')[0].getValue() === ""?null:Ext.ComponentQuery.query('#hdnTranNoSOP')[0].getValue();

        var stickerOrdersExcise="";

        stickerOrdersExcise={  
            OrderNo:txtOrderNoSOP,   
            OrderDate:txtOrderDateSOP,
            ExpDelDate:txtExptDelDate,
            SupplierName:txtSupplierNameSOP,
            SupplierCountry:cboSupplierCountrySOP,
            RecordStatus:Status,
            TranNo:tranNo,
            TranDate:"",
            UserID:"",
            Action:action,
            StickerOrderDetsLST:stickerOrdersDetLST!==""?stickerOrdersDetLST:null
        };
        //console.log('SOP',stickerOrdersExcise);

        Ext.Ajax.request
        ({
            url:'../Handlers/Excise/Sticker/StickerOrderPlacementHandler.ashx?method=SaveStickerOrderPlacement',
            params:{stickerOrders:JSON.stringify(stickerOrdersExcise)},
            success:function(result,request)
            {
                var obj = Ext.decode(result.responseText);

                msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);
            }
        });

    },

    ClearControls: function(txt) {
        var txtOrderNo= Ext.ComponentQuery.query('#txtOrderNoSOP')[0];
        var txtOrderDate= Ext.ComponentQuery.query('#txtOrderDateSOP')[0];
        var txtExptDelDate=Ext.ComponentQuery.query('#txtExptDelDateSOP')[0];
        var txtSupplierName=Ext.ComponentQuery.query('#txtSupplierNameSOP')[0];
        var cboSupplierCountry=Ext.ComponentQuery.query('#cboSupplierCountrySOP')[0];
        var strStickerOrderDet=Ext.getStore('StickerOrdersDet');
        var hdnAction = Ext.ComponentQuery.query('#hdnActionSOP')[0];
        var lblAction = Ext.ComponentQuery.query('#lblActionSOP')[0];

        var btnSave = Ext.ComponentQuery.query('#btnSaveSOP')[0];
        var btnEdit = Ext.ComponentQuery.query('#btnEditSOP')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteSOP')[0];
        var btnAddSOP=Ext.ComponentQuery.query('#btnAddSOP')[0];

        if(txt === "e")
        {
            txtOrderNo.reset();
            txtOrderDate.reset();
            txtExptDelDate.reset();
            txtSupplierName.reset();
            cboSupplierCountry.reset();
            strStickerOrderDet.removeAll();
            txtOrderNo.setVisible(true);
            lblAction.setVisible(true);
        }
        else
        {
            txtOrderNo.reset();
            txtOrderDate.reset();
            txtExptDelDate.reset();
            txtSupplierName.reset();
            cboSupplierCountry.reset();
            strStickerOrderDet.removeAll();
            hdnAction.setValue("");
            lblAction.reset();
            txtOrderNo.setVisible(false);
            lblAction.setVisible(false);
            btnSave.enable(true);
            btnEdit.enable(true);
            btnDelete.enable(true);
            btnAddSOP.enable(true);
        }
    },

    LoadStickerOrderWithDetails: function() {
        var txtOrderNo = Ext.ComponentQuery.query('#txtOrderNoSOP')[0].getValue();

        if( txtOrderNo === "")
        {
            return;
        }

        //var wait = watiMsg('loading ...');

        Ext.Ajax.request({
            url:"../Handlers/Excise/Sticker/StickerOrderPlacementHandler.ashx?method=GetStickerOrderPlacement",
            params:{orderNo:txtOrderNo},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }

                var data = obj.root; 
                if(data === "")
                {
                    msg("WARNING","यो आदेश नं. भेटाऊन सकेन !");
                    return;
                }
                var txtOrderDate=Ext.ComponentQuery.query('#txtOrderDateSOP')[0];
                var txtExptDelDate = Ext.ComponentQuery.query('#txtExptDelDateSOP')[0];
                var txtSupplierName = Ext.ComponentQuery.query('#txtSupplierNameSOP')[0];
                var cboSupplierCountry = Ext.ComponentQuery.query('#cboSupplierCountrySOP')[0];

                var hdnAction = Ext.ComponentQuery.query('#hdnActionSOP')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnTranNoSOP')[0];

                txtOrderDate.setValue(data.OrderDate);   
                txtExptDelDate.setValue(data.ExpDelDate);
                txtSupplierName.setValue(data.SupplierName);
                cboSupplierCountry.setValue(data.SupplierCountry);
                hdnTranNo.setValue(data.TranNo);

                /* if(hdnAction.getValue() !== "D")
                {
                hdnAction.setValue(data.Action);
                }*/

                var grd= Ext.ComponentQuery.query('#grdStickerOrderPlacement')[0];
                var store = Ext.getStore('StickerOrdersDet');
                // console.log(data.StickerOrderDetsLST);
                store.loadData(data.StickerOrderDetsLST);  

                store.clearFilter();
                store.filter(function(item){

                    return (item.data.OrderNo == txtOrderNo) ;
                });
            },
            failure: function ( result, request ) {

                // wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    init: function(application) {
        this.control({
            "#btnCancelSOP": {
                click: this.onBtnCancelSOPClick
            },
            "#btnSaveSOP": {
                click: this.onBtnSaveSOPClick
            },
            "#btnAddSOP": {
                click: this.onBtnAddSOPClick
            },
            "#btmContSOP": {
                beforerender: this.onBtmContSOPBeforeRender
            },
            "#btnEditSOP": {
                click: this.onBtnEditSOPClick
            },
            "#btnSubmitSOP": {
                click: this.onBtnSubmitSOPClick
            },
            "#btnDeleteSOP": {
                click: this.onBtnDeleteSOPClick
            },
            "#txtOrderNoSOP": {
                keypress: this.onTxtOrderNoSOPKeypress,
                blur: this.onTxtOrderNoSOPBlur
            },
            "#pnlSOP": {
                afterrender: this.onPnlSOPAfterRender
            },
            "#txtOrderDateSOP": {
                blur: this.onTxtOrderDateSOPBlur
            },
            "#txtExptDelDateSOP": {
                blur: this.onTxtExptDelDateSOPBlur
            }
        });
    }

});
