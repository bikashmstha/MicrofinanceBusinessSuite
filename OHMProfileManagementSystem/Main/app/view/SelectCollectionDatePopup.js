/*
 * File: app/view/SelectCollectionDatePopup.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.SelectCollectionDatePopup', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Column'
    ],

    height: 500,
    itemId: 'SelectCollectionDatePopup',
    width: 300,
    autoScroll: true,
    title: 'Select Collection Date',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    itemId: 'grdSelectCollectionDate',
                    width: '',
                    title: '',
                    store: 'CollectionDateStore',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            width: 113,
                            dataIndex: 'CollectionDateBs',
                            text: 'Collection Date BS'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 112,
                            dataIndex: 'CollectionDateAd',
                            text: 'Collection Date AD'
                        }
                    ]
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onSelectCollectionDatePopupAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onSelectCollectionDatePopupAfterRender: function(component, eOpts) {
        var waitSave = watiMsg('Loading Data. Please wait ...');
        Ext.Ajax.request({
            url: '../Handlers/Finance/Processing/CollectionOfflineDateHandler.ashx',
            params: {
                method:'GetCollectionOfflineDate',OfficeCode:getOfficeCode()
            },
            success: function ( result, request ) {

                var obj = Ext.decode(result.responseText);
                if(obj.success === 'true'){
                    console.log("Resu",obj.root);

                    var store =Ext.getStore('CollectionDateStore');
                    store.removeAll();
                    store.add(obj.root);
                    waitSave.hide();


                }else{msg('FAILURE','Could Not Load Data');waitSave.hide();}
            },
            failure: function(form, action) {
                msg("FAILURE","Could Not Load Data");  waitSave.hide();  }
        });
    }

});