/*
 * File: app/view/MSControlValues.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MSControlValues', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.Panel',
        'Ext.tab.Panel',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.form.field.Text',
        'Ext.grid.column.Action',
        'Ext.grid.plugin.RowEditing',
        'Ext.tab.Tab',
        'Ext.toolbar.Toolbar'
    ],

    frame: true,
    height: 250,
    itemId: 'pnlMsControlValues',
    autoScroll: true,
    title: 'MS Control Values/Reference Values',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    itemId: 'frmMsControlValues',
                    bodyPadding: 10,
                    items: [
                        {
                            xtype: 'container',
                            items: [
                                {
                                    xtype: 'tabpanel',
                                    activeTab: 0,
                                    items: [
                                        {
                                            xtype: 'panel',
                                            title: 'MS Control Values',
                                            items: [
                                                {
                                                    xtype: 'gridpanel',
                                                    itemId: 'grdControlValues',
                                                    title: 'Ms Control Values',
                                                    store: 'MsControlValuesStore',
                                                    columns: [
                                                        {
                                                            xtype: 'gridcolumn',
                                                            width: 200,
                                                            dataIndex: 'NameEn',
                                                            text: 'Name',
                                                            editor: {
                                                                xtype: 'textfield',
                                                                itemId: 'txtName'
                                                            }
                                                        },
                                                        {
                                                            xtype: 'gridcolumn',
                                                            width: 200,
                                                            dataIndex: 'ControlValue',
                                                            text: 'Control Value',
                                                            editor: {
                                                                xtype: 'textfield',
                                                                itemId: 'txtControlValue'
                                                            }
                                                        },
                                                        {
                                                            xtype: 'gridcolumn',
                                                            width: 250,
                                                            dataIndex: 'Remarks',
                                                            text: 'Remarks',
                                                            editor: {
                                                                xtype: 'textfield',
                                                                itemId: 'txtRemarks'
                                                            }
                                                        },
                                                        {
                                                            xtype: 'gridcolumn',
                                                            dataIndex: 'Action',
                                                            text: 'Action',
                                                            editor: {
                                                                xtype: 'textfield',
                                                                itemId: 'txtAction',
                                                                readOnly: true
                                                            }
                                                        },
                                                        {
                                                            xtype: 'gridcolumn',
                                                            dataIndex: 'Active',
                                                            text: 'Active',
                                                            editor: {
                                                                xtype: 'textfield',
                                                                itemId: 'txtActive'
                                                            }
                                                        },
                                                        {
                                                            xtype: 'actioncolumn',
                                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                                var store = Ext.getStore('MsControlValuesStore');
                                                                var grd =  Ext.ComponentQuery.query('#grdControlValues')[0];
                                                                var row = store.getAt(rowIndex).data;
                                                                Ext.Msg.confirm('Confirm Action', 'Do you want to Remove the selected ControlValues ?', function(btn) {
                                                                    if(btn == 'yes'){
                                                                        //test


                                                                        var contolValues={
                                                                            RowId:'',
                                                                            NameEn:row.NameEn,
                                                                            ControlValue:row.ControlValue,
                                                                            TranOfficeCode:null,
                                                                            Active:'Y',
                                                                            AppTitle:'',
                                                                            Remarks:row.Remarks,
                                                                            User:'',
                                                                            Date:'',
                                                                            Action:'D'
                                                                        };


                                                                        Ext.Ajax.request({
                                                                            url: '../Handlers/GeneralMasterParameters/References/MsControlValuesHandler.ashx',
                                                                            params: {
                                                                                method:'SaveMsControlValues',
                                                                                controlValues:JSON.stringify(contolValues)
                                                                            },
                                                                            success: function(response){
                                                                                var out=Ext.decode(response.responseText);
                                                                                console.log(out);

                                                                                if(out.success==="true")
                                                                                {
                                                                                    var message=out.root;
                                                                                    if(message.OutResultCode==="SUCCESS")
                                                                                    {
                                                                                        msg("SUCCESS",message.OutResultMessage,function(){
                                                                                            grd.bindStore(store);
                                                                                            store.removeAt(rowIndex);

                                                                                        });



                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        msg("FAILURE",message.OutResultMessage);
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    msg("FAILURE",out.message);
                                                                                }
                                                                            },
                                                                            failure: function ( result, request ) {
                                                                                waitSave.hide();
                                                                                var out=Ext.decode(response.responseText);
                                                                                msg("FAILURE",out.message);
                                                                            }

                                                                        });


                                                                        //test






                                                                    }
                                                                });
                                                            },
                                                            icon: '../ITS/resources/images/icons/cancel.png'
                                                        }
                                                    ],
                                                    plugins: [
                                                        Ext.create('Ext.grid.plugin.RowEditing', {
                                                            listeners: {
                                                                edit: {
                                                                    fn: me.onRowEditingEdit,
                                                                    scope: me
                                                                },
                                                                validateedit: {
                                                                    fn: me.onRowEditingValidateedit,
                                                                    scope: me
                                                                }
                                                            }
                                                        })
                                                    ]
                                                }
                                            ],
                                            tabConfig: {
                                                xtype: 'tab',
                                                itemId: 'tbControlValues',
                                                listeners: {
                                                    activate: {
                                                        fn: me.onTbControlValuesActivate,
                                                        scope: me
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'panel',
                                            title: 'Reference Values',
                                            items: [
                                                {
                                                    xtype: 'gridpanel',
                                                    itemId: 'grdReferenceValues',
                                                    title: 'MsReference Values',
                                                    store: 'MsReferenceValuesStore',
                                                    plugins: [
                                                        Ext.create('Ext.grid.plugin.RowEditing', {
                                                            listeners: {
                                                                validateedit: {
                                                                    fn: me.onRowEditingValidateedit1,
                                                                    scope: me
                                                                }
                                                            }
                                                        })
                                                    ],
                                                    columns: [
                                                        {
                                                            xtype: 'gridcolumn',
                                                            width: 200,
                                                            dataIndex: 'RefMstCode',
                                                            text: 'Ref Master Code',
                                                            editor: {
                                                                xtype: 'textfield',
                                                                itemId: 'txtRefMstCode'
                                                            }
                                                        },
                                                        {
                                                            xtype: 'gridcolumn',
                                                            width: 300,
                                                            dataIndex: 'RefMstName',
                                                            text: 'Ref Master Name',
                                                            editor: {
                                                                xtype: 'textfield',
                                                                itemId: 'txtRefMstName'
                                                            }
                                                        },
                                                        {
                                                            xtype: 'gridcolumn',
                                                            itemId: 'txtRAction',
                                                            dataIndex: 'Action',
                                                            text: 'Action',
                                                            editor: {
                                                                xtype: 'textfield',
                                                                itemId: 'txtAction'
                                                            }
                                                        },
                                                        {
                                                            xtype: 'gridcolumn',
                                                            itemId: 'txtActive',
                                                            dataIndex: 'Active',
                                                            text: 'Active',
                                                            editor: {
                                                                xtype: 'textfield',
                                                                itemId: 'txtActive'
                                                            }
                                                        },
                                                        {
                                                            xtype: 'actioncolumn',
                                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                                var store = Ext.getStore('MsReferenceValuesStore');
                                                                var grd =  Ext.ComponentQuery.query('#grdReferenceValues')[0];
                                                                var row = store.getAt(rowIndex).data;

                                                                Ext.Msg.confirm('Confirm Action', 'Do you want to Remove the selected ReferenceValues ?', function(btn) {
                                                                    if(btn == 'yes'){

                                                                        var referenceValues={
                                                                            RefMstCode:row.RefMstCode,
                                                                            RefMstName:row.RefMstName,
                                                                            Active:'Y',
                                                                            User:'',
                                                                            Date:'',
                                                                            Action:'D'
                                                                        };


                                                                        var wMsg='Deleting....';

                                                                        var waitSave = watiMsg(wMsg);

                                                                        Ext.Ajax.request({
                                                                            url: '../Handlers/GeneralMasterParameters/References/MsReferenceCodeMasterHandler.ashx',
                                                                            params: {
                                                                                method:'SaveMsReferenceCodeMaster',
                                                                                referenceValuues:JSON.stringify(referenceValues)
                                                                            },
                                                                            success: function(response){
                                                                                waitSave.hide();
                                                                                var out=Ext.decode(response.responseText);
                                                                                console.log(out);

                                                                                if(out.success==="true")
                                                                                {
                                                                                    var message=out.root;
                                                                                    if(message.OutResultCode==="SUCCESS")
                                                                                    {
                                                                                        msg("SUCCESS",message.OutResultMessage,function(){
                                                                                            grd.bindStore(store);
                                                                                            store.removeAt(rowIndex);
                                                                                        });



                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        msg("FAILURE",message.OutResultMessage);
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    msg("FAILURE",out.message);
                                                                                }
                                                                            },
                                                                            failure: function ( result, request ) {
                                                                                waitSave.hide();
                                                                                var out=Ext.decode(response.responseText);
                                                                                msg("FAILURE",out.message);
                                                                            }

                                                                        });



                                                                        return true;
                                                                    }
                                                                });
                                                            },
                                                            icon: '../ITS/resources/images/icons/cancel.png'
                                                        }
                                                    ]
                                                }
                                            ],
                                            tabConfig: {
                                                xtype: 'tab',
                                                itemId: 'tbReferenceValues',
                                                listeners: {
                                                    activate: {
                                                        fn: me.onTbReferenceValuesActivate,
                                                        scope: me
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'bottom',
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'btnControlValues',
                                    text: 'Add ControlValues'
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'btnReferenceValues',
                                    text: 'Add Reference Values'
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onRowEditingEdit: function(editor, e, eOpts) {
        /*var errMsg='';
        var name=Ext.ComponentQuery.query('#txtName')[0].getValue();
        var controlValue=Ext.ComponentQuery.query('#txtControlValue')[0].getValue();
        var remarks=Ext.ComponentQuery.query('#txtRemarks')[0].getValue();
        var action=Ext.ComponentQuery.query('#txtAction')[0].getValue();

                var contolValues={
                    NameEn:name,
                    ControlValue:controlValue,
                    Remarks:remarks,
                    Action:action
                };

                Ext.Ajax.request({
                           url: '../Handlers/GeneralMasterParameters/References/MsControlValuesHandler.ashx',
                            params: {
                                method:'SaveMsControlValues',
                                controlValues:JSON.stringify(contolValues)
                            },
                            success: function(response){

                            var out=Ext.decode(response.responseText);
                            console.log(out);



                        }
                        });
        */
    },

    onRowEditingValidateedit: function(editor, e, eOpts) {
        var errMsg='';
        var name=Ext.ComponentQuery.query('#txtName')[0];
        var controlValue=Ext.ComponentQuery.query('#txtControlValue')[0];
        var remarks=Ext.ComponentQuery.query('#txtRemarks')[0];
        var action=Ext.ComponentQuery.query('#txtAction')[0];

                if(name.getValue()===null ||name.getValue()==="")
                    {
                        errMsg+="Please,Enter Name";
                    }
                if(controlValue.getValue()===null ||controlValue.getValue()==="")
                    {
                        errMsg+="Please,Enter ControlValue";
                    }
                if(errMsg!=='')
                    {
                        msg("WARNING",errMsg);
                        return;
                    }


                 var contolValues={
                            RowId:'',
                            NameEn:name.getValue(),
                            ControlValue:controlValue.getValue(),
                            TranOfficeCode:null,
                            Active:'Y',
                            AppTitle:'',
                            Remarks:remarks.getValue(),
                            User:'',
                            Date:'',
                            Action:action.getValue()
                        };

                var wMsg='';
                if(action.getValue()==='I')
                    {
                        wMsg='Inserting....';
                    }
                else
                    {
                        wMsg='Updting....';
                    }
                var waitSave = watiMsg(wMsg);

                Ext.Ajax.request({
                           url: '../Handlers/GeneralMasterParameters/References/MsControlValuesHandler.ashx',
                           params: {
                                method:'SaveMsControlValues',
                                controlValues:JSON.stringify(contolValues)
                            },
                            success: function(response){
                            waitSave.hide();
                            var out=Ext.decode(response.responseText);
                            console.log(out);

                            if(out.success==="true")
                                {
                                    var message=out.root;
                                    if(message.OutResultCode==="SUCCESS")
                                        {
                                            msg("SUCCESS",message.OutResultMessage,function(){
                                                var grd = Ext.ComponentQuery.query('#grdControlValues')[0];

                                                var record = grd.getSelectionModel().getSelection()[0];
                                                record.set('Action','U');

                                            });



                                        }
                                    else
                                        {
                                          msg("FAILURE",message.OutResultMessage);
                                        }
                                }
                                else
                                    {
                                        msg("FAILURE",out.message);
                                    }
                            },
                            failure: function ( result, request ) {
                                waitSave.hide();
                                var out=Ext.decode(response.responseText);
                                msg("FAILURE",out.message);
                            }

                        });

    },

    onTbControlValuesActivate: function(tab, eOpts) {

        var name =null;
        Ext.Ajax.request({
        		    url: '../Handlers/GeneralMasterParameters/References/MsControlValuesHandler.ashx?method=GetMsControlValues',
                    method:'POST',
                    params:{name:name},
                    success: function ( result, request ) {

                        var obj = Ext.decode(result.responseText);
                        var data = obj.root;
        				console.log('data',data);
        				var strMsControlValues = Ext.getStore('MsControlValuesStore');
                        strMsControlValues.removeAll();
                        strMsControlValues.add(data);

                    }


                });
        //Ext.ComponentQuery.query('#btnReferenceValues')[0].enable(true);


        //Ext.ComponentQuery.query('#btnReferenceValues')[0].disable(true);

    },

    onRowEditingValidateedit1: function(editor, e, eOpts) {
        var errMsg='';
        var refMstCode=Ext.ComponentQuery.query('#txtRefMstCode')[0];
        var refMstName=Ext.ComponentQuery.query('#txtRefMstName')[0];
        var action=Ext.ComponentQuery.query('#txtAction')[0];
        console.log(action.getValue());



                 var referenceValues={
                            RefMstCode:refMstCode.getValue(),
                            RefMstName:refMstName.getValue(),
                            Active:'Y',
                            User:'',
                            Date:'',
                            Action:action.getValue()
                        };

                var wMsg='';
                if(action.getValue()==='I')
                    {
                        wMsg='Inserting....';
                    }
                else
                    {
                        wMsg='Updting....';
                    }
                var waitSave = watiMsg(wMsg);

                Ext.Ajax.request({
                           url: '../Handlers/GeneralMasterParameters/References/MsReferenceCodeMasterHandler.ashx',
                           params: {
                                method:'SaveMsReferenceCodeMaster',
                                referenceValuues:JSON.stringify(referenceValues)
                            },
                            success: function(response){
                            waitSave.hide();
                            var out=Ext.decode(response.responseText);
                            console.log(out);

                            if(out.success==="true")
                                {
                                    var message=out.root;
                                    if(message.OutResultCode==="SUCCESS")
                                        {
                                            msg("SUCCESS",message.OutResultMessage,function(){
                                                var grd = Ext.ComponentQuery.query('#grdReferenceValues')[0];

                                                var record = grd.getSelectionModel().getSelection()[0];
                                                record.set('Action','U');

                                            });



                                        }
                                    else
                                        {
                                          msg("FAILURE",message.OutResultMessage);
                                        }
                                }
                                else
                                    {
                                        msg("FAILURE",out.message);
                                    }
                            },
                            failure: function ( result, request ) {
                                waitSave.hide();
                                var out=Ext.decode(response.responseText);
                                msg("FAILURE",out.message);
                            }

                        });

    },

    onTbReferenceValuesActivate: function(tab, eOpts) {

        var name =null;
        Ext.Ajax.request({
        		    url: '../Handlers/GeneralMasterParameters/References/MsReferenceCodeMasterHandler.ashx?method=GetMsReferenceCodeMaster',
                    method:'POST',
                    params:{name:name},
                    success: function ( result, request ) {

                        var obj = Ext.decode(result.responseText);
                        var data = obj.root;
        				console.log('data',data);
        				var storeRefValues = Ext.getStore('MsReferenceValuesStore');
                        storeRefValues.removeAll();
                        storeRefValues.add(data);

                    }


                });

        Ext.ComponentQuery.query('#btnControlValues')[0].disable(true);
        Ext.ComponentQuery.query('#btnReferenceValues')[0].enable(true);


    }

});