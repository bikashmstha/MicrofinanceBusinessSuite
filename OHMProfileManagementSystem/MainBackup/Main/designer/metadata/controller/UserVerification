{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "UserVerification",
        "stores": [
            "UserVModuleUV",
            "VerificationModule",
            "ApplicationwithVerificationModule",
            "User"
        ]
    },
    "configAlternates": {
        "designer|userClassName": "string",
        "stores": "typedarray"
    },
    "designerId": "f44e1842-e30d-4b5a-8297-cc38a6d6dcb4",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grdApplicationUv",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "ongrdApplicationUvItemClick",
                "implHandler": [
                    "var me=this;\r",
                    "var grd =Ext.ComponentQuery.query(\"#grdAppModuleUv\")[0];\r",
                    "grd.store.loadData(record.raw.VerificationModule);\r",
                    "\r",
                    "var strUserVerification=Ext.getStore('UserVModuleUV');\r",
                    "strUserVerification.loadData([],false);\r",
                    ""
                ],
                "name": "itemclick",
                "scope": "me"
            },
            "configAlternates": {
                "designer|controlQuery": "string",
                "designer|targetType": "view",
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string"
            },
            "name": "ongrdApplicationUvItemClick",
            "designerId": "5e465770-0c75-4677-8376-ecdcf885c8ac"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grdAppModuleUv",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrdAppModuleUvItemClick",
                "implHandler": [
                    "var appid = Ext.ComponentQuery.query('#grdApplicationUv')[0].getSelectionModel().getSelection()[0].data.ApplicationID;\r",
                    "var modid = Ext.ComponentQuery.query('#grdAppModuleUv')[0].getSelectionModel().getSelection()[0].data.ModuleID;\r",
                    "\r",
                    "//var store=  Ext.getStore('UV_UserVModule');\r",
                    "var grd = Ext.ComponentQuery.query('#grdAppModuleVerUv')[0];\r",
                    "\r",
                    "\r",
                    "//store.load({params:{AppID:appid,ModuleID:modid}});\r",
                    "\r",
                    "grd.getStore().load({params:{AppID:appid,ModuleID:modid}});  \r",
                    "\r",
                    "console.log('store', grd.getStore().data.items);\r",
                    "\r",
                    "console.log('count',grd.getStore().getCount());\r",
                    ""
                ],
                "name": "itemclick",
                "scope": "me"
            },
            "configAlternates": {
                "designer|controlQuery": "string",
                "designer|targetType": "view",
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string"
            },
            "name": "onGrdAppModuleUvItemClick",
            "designerId": "2630e9b3-9b55-47ef-9ec4-a1a382265302"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btmContUv",
                "designer|targetType": "Ext.container.Container",
                "fn": "onBtmContUvAfterRender",
                "implHandler": [
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#grdAppModuleVerUv')[0].getPlugin('grdpluginUv').on('canceledit',function(e){    \r",
                    "    Ext.getStore('UserVModuleUV').removeAt(e.rowIdx);\r",
                    "});\r",
                    "\r",
                    "Ext.ComponentQuery.query('#grdAppModuleVerUv')[0].on('beforeedit', function(editor,e) {\r",
                    "    var valid=true;\r",
                    "    if(editor.record.data.Action===\"\")\r",
                    "    {\r",
                    "        valid=false;\r",
                    "        Ext.MessageBox.alert('Warning',\"You Can not edit this record\");\r",
                    "    }\r",
                    "    return valid;\r",
                    "});\r",
                    "Ext.ComponentQuery.query('#grdAppModuleVerUv')[0].on('validateedit', function(editor, e) {\r",
                    "\r",
                    "    var index=e.rowIdx; \r",
                    "    var max = Ext.ComponentQuery.query('#grdAppModuleUv')[0].getSelectionModel().getSelection()[0].data.LevelOfVerification;\r",
                    "    var userID= editor.context.newValues.UserID;\r",
                    "    var items=e.store.data.items;\r",
                    "    var count=0;\r",
                    "    var message=\"\";\r",
                    "    var valid=true;\r",
                    "    if(userID===\"\" ||userID===\"--Choose--\")\r",
                    "    {\r",
                    "        count++;\r",
                    "        message=message+count+\") \"+\"User is required. <br/>\" ;       \r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        for(var i=0; i<items.length;i++)\r",
                    "        {\r",
                    "            if(i!=index)\r",
                    "            {      \r",
                    "                var uid=items[i].data.UserID;\r",
                    "                if(userID==uid)\r",
                    "                {\r",
                    "                    count++;\r",
                    "                    message=message+count+\") \"+\"User Already Exists. <br/>\" ;\r",
                    "                    break;\r",
                    "                }\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "        }\r",
                    "    }\r",
                    "\r",
                    "    if(isNaN(editor.context.newValues.VerifyLevel)||Number(editor.context.newValues.VerifyLevel)===0)\r",
                    "    {\r",
                    "        count++;\r",
                    "        message=message+count+\") \"+\"Verify Level is Invalid.<br/>\" ;\r",
                    "    }\r",
                    "    else\r",
                    "    {    \r",
                    "        if(Number(editor.context.newValues.VerifyLevel)>Number(max))\r",
                    "        {\r",
                    "            count++;\r",
                    "            message=message+count+\") \"+\"Level Of Verification more than \"+max+\".<br/>\" ;\r",
                    "        }\r",
                    "    }\r",
                    "\r",
                    "    if(editor.context.newValues.FromDate===\"\")\r",
                    "    {\r",
                    "        count++;\r",
                    "        message=message+count+\") \"+\"Date is required.<br/>\" ;\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "\r",
                    "        if(validateNepDate(editor.context.newValues.FromDate)!==\"\")\r",
                    "        {\r",
                    "            count++;\r",
                    "            message=message+count+\") \"+\"Invalid Date.<br/>\" ;\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    e.cancel = count>0;\r",
                    "    if(e.cancel)\r",
                    "    {\r",
                    "        Ext.MessageBox.alert('Warning',message);\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        e.store.data.items[index].data.Action=editor.context.newValues.Action==\"A\"?\"A\":\"E\";\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "});"
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "designer|controlQuery": "string",
                "designer|targetType": "view",
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string"
            },
            "name": "onBtmContUvAfterRender",
            "designerId": "c3b732cb-62c8-4e7e-9759-6d442f182db9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnAddUv",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnAddUvClick",
                "implHandler": [
                    "\r",
                    "//alert('ssss');\r",
                    "var appid = Ext.ComponentQuery.query('#grdApplicationUv')[0].getSelectionModel().getSelection()[0].data.ApplicationID;\r",
                    "var modid = Ext.ComponentQuery.query('#grdAppModuleUv')[0].getSelectionModel().getSelection()[0].data.ModuleID;\r",
                    "var vmFromDate=Ext.ComponentQuery.query('#grdAppModuleUv')[0].getSelectionModel().getSelection()[0].data.FromDate;\r",
                    "//alert(vmFromDate);\r",
                    "Ext.getStore('UserVModuleUV').add({\"ApplicationID\":appid,\"ModuleID\":modid,\"VMFromDate\":vmFromDate,\"UserID\":\"\",\"VerifyLevel\":\"\",\"Action\":\"A\",\"FromDate\":\"\",\"ToDate\":\"\"});\r",
                    "\r",
                    "\r",
                    "//console.log('add new');\r",
                    "var grd=Ext.ComponentQuery.query('#grdAppModuleVerUv')[0];\r",
                    "var col=grd.headerCt.getHeaderAtIndex(0);\r",
                    "var rec=Ext.getStore('UserVModuleUV').data.items;\r",
                    "var record=rec[rec.length-1];\r",
                    "grd.getPlugin('grdpluginUv').startEdit(record, col);"
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "designer|controlQuery": "string",
                "designer|targetType": "view",
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string"
            },
            "name": "onBtnAddUvClick",
            "designerId": "db87d96a-fda8-4803-8cdb-2a75a66648c8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnSaveeUMV",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnSaveeUMVClick",
                "implHandler": [
                    "\r",
                    "var data=[];\r",
                    "Ext.getStore('UserVModuleUV').clearFilter();\r",
                    "var itm=Ext.getStore('UserVModuleUV').data.items;\r",
                    "\r",
                    "console.log(itm);\r",
                    "\r",
                    "for(var i=0;i<itm.length;i++)\r",
                    "{\r",
                    "\r",
                    "    if(itm[i].data.Action===\"A\"||itm[i].data.Action===\"D\")\r",
                    "    {\r",
                    "        data.push(itm[i].data);\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "console.log(JSON.stringify(data));\r",
                    "\r",
                    "\r",
                    "if(Ext.getStore('UserVModuleUV').data.getCount()===0)\r",
                    "{\r",
                    "    msg('FAILURE','No User assigned for VERIFICATION');\r",
                    "    return;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "Ext.Ajax.request({\r",
                    "    url: '../Handlers/Verification/UserVerificationModuleHandler.ashx?method=SaveUserVerificationModules',\r",
                    "    params: {data:JSON.stringify(data)},\r",
                    "\r",
                    "\r",
                    "\r",
                    "    success: function ( result, request ) {\r",
                    "\r",
                    "\r",
                    "        var obj = Ext.decode(result.responseText); \r",
                    "        msg(obj.success === \"true\" ?\"SUCCESS\":\"FAILURE\",obj.message);\r",
                    "\r",
                    "\r",
                    "        var strVerificationModule=Ext.getStore('VerificationModule');\r",
                    "        var strUserVModuleUV=Ext.getStore('UserVModuleUV');\r",
                    "\r",
                    "        strVerificationModule.removeAll();\r",
                    "        strUserVModuleUV.removeAll();\r",
                    "        Ext.ComponentQuery.query('#grdApplicationUv')[0].getSelectionModel().deselectAll();\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    },\r",
                    "\r",
                    "    failure: function ( result, request ) {\r",
                    "\r",
                    "        msg('ERROR OCURRED !!!', 'Error');\r",
                    "    }\r",
                    "\r",
                    "});\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "designer|controlQuery": "string",
                "designer|targetType": "view",
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string"
            },
            "name": "onBtnSaveeUMVClick",
            "designerId": "60422a0f-92f4-45a4-974e-7ffe6fb2c436"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnCancelUVUVM",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtnCancelUVUVMClick",
                "implHandler": [
                    "var strVerificationModule=Ext.getStore('VerificationModule');\r",
                    "var strUserVModuleUV=Ext.getStore('UserVModuleUV');\r",
                    "\r",
                    "strVerificationModule.removeAll();\r",
                    "strUserVModuleUV.removeAll();\r",
                    "Ext.ComponentQuery.query('#grdApplicationUv')[0].getSelectionModel().deselectAll();"
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "designer|controlQuery": "string",
                "designer|targetType": "view",
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string"
            },
            "name": "onBtnCancelUVUVMClick",
            "designerId": "4de28835-4120-4e45-ae8d-e014c2c4655b"
        }
    ]
}