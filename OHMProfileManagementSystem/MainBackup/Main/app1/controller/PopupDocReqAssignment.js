/*
 * File: app/controller/PopupDocReqAssignment.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.PopupDocReqAssignment', {
    extend: 'Ext.app.Controller',

    stores: [
        'strpopupDocReqAssignment'
    ],

    onPopupDocReqAssignmentAfterRender: function(component, eOpts) {
        var me=this;

        var view = Ext.ComponentQuery.query('#PopupDocReqAssignment')[0];
        console.log("viewSA",view);
        var pan="";
        var KEYWORD="";
        var reqid="";
        console.log("view.extraPara.ID>>>",view.extraParam.KEYWORD);
        pan=view.extraParam.params.ID;
        KEYWORD=view.extraParam.params.KEYWORD;
        reqid=view.extraParam.params.REQUEST_ID;
        console.log("Requestidddd",reqid);



        var grdPopupReqDocAssignment=Ext.ComponentQuery.query('#grdPopupReqDocAssignment')[0];
        var strpopupDocReqAssgn=Ext.getStore('strpopupDocReqAssignment');
        strpopupDocReqAssgn.removeAll();
        strpopupDocReqAssgn.loadData([],false);

        var watiMsg=waitMsg('Loading ...');

        Ext.Ajax.request
        ({

            url:'../Handlers/DocumentManagement/DocumentRequestHandler.ashx?method=GetDocReqAssmtbyid',
            params:{ID:pan,KEYWORD:KEYWORD,REQUEST_ID:reqid},


            success:function(response){
                console.log(response.responseText);
                var obj =Ext.decode(response.responseText);
                var row = obj.root;


                console.log("row-->",obj.root);

                strpopupDocReqAssgn.removeAll();
                strpopupDocReqAssgn.loadData([],false);


                grdPopupReqDocAssignment.store.add(obj.root);
                watiMsg.hide();

            },

            failure:function(response)
            {
                msg('FAILURE',Ext.decode(response));

            }



        });



    },

    init: function(application) {
        this.control({
            "#PopupDocReqAssignment": {
                afterrender: this.onPopupDocReqAssignmentAfterRender
            }
        });
    }

});
