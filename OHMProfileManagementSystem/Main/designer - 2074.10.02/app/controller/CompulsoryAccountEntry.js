/*
 * File: app/controller/CompulsoryAccountEntry.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.CompulsoryAccountEntry', {
    extend: 'Ext.app.Controller',

    stores: [
        'CompulsaryAccountDetailsStore',
        'ProductTypeStore'
    ],

    onBtnCreateCompulsaryAccClick: function(button, e, eOpts) {
        var objCompulsoryAcc ={
        CompulsoryAccountDesc:Ext.ComponentQuery.query('#txtCompulsoryAccDesc')[0].getValue(),
        ProductCode:Ext.ComponentQuery.query('#ddlSavingProductCode')[0].getValue(),
        ProductType:Ext.ComponentQuery.query('#ddlProductType')[0].getValue(),
        ActiveFlag:Ext.ComponentQuery.query('#chkActive')[0].getValue()?'Y':'N',
        Action:'I',
        ProductName:Ext.ComponentQuery.query('#ddlSavingProductCode')[0].getRawValue()


        };


        var waitSave = watiMsg('Saving .Please wait ...');
        Ext.Ajax.request({
            url:'../Handlers/Finance/Maintenance/CompulsoryAccountsEntryHandler.ashx',
            params:{method:'Save',CompulsoryAccountsEntry:JSON.stringify(objCompulsoryAcc)},
            success: function ( result, request ) {
                waitSave.hide();
                var out = Ext.decode(result.responseText);
                if(out.success==='true'){


                  var store = Ext.getStore('CompulsaryAccountDetailsStore');
                    var compulsoryAccountCode = out.root[0].CompulsoryAccountCode;
                    Ext.ComponentQuery.query('#txtSymbolNo')[0].setValue(compulsoryAccountCode);

                        store.add(out.root);
                    msg('SUCCESS',out.message,function(){

                    });
                }

                else{msg('FAILURE',out.message);


                    }
            },
            failure: function(form, action) {
                waitSave.hide();var out=Ext.decode(response.responseText);msg('FAILURE',out.message);     }
        });

    },

    onBtnUpdateCompulsoryAccClick: function(button, e, eOpts) {
        var objCompulsoryAcc ={
        CompulsoryAccountDesc:Ext.ComponentQuery.query('#txtCompulsoryAccDesc')[0].getValue(),
        ProductCode:Ext.ComponentQuery.query('#ddlSavingProductCode')[0].getValue(),
        ProductType:Ext.ComponentQuery.query('#ddlProductType')[0].getValue(),
        ActiveFlag:Ext.ComponentQuery.query('#chkActive')[0].getValue()?'Y':'N',
        CompulsoryAccountCode: Ext.ComponentQuery.query('#txtSymbolNo')[0].getValue(),
        Action:'U'
        };




        var waitSave = watiMsg('Saving .Please wait ...');
        Ext.Ajax.request({
            url:'../Handlers/Finance/Maintenance/CompulsoryAccountsEntryHandler.ashx',
            params:{method:'Save',CompulsoryAccountsEntry:JSON.stringify(objCompulsoryAcc)},
            success: function ( result, request ) {
                waitSave.hide();
                var out = Ext.decode(result.responseText);
                if(out.success==='true'){

         var grd = Ext.ComponentQuery.query('#grdCompulsaryAccDetails')[0];

        var record = grd.getSelectionModel().getSelection()[0];
        record.set('CompulsoryAccountDesc',Ext.ComponentQuery.query('#txtCompulsoryAccDesc')[0].getValue());
        record.set('ProductCode',Ext.ComponentQuery.query('#ddlSavingProductCode')[0].getValue());
        record.set('ProductType',Ext.ComponentQuery.query('#ddlProductType')[0].getValue());
        record.set('ActiveFlag',Ext.ComponentQuery.query('#chkActive')[0].getValue()?'Y':'N');
        record.set('CompulsoryAccountCode',Ext.ComponentQuery.query('#txtSymbolNo')[0].getValue());
        record.set('Action','U');
        record.set('ProductName',Ext.ComponentQuery.query('#ddlSavingProductCode')[0].getRawValue());



                    msg('SUCCESS',out.message,function(){

                    });
                }

                else{msg('FAILURE',out.message);


                    }
            },
            failure: function(form, action) {
                waitSave.hide();var out=Ext.decode(response.responseText);msg('FAILURE',out.message);     }
        });
    },

    onBtnDeleteCompulsoryAccClick: function(button, e, eOpts) {
        Ext.MessageBox.confirm('Delete Entry', 'Are you sure ?', function(btn){


            if(btn === 'yes'){


        var objCompulsoryAcc ={
            compulsoryAccountCode : Ext.ComponentQuery.query('#txtSymbolNo')[0].getValue(),
        CompulsoryAccountDesc:Ext.ComponentQuery.query('#txtCompulsoryAccDesc')[0].getValue(),
        ProductCode:Ext.ComponentQuery.query('#ddlSavingProductCode')[0].getValue(),
        ProductType:Ext.ComponentQuery.query('#ddlProductType')[0].getValue(),
        ActiveFlag:Ext.ComponentQuery.query('#chkActive')[0].getValue()?'Y':'N',
        Action:'D',
        ProductName:Ext.ComponentQuery.query('#ddlSavingProductCode')[0].getRawValue()


        };


        var waitSave = watiMsg('Deleting Record .Please wait ...');
        Ext.Ajax.request({
            url:'../Handlers/Finance/Maintenance/CompulsoryAccountsEntryHandler.ashx',
            params:{method:'Save',CompulsoryAccountsEntry:JSON.stringify(objCompulsoryAcc)},
            success: function ( result, request ) {
                waitSave.hide();
                var out = Ext.decode(result.responseText);
                if(out.success==='true'){

        var frm = Ext.ComponentQuery.query('#frmCompulsaryAccountEntry')[0].getForm();
                      frm.clear();
                  var store = Ext.getStore('CompulsaryAccountDetailsStore');
                    var compulsoryAccountCode = out.root[0].CompulsoryAccountCode;
                    //Ext.ComponentQuery.query('#txtSymbolNo')[0].setValue(compulsoryAccountCode);

                        store.removeAt(Ext.ComponentQuery.query('#grdCompulsaryAccDetails')[0].index);
                    msg('SUCCESS',out.message,function(){

                    });
                }

                else{msg('FAILURE',out.message);


                    }
            },
            failure: function(form, action) {
                waitSave.hide();var out=Ext.decode(response.responseText);msg('FAILURE',out.message);     }
        });


           }
           else
           {

           }

        });




    },

    onFrmCompulsaryAccountEntryAfterRender: function(component, eOpts) {
        var waitSave = watiMsg('Loading Data Please wait ...');

        var abbsTypeStore=Ext.getStore('ReferenceShortStore');
        abbsTypeStore.removeAll();

        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',referenceCode:'COMPULSARY_AC_PRODUCT_TYPE'
            },
            success: function(response){

            var data=Ext.decode(response.responseText);
            abbsTypeStore.removeAll();
            abbsTypeStore.add(data.root);


        }
        });


        Ext.Ajax.request({
            url:'../Handlers/Finance/Transaction/SavingTransaction/SavingProductHandler.ashx',
            params:{method:'GetSavingProduct',
                   },
            success: function ( result, request ) {

                var obj = Ext.decode(result.responseText);
                if(obj.success === 'true'){
                    console.log("Resu",obj.root);
                    var store =Ext.getStore('ProductTypeStore');
                    store.removeAll();
                    store.add(obj.root);


                }else{msg('FAILURE','Could Not Load Data');}
            },
            failure: function(form, action) {
                msg("FAILURE","Could Not Load Data");    }
        });

        Ext.Ajax.request({
            url:'../Handlers/Finance/Maintenance/CompulsoryAccountsEntryHandler.ashx',
            params:{method:'Get',
                   },
            success: function ( result, request ) {

                var obj = Ext.decode(result.responseText);
                if(obj.success === 'true'){
                    console.log("Resu",obj.root);
                    var store =Ext.getStore('CompulsaryAccountDetailsStore');
                    store.removeAll();
                    store.add(obj.root);
                    waitSave.hide();

                }else{msg('FAILURE','Could Not Load Data');}
            },
            failure: function(form, action) {
                msg("FAILURE","Could Not Load Data");    }
        });

    },

    init: function(application) {
        this.control({
            "#btnCreateCompulsaryAcc": {
                click: this.onBtnCreateCompulsaryAccClick
            },
            "#btnUpdateCompulsoryAcc": {
                click: this.onBtnUpdateCompulsoryAccClick
            },
            "#btnDeleteCompulsoryAcc": {
                click: this.onBtnDeleteCompulsoryAccClick
            },
            "#frmCompulsaryAccountEntry": {
                afterrender: this.onFrmCompulsaryAccountEntryAfterRender
            }
        });
    }

});
