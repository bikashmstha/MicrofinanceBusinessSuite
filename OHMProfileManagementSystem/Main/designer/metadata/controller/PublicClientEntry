{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "PublicClientEntry",
        "stores": [
            "EmployeeSearchShortStore",
            "OccupationStore",
            "CasteDetailStore",
            "ReferenceShortStore",
            "GenderRefShortStore",
            "AccForRefShortStore",
            "NomineeRelationRefShortStore",
            "MinorRelationRefShortStore",
            "MemberCodeShortStore",
            "GroupMemberStore",
            "PublicClientEntrySearchStore"
        ]
    },
    "configAlternates": {
        "designer|userClassName": "string",
        "stores": "typedarray"
    },
    "name": "MyController",
    "designerId": "2f2b496d-87f4-45b9-a5c4-b3317fe768dc",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#chkGrpBasedClient",
                "designer|params": [
                    "field",
                    "newValue",
                    "oldValue",
                    "eOpts"
                ],
                "designer|targetType": "MyCheckbox13",
                "fn": "onChkGroupBasedClientChange",
                "implHandler": [
                    "var chkGrpBasedClient = Ext.ComponentQuery.query('#chkGrpBasedClient')[0].getValue()?\"Y\":\"N\";",
                    "if(chkGrpBasedClient==='Y'){",
                    "    Ext.ComponentQuery.query('#txtClientNo')[0].show();",
                    "}",
                    "",
                    "else{",
                    "    Ext.ComponentQuery.query('#txtClientNo')[0].hide();",
                    "}"
                ],
                "name": "change",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onChkGroupBasedClientChange",
            "designerId": "fd95de59-4f74-4ab5-8fda-cd621f0bf20a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtEmpCode",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField296",
                "fn": "onTxtEmpCodeAfterRender",
                "implHandler": [
                    "component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SelectEmpPopup',{",
                    "",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });",
                    ""
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onTxtEmpCodeAfterRender",
            "designerId": "724fe6fe-fcd2-4215-b892-31b655d96e40"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#chkMinor",
                "designer|params": [
                    "field",
                    "newValue",
                    "oldValue",
                    "eOpts"
                ],
                "designer|targetType": "MyCheckbox15",
                "fn": "onChkMinorChange",
                "implHandler": [
                    "var chkMin = Ext.ComponentQuery.query('#chkMinor')[0].getValue()?\"Y\":\"N\";",
                    "if(chkMin==='Y'){",
                    "    Ext.ComponentQuery.query('#txtMinorName')[0].enable();",
                    "    Ext.ComponentQuery.query('#ddlMinorRelation')[0].enable();",
                    "}",
                    "",
                    "else{",
                    "    Ext.ComponentQuery.query('#txtMinorName')[0].disable();",
                    "    Ext.ComponentQuery.query('#ddlMinorRelation')[0].disable();",
                    "}"
                ],
                "name": "change",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onChkMinorChange",
            "designerId": "f36344f9-9dc9-499d-8516-19422c6e93c8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnCreateMember",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton41",
                "fn": "onBtnCreateMemberClick",
                "implHandler": [
                    " var objPub={",
                    "      RefClientNo : Ext.ComponentQuery.query('#txtClientNo')[0].getValue(),",
                    " MembershipDate : Ext.ComponentQuery.query('#txtMemberDateAD')[0].getValue(),",
                    " Address : Ext.ComponentQuery.query('#txtAddress')[0].getValue(),",
                    " //MaritalStatus : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " FatherName : Ext.ComponentQuery.query('#txtFatherName')[0].getValue(),",
                    " //SpouseName : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " //BirthYear : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " //NoBoyChild : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " //NoGirlChild : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " NomineeName : Ext.ComponentQuery.query('#txtNomineeName')[0].getValue(),",
                    " NomineeRelation : Ext.ComponentQuery.query('#ddlNomineeRelation')[0].getValue(),",
                    " IdDocumentType : Ext.ComponentQuery.query('#ddlIdentityType')[0].getValue(),",
                    " IdDocumentNo : Ext.ComponentQuery.query('#txtIdentityNo')[0].getValue(),",
                    " MemberType : Ext.ComponentQuery.query('#ddlAccFor')[0].getValue(),",
                    " EmployeeId : Ext.ComponentQuery.query('#txtEmpCode')[0].getValue(),",
                    " CasteCode : Ext.ComponentQuery.query('#ddlCaste')[0].getValue(),",
                    " Fname : Ext.ComponentQuery.query('#txtFirstName')[0].getValue(),",
                    " Lname : Ext.ComponentQuery.query('#txtLastName')[0].getValue(),",
                    " //MembershipCloseDate : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " PostalAddress : Ext.ComponentQuery.query('#txtPostalAddress')[0].getValue(),",
                    " Gender : Ext.ComponentQuery.query('#ddlGender')[0].getValue(),",
                    " OccupationCode : Ext.ComponentQuery.query('#ddlOccupation')[0].getValue(),",
                    " //EducationCode : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " Active : 'Y',",
                    " //ChildrenNo : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " //ReasonForInactive : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " //ImagePath : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " TranOfficeCode : getOfficeCode(),",
                    "     //FixedCollectionAmount : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " //ThirdPartyData : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " Dob : Ext.ComponentQuery.query('#txtDobAD')[0].getValue(),",
                    " TelephoneNo : Ext.ComponentQuery.query('#txtTelephoneNo')[0].getValue(),",
                    " MobileNo : Ext.ComponentQuery.query('#txtMobileNo')[0].getValue(),",
                    " FaxNo : Ext.ComponentQuery.query('#txtFaxNo')[0].getValue(),",
                    " //JointImagePath : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " GrandFatherName : Ext.ComponentQuery.query('#txtGrandFatherName')[0].getValue(),",
                    " MinorYN : Ext.ComponentQuery.query('#chkMinor')[0].getValue()?\"Y\":\"N\",",
                    " MinorName : Ext.ComponentQuery.query('#txtMinorName')[0].getValue(),",
                    " MinorRelation : Ext.ComponentQuery.query('#ddlMinorRelation')[0].getValue(),",
                    " EmailAddress : Ext.ComponentQuery.query('#txtEmail')[0].getValue(),",
                    " //FingerPrintLeft : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " //FingerPrintRight : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " User1 : getCurrentUser(),",
                    " OutFiscalYear:getFiscalYear(),",
                    " //OutClientNo: ,",
                    " OutClientCode:Ext.ComponentQuery.query('#txtMemberId')[0].getValue(),",
                    " AutoAcOpen : Ext.ComponentQuery.query('#chkCreateAutoAcc')[0].getValue(),",
                    " InsertUpdate : 'I',",
                    "",
                    "",
                    " };",
                    "  var waitSave = watiMsg('Saving. Please wait ...');",
                    "Ext.Ajax.request({",
                    "     url:'../Handlers/Finance/Transaction/PublicSavingTransaction/PublicMemberHandler.ashx',",
                    "     params:{method:'SavePublicMember',publicMember:JSON.stringify(objPub)},",
                    "     success: function ( result, request ) {",
                    "waitSave.hide();",
                    "          var out = Ext.decode(result.responseText);",
                    "\t\t\t\tif(out.success==='true'){",
                    "\t\t\t\t\tmsg('SUCCESS',out.message);",
                    "\t\t\t\t\t\t}",
                    "",
                    "\t\t\t\telse{msg('FAILURE',out.message);",
                    "",
                    "",
                    "          }",
                    "     },",
                    "     failure: function(form, action) {",
                    "waitSave.hide();var out=Ext.decode(response.responseText);msg('FAILURE',out.message);     }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onBtnCreateMemberClick",
            "designerId": "4aaeaf3e-a64d-425d-89ca-00371c416eee"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnUpdateMember",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton57",
                "fn": "onBtnUpdateMemberClick",
                "implHandler": [
                    "var a=Ext.ComponentQuery.query('#grdPublicClientEntrySearch')[0];",
                    "var objPub={",
                    " RefClientNo : Ext.ComponentQuery.query('#txtClientNo')[0].getValue(),",
                    " MembershipDate : Ext.ComponentQuery.query('#txtMemberDateAD')[0].getValue(),",
                    " Address : Ext.ComponentQuery.query('#txtAddress')[0].getValue(),",
                    " //MaritalStatus : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " FatherName : Ext.ComponentQuery.query('#txtFatherName')[0].getValue(),",
                    " //SpouseName : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " //BirthYear : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " //NoBoyChild : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " //NoGirlChild : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " NomineeName : Ext.ComponentQuery.query('#txtNomineeName')[0].getValue(),",
                    " NomineeRelation : Ext.ComponentQuery.query('#ddlNomineeRelation')[0].getValue(),",
                    " IdDocumentType : Ext.ComponentQuery.query('#ddlIdentityType')[0].getValue(),",
                    " IdDocumentNo : Ext.ComponentQuery.query('#txtIdentityNo')[0].getValue(),",
                    " MemberType : Ext.ComponentQuery.query('#ddlAccFor')[0].getValue(),",
                    " EmployeeId : Ext.ComponentQuery.query('#txtEmpCode')[0].getValue(),",
                    " CasteCode : Ext.ComponentQuery.query('#ddlCaste')[0].getValue(),",
                    " Fname : Ext.ComponentQuery.query('#txtFirstName')[0].getValue(),",
                    " Lname : Ext.ComponentQuery.query('#txtLastName')[0].getValue(),",
                    " //MembershipCloseDate : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " PostalAddress : Ext.ComponentQuery.query('#txtPostalAddress')[0].getValue(),",
                    " Gender : Ext.ComponentQuery.query('#ddlGender')[0].getValue(),",
                    " OccupationCode : Ext.ComponentQuery.query('#ddlOccupation')[0].getValue(),",
                    " //EducationCode : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " Active : 'Y',",
                    " //ChildrenNo : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " //ReasonForInactive : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " //ImagePath : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " TranOfficeCode : getOfficeCode(),",
                    "     //FixedCollectionAmount : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " //ThirdPartyData : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " Dob : Ext.ComponentQuery.query('#txtDobAD')[0].getValue(),",
                    " TelephoneNo : Ext.ComponentQuery.query('#txtTelephoneNo')[0].getValue(),",
                    " MobileNo : Ext.ComponentQuery.query('#txtMobileNo')[0].getValue(),",
                    " FaxNo : Ext.ComponentQuery.query('#txtFaxNo')[0].getValue(),",
                    " //JointImagePath : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " GrandFatherName : Ext.ComponentQuery.query('#txtGrandFatherName')[0].getValue(),",
                    " MinorYN : Ext.ComponentQuery.query('#chkMinor')[0].getValue()?\"Y\":\"N\",",
                    " MinorName : Ext.ComponentQuery.query('#txtMinorName')[0].getValue(),",
                    " MinorRelation : Ext.ComponentQuery.query('#ddlMinorRelation')[0].getValue(),",
                    " EmailAddress : Ext.ComponentQuery.query('#txtEmail')[0].getValue(),",
                    " //FingerPrintLeft : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " //FingerPrintRight : Ext.ComponentQuery.query('#')[0].getValue(),",
                    " User1 : getCurrentUser(),",
                    " OutFiscalYear:getFiscalYear(),",
                    " OutClientNo: a.ClientNo,//Ext.ComponentQuery.query('#txtClientNoForUpdate')[0].getValue() ,",
                    " OutClientCode:Ext.ComponentQuery.query('#txtMemberId')[0].getValue(),",
                    " AutoAcOpen : Ext.ComponentQuery.query('#chkCreateAutoAcc')[0].getValue(),",
                    " InsertUpdate : 'U',",
                    "",
                    "",
                    " };",
                    "  var waitSave = watiMsg('Saving. Please wait ...');",
                    "Ext.Ajax.request({",
                    "     url:'../Handlers/Finance/Transaction/PublicSavingTransaction/PublicMemberHandler.ashx',",
                    "     params:{method:'SavePublicMember',publicMember:JSON.stringify(objPub)},",
                    "     success: function ( result, request ) {",
                    "waitSave.hide();",
                    "          var out = Ext.decode(result.responseText);",
                    "\t\t\t\tif(out.success==='true'){",
                    "\t\t\t\t\tmsg('SUCCESS',out.message);",
                    "\t\t\t\t\t\t}",
                    "",
                    "\t\t\t\telse{msg('FAILURE',out.message);",
                    "",
                    "",
                    "          }",
                    "     },",
                    "     failure: function(form, action) {",
                    "waitSave.hide();var out=Ext.decode(response.responseText);msg('FAILURE',out.message);     }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onBtnUpdateMemberClick",
            "designerId": "36c31f69-f995-4f15-b6f2-917a4b9b0236"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtMemberCode",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField310",
                "fn": "onTxtMemberCodeAfterRender",
                "implHandler": [
                    "component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SelectMemberPopup',{",
                    "",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });",
                    ""
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onTxtMemberCodeAfterRender",
            "designerId": "40241328-5751-44bb-a094-4090fd0eec4d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnSearch",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton42",
                "fn": "onBtnSearchClick",
                "implHandler": [
                    "var waitSave = watiMsg('Loading Data. Please wait ...');",
                    "Ext.Ajax.request({",
                    "    url:'../Handlers/Finance/Transaction/PublicSavingTransaction/PublicClientDetailHandler.ashx',",
                    "    params:{method:'GetPubClientDetail', OfficeCode:getOfficeCode(),",
                    "            MemberCode: Ext.ComponentQuery.query('#txtMemberCode')[0].getValue(),",
                    "            MemberName: Ext.ComponentQuery.query('#txtMemberName')[0].getValue(),",
                    "            MemDateFrom : Ext.ComponentQuery.query('#txtMemDateFromBS')[0].getValue(),",
                    "            MemDateTo : Ext.ComponentQuery.query('#txtMemDateToBS')[0].getValue()",
                    "",
                    "           },",
                    "    success: function ( result, request ) {",
                    "",
                    "        var obj = Ext.decode(result.responseText);",
                    "        if(obj.success === 'true'){",
                    "            //console.log(\"Resu\",obj.root);",
                    "            var store =Ext.getStore('PublicClientEntrySearchStore');",
                    "            store.removeAll();",
                    "            store.add(obj.root);",
                    "",
                    "",
                    "        }else{msg('FAILURE','Could Not Load Data');}",
                    "        waitSave.hide();",
                    "    },",
                    "    failure: function(form, action) {",
                    "        msg(\"FAILURE\",\"Could Not Load Data\"); waitSave.hide();   }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onBtnSearchClick",
            "designerId": "59694780-a822-499f-b75c-927ec3b275b7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#frmPublicClientEntry",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyForm17",
                "fn": "onFrmPublicClientEntryAfterRender",
                "implHandler": [
                    "var waitSave = watiMsg('Loading Data. Please wait ...');",
                    "Ext.ComponentQuery.query('#txtMemberDateAD')[0].setValue(getMisDateAD());",
                    "Ext.ComponentQuery.query('#txtMemberDateBS')[0].setValue(getMisDateBS());",
                    "Ext.ComponentQuery.query('#txtMemDateFromBS')[0].setValue(getMisDateBS());",
                    "Ext.ComponentQuery.query('#txtMemDateToBS')[0].setValue(getMisDateBS());",
                    "",
                    "var publicClientEntrySearchStore=Ext.getStore('PublicClientEntrySearchStore');",
                    "publicClientEntrySearchStore.removeAll();",
                    "",
                    "//GET FOR OCCUPATION",
                    "Ext.Ajax.request({",
                    "    url:'../Handlers/GeneralMasterParameters/Maintenance/OccupationHandler.ashx',",
                    "    params:{method:'GetOccupationLov', OccupationDesc: null",
                    "           },",
                    "    success: function ( result, request ) {",
                    "",
                    "        var obj = Ext.decode(result.responseText);",
                    "        if(obj.success === 'true'){",
                    "            //console.log(\"Resu\",obj.root);",
                    "            var store =Ext.getStore('OccupationStore');",
                    "            store.removeAll();",
                    "            store.add(obj.root);",
                    "",
                    "",
                    "        }else{msg('FAILURE','Could Not Load Data');}",
                    "    },",
                    "    failure: function(form, action) {",
                    "        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "});",
                    "",
                    "//GET FOR CASTE",
                    "Ext.Ajax.request({",
                    "    url:'../Handlers/GeneralMasterParameters/Maintenance/CasteDetailHandler.ashx',",
                    "    params:{method:'GetCastes', CasteDesc: null",
                    "           },",
                    "    success: function ( result, request ) {",
                    "",
                    "        var obj = Ext.decode(result.responseText);",
                    "        if(obj.success === 'true'){",
                    "            //console.log(\"Resu\",obj.root);",
                    "            var store =Ext.getStore('CasteDetailStore');",
                    "            store.removeAll();",
                    "            store.add(obj.root);",
                    "",
                    "",
                    "        }else{msg('FAILURE','Could Not Load Data');}",
                    "    },",
                    "    failure: function(form, action) {",
                    "        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "});",
                    "",
                    "//GET FOR IDENTITY TYPE",
                    "Ext.Ajax.request({",
                    "                    url:'../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',",
                    "                    params:{method:'GetReferenceDetailListShort',referenceCode:'ID_DOCUMENT_TYPE'",
                    "        },",
                    "                    success: function ( result, request ) {",
                    "",
                    "                        var obj = Ext.decode(result.responseText);",
                    "                        if(obj.success === 'true'){",
                    "                            //console.log(\"Resu\",obj.root);",
                    "                            var store =Ext.getStore('ReferenceShortStore');",
                    "                            store.removeAll();",
                    "                            store.add(obj.root);",
                    "",
                    "",
                    "",
                    "                        }else{msg('FAILURE','Could Not Load Data');}",
                    "                    },",
                    "                    failure: function(form, action) {",
                    "                        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "                });",
                    "",
                    "",
                    "//GET FOR GENDER",
                    "Ext.Ajax.request({",
                    "                    url:'../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',",
                    "                    params:{method:'GetReferenceDetailListShort',referenceCode:'GENDER'",
                    "        },",
                    "                    success: function ( result, request ) {",
                    "",
                    "                        var obj = Ext.decode(result.responseText);",
                    "                        if(obj.success === 'true'){",
                    "                            //console.log(\"Resu\",obj.root);",
                    "                            var store =Ext.getStore('GenderRefShortStore');",
                    "                            store.removeAll();",
                    "                            store.add(obj.root);",
                    "",
                    "",
                    "",
                    "                        }else{msg('FAILURE','Could Not Load Data');}",
                    "                    },",
                    "                    failure: function(form, action) {",
                    "                        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "                });",
                    "//GET FOR Account For",
                    "Ext.Ajax.request({",
                    "                    url:'../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',",
                    "                    params:{method:'GetReferenceDetailListShort',referenceCode:'ACCOUNT_FOR'",
                    "        },",
                    "                    success: function ( result, request ) {",
                    "",
                    "                        var obj = Ext.decode(result.responseText);",
                    "                        if(obj.success === 'true'){",
                    "                            //console.log(\"Accfor\",obj.root);",
                    "                            var store =Ext.getStore('AccForRefShortStore');",
                    "                            store.removeAll();",
                    "                            store.add(obj.root);",
                    "                            Ext.ComponentQuery.query('#ddlAccFor')[0].select('P');",
                    "",
                    "",
                    "                        }else{msg('FAILURE','Could Not Load Data');}",
                    "                    },",
                    "                    failure: function(form, action) {",
                    "                        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "                });",
                    "//GET FOR Nominee Relation",
                    "Ext.Ajax.request({",
                    "                    url:'../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',",
                    "                    params:{method:'GetReferenceDetailListShort',referenceCode:'NOMINEE_RELATION'",
                    "        },",
                    "                    success: function ( result, request ) {",
                    "",
                    "                        var obj = Ext.decode(result.responseText);",
                    "                        if(obj.success === 'true'){",
                    "                            //console.log(\"Resu\",obj.root);",
                    "                            var store =Ext.getStore('NomineeRelationRefShortStore');",
                    "                            store.removeAll();",
                    "                            store.add(obj.root);",
                    "",
                    "",
                    "",
                    "                        }else{msg('FAILURE','Could Not Load Data');}",
                    "                    },",
                    "                    failure: function(form, action) {",
                    "                        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "                });",
                    "//GET FOR Minor Relation",
                    "Ext.Ajax.request({",
                    "                    url:'../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',",
                    "                    params:{method:'GetReferenceDetailListShort',referenceCode:'NOMINEE_RELATION'",
                    "        },",
                    "                    success: function ( result, request ) {",
                    "",
                    "                        var obj = Ext.decode(result.responseText);",
                    "                        if(obj.success === 'true'){",
                    "                            //console.log(\"Resu\",obj.root);",
                    "                            var store =Ext.getStore('MinorRelationRefShortStore');",
                    "                            store.removeAll();",
                    "                            store.add(obj.root);",
                    "                            waitSave.hide();",
                    "",
                    "",
                    "                        }else{msg('FAILURE','Could Not Load Data');}",
                    "                    },",
                    "                    failure: function(form, action) {",
                    "                        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "                });"
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onFrmPublicClientEntryAfterRender",
            "designerId": "1c68ce81-8c79-4e73-bd69-ad19bc215305"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtClientNo",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField484",
                "fn": "onTxtClientNoAfterRender",
                "implHandler": [
                    "component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SelectGroupMemberPopup',{",
                    "",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });",
                    ""
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onTxtClientNoAfterRender",
            "designerId": "56778dd5-0435-48a6-9920-91ad22c9ed54"
        }
    ]
}