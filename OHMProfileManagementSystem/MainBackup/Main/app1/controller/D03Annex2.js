/*
 * File: app/controller/D03Annex2.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.D03Annex2', {
    extend: 'Ext.app.Controller',

    stores: [
        'DCTBAnnex'
    ],

    onPnlD03Annex2AfterRender: function(component, eOpts) {
        var me = this; 
        var txtFiscalYear = Ext.ComponentQuery.query("#txtFiscalYearAnx2")[0];
        var txtSubNo = Ext.ComponentQuery.query("#txtSubNoAnx2")[0];
        var cboTaxPayer = Ext.ComponentQuery.query("#txtTaxCatAnx2")[0];

        var param = me.validateParam();

        txtFiscalYear.setValue(param.fiscalYear);
        txtSubNo.setValue(param.submissionNo);
        cboTaxPayer.setValue(param.taxpayerCat);

        if(param.action === "E")
        { 
            //------------------------------------------------------
            // NB: Retrive Data from Server For Update
            //------------------------------------------------------
            me.loadDataForUpdate(param);   
        }
        else
        { 
            me.loadAnnexLk();

        }


        //----------------------------------------------------------------
        // NB: Return to SetAnnex	
        //----------------------------------------------------------------
        if(param.from === "MV")
        {
            var annexD03 = me.getController('MyApp.controller.SetAnnexD03');
            var el = Ext.get('lnkRedirectTopAnx2');

            el.on('click', function(e,t,eOpts){

                Ext.Msg.confirm('Confirm Action', 'के तपाई पछाडि गएर अनुसुची तय गर्न चाहनुहुन्छ?', function(btn) {
                    if(btn == 'yes'){        

                        param.action ="";
                        annexD03.redirectToAnnexD03(param);
                    }
                }, this);
            });
        }
    },

    onLblRedirectAnx2Click: function(label) {
        var me = this;

        Ext.Msg.confirm('Confirm Action', 'के तपाई पछाडि गएर अनुसुची तय गर्न चाहनुहुन्छ?', function(btn) {
            if(btn == 'yes'){        

                var annexD03 = me.getController('MyApp.controller.SetAnnexD03');

                var param = me.validateParam();
                param.action ="";

                annexD03.redirectToAnnexD03(param);
            }
        }, this);

    },

    onTxtUptoDateAnx2Keypress: function(textfield, e, eOpts) {
        var me = this;
        var txtSection117 = Ext.ComponentQuery.query('#txtSection117Anx2')[0];
        var txtSection118 = Ext.ComponentQuery.query('#txtSection118Anx2')[0];
        var txtSection119 = Ext.ComponentQuery.query('#txtSection119Anx2')[0];


        if(e.keyCode === 13 || e.keyCode === 9)
        {
            txtSection117.setValue("10");
            txtSection118.setValue("20");
            txtSection119.setValue("30");

            me.calAssessmentCharge();
        }

    },

    onTxtSection117Anx2Keyup: function(textfield, e, eOpts) {
        var me = this;
        me.calAssessmentCharge();
    },

    onTxtSection118Anx2Keyup: function(textfield, e, eOpts) {
        var me = this;
        me.calAssessmentCharge();
    },

    onTxtSection119Anx2Keyup: function(textfield, e, eOpts) {
        var me = this;
        me.calAssessmentCharge();
    },

    onBtnSubmitAnx2Click: function(button, e, eOpts) {
        var me = this;

        var assessment = null;
        var assmtDetail = null;

        var action = "";
        var pan = "";
        var offCode = "";
        var fiscalYear = Ext.ComponentQuery.query("#txtFiscalYearAnx2")[0].getValue();
        var subNo = Ext.ComponentQuery.query("#txtSubNoAnx2")[0].getValue();

        var totalPayableTax = Ext.ComponentQuery.query('#txtSumTotalPayableTaxAnx2')[0].getValue();
        var taxAFTDe = Ext.ComponentQuery.query('#txtNetTaxLiabilityAnx2')[0].getValue();
        var dateUpto = Ext.ComponentQuery.query('#txtUptoDateAnx2')[0].getValue();

        var param = me.validateParam();

        pan = param.pan;
        offCode = param.offCode;

        if(param.action === "E")
        {
            action  = param.action;
        }

        //---------------------------------------------------------------------------------------
        // NB: ChargePentalty and ChargePenalty Detail
        //---------------------------------------------------------------------------------------
        chargePenalty = {
            OffCode :offCode,
            BatchType :"",
            ChargeNo :subNo,
            ChargeDate :""  ,         
            Pan :pan,
            FiscalYear :fiscalYear,
            TotalAmount:totalPayableTax,
            ReceiptShipmentDate :"",
            ReceiptShipmentMode :"",
            OfficerCode :"",
            RecordStatus :"",
            Terminal:"", 
            TranDate :"",
            UserName :"",         
            Action : action,
            ChargePenaltyDetails:null
        };

        chargePenalty.ChargePenaltyDetails = me.getChargPenDetail(chargePenalty,action);


        //---------------------------------------------------------------------------------------
        // NB: Assessment Detail
        //---------------------------------------------------------------------------------------
        assmtDetail = me.getAssmtDetail(action);


        //---------------------------------------------------------------------------------------
        // NB: Assessment
        //---------------------------------------------------------------------------------------
        assessment = {  OffCode:offCode,
            Pan:pan,
            FiscalYear:fiscalYear,
            AssessmentNo:subNo,
            TotalTaxLiability:null,
            TotalPayableTax:(totalPayableTax === "" || totalPayableTax === null)?0:totalPayableTax,
            TaxIncomeAFTDe:null,
            TaxAFTDe:(taxAFTDe === "" || taxAFTDe === null)?0:taxAFTDe,
            DateUpto:dateUpto,
            AssmtDetailChildDOne:assmtDetail,
            Deductibles:null,
            TaxRateLiabilities:null,
            ChargePenalty:chargePenalty,
            Action:action
        };

        //---------------------------------------------------------------------------------------
        // NB: Saving Annex-2 Details
        //---------------------------------------------------------------------------------------
        var wait  = waitMsg('Saving ...');
        Ext.Ajax.request({
            url:'../Handlers/IncomeTax/D01/AssessmentSADoneHandler.ashx?method=SaveUpdateAssmtForAnnex',
            params:{assmt:JSON.stringify(assessment)},
            success:function(result, request)
            {

                wait.hide();

                var obj = Ext.decode(result.responseText); 

                if(param.action === "" || param.action === "A")
                {      

                    var btnSubmit = Ext.ComponentQuery.query("#btnSubmitAnx2")[0];
                    var annexD03 = me.getController('MyApp.controller.SetAnnexD03');            

                    param.action = "E";                
                    btnSubmit.setText("Update Annex 2");
                    annexD03.loadAnxSummary(subNo);
                }

                msg(obj.success === "true" ?"SUCCESS":"WARNING",obj.message); 
            },

            failure:function(result, request){
                wait.hide();
                msg('ERROR OCURRED !!!', 'Error');                 
            }

        });



    },

    onGrdInclusionD03Anx2AfterRender: function(component, eOpts) {
        var me = this;
        var grid = Ext.ComponentQuery.query('#grdInclusionD03Anx2')[0];

        grid.columns[1].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var id = Ext.id();


            var annexType = "";


            if(value === 5 || value === "B")
            {    annexType = "Business";
            }
            else if(value === 6 || value === "R")
            {
                annexType = "Renumeration";
            }
            else if(value === 7 || value === "I")
            {
                annexType = "Investment";
            }
            else if(value === 8 || value === "A")
            {
                annexType = "Asset Disposal";
            }

            return '<input type=\"textbox\" name=\"txtIN'+ id  +'\" value=\"'+ annexType  +'\"  style=\"height:23px;width:90px;\" readonly=true />';

        };

        grid.columns[2].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var id = Ext.id();

            return '<input type=\"textbox\" name=\"txtIN'+ id  +'\" value=\"'+ value  +'\"  style=\"height:23px;width:90px;\" readonly=true />';

        };


        grid.columns[3].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var id = Ext.id();

            return '<input type=\"textbox\" name=\"txtIN'+ id  +'\" value=\"'+ value  +'\"  style=\"height:23px;width:90px;\" readonly=true />';


        };

        grid.columns[4].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var id = Ext.id();

            return '<input type=\"textbox\" name=\"txtIN'+ id  +'\" value=\"'+ value  +'\"  style=\"height:23px;width:90px;text-align:right\" />';

        };

        grid.columns[5].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var id = Ext.id();

            return '<input type=\"textbox\" name=\"txtIN'+ id  +'\" value=\"'+ value  +'\"  style=\"height:23px;width:90px;text-align:right\" />';

        };

        grid.columns[6].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var id = Ext.id();

            return '<input type=\"textbox\" name=\"txtIN'+ id  +'\" value=\"'+ value  +'\"  style=\"height:23px;width:90px;text-align:right\" />';

        };

        grid.columns[7].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var id = Ext.id();

            Ext.Function.defer(function(){
                var txtBox = ""; 

                txtBox = new Ext.form.TextField({
                    id:"txtIN"+rowIndex+"Anx2",
                    itemId:"txtIN"+rowIndex+"Anx2",
                    value: value,
                    renderTo: id,
                    height: 22,
                    width:90,
                    fieldCls: 'TxtRight',
                    maskRe: /[0-9]/,
                    maxLength: 10,
                    readOnly:true,
                    enableKeyEvents: true
                });

            },25);

            return '<div id="' + id +'"></div>';

        };

        grid.columns[8].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var id = Ext.id();

            Ext.Function.defer(function(){
                var txtBox = ""; 

                txtBox = new Ext.form.TextField({
                    id:"txtIN"+rowIndex+"Anx2",
                    itemId:"txtIN"+rowIndex+"Anx2",
                    value: value,
                    renderTo: id,
                    height: 22,
                    width:90,
                    fieldCls: 'TxtRight',
                    maskRe: /[0-9]/,
                    maxLength: 10,
                    enableKeyEvents: true
                });

                //        txtBox.on('keypress', function(textfield,e){
                txtBox.on('keyup', function(textfield,e){

                    if(e.keyCode === 13)
                    {
                        var row = grid.getStore().getAt(rowIndex).data;
                        var newValue = textfield.lastValue;

                        newValue = (newValue === "" || newValue === null)?0:newValue; 
                        row.Donation = newValue;

                        me.reArrangeData(grid.getStore());

                        var txtSumTaxableIncome = Ext.ComponentQuery.query('#txtSumTaxableIncomeAnx2')[0];
                        var txtDedTotIncomeTax = Ext.ComponentQuery.query('#txtDedTotIncomeTaxAnx2')[0];

                        txtDedTotIncomeTax.setValue(txtSumTaxableIncome.getValue());
                        me.calculate();
                    }

                }, this);

            },25);

            return '<div id="' + id +'"></div>';

        };

        grid.columns[9].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var id = Ext.id();

            return '<input type=\"textbox\" name=\"txtIN'+ id  +'\" value=\"'+ value  +'\"  style=\"height:23px;width:90px;text-align:right\" readonly=true  />';

        };


        grid.columns[10].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var id = Ext.id();

            return '<input type=\"textbox\" name=\"txtIN'+ id  +'\" value=\"'+ value  +'\"  style=\"height:23px;width:90px;text-align:right\" readonly=true />';

        };


        grid.columns[11].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var id = Ext.id();

            return '<input type=\"textbox\" name=\"txtIN'+ id  +'\" value=\"'+ value  +'\"  style=\"height:23px;width:90px;text-align:right\" readonly=true  />';
        };



        grid.columns[12].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var id = Ext.id();

            Ext.Function.defer(function(){
                var txtBox = ""; 

                txtBox = new Ext.form.TextField({
                    id:"txtIN"+rowIndex+"Anx2",
                    itemId:"txtIN"+rowIndex+"Anx2",
                    value: value,
                    renderTo: id,
                    height: 22,
                    width:90,
                    fieldCls: 'TxtRight',
                    maskRe: /[0-9]/,
                    maxLength: 10,
                    readOnly:true,
                    enableKeyEvents: true
                });

            },25);

            return '<div id="' + id +'"></div>';

        };


        grid.columns[13].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var id = Ext.id();

            return '<input type=\"textbox\" name=\"txtIN'+ id  +'\" value=\"'+ value  +'\"  style=\"height:23px;width:90px;text-align:right\" readonly=true  />';

        };

        grid.columns[14].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {

            var id = Ext.id();

            return '<input type=\"textbox\" name=\"txtIN'+ id  +'\" value=\"'+ value  +'\"  style=\"height:23px;width:90px;text-align:right\" readonly=true  />';

        };
    },

    onLaunch: function() {
        var me = this;
        var annexD03 = me.getController('MyApp.controller.SetAnnexD03');
        var param = me.validateParam();
        var el = Ext.get('lnkRedirectTopAnx2');

        el.on('click', function(e,t,eOpts){

            Ext.Msg.confirm('Confirm Action', 'के तपाई पछाडि गएर अनुसुची तय गर्न चाहनुहुन्छ?', function(btn) {
                if(btn == 'yes'){        

                    param.action ="";
                    annexD03.redirectToAnnexD03(param);
                }
            }, this);
        });
    },

    calAssessmentCharge: function() {
        var netTaxLiability = Ext.ComponentQuery.query('#txtNetTaxLiabilityAnx2')[0].getValue();
        var section117 = Ext.ComponentQuery.query('#txtSection117Anx2')[0].getValue();
        var section118 = Ext.ComponentQuery.query('#txtSection118Anx2')[0].getValue();
        var section119 = Ext.ComponentQuery.query('#txtSection119Anx2')[0].getValue();

        var txtAssessmentChargeAnx = Ext.ComponentQuery.query('#txtAssessmentChargeAnx2')[0];

        var sum = 0;

        netTaxLiability = (netTaxLiability === "" || netTaxLiability === null)?0:netTaxLiability;
        section117 = (section117 === "" || section117 === null)?0:section117;
        section118 = (section118 === "" || section118 === null)?0:section118;
        section119 = (section119 === "" || section119 === null)?0:section119;


        sum = parseFloat(netTaxLiability) + parseFloat(section117) + parseFloat(section118) + parseFloat(section119);

        txtAssessmentChargeAnx.setValue(sum);
    },

    reArrangeData: function(store) {
        var grdIn = Ext.ComponentQuery.query('#grdInclusionD03Anx2')[0];

        var sumCol4 =0;
        var sumCol5 =0;
        var sumCol6 =0;
        var sumCol7 =0;
        var sumCol8 =0;
        var sumCol9 =0;
        var sumCol14 =0;

        store.each(function(rec,idx){

            var taxableIncome = 0;
            var effRate = 0;
            var totalPayableTax = 0;

            var col4  = (rec.data.TotalInclusion === "" || rec.data.TotalInclusion === null)?0:rec.data.TotalInclusion;
            var col5  = (rec.data.IncomeLoss === "" || rec.data.IncomeLoss === null)?0:rec.data.IncomeLoss;
            var col6  = (rec.data.NetIncomeLoss === "" || rec.data.NetIncomeLoss === null)?0:rec.data.NetIncomeLoss;
            var col7  = (rec.data.RetirementFund === "" || rec.data.RetirementFund === null)?0:rec.data.RetirementFund;
            var col8  = (rec.data.Donation === "" || rec.data.Donation === null)?0:rec.data.Donation;
            var col10 = (rec.data.RateApplicable === "" || rec.data.RateApplicable === null)?0:rec.data.RateApplicable;
            var col12 = (rec.data.Discount === "" || rec.data.Discount === null)?0:rec.data.Discount;
            var col13 = (rec.data.EffectiveTaxRate === "" || rec.data.EffectiveTaxRate === null)?0:rec.data.EffectiveTaxRate;        
            var col14 = (rec.data.TotalPayableTax === "" || rec.data.TotalPayableTax === null)?0:rec.data.TotalPayableTax;        
            //var col14 = rec.data.TotalPayableTax;

            if(col5 < 0)
            {
                col6 = 0;
            }

            rec.data.TotalInclusion = col4;
            rec.data.IncomeLoss = col5;
            rec.data.NetIncomeLoss = col6;
            rec.data.RetirementFund = col7;
            rec.data.Donation = col8;
            rec.data.RateApplicable = col10;
            rec.data.Discount = col12;
            rec.data.EffectiveTaxRate = col13;   

            //---------------------------------------------------------------
            // NB: TaxableIncome (col6-col7-col8)
            //---------------------------------------------------------------
            taxableIncome = parseFloat(col6) - parseFloat(col7) - parseFloat(col8);

            //---------------------------------------------------------------
            // NB: EffectiveRate (col10-col12)
            //----------------------------------------------------------------
            effRate = parseFloat(col10) - parseFloat(col12);

            var totInclusion = (rec.data.TotalInclusion === "" || rec.data.TotalInclusion === null)?0:rec.data.TotalInclusion;
            var incomeLoss = (rec.data.IncomeLoss === "" || rec.data.IncomeLoss === null)?0:rec.data.IncomeLoss;
            var netIncomeLoss = (rec.data.NetIncomeLoss === "" || rec.data.NetIncomeLoss === null)?0:rec.data.NetIncomeLoss;
            var retirementFund = (rec.data.RetirementFund === "" || rec.data.RetirementFund === null)?0:rec.data.RetirementFund;
            var donation = (rec.data.Donation === "" || rec.data.Donation === null)?0:rec.data.Donation;
            // taxableIncome = (rec.data.TaxableIncome === "" || rec.data.TaxableIncome === null)?0:rec.data.TaxableIncome;   

            //---------------------------------------------------------------
            // NB: TotalPayableTax (TaxableIncome * effRate)
            //----------------------------------------------------------------
            totalPayableTax = taxableIncome * effRate/100;

            rec.data.TaxableIncome = taxableIncome;
            rec.data.EffectiveTaxRate = effRate;
            rec.data.TotalPayableTax = totalPayableTax;

            //---------------------------------------------------------------
            // NB: Sum Calculation
            //---------------------------------------------------------------
            sumCol4 = parseFloat(sumCol4) + parseFloat(totInclusion); 
            sumCol5 = parseFloat(sumCol5) + parseFloat(incomeLoss); 
            sumCol6 = parseFloat(sumCol6) + parseFloat(netIncomeLoss); 
            sumCol7 = parseFloat(sumCol7) + parseFloat(retirementFund); 
            sumCol8 = parseFloat(sumCol8) + parseFloat(donation); 
            sumCol9 = parseFloat(sumCol9) + parseFloat(taxableIncome); 
            sumCol14 = parseFloat(sumCol14) + parseFloat(totalPayableTax); 
        });

        grdIn.bindStore(store);

        var txtSumTotInclusion = Ext.ComponentQuery.query('#txtSumTotalInclusionAnx2')[0];
        var txtSumIncomeLoss = Ext.ComponentQuery.query('#txtSumIncomeLossAnx2')[0];
        var txtSumNetIncomeLoss = Ext.ComponentQuery.query('#txtSumNetIncomeLossAnx2')[0];
        var txtSumRetirement = Ext.ComponentQuery.query('#txtSumRetirementFundAnx2')[0];
        var txtSumDonation = Ext.ComponentQuery.query('#txtSumDonationAnx2')[0];
        var txtSumTaxableIncome = Ext.ComponentQuery.query('#txtSumTaxableIncomeAnx2')[0];
        var txtSumTaxablePayableTax = Ext.ComponentQuery.query('#txtSumTotalPayableTaxAnx2')[0];

        var txtNetTaxLiability = Ext.ComponentQuery.query('#txtNetTaxLiabilityAnx2')[0];

        txtSumTotInclusion.setValue(sumCol4);
        txtSumIncomeLoss.setValue(sumCol5);
        txtSumNetIncomeLoss.setValue(sumCol6);
        txtSumRetirement.setValue(sumCol7);
        txtSumDonation.setValue(sumCol8);
        txtSumTaxableIncome.setValue(sumCol9);
        txtSumTaxablePayableTax.setValue(sumCol14);

        txtNetTaxLiability.setValue(sumCol14);
    },

    getAssmtDetail: function(action) {
        var me = this;

        var grid = Ext.ComponentQuery.query('#grdInclusionD03Anx2')[0];
        var store = grid.getStore();
        var assmtDetail = [];

        var totInclusion = Ext.ComponentQuery.query('#txtSumTotalInclusionAnx2')[0].getValue();
        var incomeLoss = Ext.ComponentQuery.query('#txtSumIncomeLossAnx2')[0].getValue();
        var netIncomeLoss = Ext.ComponentQuery.query('#txtSumNetIncomeLossAnx2')[0].getValue();
        var retirementFund = Ext.ComponentQuery.query('#txtSumRetirementFundAnx2')[0].getValue();
        var donation = Ext.ComponentQuery.query('#txtSumDonationAnx2')[0].getValue();
        var taxableIncome = Ext.ComponentQuery.query('#txtSumTaxableIncomeAnx2')[0].getValue();

        //------------------------------------------------------------
        // NB: Total
        //------------------------------------------------------------

        var assessmentNo = Ext.ComponentQuery.query('#txtSubNoAnx2')[0].getValue();
        var taxCatId = Ext.ComponentQuery.query('#txtTaxCatAnx2')[0].getValue();
        //var netAssessable = Ext.ComponentQuery.query('#txtDedTotalAnx2')[0].getValue();
        var netAssessable = null;
        var assessDetailSn = 0;

        var total ={
            AssessmentNo:assessmentNo,        
            AssessDetailSn:0,
            MTCFromDate:"", 
            TaxCatId:taxCatId,
            CountryCode:"",        
            Inclusions:totInclusion ===""?null:totInclusion,
            Expenses:null,         
            AssessableIncome:netIncomeLoss ===""?null:netIncomeLoss,    
            IncomeGainLoss:incomeLoss ===""?null:incomeLoss,
            MsDisCatFromDate:"",
            DiscCatId:"",
            Concessions:null,    
            NetTaxLiability:null,
            RecordStatus:"",
            Terminal:"",
            TranDate:"",
            UserName:"",
            NetAssessable:netAssessable ===""?null:netAssessable,    
            Retirement_Contrib:retirementFund ===""?null:retirementFund,    
            Donation:donation ===""?null:donation,    
            AssessbleInAfterConsession:taxableIncome ===""?null:taxableIncome,
            AnnexId:"2",
            RateApplicable:null,
            Action:action,
            ReturnDocType:"T"

        };

        assmtDetail.push(total);

        //------------------------------------------------------------
        // NB: Detail
        //------------------------------------------------------------

        store.each(function(rec,idx){

            var returnDocType = "";


            if(rec.data.AnnexID === 5)
            {
                returnDocType = "B";
            }
            else if(rec.data.AnnexID === 6)
            {
                returnDocType = "R";
            }
            else if(rec.data.AnnexID === 7)
            {
                returnDocType = "I";
            }
            else if(rec.data.AnnexID === 8)
            {
                returnDocType = "A";
            }

            if(action === "E")
            {
                assessDetailSn = rec.data.AssessDetailSn;
            }
            else
            {
                assessDetailSn = idx+1;
            }


            row ={
                AssessmentNo:assessmentNo,        
                AssessDetailSn:assessDetailSn,
                MTCFromDate:rec.data.MtcFromDate, 
                TaxCatId:rec.data.TaxCatID,
                CountryCode:rec.data.CountryCode,        
                Inclusions:rec.data.TotalInclusion ===""?null:rec.data.TotalInclusion,
                Expenses:rec.data.TotalDeductibleExp ===""?null:rec.data.TotalDeductibleExp,         
                AssessableIncome:rec.data.NetIncomeLoss ===""?null:rec.data.NetIncomeLoss,    
                IncomeGainLoss:rec.data.IncomeLoss ===""?null:rec.data.IncomeLoss,
                MsDisCatFromDate:rec.data.MsDisCatFromDate,
                DiscCatId:rec.data.DiscCatID,
                Concessions:rec.data.Discount ===""?null:rec.data.Discount,    
                NetTaxLiability:null,
                RecordStatus:"",
                Terminal:"",
                TranDate:"",
                UserName:"",
                NetAssessable:null,
                Retirement_Contrib:rec.data.RetirementFund ===""?null:rec.data.RetirementFund,    
                Donation:rec.data.Donation ===""?null:rec.data.Donation,    
                AssessbleInAfterConsession:rec.data.AssIncomeAftConcession ===""?null:rec.data.AssIncomeAftConcession,
                AnnexId:"2",
                RateApplicable:rec.data.RateApplicable,
                Action:action,
                ReturnDocType:returnDocType
            };


            assmtDetail.push(row);
        });

        return assmtDetail;
    },

    getChargPenDetail: function(arg,action) {
        var me = this;

        var chargePenDetail = null;

        var section117 = Ext.ComponentQuery.query('#txtSection117Anx2')[0].getValue();
        var section118 = Ext.ComponentQuery.query('#txtSection118Anx2')[0].getValue();
        var section119 = Ext.ComponentQuery.query('#txtSection119Anx2')[0].getValue();

        section117 = (section117 === "" || section117 === null)?0:section117;
        section118 = (section118 === "" || section118 === null)?0:section118;
        section119 = (section119 === "" || section119 === null)?0:section119;

        chargePenDetail = [
        {
            OffCode :arg.OffCode,
            BatchType :"SA",
            ChargeNo :arg.ChargeNo,
            ChargeDate :"",
            Amount :section117,
            RecordStatus :"",
            Terminal :"",
            TranDate :"",
            UserName :"",
            Action :action,
            Pan :arg.Pan,
            SectionNo:"117" 
        },
        {
            OffCode :arg.OffCode,
            BatchType :"SA",
            ChargeNo :arg.ChargeNo,
            ChargeDate :"",
            Amount :section118,
            RecordStatus :"",
            Terminal :"",
            TranDate :"",
            UserName :"",
            Action :action,
            Pan :arg.Pan,
            SectionNo:"118" 
        },
        {
            OffCode :arg.OffCode,
            BatchType :"SA",
            ChargeNo :arg.ChargeNo,
            ChargeDate :"",
            Amount :section119,
            RecordStatus :"",
            Terminal :"",
            TranDate :"",
            UserName :"",
            Action :action,
            Pan :arg.Pan,
            SectionNo:"119" 
        }];


        return chargePenDetail;
    },

    setChargPenDetail: function(result) {
        var txtSection117 = Ext.ComponentQuery.query('#txtSection117Anx2')[0];
        var txtSection118 = Ext.ComponentQuery.query('#txtSection118Anx2')[0];
        var txtSection119 = Ext.ComponentQuery.query('#txtSection119Anx2')[0];

        for (var key in result)
        {
            if (result.hasOwnProperty(key))
            {
                if(result[key].Amount !== null)
                {

                    if(result[key].SectionNo === "117")
                    {
                        txtSection117.setValue(result[key].Amount);
                    }
                    else if(result[key].SectionNo === "118")
                    {
                        txtSection118.setValue(result[key].Amount);
                    }
                    else if(result[key].SectionNo === "119")
                    {
                        txtSection119.setValue(result[key].Amount);
                    }
                }
            }
        }
    },

    setAssmtDetail: function(result) {
        var me = this;
        var store = Ext.getStore("DCTBAnnex");
        store.loadData([],false);

        for (var key in result)
        {
            if (result.hasOwnProperty(key))
            {

                if(result[key].AssessDetailSn > 0)
                {
                    row ={

                        AssessmentNo:result[key].AssessmentNo,  
                        AnnexIDSno:result[key].AssessDetailSn,
                        MtcFromDate:result[key].MTCFromDate, 
                        TaxCatID:result[key].TaxCatId,
                        CountryCode:result[key].CountryCode,        
                        TotalInclusion:result[key].Inclusions ===""?null:result[key].Inclusions,
                        TotalDeductibleExp: result[key].Expenses ===""?null:result[key].Expenses,         
                        NetIncomeLoss:result[key].AssessableIncome ===""?null:result[key].AssessableIncome,    
                        IncomeLoss:result[key].IncomeGainLoss ===""?null:result[key].IncomeGainLoss,
                        MsDisCatFromDate:result[key].MsDisCatFromDate,
                        DiscCatID:result[key].DiscCatId,
                        Discount:result[key].Concessions ===""?null:result[key].Concessions,    
                        RetirementFund:result[key].Retirement_Contrib ===""?null:result[key].Retirement_Contrib,    
                        Donation:result[key].Donation ===""?null:result[key].Donation,    
                        AssIncomeAftConcession:result[key].AssessbleInAfterConsession ===""?null:result[key].AssessbleInAfterConsession,
                        AnnexID :result[key].ReturnDocType,
                        ReturnDocType :result[key].ReturnDocType,
                        RateApplicable:result[key].RateApplicable

                    };

                    store.add(row);
                }
            }
        }


        me.reArrangeData(store);
    },

    validateParam: function() {
        var me = this;
        var view = Ext.ComponentQuery.query('#pnlD03Annex2')[0];
        var user = me.getController('MyApp.controller.LoginSecurity');  
        var param = "";

        if(view.extraParam === null)
        {
            user.clearSession();

            return;

        }
        else
        {
            return view.extraParam;
        }
    },

    loadDataForUpdate: function(param) {
        var me = this;
        var waitSave = waitMsg("Please wait ...");
        var btnSubmit = Ext.ComponentQuery.query("#btnSubmitAnx2")[0];        
        btnSubmit.setText("Update Annex 2");

        Ext.Ajax.request({
            url:'../Handlers/IncomeTax/D01/AssessmentSADoneHandler.ashx?method=GetDCTBAssessmentForAnx2',
            params:{assessmentNo:param.submissionNo},
            success:function(result, request)
            {
                waitSave.hide();

                var obj = Ext.decode(result.responseText);    
                var data = obj.root;

                var store = Ext.getStore("DCTBAnnex");

                var txtTaxCat = Ext.ComponentQuery.query('#txtTaxCatAnx2')[0];
                var txtDateUpto = Ext.ComponentQuery.query('#txtUptoDateAnx2')[0];
                var assmtDetail = [];
                var chargePenDetail = [];

                assmtDetail = data.AssmtDetailChildDOne;  
                txtTaxCat.setValue(data.TaxpayerCat);
                txtDateUpto.setValue(data.DateUpto);

                if(obj.root.DateUpto !== "")
                {
                    chargePenDetail = data.ChargePenalty.ChargePenaltyDetails;             
                    me.setChargPenDetail(chargePenDetail); 
                }

                me.setAssmtDetail(assmtDetail);       
                me.calAssessmentCharge();

            },

            failure:function(result, request){
                waitSave.hide();
                msg('ERROR OCURRED !!!', 'Error');                 
            }

        });
    },

    loadAnnexLk: function() {
        var me = this;
        var waitSave = waitMsg("Please wait ...");
        var store = Ext.getStore("DCTBAnnex");

        store.loadData([],false);

        var param = me.validateParam();

        //------------------------------------------------------
        // NB: Retrive Data from Server
        //------------------------------------------------------

        Ext.Ajax.request({
            url: '../Handlers/IncomeTax/D03/DCTBAnnexHandler.ashx?method=GetDCTBAnnexes',
            params:{assessmentNo:param.submissionNo,annexID:null},
            success: function ( result, request ) {

                waitSave.hide();       

                var obj = Ext.decode(result.responseText);      

                store.add(obj.root);   

                me.reArrangeData(store);
            },
            failure: function(form, action) {

                waitSave.hide();

                msg("FAILURE","Error in Fetching data !!!");
            }

        });

    },

    init: function(application) {
        this.control({
            "#pnlD03Annex2": {
                afterrender: this.onPnlD03Annex2AfterRender
            },
            "#lblRedirectAnx2": {
                click: this.onLblRedirectAnx2Click
            },
            "#txtUptoDateAnx2": {
                keypress: this.onTxtUptoDateAnx2Keypress
            },
            "#txtSection117Anx2": {
                keyup: this.onTxtSection117Anx2Keyup
            },
            "#txtSection118Anx2": {
                keyup: this.onTxtSection118Anx2Keyup
            },
            "#txtSection119Anx2": {
                keyup: this.onTxtSection119Anx2Keyup
            },
            "#btnSubmitAnx2": {
                click: this.onBtnSubmitAnx2Click
            },
            "#grdInclusionD03Anx2": {
                afterrender: this.onGrdInclusionD03Anx2AfterRender
            }
        });
    }

});
