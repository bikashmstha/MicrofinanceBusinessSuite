/*
 * File: app/controller/ManualCloseOfBusiness.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.ManualCloseOfBusiness', {
    extend: 'Ext.app.Controller',

    stores: [
        'FilingPeriodStore',
        'ReferenceBasisStore'
    ],

    onFrmManualCloseOfBusinessAfterRender: function(abstractcomponent, options) {
        var me =this;
        var txtAcctType;
        var userActivity={
            ApplicationID:'VAT',
            ModuleID:'VMCB',
            UserID:'',
            Action:'ENTER'
        };

        LogUserActivity(userActivity);


        $(document).ready(function(){

            $('tr').has('.exclude').children('td').css({backgroundColor:'#DFE9F6',border:0});
            $('tr').has('.exclude').css({backgroundColor:'#DFE9F6',border:0});
            $('.tablegrid .x-table-layout').css({border:0});
        }
        );

        //*************************** LOAD REFERENCE BASIS *********************************************************
        var strRB = Ext.getStore('ReferenceBasisStore');
        strRB.removeAll();
        strRB.load();



        var objParam = Ext.ComponentQuery.query('#ManualCloseOfBusiness')[0];
        if (!objParam.extraParam)
        {
            Ext.ComponentQuery.query("#hfCOBAction")[0].setValue('A');
            txtAcctType=Ext.ComponentQuery.query("#txtAccountType")[0];
            txtAcctType.setValue('00');

            var nepaliDate = Ext.get('nepDate').dom.innerHTML;

            Ext.ComponentQuery.query('#txtRecDate')[0].setValue(nepaliDate);
            return;
        }



        var param = objParam.extraParam.params;
        console.log(param);
        //FROM AUTHORIZED UPDATE
        if(param.from=='AU')
        {
            var pan=param.AUParams.pan;
            var acctType=param.AUParams.acctType;
            var taxyear=param.AUParams.taxyear;
            var filePer=param.AUParams.filPer;
            var period=param.AUParams.period;
            var requestNo=param.AUParams.requestNo;
            var offCode=param.AUParams.offCode;
            var auAction=param.AUParams.auAction;
            tranNo=param.AUParams.tranNo;
            var editOrDelete=param.AUParams.editOrDelete;


            Ext.ComponentQuery.query('#hdnActionType')[0].setValue('AU');
            Ext.ComponentQuery.query('#hdnTranNo')[0].setValue(tranNo);


            var sn=Ext.ComponentQuery.query('#txtSubmissionNo')[0];
            sn.labelEl.dom.innerHTML='Request No';
            sn.setValue(requestNo);

            Ext.ComponentQuery.query('#hdnAUOffCode')[0].setValue(offCode);

            txtAcctType=Ext.ComponentQuery.query("#txtAccountType")[0];
            txtAcctType.setValue('00');

            var form=(Ext.ComponentQuery.query('#frmManualCloseOfBusiness')[0]).getForm();

            if(auAction=='A')
            {
                Ext.Ajax.request({
                    url: '../Handlers/VAT/VatReturnsHandler.ashx',
                    params: {method:'GetPostedReturn',requestNo:requestNo,offCode:offCode,pan: pan,acctType:acctType,taxyear:taxyear,filPeriod:filePer,period:period},
                    success: function(response){
                        var JSONResponse=Ext.decode(response.responseText);
                        if(JSONResponse.success=='true')
                        {  
                            if(JSONResponse.root.RTType=='RT')
                            {
                                msg('INFO','तपाईले भर्नु भएको विवरण कारोवार वन्दको होईन।');
                                return;
                            }
                            pan=JSONResponse.root.PAN;

                            Ext.ComponentQuery.query("#txtPan")[0].setValue(pan);

                            LoadTaxpayerInfo(pan,acctType,function(TaxpayerInfo){

                                //LOAD TAXPAYER INFO   
                                var taxpayer=TaxpayerInfo.root.Taxpayer;
                                var address=taxpayer.BusinessAddress.Address;
                                Ext.ComponentQuery.query("#lblTaxpayerName")[0].setValue(taxpayer.Name);
                                Ext.ComponentQuery.query("#lblTaxpayerAddress")[0].setValue(address.DistrictNameNep+' / '+address.StreetName);
                                Ext.ComponentQuery.query("#lblTaxpayerPhoneNo")[0].setValue(address.Telephone);
                                Ext.ComponentQuery.query("#lblTaxpayerFax")[0].setValue(address.Fax);
                                Ext.ComponentQuery.query('#hdnRegistrationDate')[0].setValue(taxpayer.RegistrationDate);

                            });


                            //LOAD VAT RETURNS
                            me.LoadCloseOfBusinessAU(JSONResponse);

                        }

                    }
                });//Ends Loading Vat Returns using TranNo

            }
            else if(auAction=='E'||auAction=='V')
            {
                Ext.Ajax.request({
                    url: '../Handlers/VAT/VatReturnsHandler.ashx',
                    params: {method:'GetVatReturnAU',offCode:offCode,requestNo:requestNo},
                    success: function(response){
                        var JSONResponse=Ext.decode(response.responseText);
                        if(JSONResponse.success=='true')
                        {  

                            Ext.ComponentQuery.query("#txtPan")[0].setValue(pan);
                            //Ext.ComponentQuery.query('#hdnAUExists')[0].setValue('E');

                            LoadTaxpayerInfo(pan,acctType,function(TaxpayerInfo){

                                //LOAD TAXPAYER INFO   
                                var taxpayer=TaxpayerInfo.root.Taxpayer;
                                var address=taxpayer.BusinessAddress.Address;
                                Ext.ComponentQuery.query("#lblTaxpayerName")[0].setValue(taxpayer.Name);
                                Ext.ComponentQuery.query("#lblTaxpayerAddress")[0].setValue(address.DistrictNameNep+' / '+address.StreetName);
                                Ext.ComponentQuery.query("#lblTaxpayerPhoneNo")[0].setValue(address.Telephone);
                                Ext.ComponentQuery.query("#lblTaxpayerFax")[0].setValue(address.Fax);
                                Ext.ComponentQuery.query('#hdnRegistrationDate')[0].setValue(taxpayer.RegistrationDate);
                            });


                            //LOAD VAT RETURNS
                            me.LoadCloseOfBusinessAU(JSONResponse);

                            if(auAction=='V')
                            {
                                var frmMVR=Ext.ComponentQuery.query('#ManualCloseOfBusiness')[0];


                                frmMVR.query('.field,.combo').forEach(function(c){c.setReadOnly(true);});
                                frmMVR.query('.grid').forEach(function(c){ c.on('beforeedit', function(editor, e) { return false;});});

                                Ext.ComponentQuery.query('#btnSaveCloseOfBusiness')[0].hide(true);
                                Ext.ComponentQuery.query('#btnPrintCloseOfBusiness')[0].hide(true);
                                Ext.ComponentQuery.query('#btnSubmitSubmitCloseOf')[0].hide(true);
                                Ext.ComponentQuery.query('#btnCOBBack')[0].enable(true);
                                Ext.ComponentQuery.query('#btnVerifyCloseOfBusiness')[0].hide(true);




                            }
                        }
                    }

                });  




            }
            if(editOrDelete=='D')
            {

                var frmMVR=Ext.ComponentQuery.query('#ManualCloseOfBusiness')[0];

                frmMVR.query('.field,.combo').forEach(function(c){c.setReadOnly(true);});
                frmMVR.query('.grid').forEach(function(c){ c.on('beforeedit', function(editor, e) { return false;});});
            }









        }
        else
        {







            //var param = objParam.extraParam;
            var tranNo= param.tranNo;


            //MANUAL VAT RETURN ENTRY  OR TRAN AUTHENTICATION
            if(!tranNo)//ENTERS MANUAL VAT RETURN ENTRY
            {
                Ext.ComponentQuery.query("#hfCOBAction")[0].setValue('A');

            }//ENDS IF
            else//TRAN AUTHENTICATION VERIFICATION
            {
                Ext.ComponentQuery.query("#hfCOBAction")[0].setValue('V');
                txtAcctType=Ext.ComponentQuery.query("#txtAccountType")[0];
                txtAcctType.setValue('00');

                var form=(Ext.ComponentQuery.query('#frmManualCloseOfBusiness')[0]).getForm();

                //var tranNo=Ext.ComponentQuery.query('#txtMVRTranNo')[0].getValue();

                //GETS SUBMISSION NO
                Ext.Ajax.request({
                    url: '../Handlers/VAT/VatReturnsHandler.ashx',
                    params: {method:'GetVatReturnByTranNo',tranNo: tranNo},
                    success: function(response){
                        var JSONResponse=Ext.decode(response.responseText);
                        if(JSONResponse.success=='true')
                        {  

                            var submissionNo=JSONResponse.root.SubmissionNumber;
                            var acctType=JSONResponse.root.AcctType;

                            //LOADS VAT RETURNS USING SUBMISSION NO
                            Ext.Ajax.request({
                                url: '../Handlers/VAT/VatReturnsSubmissionNumberHandler.ashx',
                                params: {method:'GetLoginTBs',submissionNo: submissionNo },
                                success: function(response){
                                    var JSONResponse=Ext.decode(response.responseText);
                                    if(JSONResponse.success=='true')
                                    {  

                                        pan=JSONResponse.root.PAN;

                                        if(JSONResponse.root.SubmittedYN!='Y')
                                        {
                                            msg('INFI','* यो विवरण सब्मित भएको छैन।<BR>तपाईले यो विवरण भेरिफाई गर्न सक्नुहुन्न।');
                                        }
                                        else
                                        {
                                            Ext.ComponentQuery.query("#txtPan")[0].setValue(pan);

                                            LoadTaxpayerInfo(pan,acctType,function(TaxpayerInfo){

                                                //LOAD TAXPAYER INFO   
                                                var taxpayer=TaxpayerInfo.root.Taxpayer;
                                                var address=taxpayer.BusinessAddress.Address;
                                                Ext.ComponentQuery.query("#lblTaxpayerName")[0].setValue(taxpayer.Name);
                                                Ext.ComponentQuery.query("#lblTaxpayerAddress")[0].setValue(address.DistrictNameNep+' / '+address.StreetName);
                                                Ext.ComponentQuery.query("#lblTaxpayerPhoneNo")[0].setValue(address.Telephone);
                                                Ext.ComponentQuery.query("#lblTaxpayerFax")[0].setValue(address.Fax);
                                                Ext.ComponentQuery.query('#hdnRegistrationDate')[0].setValue(taxpayer.RegistrationDate);
                                            });


                                            //LOAD VAT RETURNS
                                            me.LoadCloseOfBusiness(submissionNo);
                                        }

                                    }

                                }
                            });//Ends Loading Vat Returns using TranNo

                            Ext.ComponentQuery.query('#btnSaveCloseOfBusiness')[0].hide(true);
                            Ext.ComponentQuery.query('#btnPrintCloseOfBusiness')[0].hide(true);
                            Ext.ComponentQuery.query('#btnSubmitSubmitCloseOf')[0].hide(true);
                            Ext.ComponentQuery.query('#btnCOBBack')[0].enable(true);
                            Ext.ComponentQuery.query('#btnVerifyCloseOfBusiness')[0].hide(true);

                            //Convert All Fields To Read Only
                            var frmMVR=Ext.ComponentQuery.query('#ManualCloseOfBusiness')[0];
                            frmMVR.query('.field,.combo').forEach(function(c){c.setReadOnly(true);});
                            frmMVR.query('.grid').forEach(function(c){ c.on('beforeedit', function(editor, e) { return false;});});
                            //Ends Converting Fields To Read Only


                        }

                    }
                });//Ends Get Submission No
            }//Ends Else


        }


    },

    onTxtSubmissionNoBlur: function(field, options) {
        var me=this;
        var pan;

        var submissionNo=Ext.ComponentQuery.query("#txtSubmissionNo")[0].getValue();
        var acctType=Ext.ComponentQuery.query("#txtAccountType")[0].getValue();
        if(submissionNo==='')
        {
            Ext.ComponentQuery.query("#hfCOBAction")[0].setValue("A");
            return;
        }
        else if(submissionNo.length!=12)
        {
            msg('INFO','Submission Number Is Not Valid');
            return;
        }

        Ext.ComponentQuery.query("#hfCOBAction")[0].setValue("E");

        //----------------------------------------------------------------
        //------------------GETTTING SUBMISSION NUMBER INFO---------------
        //----------------------------------------------------------------





        Ext.Ajax.request({
            url: '../Handlers/VAT/VatReturnsSubmissionNumberHandler.ashx',
            params: {method:'GetLoginTBs',submissionNo: submissionNo},
            success: function(response){
                var JSONResponse=Ext.decode(response.responseText);
                //console.log(JSONResponse);
                if(JSONResponse.success=='true')
                {  

                    pan=JSONResponse.root.PAN;

                    if(JSONResponse.root.SubmittedYN=='Y')
                    {
                        msg('INFI','* तपाईले यो विवरण सब्मित गरिसक्नु भयो।<BR>तपाईले यो विवरणमा सच्याउन सक्नुहुन्न।');
                    }
                    else
                    {
                        Ext.ComponentQuery.query("#txtPan")[0].setValue(pan);

                        LoadTaxpayerInfo(pan,acctType,function(TaxpayerInfo){

                            //LOAD TAXPAYER INFO   
                            //console.log(TaxpayerInfo);
                            //console.log(TaxpayerInfo);
                            var taxpayer=TaxpayerInfo.root.Taxpayer;
                            var address=taxpayer.BusinessAddress.Address;
                            Ext.ComponentQuery.query("#lblTaxpayerName")[0].setValue(taxpayer.Name);
                            Ext.ComponentQuery.query("#lblTaxpayerAddress")[0].setValue(address.DistrictNameNep+' / '+address.StreetName);
                            Ext.ComponentQuery.query("#lblTaxpayerPhoneNo")[0].setValue(address.Telephone);
                            Ext.ComponentQuery.query("#lblTaxpayerFax")[0].setValue(address.Fax);

                        });


                        //LOAD VAT RETURNS
                        me.LoadCloseOfBusiness(submissionNo);
                        //Ext.ComponentQuery.query("#ddlReferenceBasis")[0].disable(false);

                    }

                }

            }
        });

























        /*




        Ext.Ajax.request({
        url: '../Handlers/VAT/VatReturnsSubmissionNumberHandler.ashx',
        params: {method:'GetLoginTBs',submissionNo: submissionNo},
        success: function(response){
        var JSONResponse=Ext.decode(response.responseText);
        if(JSONResponse.success=='true')
        {  

        pan=JSONResponse.root.PAN;

        if(JSONResponse.root.SubmittedYN=='Y')
        {
        msg('INFO','VAT Returns already Submitted.<BR><You Cannot Edit The Submitted Information.');
        }
        else
        {
        Ext.ComponentQuery.query("#txtPan")[0].setValue(pan);

        //LOADS TAXPAYER INFO
        LoadTaxpayerInfo(pan,acctType,function(TaxpayerInfo){

            var taxpayer=TaxpayerInfo.root.Taxpayer;
            var address=taxpayer.BusinessAddress.Address;
            Ext.ComponentQuery.query("#lblTaxpayerName")[0].setValue(taxpayer.Name);
            Ext.ComponentQuery.query("#lblTaxpayerAddress")[0].setValue(address.DistrictNameNep+' / '+address.StreetName);
            Ext.ComponentQuery.query("#lblTaxpayerPhoneNo")[0].setValue(address.Telephone);
            Ext.ComponentQuery.query("#lblTaxpayerFax")[0].setValue(address.Fax);

        });
        //ENDS LOADING TAXPAYER INFO


        //LOAD VAT RETURNS
        me.LoadCloseOfBusiness(submissionNo);
    }

    }

}
});*/
//----------------------------------------------------------------
//--------------END GETTTING SUBMISSION NUMBER INFO---------------
//----------------------------------------------------------------
    },

    onTxtPanBlur: function(field, options) {

        var me=this;
        var pan=Ext.ComponentQuery.query("#txtPan")[0].value;
        var acctType=Ext.ComponentQuery.query("#txtAccountType")[0].value;

        if(pan==='')
        {
            return;
        }
        if(pan.length!=9)
        {
            msg('INFO','तपाईले भर्नु भए‍को प्यान ९ अंकको हुनुपर्छ।');
            return;
        }
        else
        {


            //----------------------------------------------------------------
            //------------------VALIDATES AND LOADS TAXPAYER INFO-------------
            //----------------------------------------------------------------




            LoadTaxpayerInfoWithValidPan(pan,acctType,function(obj){
                //console.log(obj);
                if(obj.root.Message!==null)
                {
                    var f=Ext.ComponentQuery.query('#txtPan')[0]; 
                    msg('INFO',obj.root.Message,f);

                    Ext.ComponentQuery.query("#lblTaxpayerName")[0].setValue('');
                    Ext.ComponentQuery.query("#lblTaxpayerAddress")[0].setValue('');
                    Ext.ComponentQuery.query("#lblTaxpayerPhoneNo")[0].setValue('');
                    Ext.ComponentQuery.query("#lblTaxpayerFax")[0].setValue('');
                    Ext.ComponentQuery.query('#hdnRegistrationDate')[0].setValue('');
                }
                else
                {
                    var taxpayer=obj.root.Taxpayer;
                    var address=taxpayer.BusinessAddress.Address;
                    var office=taxpayer.Office;

                    if(taxpayer.AcctStatus!='A')
                    {
                        msg('INFO', '* यो प्यान सक्रिय छैन।');
                        return;
                    }


                    var userOffice=Ext.get('offCode').dom.innerHTML;    
                    if(office.OfficeCode!=userOffice)
                    {
                        msg('INFO', '* यो करदाता यो कार्यालामा दर्ता छैन।<BR><BR>  तपाईले यो करदाताको विवरण भर्न पाउनु हुन्न।');
                        Ext.ComponentQuery.query("#lblTaxpayerName")[0].setValue('');
                        Ext.ComponentQuery.query("#lblTaxpayerAddress")[0].setValue('');
                        Ext.ComponentQuery.query("#lblTaxpayerPhoneNo")[0].setValue('');
                        Ext.ComponentQuery.query("#lblTaxpayerFax")[0].setValue('');
                        Ext.ComponentQuery.query('#hdnRegistrationDate')[0].setValue('');

                        return;
                    }


                    Ext.ComponentQuery.query("#lblTaxpayerName")[0].setValue(taxpayer.Name);
                    Ext.ComponentQuery.query("#lblTaxpayerAddress")[0].setValue(address.DistrictNameNep+' / '+address.StreetName);
                    Ext.ComponentQuery.query("#lblTaxpayerPhoneNo")[0].setValue(address.Phone);
                    Ext.ComponentQuery.query("#lblTaxpayerFax")[0].setValue(address.Fax);
                    Ext.ComponentQuery.query('#hdnRegistrationDate')[0].setValue(taxpayer.RegistrationDate);
                }

            });
        }


        //----------------------------------------------------------------
        //------------------ENDS LOADING TAXPAYER INFO -------------------
        //----------------------------------------------------------------
    },

    onTxtTaxYearBlur: function(field, options) {

        var me=this;
        var taxyear=Ext.ComponentQuery.query("#txtTaxYear")[0].getValue();


        if(taxyear===null)
        {
            return;
        }

        ValidateTaxyear(taxyear,function(invalidMsg){
            if(invalidMsg!=='')
            {
                msg('INFO',invalidMsg);
                Ext.ComponentQuery.query('#hdnVTaxyear')[0].setValue('INVALID');
                return;
            }
            else
            {
                Ext.ComponentQuery.query('#hdnVTaxyear')[0].setValue('');
            }

        });
    },

    onDdlFilingPeriodChange: function(field, newValue, oldValue, options) {
        var combo=Ext.ComponentQuery.query("#ddlFilingPeriod")[0];
        var v = combo.getValue(); 

        if(v===''||v===null)
        {
            return;
        }

        //if(v!='M'||v!='m'||v!='T'||v!='t'||v!='B'||v!='b')
        if(v!='M'&&v!='m'&&v!='T'&&v!='t'&&v!='B'&&v!='b')
        {
            return;
        }

        var record = combo.findRecord(combo.valueField || combo.displayField, v); 
        var index = combo.store.indexOf(record);

        var ddlPeriod=Ext.ComponentQuery.query("#ddlPeriod")[0];
        ddlPeriod.setValue('');

        ddlPeriod.store.loadData(record.data.Period);

    },

    onDdlPeriodChange: function(field, newValue, oldValue, options) {

        var me=this;
        var filePer=Ext.ComponentQuery.query("#ddlFilingPeriod")[0].getValue();
        var taxyear=Ext.ComponentQuery.query("#txtTaxYear")[0].getValue();
        var period=Ext.ComponentQuery.query("#ddlPeriod")[0].getValue();
        var pan=Ext.ComponentQuery.query("#txtPan")[0].getValue();
        var acctType=Ext.ComponentQuery.query("#txtAccountType")[0].getValue();
        var message='';


        if(period==='')
        {
            return;
        }

        if(period<1||period>12)
        {
            return;
        }
        if(pan===''||pan===null)
        {
            message+= '<BR>* कृपया पहिला प्यान भर्नुहोला।';

        }
        if(taxyear==='0'||taxyear===null)
        {
            message+= '<BR>* कृपया पहिला कर वर्ष भर्नुहोला।';

        }


        if(Ext.ComponentQuery.query('#hdnVTaxyear')[0].getValue()==='INVALID')
        {
            message+='<BR>* तपाईले भर्नु भएको कर वर्ष मिलेन।';

        }

        if(message!=='')
        {
            Ext.ComponentQuery.query("#ddlPeriod")[0].setValue('');
            msg('INFO',message);
            return;
        }


        //VALIDATING YEAR MONTH DESCRIPTION


        Ext.Ajax.request({
            url: '../Handlers/VAT/VatUtilitiesHandler.ashx',
            params: {
                method:'GetFilePerEndDate',
                filePeriod: filePer,
                taxyear:taxyear,
                period:period
            },
            success: function(response){

                //console.log(response.responseText);
                var endDate=Ext.decode(response.responseText);
                if(endDate.message==='')
                {
                    msg('INFO','* तपाईंले भर्नुभएको फाइलिंग पिरियड मिलेन।');
                    return;
                }
                else
                {


                    Ext.Ajax.request({
                        url: '../Handlers/VAT/VatUtilitiesHandler.ashx',
                        params: {
                            method:'GetFilePerStartDate',
                            filePeriod: filePer,
                            taxyear:taxyear,
                            period:period
                        },
                        success: function(response){

                            //console.log(response.responseText);
                            var startDate=Ext.decode(response.responseText);
                            var recDate=Ext.ComponentQuery.query('#txtRecDate')[0].getValue();

                            var me=this;
                            var filePer=Ext.ComponentQuery.query("#ddlFilingPeriod")[0].getValue();
                            var taxyear=Ext.ComponentQuery.query("#txtTaxYear")[0].getValue();
                            var period=Ext.ComponentQuery.query("#ddlPeriod")[0].getValue();
                            var pan=Ext.ComponentQuery.query("#txtPan")[0].getValue();
                            var acctType=Ext.ComponentQuery.query("#txtAccountType")[0].getValue();
                            var registrationDate=Ext.ComponentQuery.query('#hdnRegistrationDate')[0].getValue();


                            //VALIDATING YEAR MONTH DESCRIPTION
                            ValidateFilingPeriod(pan,acctType,filePer,taxyear,period,registrationDate,function(errMessage){
                                if(errMessage!=='')
                                {
                                    msg('INFO',errMessage);
                                    Ext.ComponentQuery.query('#hdnVFilingPeriod')[0].setValue('INVALID');
                                    Ext.ComponentQuery.query("#ddlPeriod")[0].setValue('');
                                    return;
                                }
                                else
                                {

                                    /*if(endDate.message<recDate||startDate.message>recDate)
                                    {
                                    msg('INFO','* तपाईले यो फाइलिंग पिरियडमा आफ्नो कारोवार बन्द गर्न सक्नु हुन्न।');
                                    Ext.ComponentQuery.query('#hdnVFilingPeriod')[0].setValue('INVALID');
                                    Ext.ComponentQuery.query("#ddlPeriod")[0].setValue('');
                                    return;
                                    }
                                    else
                                    {*/
                                    var waitValidate = waitMsg('Validating . . .');
                                    GetNFPeriod(pan, acctType,startDate.message,function(obj){
                                        console.log(obj);
                                        if(obj.message!==''&&obj.message!='null')
                                        {
                                            waitValidate.hide();
                                            var err='तपाईको निम्न पिरियडहरू फाइल गर्न बांकि छ।<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'+obj.message+'<BR><BR>कृपया पहिले बांकि फाईलिंग पिरियडहरू भर्नुहोला।';
                                            msg('INFO',err);
                                            Ext.ComponentQuery.query("#hdnNFText")[0].setValue(err);
                                            Ext.ComponentQuery.query("#ddlPeriod")[0].setValue('');

                                            return;
                                        }
                                        else
                                        {


waitValidate.hide();
                                            Ext.ComponentQuery.query("#hdnNFText")[0].setValue('');

                                        }   
                                        Ext.ComponentQuery.query('#hdnVFilingPeriod')[0].setValue('VALID');

                                    });


                                    //}


                                }
                            });





                        }
                    });
                }








            }
        });

    },

    onTxtVatOnSaleChange: function(field, newValue, oldValue, options) {
        var me=this;

        me.CalculateTotalDebit(Ext.ComponentQuery.query("#txtVatOnSale")[0].getValue(), Ext.ComponentQuery.query("#txtAdjDebit")[0].getValue(),Ext.ComponentQuery.query("#txtStockTax")[0].getValue());
    },

    onTxtVatOnPurchaseChange: function(field, newValue, oldValue, options) {
        var me=this;
        var vatOnPurchase="0";
        var vatOnPurI="0";
        var adjCredit="0";

        vatOnPurchase=Ext.ComponentQuery.query("#txtVatOnPurchase")[0].getValue();
        vatOnPurI=Ext.ComponentQuery.query("#txtVatOnPurI")[0].getValue();
        adjCredit=Ext.ComponentQuery.query("#txtAdjCredit")[0].getValue();

        me.CalculateTotalCredit(vatOnPurchase,vatOnPurI,adjCredit);

    },

    onTxtVatOnPurIChange: function(field, newValue, oldValue, options) {
        var me=this;
        var vatOnPurchase="0";
        var vatOnPurI="0";
        var adjCredit="0";

        vatOnPurchase=Ext.ComponentQuery.query("#txtVatOnPurchase")[0].getValue();
        vatOnPurI=Ext.ComponentQuery.query("#txtVatOnPurI")[0].getValue();
        adjCredit=Ext.ComponentQuery.query("#txtAdjCredit")[0].getValue();

        me.CalculateTotalCredit(vatOnPurchase,vatOnPurI,adjCredit);
    },

    onTxtAdjCreditChange: function(field, newValue, oldValue, options) {
        var me=this;
        var vatOnPurchase="0";
        var vatOnPurI="0";
        var adjCredit="0";

        vatOnPurchase=Ext.ComponentQuery.query("#txtVatOnPurchase")[0].getValue();
        vatOnPurI=Ext.ComponentQuery.query("#txtVatOnPurI")[0].getValue();
        adjCredit=Ext.ComponentQuery.query("#txtAdjCredit")[0].getValue();

        me.CalculateTotalCredit(vatOnPurchase,vatOnPurI,adjCredit);
    },

    onTxtAdjDebitChange: function(field, newValue, oldValue, options) {
        var me=this;
        me.CalculateTotalDebit(Ext.ComponentQuery.query("#txtVatOnSale")[0].getValue(), Ext.ComponentQuery.query("#txtAdjDebit")[0].getValue(),Ext.ComponentQuery.query("#txtStockTax")[0].getValue());
    },

    onTxtStockTaxChange: function(field, newValue, oldValue, options) {
        var me=this;
        me.CalculateTotalDebit(Ext.ComponentQuery.query("#txtVatOnSale")[0].getValue(),Ext.ComponentQuery.query("#txtAdjDebit")[0].getValue(),Ext.ComponentQuery.query("#txtStockTax")[0].getValue());
    },

    onTxtTotalCreditChange: function(field, newValue, oldValue, options) {
        var diff=this.CalculateVatDueTM(Number(Ext.ComponentQuery.query("#txtTotalDebit")[0].getValue()),Number(Ext.ComponentQuery.query("#txtTotalCredit")[0].getValue()));
    },

    onTxtTotalDebitChange: function(field, newValue, oldValue, options) {
        var me=this;
        var diff=me.CalculateVatDueTM(Number(Ext.ComponentQuery.query("#txtTotalDebit")[0].getValue()),Number(Ext.ComponentQuery.query("#txtTotalCredit")[0].getValue()));

    },

    onTxtVatDueTMChange: function(field, newValue, oldValue, options) {
        var me=this;
        me.CalculateVatDue(Ext.ComponentQuery.query("#txtVatDueTM")[0].getValue(),Ext.ComponentQuery.query("#txtCreditBF")[0].getValue());
    },

    onTxtRefClaimAmtBlur: function(field, options) {
        var me=this;
        var refClaimAmt=Ext.ComponentQuery.query("#txtRefClaimAmt")[0].getValue();
        var vatDue=Ext.ComponentQuery.query("#txtVatDue")[0].getValue();


        var refBasis=Ext.ComponentQuery.query("#ddlReferenceBasis");
        vatDue=vatDue===null?0:-vatDue;
        if(refClaimAmt>0)
        {
            if(refClaimAmt>(vatDue===null?0:vatDue))
            {

                msg('INFO','कर फिर्ता माग गरिएको रकम जम्मा क्रेडिट भन्दा बढी हुनुहुन्न।');
                Ext.ComponentQuery.query("#ddlReferenceBasis")[0].setVisible(false);
                return;
            }
        }


        if(Number(refClaimAmt)>0)
        {
            Ext.ComponentQuery.query("#ddlReferenceBasis")[0].setVisible(true);
        }
        else
        {
            Ext.ComponentQuery.query("#ddlReferenceBasis")[0].setVisible(false);
        }


    },

    onTxtCreditBFChange: function(field, newValue, oldValue, options) {
        var me=this;
        me.CalculateVatDue(Ext.ComponentQuery.query("#txtVatDueTM")[0].getValue(),Ext.ComponentQuery.query("#txtCreditBF")[0].getValue());
    },

    onTxtRefClaimAmtChange: function(field, newValue, oldValue, options) {

    },

    onBtnSaveCloseOfBusinessClick: function(button, e, options) {
        var me=this;
        var strMessage='';
        var pan=Ext.ComponentQuery.query("#txtPan")[0].getValue();
        var submissionNo=Ext.ComponentQuery.query("#txtSubmissionNo")[0].getValue();
        var taxyear=Ext.ComponentQuery.query("#txtTaxYear")[0].getValue();
        var filePer=Ext.ComponentQuery.query("#ddlFilingPeriod")[0].getValue();
        var period=Ext.ComponentQuery.query("#ddlPeriod")[0].getValue();

        //console.log(submissionNo);

        var userActivity={
            ApplicationID:'VAT',
            ModuleID:'VMCB',
            UserID:'ITS',
            Action:'SAVE'
        };

        LogUserActivity(userActivity);



        //Validating Pan
        if(pan===''||pan===null)
        {
            strMessage+='<BR>* तपाईंले प्यान अनिबार्य रूपमा भर्नु पर्नेछ।';
        }
        else
        {
            var isValid=ValidatePan(pan,'00');
            if(isValid===false)
            {
                strMessage+='<BR>* तपाईंले भर्नु भएको प्यान नं मिलेन।';
                //return;
            }
        }

        //Validating Taxyear
        if(taxyear===''|| taxyear===null)
        {
            strMessage+='<BR>* कर वर्ष अनिवार्य रूपमा भर्नु पर्नेछ।';
        }
        else
        {
            if(Ext.ComponentQuery.query('#hdnVTaxyear')[0].getValue()==='INVALID')
            {
                strMessage+='<BR>* तपाईंले भर्नु भएको कर वर्ष मिलेन।';
            }
        }

        if(filePer===''||filePer===null)
        {
            strMessage+='<BR>* मा.\\ चौ. \\ व्दै अनिवार्य रूपमा भर्नु पर्नेछ।';
        }

        if(period===''||period===null)
        {
            strMessage+='<BR>* अवधी अनिवार्य रूपमा भर्नु पर्नेछ।';
        }






        if(strMessage!=='')
        {
            msg('INFO',strMessage);
            return;
        }
        else
        {

            if(Ext.ComponentQuery.query('#hdnVFilingPeriod')[0].getValue()==='INVALID')
            {
                msg('INFO','<BR>* तपाईंले भर्नुभएको फाइलिंग पिरियड मिलेन।');
                return;
            }


            /*if(Ext.ComponentQuery.query("#ErrMsg")[0].getValue()!=='')
            {
            msg('INFO',Ext.ComponentQuery.query("#ErrMsg")[0].getValue());
            return;
            }*/


            var from=Ext.ComponentQuery.query('#hdnActionType')[0].getValue();


            if(from=='AU')
            {

                //SETTING VAT RETURN ATTRIBUTES
                var objVatReturns={
                    RequestNo:Ext.ComponentQuery.query('#txtSubmissionNo')[0].getValue(),
                    OffCodeAU:Ext.ComponentQuery.query('#hdnAUOffCode')[0].getValue(),
                    PAN:pan,
                    AcctType : Ext.ComponentQuery.query("#txtAccountType")[0].value,
                    TaxYear : Number(Ext.ComponentQuery.query("#txtTaxYear")[0].value),
                    FilePer : Ext.ComponentQuery.query("#ddlFilingPeriod")[0].getValue(),
                    Period : Number(Ext.ComponentQuery.query("#ddlPeriod")[0].getValue()),
                    RecDate : Ext.ComponentQuery.query("#txtRecDate")[0].getValue(),
                    TaxableSale : Number(Ext.ComponentQuery.query("#txtTaxableSale")[0].value),
                    VATOnSale : Number(Ext.ComponentQuery.query("#txtVatOnSale")[0].value),
                    VATOnPur : Number(Ext.ComponentQuery.query("#txtVatOnPurchase")[0].value),
                    TaxablePurI : Number(Ext.ComponentQuery.query("#txtTaxablePurI")[0].value),
                    VATOnPurI : Number(Ext.ComponentQuery.query("#txtVatOnPurI")[0].value),
                    ExemptSale : Number(Ext.ComponentQuery.query("#txtExemptSale")[0].value),
                    TaxablePurchase : Number(Ext.ComponentQuery.query("#txtTaxablePurchase")[0].value),
                    ExemptPur : Number(Ext.ComponentQuery.query("#txtExemptPurchase")[0].value),
                    ExemptPurI : Number(Ext.ComponentQuery.query("#txtExemptPurI")[0].value),
                    CreditBF : Number(Ext.ComponentQuery.query("#txtCreditBF")[0].value),
                    TDStockAmount : Ext.ComponentQuery.query('#txtStockAmount')[0].getValue(),
                    TDStockTax : Ext.ComponentQuery.query('#txtStockTax')[0].getValue(),
                    AdjCredit : Number(Ext.ComponentQuery.query("#txtAdjCredit")[0].value),
                    AdjDebit : Number(Ext.ComponentQuery.query("#txtAdjDebit")[0].value),
                    Export : Number(Ext.ComponentQuery.query("#txtExport")[0].value),
                    Penalty : 0,
                    Interest : 0,
                    TotalCredit : Number(Ext.ComponentQuery.query("#txtTotalCredit")[0].value),
                    TotalDebit : Number(Ext.ComponentQuery.query("#txtTotalDebit")[0].value),
                    TotalVatTM : Number(Ext.ComponentQuery.query("#txtVatDueTM")[0].value),
                    VATDue : Number(Ext.ComponentQuery.query("#txtVatDue")[0].value),
                    RefClaimAmt : Number(Ext.ComponentQuery.query("#txtRefClaimAmt")[0].value),
                    TranDate : Ext.get('nepDate').dom.innerHTML,
                    RTType : 'CB',
                    OffCode : Ext.get('offCode').dom.innerHTML,
                    BatchNo : '',
                    UserID : '',
                    RBID : Number(Ext.ComponentQuery.query("#ddlReferenceBasis")[0].getValue()),
                    TranNo:Ext.ComponentQuery.query('#hdnTranNo')[0].getValue(), 
                    Action : Ext.ComponentQuery.query("#hfCOBAction")[0].getValue()
                };







                Ext.Ajax.request({
                    url: '../Handlers/VAT/VatReturnsHandler.ashx',
                    params: {method:'SaveVatReturnsAU',vatReturns: JSON.stringify(objVatReturns)},
                    success: function(response){
                        var JSONResponse=Ext.decode(response.responseText);
                        console.log(JSONResponse);
                        if(JSONResponse.success=='True')
                        {  


                            //var fp=Ext.ComponentQuery.query('#frmManualCloseOfBusiness')[0];
                            //fp.getForm().reset();


                            //RESET DEFAULTS
                            //Ext.ComponentQuery.query("#hfCOBAction")[0].setValue('E');
                            //var txtAcctType=Ext.ComponentQuery.query("#txtAccountType")[0];
                            //txtAcctType.setValue('00');
                            // GetNepaliDate(function(nepaliDate){
                            //    Ext.ComponentQuery.query('#txtRecDate')[0].setValue(nepaliDate);
                            //});
                            //Ext.ComponentQuery.query('#hdnVFilingPeriod')[0].setValue('');

                            //msg('INFO','* तपाईंको विवरण सफलतापुर्ण सेभ भयो।<BR>कृपया Request No. टिप्नु होला।<BR><BR>तपाईको RequestNo : <B STYLE="COLOR:RED">'+JSONResponse.root+'<\B>');
                            msg('INFO','* तपाईंको विवरण सफलतापुर्ण सेभ भयो।');

                        }

                    }
                });






            }
            else
            {








                var TPOFfice;


                //Get Taxpayer Current Office
                Ext.Ajax.request({
                    url: '../Handlers/Registration/Taxpayer/TaxpayerHandler.ashx',
                    params: {
                        method:'GetTaxpayerCurrOffice',
                        pan: pan,
                        acctType:'00',
                        id: 1
                    },
                    success: function(taxpayerCurrOffice){
                        TPOffice =Ext.decode( taxpayerCurrOffice.responseText);

                        if(JSON.stringify(TPOffice.root.Success)=='false')
                        {
                            msg('INFO',TPOffice.root.Message);
                        }
                        else
                        {

                            //SETTING CLOSE OF ATTRIBUTES
                            var objVatReturns={
                                SubmissionNumber:submissionNo,
                                AcctType : Ext.ComponentQuery.query("#txtAccountType")[0].value,
                                TaxYear : Number(Ext.ComponentQuery.query("#txtTaxYear")[0].value),
                                FilePer : Ext.ComponentQuery.query("#ddlFilingPeriod")[0].getValue(),
                                Period : Number(Ext.ComponentQuery.query("#ddlPeriod")[0].getValue()),
                                RecDate : Ext.ComponentQuery.query("#txtRecDate")[0].getValue(),
                                TaxableSale : Number(Ext.ComponentQuery.query("#txtTaxableSale")[0].value),
                                VATOnSale : Number(Ext.ComponentQuery.query("#txtVatOnSale")[0].value),
                                VATOnPur : Number(Ext.ComponentQuery.query("#txtVatOnPurchase")[0].value),
                                TaxablePurI : Number(Ext.ComponentQuery.query("#txtTaxablePurI")[0].value),
                                VATOnPurI : Number(Ext.ComponentQuery.query("#txtVatOnPurI")[0].value),
                                ExemptSale : Number(Ext.ComponentQuery.query("#txtExemptSale")[0].value),
                                TaxablePurchase : Number(Ext.ComponentQuery.query("#txtTaxablePurchase")[0].value),
                                ExemptPur : Number(Ext.ComponentQuery.query("#txtExemptPurchase")[0].value),
                                ExemptPurI : Number(Ext.ComponentQuery.query("#txtExemptPurI")[0].value),
                                CreditBF : Number(Ext.ComponentQuery.query("#txtCreditBF")[0].value),
                                TDStockAmount : Ext.ComponentQuery.query('#txtStockAmount')[0].getValue(),
                                TDStockTax : Ext.ComponentQuery.query('#txtStockTax')[0].getValue(),
                                AdjCredit : Number(Ext.ComponentQuery.query("#txtAdjCredit")[0].value),
                                AdjDebit : Number(Ext.ComponentQuery.query("#txtAdjDebit")[0].value),
                                Export : Number(Ext.ComponentQuery.query("#txtExport")[0].value),
                                Penalty : 0,
                                Interest : 0,
                                TotalCredit : Number(Ext.ComponentQuery.query("#txtTotalCredit")[0].value),
                                TotalDebit : Number(Ext.ComponentQuery.query("#txtTotalDebit")[0].value),
                                TotalVatTM : Number(Ext.ComponentQuery.query("#txtVatDueTM")[0].value),
                                VATDue : Number(Ext.ComponentQuery.query("#txtVatDue")[0].value),
                                RefClaimAmt : Number(Ext.ComponentQuery.query("#txtRefClaimAmt")[0].value),
                                TranDate : Ext.get('nepDate').dom.innerHTML,
                                RTType : 'CB',
                                OffCode : Ext.get('offCode').dom.innerHTML,
                                BatchNo : '',
                                UserID : '',
                                RBID : Number(Ext.ComponentQuery.query("#ddlReferenceBasis")[0].getValue()),
                                Status:'I',
                                EM:'VMCB',
                                Action : Ext.ComponentQuery.query("#hfCOBAction")[0].getValue()
                            };
                            //END SETTING CLOSE OF BUSINESS ATTRIBUTES



                            //SETTING LOGIN TBS ATTRIBUTES
                            var LoginTBs={
                                SubmissionNumber:submissionNo,
                                Username:'',
                                Password:'',
                                PAN:pan,
                                Emailid:'',
                                ContactNo:'',
                                submittedFor:'VRETCB',
                                SubmittedYN:'N',
                                SubmittedDate:Ext.get('nepDate').dom.innerHTML,
                                TranNo:'0',
                                Address:'',
                                RegOffice:TPOffice.root.TaxpayerOffice.OfficeCode,
                                VatReturns:objVatReturns,
                                Action:Ext.ComponentQuery.query("#hfCOBAction")[0].getValue()
                            };
                            //END SETTING LOGIN TBS ATTRIBUTES





                            Ext.Ajax.request({
                                url: '../Handlers/VAT/VatReturnsSubmissionNumberHandler.ashx',
                                params: {method:'SaveSubmissionNoWithVatReturns',LoginTBS: JSON.stringify(LoginTBs)},
                                success: function(response){
                                    var JSONResponse=Ext.decode(response.responseText);
                                    console.log(JSONResponse);
                                    if(JSONResponse.success=='true')
                                    {  






                                        var fp=Ext.ComponentQuery.query('#frmManualCloseOfBusiness')[0];
                                        fp.getForm().reset();


                                        //RESET DEFAULTS
                                        Ext.ComponentQuery.query("#hfCOBAction")[0].setValue('A');
                                        var txtAcctType=Ext.ComponentQuery.query("#txtAccountType")[0];
                                        txtAcctType.setValue('00');
                                        GetNepaliDate(function(nepaliDate){
                                            Ext.ComponentQuery.query('#txtRecDate')[0].setValue(nepaliDate);
                                        });
                                        Ext.ComponentQuery.query('#hdnVFilingPeriod')[0].setValue('');

                                        msg('INFO','* तपाईंको विवरण सफलतापुर्ण सेभ भयो।<BR>कृपया सब्मिसन नं टिप्नु होला।<BR><BR>तपाईको सब्मिसन नं : <B STYLE="COLOR:RED">'+JSONResponse.root+'<\B>');




                                    }

                                }
                            });


                        }

                    }
                });
            }

        }
    },

    onBtnPrintCloseOfBusinessClick: function(button, e, options) {
        var userActivity={
            ApplicationID:'VAT',
            ModuleID:'VMCB',
            UserID:'ITS',
            Action:'PRINT'
        };

        LogUserActivity(userActivity);

        var param = { 
            'SubmissionNo' : Ext.ComponentQuery.query('#txtSubmissionNo')[0].getValue()
        };

        var url="../Reporting/Vat/ReportHandlers/Returns/VatReturnsReporthandler.ashx";
        var winOption="width=730,height=345,left=100,top=100,resizable=yes,scrollbars=yes";
        OpenWindowWithPost(url,winOption,"NewFile", param);

    },

    onBtnSubmitCloseOfBusinessClick: function(button, e, options) {
        var me=this;

        var submissionNo=Ext.ComponentQuery.query("#txtSubmissionNo")[0].getValue();

        var filePer=Ext.ComponentQuery.query("#ddlFilingPeriod")[0].getValue();
        var taxyear=Ext.ComponentQuery.query("#txtTaxYear")[0].getValue();
        var period=Ext.ComponentQuery.query("#ddlPeriod")[0].getValue();
        var pan=Ext.ComponentQuery.query("#txtPan")[0].getValue();
        var acctType=Ext.ComponentQuery.query("#txtAccountType")[0].getValue();
        var registrationDate=Ext.ComponentQuery.query('#hdnRegistrationDate')[0].getValue();
        //var date;

        var strMessage='';
        var taxpayerOffice;
        var strSuspReason='';
        var errCode='';
        var errDesc='';


        var userActivity={
            ApplicationID:'VAT',
            ModuleID:'VMCB',
            UserID:'',
            Action:'SUBMIT'
        };

        LogUserActivity(userActivity);

        //Validating Pan
        if(pan===''||pan===null)
        {
            strMessage+='<BR>* तपाईंले प्यान अनिबार्य रूपमा भर्नु पर्नेछ।';
        }
        else
        {
            var isValid=ValidatePan(pan,'00');
            if(isValid===false)
            {
                strMessage+='<BR>* तपाईंले भर्नु भएको प्यान नं मिलेन।';
                //return;
            }
        }

        //Validating Taxyear
        if(taxyear===''|| taxyear===null)
        {
            strMessage+='<BR>* कर वर्ष अनिवार्य रूपमा भर्नु पर्नेछ।';
        }
        else
        {
            if(Ext.ComponentQuery.query('#hdnVTaxyear')[0].getValue()==='INVALID')
            {
                strMessage+='<BR>* तपाईंले भर्नु भएको कर वर्ष मिलेन।';
            }
        }

        if(filePer===''||filePer===null)
        {
            strMessage+='<BR>* मा.\\ चौ. \\ व्दै अनिवार्य रूपमा भर्नु पर्नेछ।';
        }

        if(period===''||period===null)
        {
            strMessage+='<BR>* अवधी अनिवार्य रूपमा भर्नु पर्नेछ।';
        }





        var refClaimAmt=Ext.ComponentQuery.query("#txtRefClaimAmt")[0].getValue();
        var vatDue=Ext.ComponentQuery.query("#txtVatDue")[0].getValue();


        var refBasis=Ext.ComponentQuery.query("#ddlReferenceBasis");
        vatDue=vatDue===null?0:-vatDue;
        if(refClaimAmt>0)
        {
            if(refClaimAmt>vatDue)
            {

                strMessage+='कर फिर्ता माग गरिएको रकम जम्मा क्रेडिट भन्दा बढी हुनुहुन्न।';
                Ext.ComponentQuery.query("#ddlReferenceBasis")[0].setVisible(false);

            }
        }


        if(strMessage!=='')
        {
            msg('INFO',strMessage);
            return;
        }
        else
        {
            strMessage='';
            if(Ext.ComponentQuery.query('#hdnVFilingPeriod')[0].getValue()==='INVALID')
            {
                strMessage+='<BR>* तपाईंले भर्नुभएको फाइलिंग पिरियड मिलेन।';
            }

            if(Ext.ComponentQuery.query('#hdnNFText')[0].getValue()!=='')
            {
                strMessage+='<BR>'+Ext.ComponentQuery.query('#hdnNFText')[0].getValue();
            }
            if(strMessage!=='')
            {
                msg('INFO',strMessage);
                return;
            }






            var from=Ext.ComponentQuery.query('#hdnActionType')[0].getValue('AU');


            if(from=='AU')
            {






                //----------------------------------------------------------------------------------------------------
                //----------------------------------------------------------------------------------------------------
                //----------------------------Save Vat Returns -------------------------------------------------------
                //----------------------------------------------------------------------------------------------------
                //----------------------------------------------------------------------------------------------------

                var objVatReturns={
                    OffCodeAU:Ext.get('offCode').dom.innerHTML,
                    RequestNo:Ext.ComponentQuery.query('#txtSubmissionNo')[0].getValue(),
                    PAN:Ext.ComponentQuery.query('#txtPan')[0].getValue(),
                    AcctType : Ext.ComponentQuery.query("#txtAccountType")[0].getValue(),
                    TaxYear : Number(Ext.ComponentQuery.query("#txtTaxYear")[0].getValue()),
                    FilePer : Ext.ComponentQuery.query("#ddlFilingPeriod")[0].getValue(),
                    Period : Number(Ext.ComponentQuery.query("#ddlPeriod")[0].getValue()),
                    RecDate : Ext.ComponentQuery.query("#txtRecDate")[0].getValue(),
                    TaxableSale : Number(Ext.ComponentQuery.query("#txtTaxableSale")[0].getValue()),
                    VATOnSale : Number(Ext.ComponentQuery.query("#txtVatOnSale")[0].getValue()),
                    VATOnPur : Number(Ext.ComponentQuery.query("#txtVatOnPurchase")[0].getValue()),
                    TaxablePurI : Number(Ext.ComponentQuery.query("#txtTaxablePurI")[0].getValue()),
                    VATOnPurI : Number(Ext.ComponentQuery.query("#txtVatOnPurI")[0].getValue()),
                    ExemptSale : Number(Ext.ComponentQuery.query("#txtExemptSale")[0].getValue()),
                    TaxablePurchase : Number(Ext.ComponentQuery.query("#txtTaxablePurchase")[0].getValue()),
                    ExemptPur : Number(Ext.ComponentQuery.query("#txtExemptPurchase")[0].getValue()),
                    ExemptPurI : Number(Ext.ComponentQuery.query("#txtExemptPurI")[0].getValue()),
                    CreditBF : Number(Ext.ComponentQuery.query("#txtCreditBF")[0].getValue()),
                    TDStockAmount : Ext.ComponentQuery.query('#txtStockAmount')[0].getValue(),
                    TDStockTax : Ext.ComponentQuery.query('#txtStockTax')[0].getValue(),
                    AdjCredit : Number(Ext.ComponentQuery.query("#txtAdjCredit")[0].getValue()),
                    AdjDebit : Number(Ext.ComponentQuery.query("#txtAdjDebit")[0].getValue()),
                    Export : Number(Ext.ComponentQuery.query("#txtExport")[0].getValue()),
                    Penalty : 0,
                    Interest : 0,
                    TotalCredit : Number(Ext.ComponentQuery.query("#txtTotalCredit")[0].getValue()),
                    TotalDebit : Number(Ext.ComponentQuery.query("#txtTotalDebit")[0].getValue()),
                    TotalVatTM : Number(Ext.ComponentQuery.query("#txtVatDueTM")[0].getValue()),
                    VATDue : Number(Ext.ComponentQuery.query("#txtVatDue")[0].getValue()),
                    RefClaimAmt : Number(Ext.ComponentQuery.query("#txtRefClaimAmt")[0].getValue()),
                    TranDate : Ext.get('nepDate').dom.innerHTML,
                    RTType : 'CB',
                    BatchNo : '',
                    UserID : '',
                    RBID : Ext.ComponentQuery.query("#ddlReferenceBasis")[0].getValue(),
                    TranNo:Ext.ComponentQuery.query('#hdnTranNo')[0].getValue(),
                    Action : Ext.ComponentQuery.query("#hfCOBAction")[0].getValue()
                };









                var frm=Ext.getCmp('frmVatReturns');

                var form = button.up('form').getForm();
                if(form)
                {
                    console.log(form);
                }

                if(form.isValid()){


                    Ext.Ajax.request({
                        url: '../Handlers/VAT/VatReturnsHandler.ashx',
                        params: {
                            method:'ValidateVatReturnsAU',
                            vatReturns: JSON.stringify(objVatReturns)
                        },
                        success: function(response){
                            var JSONResponse=Ext.decode(response.responseText);
                            if(JSONResponse.success=='true')
                            {  
                                var resp=JSONResponse.root.split('&&');

                                if(resp.length==3)
                                {

                                    errCode=JSONResponse.root.split('&&')[0];
                                    errDesc=JSONResponse.root.split('&&')[1];
                                    submissionNo=JSONResponse.root.split('&&')[2];

                                    msg('INFO', '* तपाईंले बुझाउनु भएको विवरणमा निम्न प्रकारका गलतीहरु छन्।<BR>तपाईको गलतिहरू.... '+errDesc+'<BR><BR>तपाईको सब्मिसन नं :  <B STYLE="COLOR:RED">'+submissionNo+'</B>');
                                    return;
                                }
                                else
                                {
                                    submissionNo=JSONResponse.root.split('&&')[0];
                                    var fp=Ext.ComponentQuery.query('#frmManualCloseOfBusiness')[0];
                                    fp.getForm().reset();


                                    //RESET DEFAULTS
                                    Ext.ComponentQuery.query("#hfCOBAction")[0].setValue('A');
                                    var txtAcctType=Ext.ComponentQuery.query("#txtAccountType")[0];
                                    txtAcctType.setValue('00');
                                    GetNepaliDate(function(nepaliDate){
                                        Ext.ComponentQuery.query('#txtRecDate')[0].setValue(nepaliDate);
                                    });
                                    Ext.ComponentQuery.query('#hdnVFilingPeriod')[0].setValue('');

                                    msg('INFO','तपाईंको विवरण सफलतापुर्वक सब्मित भयो।');



                                }
                            }
                        }


                    });
                }












            }
            else
            {




                //----------------------------------------------------------------------------------------------------
                //----------------------------------------------------------------------------------------------------
                //----------------------------Save Vat Returns -------------------------------------------------------
                //----------------------------------------------------------------------------------------------------
                //----------------------------------------------------------------------------------------------------

                var objVatReturns={
                    SubmissionNo:submissionNo,
                    AcctType : Ext.ComponentQuery.query("#txtAccountType")[0].getValue(),
                    TaxYear : Number(Ext.ComponentQuery.query("#txtTaxYear")[0].getValue()),
                    FilePer : Ext.ComponentQuery.query("#ddlFilingPeriod")[0].getValue(),
                    Period : Number(Ext.ComponentQuery.query("#ddlPeriod")[0].getValue()),
                    RecDate : Ext.ComponentQuery.query("#txtRecDate")[0].getValue(),
                    TaxableSale : Number(Ext.ComponentQuery.query("#txtTaxableSale")[0].getValue()),
                    VATOnSale : Number(Ext.ComponentQuery.query("#txtVatOnSale")[0].getValue()),
                    VATOnPur : Number(Ext.ComponentQuery.query("#txtVatOnPurchase")[0].getValue()),
                    TaxablePurI : Number(Ext.ComponentQuery.query("#txtTaxablePurI")[0].getValue()),
                    VATOnPurI : Number(Ext.ComponentQuery.query("#txtVatOnPurI")[0].getValue()),
                    ExemptSale : Number(Ext.ComponentQuery.query("#txtExemptSale")[0].getValue()),
                    TaxablePurchase : Number(Ext.ComponentQuery.query("#txtTaxablePurchase")[0].getValue()),
                    ExemptPur : Number(Ext.ComponentQuery.query("#txtExemptPurchase")[0].getValue()),
                    ExemptPurI : Number(Ext.ComponentQuery.query("#txtExemptPurI")[0].getValue()),
                    CreditBF : Number(Ext.ComponentQuery.query("#txtCreditBF")[0].getValue()),
                    TDStockAmount : Ext.ComponentQuery.query('#txtStockAmount')[0].getValue(),
                    TDStockTax : Ext.ComponentQuery.query('#txtStockTax')[0].getValue(),
                    AdjCredit : Number(Ext.ComponentQuery.query("#txtAdjCredit")[0].getValue()),
                    AdjDebit : Number(Ext.ComponentQuery.query("#txtAdjDebit")[0].getValue()),
                    Export : Number(Ext.ComponentQuery.query("#txtExport")[0].getValue()),
                    Penalty : 0,
                    Interest : 0,
                    TotalCredit : Number(Ext.ComponentQuery.query("#txtTotalCredit")[0].getValue()),
                    TotalDebit : Number(Ext.ComponentQuery.query("#txtTotalDebit")[0].getValue()),
                    TotalVatTM : Number(Ext.ComponentQuery.query("#txtVatDueTM")[0].getValue()),
                    VATDue : Number(Ext.ComponentQuery.query("#txtVatDue")[0].getValue()),
                    RefClaimAmt : Number(Ext.ComponentQuery.query("#txtRefClaimAmt")[0].getValue()),
                    TranDate : Ext.get('nepDate').dom.innerHTML,
                    RTType : 'CB',
                    OffCode :Ext.get('offCode').dom.innerHTML,
                    BatchNo : '',
                    UserID : '',
                    RBID : Ext.ComponentQuery.query("#ddlReferenceBasis")[0].getValue(),
                    Action : Ext.ComponentQuery.query("#hfCOBAction")[0].getValue(),
                    Status:'I',
                    EM:'VMCB'
                };






                //-------------------------------------Get Taxpayer Current Office---------------------------



                Ext.Ajax.request({
                    url: '../Handlers/Registration/Taxpayer/TaxpayerHandler.ashx',
                    params: {
                        method:'GetTaxpayerCurrOffice',
                        pan: pan,
                        acctType:'00',
                        id: 1
                    },
                    success: function(taxpayerCurrOffice){
                        var  TPOffice =Ext.decode( taxpayerCurrOffice.responseText);

                        if(JSON.stringify(TPOffice.root.Success)=='false')
                        {
                            msg('INFO',TPOffice.root.Message);
                        }
                        else
                        {
                            taxpayerOffice=TPOffice.root.TaxpayerOffice.OfficeCode;


                            //SETTING LOGIN TBS ATTRIBUTES
                            var LoginTBs={
                                SubmissionNumber:submissionNo,
                                Username:'',
                                Password:'',
                                PAN:pan,
                                Emailid:'',
                                ContactNo:'',
                                submittedFor:'VCB',
                                SubmittedYN:'N',
                                SubmittedDate:Ext.get('nepDate').dom.innerHTML,
                                TranNo:'0',
                                Address:'',
                                RegOffice:taxpayerOffice,
                                VatReturns:objVatReturns,
                                Action:Ext.ComponentQuery.query("#hfCOBAction")[0].getValue()
                            };


                            var frm=Ext.getCmp('frmManualCloseOfBusiness');

                            var form = button.up('form').getForm();
                            if(form)
                            {
                                console.log(form);
                            }









                            if(form.isValid()){


                                Ext.Ajax.request({
                                    url: '../Handlers/VAT/VatReturnsSubmissionNumberHandler.ashx',
                                    params: {
                                        method:'ValidateManualVatReturns',
                                        LoginTBS: JSON.stringify(LoginTBs)
                                    },
                                    success: function(response){
                                        var JSONResponse=Ext.decode(response.responseText);

                                        if(JSONResponse.success=='true')
                                        {  
                                            var resp=JSONResponse.root.split('&&');

                                            if(resp.length==3)
                                            {

                                                errCode=JSONResponse.root.split('&&')[0];
                                                errDesc=JSONResponse.root.split('&&')[1];
                                                submissionNo=JSONResponse.root.split('&&')[2];

                                                Ext.Msg.show({
                                                    title:'INFO',
                                                    msg: 'तपाईंले बुझाउनु भएको विवरणमा निम्न प्रकारका गलतीहरु छन्।<BR><BR>'+errDesc+'<BR><BR>तपाईको गलतिहरू <B STYLE="COLOR:RED">'+submissionNo+'<\B><BR><BR>तपाई यो विवरण सब्मित गर्न चाहनुहुन्छ?',
                                                    buttons: Ext.Msg.YESNO,
                                                    fn: function (btn){

                                                        if(btn=='yes'){     
                                                            //Submit Manual Vat Returns With Error Message

                                                            Ext.Ajax.request({
                                                                url: '../Handlers/VAT/VatReturnsSubmissionNumberHandler.ashx',
                                                                params: {
                                                                    method:'SubmitManualVatReturnsError',
                                                                    submissionNo: submissionNo,
                                                                    EM:'VMCB',
                                                                    errMsg: errCode
                                                                },
                                                                success: function(response){
                                                                    var JSONResponse=Ext.decode(response.responseText);
                                                                    console.log(JSONResponse.root);
                                                                    if(JSONResponse.root===true)
                                                                    {
                                                                        var fp=Ext.ComponentQuery.query('#frmManualCloseOfBusiness')[0];
                                                                        fp.getForm().reset();


                                                                        //RESET DEFAULTS
                                                                        Ext.ComponentQuery.query("#hfCOBAction")[0].setValue('A');
                                                                        var txtAcctType=Ext.ComponentQuery.query("#txtAccountType")[0];
                                                                        txtAcctType.setValue('00');

                                                                        msg('INFO','तपाईंको विवरण सफलतापुर्वक सब्मित भयो।<BR>तपाईको सब्मिसन नं :  <B STYLE="COLOR:RED">'+submissionNo+'<\B>');
                                                                    }

                                                                }
                                                            });
                                                        }
                                                        else
                                                        {
                                                            Ext.ComponentQuery.query('#txtSubmissionNo')[0].setValue(submissionNo);
                                                            Ext.ComponentQuery.query("#hfCOBAction")[0].setValue('E');

                                                        }

                                                    },
                                                    icon: Ext.Msg.INFO
                                                });
                                            }
                                            else
                                            {
                                                submissionNo=JSONResponse.root.split('&&')[0];
                                                var fp=Ext.ComponentQuery.query('#frmManualCloseOfBusiness')[0];
                                                fp.getForm().reset();


                                                //RESET DEFAULTS
                                                Ext.ComponentQuery.query("#hfCOBAction")[0].setValue('A');
                                                var txtAcctType=Ext.ComponentQuery.query("#txtAccountType")[0];
                                                txtAcctType.setValue('00');

                                                var nepaliDate=Ext.get('nepDate').dom.innerHTML;

                                                //GetNepaliDate(function(nepaliDate){
                                                Ext.ComponentQuery.query('#txtRecDate')[0].setValue(nepaliDate);
                                                //});
                                                Ext.ComponentQuery.query('#hdnVFilingPeriod')[0].setValue('');

                                                msg('INFO','तपाईंको विवरण सफलतापुर्वक सब्मित भयो।<BR>तपाईको सब्मिसन नं :  <B STYLE="COLOR:RED">'+submissionNo+'<\B>');



                                            }
                                        }
                                    }


                                });
                            }









                        }
                    }
                });


            }



        }




    },

    onBtnVerifyCloseOfBusinessClick: function(button, e, options) {

    },

    onTxtRecDateBlur: function(field, options) {

        validateFutureDate(field.getValue(),'Y',function(obj){
            field.focus();
        });

    },

    onBtnCOBBackClick: function(button, e, options) {

        var param=Ext.ComponentQuery.query('#ManualCloseOfBusiness')[0].extraParam;
        var tNo=param.tranNo;
        var idxM=param.indexM;
        var idxT=param.indexT;

        uiConfig = {menuLink:'ModuleVerification',pageTitle:'Module Verification'};
        DynamicUI(uiConfig,null,{tranNo:tNo,indexM:idxM,indexT:idxT });
    },

    CalculateTotalCredit: function(amtVatOnPurchase, amtVatOnPurI, amtAdjCredit) {
        //alert(Number(amtVatOnPurI));
        //alert(Number(amtVatOnPurchase));
        Ext.ComponentQuery.query("#txtTotalCredit")[0].setValue(Number(amtVatOnPurchase)+Number(amtVatOnPurI)+Number(amtAdjCredit));
    },

    CalculateVatDueTM: function(amtTotalDebit, amtTotalCredit) {

        Ext.ComponentQuery.query("#txtVatDueTM")[0].setValue(Number(amtTotalDebit)-Number(amtTotalCredit));
    },

    CalculateTotalDebit: function(amtVatOnSale, amtAdjDebit, amtStockTax) {

        Ext.ComponentQuery.query("#txtTotalDebit")[0].setValue(Number(amtVatOnSale)+Number(amtAdjDebit));
    },

    CalculateVatDue: function(amtVatDueTM, amtCreditBF) {
        Ext.ComponentQuery.query("#txtVatDue")[0].setValue(Number(amtVatDueTM)-Number(amtCreditBF));
    },

    LoadCloseOfBusiness: function(submissionNo) {


        //LOAD CLOSE OF BUSINESS DETAILS
        Ext.Ajax.request({
            url: '../Handlers/Vat/VatReturnsHandler.ashx?method=GetVatReturn',
            params: {SubNo:submissionNo
            },
            success: function(response){
                var TaxpayerInfo =Ext.decode( response.responseText);
                if(TaxpayerInfo.root!=='')
                {
                    Ext.ComponentQuery.query('#txtSubmissionNo')[0].setValue(submissionNo);

                    //Set Taxpayer Year Month Details
                    Ext.ComponentQuery.query("#txtTaxYear")[0].setValue(TaxpayerInfo.root.TaxYear);
                    Ext.ComponentQuery.query("#ddlFilingPeriod")[0].setValue(TaxpayerInfo.root.FilePer);
                    Ext.ComponentQuery.query("#ddlPeriod")[0].setValue(TaxpayerInfo.root.Period);


                    //Set Taxpayer Transaction Details
                    Ext.ComponentQuery.query("#txtTaxableSale")[0].setValue(TaxpayerInfo.root.TaxableSale);
                    Ext.ComponentQuery.query("#txtVatOnSale")[0].setValue(TaxpayerInfo.root.VATOnSale);
                    Ext.ComponentQuery.query("#txtExport")[0].setValue(TaxpayerInfo.root.Export);
                    Ext.ComponentQuery.query("#txtExemptSale")[0].setValue(TaxpayerInfo.root.ExemptSale);
                    Ext.ComponentQuery.query("#txtTaxablePurchase")[0].setValue(TaxpayerInfo.root.TaxablePurchase);
                    Ext.ComponentQuery.query("#txtVatOnPurchase")[0].setValue(TaxpayerInfo.root.VATOnPur);
                    Ext.ComponentQuery.query("#txtTaxablePurI")[0].setValue(TaxpayerInfo.root.TaxablePurI);
                    Ext.ComponentQuery.query("#txtVatOnPurI")[0].setValue(TaxpayerInfo.root.VATOnPurI);
                    Ext.ComponentQuery.query("#txtExemptPurchase")[0].setValue(TaxpayerInfo.root.ExemptPur);
                    Ext.ComponentQuery.query("#txtExemptPurI")[0].setValue(TaxpayerInfo.root.ExemptPurI);
                    Ext.ComponentQuery.query("#txtAdjCredit")[0].setValue(TaxpayerInfo.root.AdjCredit);
                    Ext.ComponentQuery.query("#txtAdjDebit")[0].setValue(TaxpayerInfo.root.AdjDebit);
                    Ext.ComponentQuery.query("#txtCreditBF")[0].setValue(TaxpayerInfo.root.CreditBF);
                    Ext.ComponentQuery.query("#txtStockAmount")[0].setValue(TaxpayerInfo.root.TDStockAmount);
                    Ext.ComponentQuery.query("#txtStockTax")[0].setValue(TaxpayerInfo.root.TDStockTax);
                    Ext.ComponentQuery.query("#txtRefClaimAmt")[0].setValue(TaxpayerInfo.root.RefClaimAmt);
                    Ext.ComponentQuery.query("#ddlReferenceBasis")[0].setValue(TaxpayerInfo.root.RBID);
                    Ext.ComponentQuery.query('#txtRecDate')[0].setValue(TaxpayerInfo.root.RecDate);
                    Ext.getCmp("hfCOBAction").setValue(TaxpayerInfo.root.Action);
                }       
                else
                {
                    Ext.getCmp("hfCOBAction").setValue("A");

                }
            }
        });







    },

    LoadCloseOfBusinessAU: function(returns) {
        if(returns.root!=='')
        {
            console.log(returns.root);
            //Ext.ComponentQuery.query('#txtSubmissionNo')[0].setValue(submissionNo);

            //Set Taxpayer Year Month Details
            Ext.ComponentQuery.query('#txtRecDate')[0].setValue(returns.root.RecDate);
            Ext.ComponentQuery.query("#txtTaxYear")[0].setValue(returns.root.TaxYear);
            Ext.ComponentQuery.query("#ddlFilingPeriod")[0].setValue(returns.root.FilePer);
            Ext.ComponentQuery.query("#ddlPeriod")[0].setValue(returns.root.Period);


            //Set Taxpayer Transaction Details
            Ext.ComponentQuery.query("#txtTaxableSale")[0].setValue(returns.root.TaxableSale);
            Ext.ComponentQuery.query("#txtVatOnSale")[0].setValue(returns.root.VATOnSale);
            Ext.ComponentQuery.query("#txtExport")[0].setValue(returns.root.Export);
            Ext.ComponentQuery.query("#txtExemptSale")[0].setValue(returns.root.ExemptSale);
            Ext.ComponentQuery.query("#txtTaxablePurchase")[0].setValue(returns.root.TaxablePurchase);
            Ext.ComponentQuery.query("#txtVatOnPurchase")[0].setValue(returns.root.VATOnPur);
            Ext.ComponentQuery.query("#txtTaxablePurI")[0].setValue(returns.root.TaxablePurI);
            Ext.ComponentQuery.query("#txtVatOnPurI")[0].setValue(returns.root.VATOnPurI);
            Ext.ComponentQuery.query("#txtExemptPurchase")[0].setValue(returns.root.ExemptPur);
            Ext.ComponentQuery.query("#txtExemptPurI")[0].setValue(returns.root.ExemptPurI);
            Ext.ComponentQuery.query("#txtAdjCredit")[0].setValue(returns.root.AdjCredit);
            Ext.ComponentQuery.query("#txtAdjDebit")[0].setValue(returns.root.AdjDebit);
            Ext.ComponentQuery.query("#txtCreditBF")[0].setValue(returns.root.CreditBF);
            Ext.ComponentQuery.query("#txtStockAmount")[0].setValue(returns.root.TDStockAmount);
            Ext.ComponentQuery.query("#txtStockTax")[0].setValue(returns.root.TDStockTax);
            Ext.ComponentQuery.query("#txtRefClaimAmt")[0].setValue(returns.root.RefClaimAmt);
            Ext.ComponentQuery.query("#ddlReferenceBasis")[0].setValue(returns.root.RBID);
            Ext.getCmp("hfCOBAction").setValue(returns.root.Action);
        }       
        else
        {
            Ext.getCmp("hfCOBAction").setValue("A");

        }

    },

    init: function(application) {
        this.control({
            "#frmManualCloseOfBusiness": {
                afterrender: this.onFrmManualCloseOfBusinessAfterRender
            },
            "#txtSubmissionNo": {
                blur: this.onTxtSubmissionNoBlur
            },
            "#txtPan": {
                blur: this.onTxtPanBlur
            },
            "#txtTaxYear": {
                blur: this.onTxtTaxYearBlur
            },
            "#ddlFilingPeriod": {
                change: this.onDdlFilingPeriodChange
            },
            "#ddlPeriod": {
                change: this.onDdlPeriodChange
            },
            "#txtVatOnSale": {
                change: this.onTxtVatOnSaleChange
            },
            "#txtVatOnPurchase": {
                change: this.onTxtVatOnPurchaseChange
            },
            "#txtVatOnPurI": {
                change: this.onTxtVatOnPurIChange
            },
            "#txtAdjCredit": {
                change: this.onTxtAdjCreditChange
            },
            "#txtAdjDebit": {
                change: this.onTxtAdjDebitChange
            },
            "#txtStockTax": {
                change: this.onTxtStockTaxChange
            },
            "#txtTotalCredit": {
                change: this.onTxtTotalCreditChange
            },
            "#txtTotalDebit": {
                change: this.onTxtTotalDebitChange
            },
            "#txtVatDueTM": {
                change: this.onTxtVatDueTMChange
            },
            "#txtRefClaimAmt": {
                blur: this.onTxtRefClaimAmtBlur,
                change: this.onTxtRefClaimAmtChange
            },
            "#txtCreditBF": {
                change: this.onTxtCreditBFChange
            },
            "#btnSaveCloseOfBusiness": {
                click: this.onBtnSaveCloseOfBusinessClick
            },
            "#btnPrintCloseOfBusiness": {
                click: this.onBtnPrintCloseOfBusinessClick
            },
            "#btnSubmitCloseOfBusiness": {
                click: this.onBtnSubmitCloseOfBusinessClick
            },
            "#btnVerifyCloseOfBusiness": {
                click: this.onBtnVerifyCloseOfBusinessClick
            },
            "#txtRecDate": {
                blur: this.onTxtRecDateBlur
            },
            "#btnCOBBack": {
                click: this.onBtnCOBBackClick
            }
        });
    }

});
