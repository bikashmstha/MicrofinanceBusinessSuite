/*
 * File: app/view/SelectLoanHeadingForLoanDisbursementPopup.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.SelectLoanHeadingForLoanDisbursementPopup', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.Text',
        'Ext.button.Button',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.selection.RowModel',
        'Ext.grid.column.Column'
    ],

    height: 500,
    itemId: 'SelectLoanHeadingForLoanDisbursementPopup',
    width: 700,
    autoScroll: true,
    title: 'Select Loan Product',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    itemId: 'frmSelectLoanHeadingForLoanDisbursementPopup',
                    bodyPadding: 10,
                    items: [
                        {
                            xtype: 'container',
                            layout: 'table',
                            items: [
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtSearchLoanProduct',
                                    fieldLabel: 'Search'
                                },
                                {
                                    xtype: 'button',
                                    colspan: 2,
                                    itemId: 'btnSearchLoanProduct',
                                    margin: '0 0 0 5',
                                    text: 'Search',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnSearchLoanProductClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            itemId: 'grdSearchLoanProduct',
                            title: '',
                            store: 'LoanProductForStaffLoanDisbursementStore',
                            selModel: Ext.create('Ext.selection.RowModel', {
                                listeners: {
                                    beforeselect: {
                                        fn: me.onRowModelBeforeSelect,
                                        scope: me
                                    }
                                }
                            }),
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    width: 156,
                                    dataIndex: 'LoanProductCode',
                                    text: 'Product Code'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 263,
                                    dataIndex: 'LoanProductName',
                                    text: 'Product Name'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'InterestRate',
                                    text: 'Interest Rate'
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onBtnSearchLoanProductClick: function(button, e, eOpts) {
        var waitSave = watiMsg('Loading Data. Please wait ...');
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/StaffLoanTransaction/StaffLoanDisbursementProductHandler.ashx',
            params: {
                method:'GetStaffLoanDisProd',
                ProductName:Ext.ComponentQuery.query('#txtSearchLoanProduct')[0].getValue()
            },
            success: function(response){


                var obj = Ext.decode(response.responseText);

                if(obj.success === "true")
                {

                    var store=Ext.getStore('LoanProductForStaffLoanDisbursementStore');
                    store.removeAll();
                    store.add(obj.root);

                }
                else
                {

                    msg("FAILURE",obj.message);
                }


                waitSave.hide();



            }
        });
    },

    onRowModelBeforeSelect: function(rowmodel, record, index, eOpts) {
        Ext.MessageBox.confirm('Select', 'Are you sure ?', function(btn){

           if(btn === 'yes'){
               console.log('record',record);

               Ext.ComponentQuery.query('#txtLoanHeading')[0].setValue(record.data.LoanProductCode);
               Ext.ComponentQuery.query('#txtLoanHeadingDesc')[0].setValue(record.data.LoanProductName);
               Ext.ComponentQuery.query('#txtInterestRate')[0].setValue(record.data.InterestRate);





              // return true;
           }
           else
           {

           }
            var v=Ext.ComponentQuery.query('#SelectLoanHeadingForLoanDisbursementPopup')[0];

            v.close();
        });

    }

});