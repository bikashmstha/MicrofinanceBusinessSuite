/*
 * File: app/view/DAgencyView.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.DAgencyView', {
    extend: 'Ext.panel.Panel',

    frame: true,
    title: 'Agency List',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    margin: '20 0 0 0',
                    items: [
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'button',
                            cls: '',
                            id: 'btnAVCreateUserLog',
                            itemId: 'btnAVCreateUserLog',
                            style: '{color:red;}',
                            text: 'Create User Login'
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'button',
                            margins: '',
                            cls: '',
                            id: 'btnARAgReg',
                            itemId: 'btnARAgReg',
                            style: '{color:red;}',
                            text: 'Agency Registration'
                        },
                        {
                            xtype: 'tbseparator'
                        }
                    ]
                },
                {
                    xtype: 'hiddenfield',
                    dock: 'left',
                    id: 'hdnGrdAgId',
                    itemId: 'hdnGrdAgId',
                    fieldLabel: 'Label'
                },
                {
                    xtype: 'hiddenfield',
                    dock: 'left',
                    id: 'hdnGrdAgRowIdx',
                    itemId: 'hdnGrdAgRowIdx',
                    fieldLabel: 'Label'
                },
                {
                    xtype: 'hiddenfield',
                    dock: 'left',
                    id: 'hdnGrdAgUser',
                    itemId: 'hdnGrdAgUser',
                    fieldLabel: 'Label'
                },
                {
                    xtype: 'hiddenfield',
                    dock: 'left',
                    id: 'hdnGrdStatus',
                    itemId: 'hdnGrdStatus',
                    fieldLabel: 'Label'
                },
                {
                    xtype: 'hiddenfield',
                    dock: 'left',
                    id: 'hdnGrdCrDate',
                    itemId: 'hdnGrdCrDate',
                    fieldLabel: 'Label'
                }
            ],
            items: [
                {
                    xtype: 'gridpanel',
                    height: 350,
                    id: 'grdAVAgencyList',
                    itemId: 'grdAVAgencyList',
                    autoScroll: true,
                    store: 'AgencyList',
                    viewConfig: {

                    },
                    columns: [
                        {
                            xtype: 'rownumberer',
                            width: 40,
                            defaultWidth: 105,
                            text: 'S.No.'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 250,
                            dataIndex: 'AgencyName',
                            text: 'Name'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 250,
                            dataIndex: 'AgencyAdd',
                            text: 'Address'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 150,
                            dataIndex: 'AgencyType',
                            text: 'Type'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 160,
                            dataIndex: 'CreatedBy',
                            text: 'Created By'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 300,
                            dataIndex: 'CreatedDate',
                            text: 'Created Date'
                        },
                        {
                            xtype: 'actioncolumn',
                            flex: 0.5,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e) {
                                        var window = Ext.create('MyApp.view.WndAgencyView');

                                        window.show(undefined,function(){

                                            var grd = Ext.ComponentQuery.query('#grdAVAgencyList')[0];

                                            var txtARUsername = Ext.ComponentQuery.query('#txtARUsername')[0];
                                            var cboARAgencyType = Ext.ComponentQuery.query('#cboARAgencyType')[0];
                                            var txtARODName = Ext.ComponentQuery.query('#txtARODName')[0];
                                            var txtARODAdd = Ext.ComponentQuery.query('#txtARODAdd')[0];
                                            var txtARODLoan = Ext.ComponentQuery.query('#txtARODLoan')[0];
                                            var txtARODPurp = Ext.ComponentQuery.query('#txtARODPurp')[0];
                                            var txtARODAgDate = Ext.ComponentQuery.query('#txtARODAgDate')[0];
                                            var txtARODTermDate = Ext.ComponentQuery.query('#txtARODTermDate')[0];
                                            var txtARODAmtRec = Ext.ComponentQuery.query('#txtARODAmtRec')[0];
                                            var txtARODDateRec = Ext.ComponentQuery.query('#txtARODDateRec')[0];
                                            var txtARCRName = Ext.ComponentQuery.query('#txtARCRName')[0];
                                            var txtARCRNo = Ext.ComponentQuery.query('#txtARCRNo')[0];
                                            var txtARCRCommDate = Ext.ComponentQuery.query('#txtARCRCommDate')[0];
                                            var txtARCRTermDate = Ext.ComponentQuery.query('#txtARCRTermDate')[0];
                                            var txtARCRPan = Ext.ComponentQuery.query('#txtARCRPan')[0];
                                            var btnARSubmit = Ext.ComponentQuery.query('#btnARSubmit')[0];
                                            var hdnGrdAgId =Ext.ComponentQuery.query('#hdnGrdAgId')[0];
                                            var hdnGrdCrDate = Ext.ComponentQuery.query('#hdnGrdCrDate')[0];
                                            var hdnGrdStatus = Ext.ComponentQuery.query('#hdnGrdStatus')[0];

                                            var str = Ext.getStore('AgencyType');
                                            var len = str.count();

                                            btnARSubmit.setText('Update');

                                            var data = grd.getStore('AgencyList').getAt(rowIndex);

                                            //var agencyID = data.get('AgencyID');
                                            //console.log("handler agID",agencyID);

                                            txtARUsername.setValue(data.get('CreatedBy'));

                                            for(var i=0;i<len;i++)
                                            {
                                                var atData = str.getAt(i);
                                                console.log("atData",atData);
                                                if(data.get('AgencyType')==atData.get('type'))
                                                {
                                                    console.log("",atData.get('sn'));
                                                    //cboARAgencyType.setValue(data.get('AgencyType'));
                                                    cboARAgencyType.setValue(atData.get('sn'));
                                                }
                                            }

                                            txtARODName.setValue(data.get('AgencyName'));
                                            txtARODAdd.setValue(data.get('AgencyAdd'));
                                            txtARODLoan.setValue(data.get('AIDLoanNo'));
                                            txtARODPurp.setValue(data.get('PurpAIDLoan'));

                                            txtARODAgDate.setValue(data.get('AgreeDate'));
                                            txtARODTermDate.setValue(data.get('TermDate'));
                                            txtARODAmtRec.setValue(data.get('TotAmtRec'));
                                            txtARODDateRec.setValue(data.get('ApprDateMof'));
                                            txtARCRName.setValue(data.get('CRName'));
                                            txtARCRNo.setValue(data.get('CRNo'));
                                            txtARCRCommDate.setValue(data.get('CRCommDate'));
                                            txtARCRTermDate.setValue(data.get('CRTermDate'));
                                            txtARCRPan.setValue(data.get('Pan'));


                                            hdnGrdAgId.setValue(data.get('AgencyID'));
                                            console.log("hdnGrdAgId",hdnGrdAgId.getValue());
                                            hdnGrdCrDate.setValue(data.get('CreatedDate'));
                                            console.log("hdnGrdAgId",hdnGrdCrDate.getValue());
                                            hdnGrdStatus.setValue(data.get('Status'));
                                            console.log("hdnGrdAgId",hdnGrdStatus.getValue());

                                        }); 


                                        /*var grd = Ext.ComponentQuery.query('#grdAVAgencyList')[0];

                                        var txtARUsername = Ext.ComponentQuery.query('#txtARUsername')[0];
                                        var cboARAgencyType = Ext.ComponentQuery.query('#cboARAgencyType')[0];
                                        var txtARODName = Ext.ComponentQuery.query('#txtARODName')[0];
                                        var txtARODAdd = Ext.ComponentQuery.query('#txtARODAdd')[0];
                                        var txtARODLoan = Ext.ComponentQuery.query('#txtARODLoan')[0];
                                        var txtARODPurp = Ext.ComponentQuery.query('#txtARODPurp')[0];
                                        var txtARODAgDate = Ext.ComponentQuery.query('#txtARODAgDate')[0];
                                        var txtARODTermDate = Ext.ComponentQuery.query('#txtARODTermDate')[0];
                                        var txtARODAmtRec = Ext.ComponentQuery.query('#txtARODAmtRec')[0];
                                        var txtARODDateRec = Ext.ComponentQuery.query('#txtARODDateRec')[0];
                                        var txtARCRName = Ext.ComponentQuery.query('#txtARCRName')[0];
                                        var txtARCRNo = Ext.ComponentQuery.query('#txtARCRNo')[0];
                                        var txtARCRCommDate = Ext.ComponentQuery.query('#txtARCRCommDate')[0];
                                        var txtARCRTermDate = Ext.ComponentQuery.query('#txtARCRTermDate')[0];
                                        var txtARCRPan = Ext.ComponentQuery.query('#txtARCRPan')[0];
                                        var btnARSubmit = Ext.ComponentQuery.query('#btnARSubmit')[0];
                                        var hdnGrdAgId =Ext.ComponentQuery.query('#hdnGrdAgId')[0];
                                        var hdnGrdCrDate = Ext.ComponentQuery.query('#hdnGrdCrDate')[0];
                                        var hdnGrdStatus = Ext.ComponentQuery.query('#hdnGrdStatus')[0];

                                        var str = Ext.getStore('AgencyType');
                                        var len = str.count();

                                        btnARSubmit.setText('Update');

                                        var data = grd.getStore('AgencyList').getAt(rowIndex);

                                        //var agencyID = data.get('AgencyID');
                                        //console.log("handler agID",agencyID);

                                        txtARUsername.setValue(data.get('CreatedBy'));

                                        for(var i=0;i<len;i++)
                                        {
                                            var atData = str.getAt(i);
                                            console.log("atData",atData);
                                            if(data.get('AgencyType')==atData.get('type'))
                                            {
                                                console.log("",atData.get('sn'));
                                                //cboARAgencyType.setValue(data.get('AgencyType'));
                                                cboARAgencyType.setValue(atData.get('sn'));
                                            }
                                        }

                                        txtARODName.setValue(data.get('AgencyName'));
                                        txtARODAdd.setValue(data.get('AgencyAdd'));
                                        txtARODLoan.setValue(data.get('AIDLoanNo'));
                                        txtARODPurp.setValue(data.get('PurpAIDLoan'));

                                        txtARODAgDate.setValue(data.get('AgreeDate'));
                                        txtARODTermDate.setValue(data.get('TermDate'));
                                        txtARODAmtRec.setValue(data.get('TotAmtRec'));
                                        txtARODDateRec.setValue(data.get('ApprDateMof'));
                                        txtARCRName.setValue(data.get('CRName'));
                                        txtARCRNo.setValue(data.get('CRNo'));
                                        txtARCRCommDate.setValue(data.get('CRCommDate'));
                                        txtARCRTermDate.setValue(data.get('CRTermDate'));
                                        txtARCRPan.setValue(data.get('Pan'));
                                        */


                                        //var me = this;
                                        //me.getController('MyApp.controller.AgencyWindow').AgencyNo(agencyID);


                                        //var editDate = new Date(data.get('SolvedDate'));
                                        //txtSolvedDate.setValue(editDate);






                                    },
                                    altText: 'Edit',
                                    icon: '../ITS/resources/images/icons/pencil.png',
                                    tooltip: 'Edit'
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});