/*
 * File: app/view/ModuleVerification.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.ModuleVerification', {
    extend: 'Ext.panel.Panel',

    frame: true,
    itemId: 'pnlModuleVerification',
    autoScroll: true,
    title: 'Module Verification',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'container',
                    itemId: 'cntTopMV',
                    items: [
                        {
                            xtype: 'container',
                            itemId: 'cntUnverifiedModuleMV',
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    height: 250,
                                    itemId: 'moduleVerifcation_grdMVUnV',
                                    width: 673,
                                    title: 'Modules ',
                                    columnLines: true,
                                    store: 'UnverifiedModule',
                                    viewConfig: {
                                        loadMask: false
                                    },
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            width: 150,
                                            dataIndex: 'ApplicationID',
                                            text: 'Application'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'ModuleID',
                                            text: 'ModuleID'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 300,
                                            dataIndex: 'Module',
                                            text: 'Module'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'VMFromDate',
                                            text: 'VMFromDate'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'UserID',
                                            text: 'User'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'VerifyLevel',
                                            text: 'VerifyLevel'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            itemId: 'LevelOfVerification',
                                            width: 120,
                                            dataIndex: 'LevelOfVerification',
                                            text: 'Level Of Verification'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'FromDate',
                                            text: 'FromDate'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'Action',
                                            text: 'Action'
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'container',
                    itemId: 'cntBottomMV',
                    margin: '20 0 0 0',
                    items: [
                        {
                            xtype: 'container',
                            itemId: 'cntUnverifiedTransactionMV',
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    height: 250,
                                    itemId: 'moduleVerification_grdUnVTrans',
                                    width: 880,
                                    title: ' Transactions',
                                    columnLines: true,
                                    store: 'UnverifiedTransaction',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'TranNo',
                                            text: 'Transaction No'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            itemId: 'PreviousStatus',
                                            dataIndex: 'PreviousStatus',
                                            text: 'Previous Status'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 300,
                                            dataIndex: 'TranReferences',
                                            text: 'References'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 270,
                                            dataIndex: 'Remarks',
                                            text: 'Remarks',
                                            editor: {
                                                xtype: 'textareafield',
                                                height: 20,
                                                itemId: 'mv_remarks',
                                                cols: 8
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'Action',
                                            text: 'Action'
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            itemId: 'btnPreViewMV',
                                            width: 50,
                                            align: 'center',
                                            dataIndex: 'PreView',
                                            items: [
                                                {
                                                    handler: function(view, rowIndex, colIndex, item, e) {
                                                        //////////////grdModule goes here

                                                        var grdModule=Ext.ComponentQuery.query('#moduleVerifcation_grdMVUnV')[0];
                                                        var selectionM=grdModule.getSelectionModel().getSelection()[0];
                                                        if(!selectionM)
                                                        {
                                                            msg("WARNING","Select Module");
                                                            return;
                                                        }

                                                        var selectedIndx= grdModule.getStore().indexOf(selectionM);

                                                        var umStore = grdModule.getStore();

                                                        var moduleName=umStore.getAt(selectedIndx).data.Module;
                                                        //alert(moduleName);
                                                        var mName=moduleName.split('(')[0];


                                                        ///////////grdTran goes here

                                                        var grdTran=Ext.ComponentQuery.query('#moduleVerification_grdUnVTrans')[0];
                                                        var selectionT=grdTran.getSelectionModel().getSelection()[0];
                                                        if(!selectionT)
                                                        {
                                                            msg("WARNING","Select Transaction");
                                                            return;
                                                        }
                                                        var selectedIndxT= grdTran.getStore().indexOf(selectionT);

                                                        var utStore =grdTran.getStore();
                                                        var tranNo=utStore.getAt(selectedIndxT).data.TranNo;
                                                        //alert(tranNo);

                                                        uiConfig = {menuLink:mName,pageTitle:mName};
                                                        //DynamicUI(uiConfig,null,{tranNo:tranNo,indexM:selectedIndx,indexT:selectedIndxT,from:"MV"});
                                                        var params={tranNo:tranNo,from:"MV"};
                                                        //Ext.getCmp("PopupWindow").close();

                                                        dynamicPopUp(mName,{params:params});
                                                    },
                                                    icon: '../ITS/resources/images/icons/eye.png',
                                                    tooltip: 'PreView'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            itemId: 'btnVerifyMV',
                                            width: 50,
                                            align: 'center',
                                            dataIndex: 'Verify',
                                            items: [
                                                {
                                                    handler: function(view, rowIndex, colIndex, item, e) {
                                                        var me =this;
                                                        //////////////grdModule goes here

                                                        var grdModule=Ext.ComponentQuery.query('#moduleVerifcation_grdMVUnV')[0];
                                                        var selectionM=grdModule.getSelectionModel().getSelection()[0];
                                                        var selectedIndx= grdModule.getStore().indexOf(selectionM);
                                                        var umStore = grdModule.getStore();

                                                        ///////////grdTran goes here

                                                        var grdTran=Ext.ComponentQuery.query('#moduleVerification_grdUnVTrans')[0];
                                                        var selectionT=grdTran.getSelectionModel().getSelection()[0];
                                                        var selectedIndxT= grdTran.getStore().indexOf(selectionT);
                                                        var utStore =grdTran.getStore();

                                                        if(!selectionT)
                                                        {
                                                            msg("WARNING",'Select Transaction');
                                                            return;
                                                        }

                                                        var appID=umStore.getAt(selectedIndx).data.ApplicationID;
                                                        var moduleID=umStore.getAt(selectedIndx).data.ModuleID;
                                                        var vmFromDate=umStore.getAt(selectedIndx).data.VMFromDate;
                                                        var userID=umStore.getAt(selectedIndx).data.UserID;
                                                        var verifyLevel=umStore.getAt(selectedIndx).data.VerifyLevel;
                                                        var fromDate=umStore.getAt(selectedIndx).data.FromDate;
                                                        var levelOfVerification=umStore.getAt(selectedIndx).data.LevelOfVerification;

                                                        var tranNo=utStore.getAt(selectedIndxT).data.TranNo;
                                                        var vStatus="V";
                                                        var vRemarks=utStore.getAt(selectedIndxT).data.Remarks;
                                                        var vDate="";
                                                        var prevStatus=utStore.getAt(selectedIndxT).data.PreviousStatus;

                                                        var forwardTo="";

                                                        var UTV={'ApplicationID':appID,'ModuleID':moduleID,'FromDate':vmFromDate,'UserID':userID,'VerifyLevel':verifyLevel,'UFromDate':fromDate,'NoOfLevelReq':levelOfVerification,'TranNo':tranNo,'PrevStatus':prevStatus,'VerifyStatus':vStatus,'VerifyRemarks':vRemarks,'ForwardTo':forwardTo,'VerifyDate':vDate};

                                                        //console.log('UTV',UTV);
                                                        var waitSave = waitMsg("Verifying.........");
                                                        Ext.Ajax.timeout = 450000;
                                                        Ext.Ajax.request({
                                                            method: 'POST',
                                                            url: '../Handlers/Verification/UserTranVerificationHandler.ashx',
                                                            params: {method:'SaveUserTranVerifications', userTranVerification : JSON.stringify(UTV) },
                                                            success: function( result, request ){

                                                                var jsonMsg = Ext.decode(result.responseText);
                                                                //waitSave.hide();

                                                                if(vStatus === "V")
                                                                {
                                                                    grdModule.getStore().load();
                                                                    grdModule.getSelectionModel().deselectAll();
                                                                    grdTran.getStore().removeAll();
                                                                    msg("INFO",'This Transactions No. have been Verified Successfully !');
                                                                    return;
                                                                }
                                                                else
                                                                {
                                                                    msg(jsonMsg.success=="True"?"SUCCESS":"FAILURE",jsonMsg.message);
                                                                }
                                                            },
                                                            failure: function ( result, request ) {

                                                                waitSave.hide();

                                                                var obj = Ext.decode(result.responseText);

                                                                msg("FAILURE",obj.message);
                                                                return;
                                                            }
                                                        });

                                                        /*grdModule.getStore().load();
                                                        grdModule.getSelectionModel().deselectAll();
                                                        grdTran.getStore().removeAll();*/
                                                        /*
                                                        var indxM = grdModule.getStore().getAt(selectedIndx);
                                                        grdModule.getSelectionModel().select(indxM);
                                                        grdTran.getSelectionModel().deselectAll();*/
                                                    },
                                                    altText: 'Verify',
                                                    icon: '../ITS/resources/images/icons/ok.png',
                                                    tooltip: 'Verify'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            itemId: 'btnRejectMV',
                                            width: 50,
                                            align: 'center',
                                            dataIndex: 'Reject',
                                            items: [
                                                {
                                                    handler: function(view, rowIndex, colIndex, item, e) {
                                                        var me =this;
                                                        //////////////grdModule goes here

                                                        var grdModule=Ext.ComponentQuery.query('#moduleVerifcation_grdMVUnV')[0];
                                                        var selectionM=grdModule.getSelectionModel().getSelection()[0];
                                                        var selectedIndx= grdModule.getStore().indexOf(selectionM);
                                                        var umStore = grdModule.getStore();

                                                        ///////////grdTran goes here

                                                        var grdTran=Ext.ComponentQuery.query('#moduleVerification_grdUnVTrans')[0];
                                                        var selectionT=grdTran.getSelectionModel().getSelection()[0];
                                                        var selectedIndxT= grdTran.getStore().indexOf(selectionT);
                                                        var utStore =grdTran.getStore();

                                                        if(!selectionT)
                                                        {
                                                            msg("WARNING",'Select Transaction');
                                                            return;
                                                        }

                                                        var appID=umStore.getAt(selectedIndx).data.ApplicationID;
                                                        var moduleID=umStore.getAt(selectedIndx).data.ModuleID;
                                                        var vmFromDate=umStore.getAt(selectedIndx).data.VMFromDate;
                                                        var userID=umStore.getAt(selectedIndx).data.UserID;
                                                        var verifyLevel=umStore.getAt(selectedIndx).data.VerifyLevel;
                                                        var fromDate=umStore.getAt(selectedIndx).data.FromDate;
                                                        var levelOfVerification=umStore.getAt(selectedIndx).data.LevelOfVerification;

                                                        var tranNo=utStore.getAt(selectedIndxT).data.TranNo;
                                                        var vStatus="R";
                                                        var vRemarks=utStore.getAt(selectedIndxT).data.Remarks;
                                                        var vDate="";
                                                        var prevStatus=utStore.getAt(selectedIndxT).data.PreviousStatus;

                                                        var forwardTo="";

                                                        var UTV={'ApplicationID':appID,'ModuleID':moduleID,'FromDate':vmFromDate,'UserID':userID,'VerifyLevel':verifyLevel,'UFromDate':fromDate,'NoOfLevelReq':levelOfVerification,'TranNo':tranNo,'PrevStatus':prevStatus,'VerifyStatus':vStatus,'VerifyRemarks':vRemarks,'ForwardTo':forwardTo,'VerifyDate':vDate};

                                                        //console.log('UTV',UTV);

                                                        Ext.Ajax.request({
                                                            method: 'POST',
                                                            url: '../Handlers/Verification/UserTranVerificationHandler.ashx',
                                                            params: {method:'SaveUserTranVerifications', userTranVerification : JSON.stringify(UTV) },
                                                            success: function( result, request ){

                                                                var jsonMsg=Ext.decode(result.responseText);

                                                                if(vStatus === "R")
                                                                {
                                                                    msg("INFO",'This Transactions No. have been Rejected Successfully !');
                                                                    return;
                                                                }
                                                                else
                                                                {
                                                                    msg(jsonMsg.success=="True"?"SUCCESS":"FAILURE",jsonMsg.message);
                                                                }
                                                            }
                                                        });

                                                        grdModule.getStore().load();
                                                        grdModule.getSelectionModel().deselectAll();
                                                        grdTran.getStore().removeAll();

                                                        /*
                                                        var indxM = grdModule.getStore().getAt(selectedIndx);
                                                        grdModule.getSelectionModel().select(indxM);
                                                        grdTran.getSelectionModel().deselectAll();
                                                        */

                                                    },
                                                    icon: '../ITS/resources/images/icons/no.png',
                                                    tooltip: 'Reject'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            itemId: 'btnForwardMV',
                                            width: 50,
                                            align: 'center',
                                            dataIndex: 'Forward',
                                            items: [
                                                {
                                                    handler: function(view, rowIndex, colIndex, item, e) {
                                                        var grdTran=Ext.ComponentQuery.query('#moduleVerification_grdUnVTrans')[0];
                                                        var selectionT=grdTran.getSelectionModel().getSelection()[0];
                                                        if(!selectionT)
                                                        {
                                                            msg("WARNING",'Select Transaction');
                                                            return;
                                                        }

                                                        var winUser = Ext.create('MyApp.view.MVPopUpUsers');
                                                        winUser.show();

                                                    },
                                                    icon: '../ITS/resources/images/icons/forward.png',
                                                    tooltip: 'Forward'
                                                }
                                            ]
                                        }
                                    ],
                                    plugins: [
                                        Ext.create('Ext.grid.plugin.RowEditing', {
                                            pluginId: 'rowEditing'
                                        })
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});