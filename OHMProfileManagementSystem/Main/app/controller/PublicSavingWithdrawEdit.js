/*
 * File: app/controller/PublicSavingWithdrawEdit.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.PublicSavingWithdrawEdit', {
    extend: 'Ext.app.Controller',

    stores: [
        'OfficeMapStore',
        'ProductTypeStore',
        'ContraAccountStore',
        'ChargeTypeStore',
        'ChargeSourceStore',
        'SavingAccountNumberSearchStore'
    ],

    onFrmPublicSavingWithdrawAfterRender: function(component, eOpts) {
        Ext.ComponentQuery.query("#txtWithdrawDateBS")[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query("#txtWithdrawDateAD")[0].setValue(getMisDateAD());
        Ext.ComponentQuery.query("#txtWithdrawDateFromBSSearch")[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query("#txtWithdrawDateToBSSearch")[0].setValue(getMisDateBS());



        var userCode =getCurrentUser();
        var officeName='';
        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/Office/OfficeHandler.ashx',
            params: {
                method:'GetOfficeList',
                userCode:userCode,officeName:officeName
            },
            success: function(response){
                var data=Ext.decode(response.responseText);
                var officeMapStore=Ext.getStore('OfficeMapStore');
                officeMapStore.removeAll();
                officeMapStore.add(data.root);
            }
        });

        var productName='';
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/EditTransaction/PubSavingProductHandler.ashx',
            params: {
                method:'GetPubSavingProd',
                ProductName:productName
            },
            success: function(response){
                var data=Ext.decode(response.responseText);
                var productTypeStore=Ext.getStore('ProductTypeStore');
                productTypeStore.removeAll();
                productTypeStore.add(data.root);
            }
        });


         Ext.Ajax.request({
             url: '../Handlers/Finance/Maintenance/AccountHeadEntryHandler.ashx',
             params: {
                 method:'GetContraAccount',
                 offCode:getOfficeCode()
             },
             success: function(response){
                 var data=Ext.decode(response.responseText);
                 var contraAccountStore =Ext.getStore('ContraAccountStore');
                 contraAccountStore.removeAll();
                 contraAccountStore.add(data.root);
             }
         });

        var chargeTypeStore=Ext.getStore('ChargeTypeStore');
        chargeTypeStore.removeAll();
        getReferences('CHARGE_TYPE',function(data){
            chargeTypeStore.add(data.root);
        });


        var chargeSourceStore=Ext.getStore('ChargeSourceStore');
        chargeSourceStore.removeAll();
        getReferences('CHARGE_SOURCE_ABBS',function(data){
            chargeSourceStore.add(data.root);
        });

        var officeCode='';
        var savingAccountNo='';

        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/EditTransaction/PubSavingAccountSearchHandler.ashx',
            params: {
                method:'GetPubSavAccSearch',
                OfficeCode:getOfficeCode(),SavingAccountNo:savingAccountNo
            },
            success: function(response){
                var data=Ext.decode(response.responseText);
                var savingAccountNumberSearchStore=Ext.getStore('SavingAccountNumberSearchStore');
                savingAccountNumberSearchStore.removeAll();
                savingAccountNumberSearchStore.add(data.root);
            }
        });






    },

    onBtnGoToSavingDepositClick: function(button, e, eOpts) {
        var accountNo=Ext.ComponentQuery.query("#ddlSavingAccountNo")[0].getValue();
        var withdrawDate=Ext.ComponentQuery.query("#txtWithdrawDateBS")[0].getValue();
        var withdrawAmount=Ext.ComponentQuery.query("#txtWithdrawAmt")[0].getValue();
        var chequeNo=Ext.ComponentQuery.query("#txtChequeNo")[0].getValue();
        var payeeName=Ext.ComponentQuery.query("#txtPayeeName")[0].getValue();
        var contraAccount=Ext.ComponentQuery.query("#ddlContraAccount")[0].getValue();
        //var remarks=Ext.ComponentQuery.query("#txtChargeAmount")[0].getValue();
        var voucherNo=Ext.ComponentQuery.query("#txtVoucherNo")[0].getValue();
        var withdrawType=Ext.ComponentQuery.query("#ddlChargeType")[0].getValue();
        //var empId=Ext.ComponentQuery.query("#txtGraceDays")[0].getValue();
        var remarks=Ext.ComponentQuery.query("#txtRemarks")[0].getValue();
        var maxWithdrawAmount=Ext.ComponentQuery.query("#txtWithdrawAmt")[0].getValue();
        var tranOfficeCode=Ext.ComponentQuery.query("#ddlOfficeCode")[0].getValue();
        var acOfficeCode=Ext.ComponentQuery.query("#ddlAOfficeCOde")[0].getValue();
        var valueDate=Ext.ComponentQuery.query("#txtValueDateBS")[0].getValue();
        var chargeAmount=Ext.ComponentQuery.query("#txtChargeAmount")[0].getValue();
        var chargeType=Ext.ComponentQuery.query("#ddlChargeType")[0].getValue();
        var chargeSource=Ext.ComponentQuery.query("#ddlChargeSource")[0].getValue();
        var user=Ext.ComponentQuery.query("#ddlChargeSource")[0].getValue();
        var action='A';



                var objPublicWithdrawEdit={
                                         AccountNo:accountNo,
                                         WithdrawDate:withdrawDate,
                                         WithdrawAmount:withdrawAmount,
                                         ChequeNo :chequeNo,
                                         PayeeName:payeeName,
                                         ContraAccount:contraAccount,
                                         Remarks:remarks,
                                         VoucherNo:voucherNo,
                                         WithdrawType:withdrawType,
                                         MaxWithdrawAmount:maxWithdrawAmount,
                                         TranOfficeCode:tranOfficeCode,
                                         AcOfficeCode:acOfficeCode,
                                         ValueDate:valueDate,
                                         ChargeAmount:chargeAmount,
                                         ChargeType:chargeType,
                                         ChargeSource:chargeSource,
                                         User1:user,
                                         Action:action


                };



                                var wMsg='';
                                var waitSave = watiMsg(wMsg);

                                Ext.Ajax.request({
                                            url: '../Handlers/Finance/Transaction/EditTransaction/PublicSavingWithdrawHandler.ashx',
                                            params: {
                                                method:'SavePublicSavingWithdraw',
                                                publicSavingWithdraw:JSON.stringify(objPublicWithdrawEdit)
                                            },
                                            success: function(response){
                                            waitSave.hide();
                                            var out=Ext.decode(response.responseText);
                                            console.log(out);

                                            if(out.success==="true")
                                                {
                                                    var message=out.root;
                                                    if(message.OutResultCode==="SUCCESS")
                                                        {
                                                            msg("SUCCESS",message.OutResultMessage,function(){

                                                            });



                                                        }
                                                    else
                                                        {
                                                          msg("FAILURE",message.OutResultMessage);
                                                        }
                                                }
                                                else
                                                    {
                                                        msg("FAILURE",out.message);
                                                    }
                                            },
                                            failure: function ( result, request ) {
                                                waitSave.hide();
                                                var out=Ext.decode(response.responseText);
                                                msg("FAILURE",out.message);
                                            }

                                        });




    },

    onBtnSearchClick: function(button, e, eOpts) {
        var offCode=Ext.ComponentQuery.query("#ddlOfficeCode")[0].getValue();
        //var withdrawalNo=Ext.ComponentQuery.query("#txtMaturityDate")[0].getValue();
        var savingAccountNo=Ext.ComponentQuery.query("#ddlSavingProduct")[0].getValue();
        //var clientName=Ext.ComponentQuery.query("#ddlLoanNoo")[0].getValue();
        var fromDate=Ext.ComponentQuery.query("#txtWithdrawDateBS")[0].getValue();
        var toDate=Ext.ComponentQuery.query("#txtWithdrawDateAD")[0].getValue();


        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/EditTransaction/PublicSavingWithdrawDetailHandler.ashx',
            params: {
                method:'GetPubSavWithDetail',
                OfficeCode:offCode,
                WithdrawalNo:withdrawalNo,
                SavingAccountNo:savingAccountNo,ClientName:clientName,FromDate:fromDate,ToDate:toDate
                                    },
            success: function(response){
                var data=Ext.decode(response.responseText);
                //var loanSectorStore=Ext.getStore('LoanSectorStore');
                //loanSectorStore.removeAll();
                //loanSectorStore.add(data.root);
            }
        });

    },

    init: function(application) {
        this.control({
            "#frmPublicSavingWithdraw": {
                afterrender: this.onFrmPublicSavingWithdrawAfterRender
            },
            "#btnGoToSavingDeposit": {
                click: this.onBtnGoToSavingDepositClick
            },
            "#btnSearch": {
                click: this.onBtnSearchClick
            }
        });
    }

});
