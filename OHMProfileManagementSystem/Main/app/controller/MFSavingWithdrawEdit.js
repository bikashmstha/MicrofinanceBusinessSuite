/*
 * File: app/controller/MFSavingWithdrawEdit.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.MFSavingWithdrawEdit', {
    extend: 'Ext.app.Controller',

    stores: [
        'SavingProductMFSavingStore',
        'CenterCodeStore',
        'SavingAccountNumberSearchStore',
        'EmployeeSearchShortStore',
        'ContraAccountStore',
        'MFSavingAccountNumberSearchStore'
    ],

    onFrmALlMfSavingAccountAfterRender: function(component, eOpts) {
        Ext.ComponentQuery.query("#txtWithdrawDateBS")[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query("#txtWithdrawDateAD")[0].setValue(getMisDateAD());
        Ext.ComponentQuery.query("#txtWithdrawDateBS")[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query("#txtWithdrawDateAD")[0].setValue(getMisDateAD());

        var productName='';
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/SavingTransaction/ProductForWithdrawlHandler.ashx',
            params: {
                method:'GetProductForWithDrawl',
                ProductName:productName
            },
            success: function(response){
                var data=Ext.decode(response.responseText);
                var savingProductMFSavingStore=Ext.getStore('SavingProductMFSavingStore');
                savingProductMFSavingStore.removeAll();
                savingProductMFSavingStore.add(data.root);
            }
        });


        var officeCode='';
        var centerName='';
        Ext.Ajax.request({
            url: '../Handlers/Finance/Maintenance/CenterHandler.ashx',
            params: {
                method:'GetCenterListLov',
                offCode:getOfficeCode(),CenterName:centerName
            },
            success: function(response){
                var data=Ext.decode(response.responseText);
                var CenterCodeStore=Ext.getStore('CenterCodeStore');
                CenterCodeStore.removeAll();
                CenterCodeStore.add(data.root);
            }
        });



        var officeCode='';
        var productCode='';
        var savingAccountNo='';

        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/EditTransaction/AdjustmentaccountforwithdrawHandler.ashx',
            params: {
                method:'GetAdjAccForWithdraw',
                OfficeCode:getOfficeCode(),ProductCode:productCode,SavingAccountNo:savingAccountNo
            },
            success: function(response){
                var data=Ext.decode(response.responseText);
                var savingAccountNumberSearchStore=Ext.getStore('SavingAccountNumberSearchStore');
                savingAccountNumberSearchStore.removeAll();
                savingAccountNumberSearchStore.add(data.root);
            }
        });


         var offCode ='';
        var empName='';
        Ext.Ajax.request({
            url: '../Handlers/Supervisor/EmployeeHandler.ashx',
            params: {
                method:'GetFieldAssistants',
                officeCode:getOfficeCode(),empName:empName
            },
            success: function(response){
            var data=Ext.decode(response.responseText);
                var employeeSearchShortStore=Ext.getStore('EmployeeSearchShortStore');
                employeeSearchShortStore.removeAll();
                employeeSearchShortStore.add(data.root);
            }
        });

        Ext.Ajax.request({
            url: '../Handlers/Finance/Maintenance/AccountHeadEntryHandler.ashx',
            params: {
                method:'GetContraAccount',
                offCode:getOfficeCode()
            },
            success: function(response){
                var data=Ext.decode(response.responseText);
                var contraAccountStore =Ext.getStore('ContraAccountStore');
                contraAccountStore.removeAll();
                contraAccountStore.add(data.root);
            }
        });

        var memberName='';

        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/SavingTransaction/ClientSavingAccountHandler.ashx',
            params: {
                method:'GetMemberAccountOpen',
                offCode:getOfficeCode(),memberName:memberName
            },
            success: function(response){
                var data=Ext.decode(response.responseText);
                var mfSavingAccountNumberSearchStore=Ext.getStore('MFSavingAccountNumberSearchStore');
                mfSavingAccountNumberSearchStore.removeAll();
                mfSavingAccountNumberSearchStore.add(data.root);
            }
        });













    },

    onBtnSearchClick: function(button, e, eOpts) {
        var offCode = '';
        var withdrawlNo = '';
        var savingAccountNo='';
        var clientName='';
        var fromDate='';
        var toDate='';
                Ext.Ajax.request({
                    url: '../Handlers/Finance/Transaction/SavingTransaction/MfWithdrawlDetailHandler.ashx',
                            params: {
                                method:'GetMfWithdrawDetail',
                                offCode:getOfficeCode(),withdrawlNo:withdrawlNo,savingAccountNo:savingAccountNo,clientName:clientName,fromDate:fromDate,toDate:toDate
                            },
                            success: function(response){
                                var data=Ext.decode(response.responseText);
                               // var mfSavingDepositSearchStore=Ext.getStore('MFSavingDepositSearchStore');
                                //mfSavingDepositSearchStore.removeAll();
                                //mfSavingDepositSearchStore.add(data.root);
                            }
                        });


    },

    onBtnWithdrawClick: function(button, e, eOpts) {
        var accountNo=Ext.ComponentQuery.query("#txtSavingAccountNo")[0].getValue();
        var withdrawDate=Ext.ComponentQuery.query("#txtWithdrawDateBS")[0].getValue();
        var withdrawAmount=Ext.ComponentQuery.query("#txtCurrentBalance")[0].getValue();
        var chequeNo=Ext.ComponentQuery.query("#txtChequeNo")[0].getValue();
        var payeeName=Ext.ComponentQuery.query("#txtPayeeName")[0].getValue();
        var contraAccount=Ext.ComponentQuery.query("#ddlContraAccount")[0].getValue();
        //var remarks=Ext.ComponentQuery.query("#txtEmployeeId")[0].getValue();
        //var voucherNo=Ext.ComponentQuery.query("#txtRemarks")[0].getValue();
        //var withdrawType=Ext.ComponentQuery.query("#txtLoanPeriod")[0].getValue();
        var maxWithdrawAmount=Ext.ComponentQuery.query("#txtWithdrawAmtLimit")[0].getValue();
        //var tranOfficeCode=Ext.ComponentQuery.query("#txtGraceDays")[0].getValue();

                        var objsavingWithdraw={
                                                 AccountNo:accountNo,
                                                 WithdrawDate:withdrawDate,
                                                 WithdrawAmount:withdrawAmount,
                                                 ChequeNo :chequeNo,
                                                 PayeeName:payeeName,
                                                 ContraAccount:contraAccount,
                                                 Remarks:remarks,
                                                 VoucherNo:voucherNo,
                                                 WithdrawType:withdrawType,
                                                 TranOfficeCode:tranOfficeCode,
                                                 CreatedBy:'',
                                                 FiscalYear:'',
                                                 WithdrawalNo:''
                                               };



                                        var wMsg='';
                                        var waitSave = watiMsg(wMsg);

                                        Ext.Ajax.request({
                                                    url: '../Handlers/Finance/Transaction/SavingTransaction/MfSavingWithdrawHandler.ashx',
                                                    params: {
                                                        method:'Save',
                                                        savingWithdraw:JSON.stringify(objsavingWithdraw)
                                                    },
                                                    success: function(response){
                                                    waitSave.hide();
                                                    var out=Ext.decode(response.responseText);
                                                    console.log(out);

                                                    if(out.success==="true")
                                                        {
                                                            var message=out.root;
                                                            if(message.OutResultCode==="SUCCESS")
                                                                {
                                                                    msg("SUCCESS",message.OutResultMessage,function(){

                                                                    });



                                                                }
                                                            else
                                                                {
                                                                  msg("FAILURE",message.OutResultMessage);
                                                                }
                                                        }
                                                        else
                                                            {
                                                                msg("FAILURE",out.message);
                                                            }
                                                    },
                                                    failure: function ( result, request ) {
                                                        waitSave.hide();
                                                        var out=Ext.decode(response.responseText);
                                                        msg("FAILURE",out.message);
                                                    }

                                                });

    },

    init: function(application) {
        this.control({
            "#frmALlMfSavingAccount": {
                afterrender: this.onFrmALlMfSavingAccountAfterRender
            },
            "#btnSearch": {
                click: this.onBtnSearchClick
            },
            "#btnWithdraw": {
                click: this.onBtnWithdrawClick
            }
        });
    }

});
