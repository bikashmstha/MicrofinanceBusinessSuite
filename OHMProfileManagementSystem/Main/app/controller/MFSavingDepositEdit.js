/*
 * File: app/controller/MFSavingDepositEdit.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.MFSavingDepositEdit', {
    extend: 'Ext.app.Controller',

    stores: [
        'SavingProductMFSavingStore',
        'CenterCodeStore',
        'ContraAccountStore',
        'MandatoryTypeStore',
        'EmployeeSearchShortStore',
        'MFSavingDepositSearchStore'
    ],

    onFrmAllMfSavingAccountAfterRender: function(component, eOpts) {
        Ext.ComponentQuery.query("#txtDepositDateBS")[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query("#txtDepositDateAD")[0].setValue(getMisDateAD());
        Ext.ComponentQuery.query("#txtDepositDateBSSearch")[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query("#txtDepositDateADSearch")[0].setValue(getMisDateAD());

        var mFSavingDepositSearchStore=Ext.getStore('MFSavingDepositSearchStore');
        mFSavingDepositSearchStore.removeAll();

        var productName ='';
                Ext.Ajax.request({
                    url: '../Handlers/Finance/Transaction/SavingTransaction/ProductForDepositHandler.ashx',
                    params: {
                        method:'GetProductForDeposit',
                        ProductName:productName
                    },
                    success: function(response){

                        var data=Ext.decode(response.responseText);
                        var savingProductMFSavingStore=Ext.getStore('SavingProductMFSavingStore');
                        savingProductMFSavingStore.removeAll();
                        savingProductMFSavingStore.add(data.root);
                    }
                });

        var offCode ='';
                var centerName='';
                Ext.Ajax.request({
                    url: '../Handlers/Finance/Maintenance/CenterHandler.ashx',
                    params: {
                        method:'GetCenterList',
                        offCode:getOfficeCode(),centerName:centerName
                    },
                    success: function(response){

                        var data=Ext.decode(response.responseText);
                        var centerCodeStore=Ext.getStore('CenterCodeStore');
                        centerCodeStore.removeAll();
                        centerCodeStore.add(data.root);
                    }
                });


          Ext.Ajax.request({
                    url: '../Handlers/Finance/Maintenance/AccountHeadEntryHandler.ashx',
                    params: {
                        method:'GetContraAccount',
                        offCode:getOfficeCode()
                    },
                    success: function(response){
                        var data=Ext.decode(response.responseText);
                        var contraAccountStore =Ext.getStore('ContraAccountStore');
                        contraAccountStore.removeAll();
                        contraAccountStore.add(data.root);
                    }
                });


        var mandatoryTypeStore=Ext.getStore('MandatoryTypeStore');
                        mandatoryTypeStore.removeAll();

                        getReferences('MANDATORY_SAVING_TYPE',function(data){

                            mandatoryTypeStore.add(data.root);
                        });


        var offCode ='';
                        var empName='';
                        Ext.Ajax.request({
                            url: '../Handlers/Supervisor/EmployeeHandler.ashx',
                            params: {
                                method:'GetFieldAssistants',
                                officeCode:getOfficeCode(),empName:empName
                            },
                            success: function(response){

                                var data=Ext.decode(response.responseText);
                                var employeeSearchShortStore=Ext.getStore('EmployeeSearchShortStore');
                                employeeSearchShortStore.removeAll();
                                employeeSearchShortStore.add(data.root);
                            }
                        });








    },

    onBtnSearchClick: function(button, e, eOpts) {
        var offCode = '';
        var memberName = '';

        var waitSave = watiMsg('Loading Data. Please wait ...');

        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/SavingTransaction/ClientSavingAccountHandler.ashx',
                    params: {
                        method:'GetMemberAccountOpen',
                        offCode:getOfficeCode(),memberName:memberName
                    },
                    success: function(response){
                        var data=Ext.decode(response.responseText);
                        var mfSavingDepositSearchStore=Ext.getStore('MFSavingDepositSearchStore');
                        mfSavingDepositSearchStore.removeAll();
                        mfSavingDepositSearchStore.add(data.root);

                        waitSave.hide();
                    }
                });

    },

    onBtnDepositClick: function(button, e, eOpts) {
        var accountNo=Ext.ComponentQuery.query("#txtSavingAccountNo")[0].getValue();
        var depositDate=Ext.ComponentQuery.query("#txtDepositDateBS")[0].getValue();
        var depositAmount=Ext.ComponentQuery.query("#txtAmtReceived")[0].getValue();
        var contraAccount=Ext.ComponentQuery.query("#ddlContraAccount")[0].getValue();
        var mandatorySaving_Type=Ext.ComponentQuery.query("#ddlMandatorySaveType")[0].getValue();
        //var voucherNo=Ext.ComponentQuery.query("#txtAppLoanAmt")[0].getValue();
        var empId=Ext.ComponentQuery.query("#ddlEmployeeId")[0].getValue();
        var remarks=Ext.ComponentQuery.query("#txtRemarks")[0].getValue();
        var tranOffice_Code=getOfficeCode();
        var user1=getCurrentUser();
        var depositBy=Ext.ComponentQuery.query("#txtDepositorName")[0].getValue();

                var objmfSavingDepositEdit={
                                         AccountNo:accountNo,
                                         DepositDate:depositDate,
                                         DepositAmount:depositAmount,
                                         ContraAccount :contraAccount,
                                         MandatorySaving_Type:mandatorySaving_Type,
                                         VoucherNo:voucherNo,
                                         EmpId:empId,
                                         Remarks:remarks,
                                         TranOffice_Code:tranOffice_Code,
                                         User1:user1,
                                         DepositBy:depositBy
                                       };



                                var wMsg='';
                                var waitSave = watiMsg(wMsg);

                                Ext.Ajax.request({
                                            url: '../Handlers/Finance/Transaction/LoanTransaction/MfSavingDepositEditHandler.ashx',
                                            params: {
                                                method:'Save',
                                                loanAgainstSavingDisbursement:JSON.stringify(objmfSavingDepositEdit)
                                            },
                                            success: function(response){
                                            waitSave.hide();
                                            var out=Ext.decode(response.responseText);
                                            console.log(out);

                                            if(out.success==="true")
                                                {
                                                    var message=out.root;
                                                    if(message.OutResultCode==="SUCCESS")
                                                        {
                                                            msg("SUCCESS",message.OutResultMessage,function(){

                                                            });



                                                        }
                                                    else
                                                        {
                                                          msg("FAILURE",message.OutResultMessage);
                                                        }
                                                }
                                                else
                                                    {
                                                        msg("FAILURE",out.message);
                                                    }
                                            },
                                            failure: function ( result, request ) {
                                                waitSave.hide();
                                                var out=Ext.decode(response.responseText);
                                                msg("FAILURE",out.message);
                                            }

                                        });




    },

    init: function(application) {
        this.control({
            "#frmAllMfSavingAccount": {
                afterrender: this.onFrmAllMfSavingAccountAfterRender
            },
            "#btnSearch": {
                click: this.onBtnSearchClick
            },
            "#btnDeposit": {
                click: this.onBtnDepositClick
            }
        });
    }

});
