/*
 * File: app/controller/PersonRegistrationAU.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.PersonRegistrationAU', {
    extend: 'Ext.app.Controller',

    stores: [
        'Nationality',
        'DocType',
        'PerReg_TaxPayerProfession',
        'PerRegTaxPayerProfCat',
        'PerRegTaxPayerProfSubCat',
        'DistrictRegistration'
    ],

    onBtnProfessionClick: function(button, e, eOpts) {

        if(button.up('form').getForm().isValid())
        {
            Ext.getStore('professionStore').add({
                ProfessionText:Ext.ComponentQuery.query('#txtProfession')[0].getValue(),
                FromDate:Ext.decode(AppWakeUpJSON).root.NepaliDate,
                ProfessionID:Ext.getStore('professionStore').getCount()+1
            });

            Ext.ComponentQuery.query('#txtProfession')[0].setValue();
        }
    },

    onBtnUpload_EpanClick: function(button, e, eOpts) {
        //Ext.ComponentQuery.query('#imgPerson')[0].setSrc(Ext.ComponentQuery.query('#filePhoto')[0].getValue());


        /*

        Ext.getCmp('UploadControl').getForm().submit({
        clientValidation: true,
        url: '../PHOTOByteConverter.aspx',
        waitMsg: 'Please wait',
        success: function(form, action) {
        //alert(action.result.msg);
        Ext.getCmp('sespicid').setValue(action.result.msg);
    },
    failure: function(form, action) {
        alert(action.result.msg);
    }
    });

    */


    },

    onBtnSaveClick: function(button, e, eOpts) {
        var nepServerDate=document.getElementById('nepDate').innerHTML;

        var pan_no="";
        var request_no="";
        var office_code="";

        var businessTyp="";
        var busSubTyp="";
        var persRez=Ext.getCmp('PersonRegistrationAU');
        var me=this;

        ePara=persRez.extraParam;



        if(ePara)
        {   
            pan_no 		= ePara.pan_no; 
            request_no  = ePara.request_no;
            office_code = ePara.office_code;

            businessTyp = ePara.busTyp;   
            busSubTyp =   ePara.busSubTyp;
            regFor=       ePara.regFor;
        }

        if(Ext.getCmp('sespicid').getValue()===""){
            msg("WARNING","Please select profile picture before submit");
            return;
        }

        var profListStore=Ext.getStore('PerReg_TaxPayerProfession');
        profListStore.clearFilter();
        var profList=getJson(profListStore);
        profListStore.filter(function(item){
            return item.get("Action")!= 'D';
        }); 


        var DocTypeStore=Ext.getStore('DocType');
        DocTypeStore.each(function(record){

            record.set('Document',null);

        });

        var docList=getJson(DocTypeStore);

        var locationType="";
        if(Ext.ComponentQuery.query('#PerRegRerm_LocationType1')[0].checked)
        {
            locationType="VD";
        }
        else if(Ext.ComponentQuery.query('#PerRegRerm_LocationType2')[0].checked)
        {
            locationType="MN";
        }
        else if(Ext.ComponentQuery.query('#PerRegRerm_LocationType3')[0].checked)
        {
            locationType="MM";
        }
        else if(Ext.ComponentQuery.query('#PerRegRerm_LocationType4')[0].checked)
        {
            locationType="SM";
        }


        var cboPermanentDiscrict=Ext.ComponentQuery.query('#cboPermanentDiscrict')[0].getValue();
        var txtPermanentVdc=Ext.ComponentQuery.query('#txtPermanentVdc')[0].getValue();
        var txtPermanentTole=Ext.ComponentQuery.query('#txtPermanentTole')[0].getValue();
        var txtPermanentHouseNo=Ext.ComponentQuery.query('#txtPermanentHouseNo')[0].getValue();
        var txtPermanentWard=Ext.ComponentQuery.query('#txtPermanentWard')[0].getValue();

        var permAddrAtion=ePara.PermanentAddressSno?'E':'A';

        if( !(Number(cboPermanentDiscrict)||txtPermanentVdc || txtPermanentTole || txtPermanentHouseNo || txtPermanentWard))
        {
            permAddrAtion="D";
        }

        var Address =
        {   
            PAN 		  : pan_no,
            Request_No    : request_no,
            Office_Code   : office_code,

            AddressSNO    : ePara.PermanentAddressSno?ePara.PermanentAddressSno:0,
            From_Date     : nepServerDate,
            HouseNo       : Ext.ComponentQuery.query('#txtPermanentHouseNo')[0].getValue(),
            WardNo        : Ext.ComponentQuery.query('#txtPermanentWard')[0].getValue(),
            StreetName    : Ext.ComponentQuery.query('#txtPermanentTole')[0].getValue(),
            VdcTown       : Ext.ComponentQuery.query('#txtPermanentVdc')[0].getValue(),
            LocationType  : locationType,
            DistrictCode  : Ext.ComponentQuery.query('#cboPermanentDiscrict')[0].getValue(),
            AreaCode      : '00',//Ext.ComponentQuery.query('#txtPermanentArea')[0].getValue(),
            status        : '1',
            Action        : permAddrAtion,
            AddressType   : 'P'
        };

        var locationType1="";
        if(Ext.ComponentQuery.query('#PerRegTemp_LocationType1')[0].checked)
        {
            locationType1="VD";
        }
        else if(Ext.ComponentQuery.query('#PerRegTemp_LocationType2')[0].checked)
        {
            locationType1="MN";
        }
        else if(Ext.ComponentQuery.query('#PerRegTemp_LocationType3')[0].checked)
        {
            locationType1="MM";
        }
        else if(Ext.ComponentQuery.query('#PerRegTemp_LocationType4')[0].checked)
        {
            locationType1="SM";
        }

        var cboTemporaryDiscrict=Ext.ComponentQuery.query('#cboTemporaryDiscrict')[0].getValue();
        var txtTemporaryVdc=Ext.ComponentQuery.query('#txtTemporaryVdc')[0].getValue();
        var txtTemporaryTole=Ext.ComponentQuery.query('#txtTemporaryTole')[0].getValue();
        var txtTemporaryHouseNo=Ext.ComponentQuery.query('#txtTemporaryHouseNo')[0].getValue();
        var txtTemporaryWard=Ext.ComponentQuery.query('#txtTemporaryWard')[0].getValue();

        var tempAddrAtion=ePara.TemporaryAddressSno?'E':'A';

        if( !(Number(cboTemporaryDiscrict)||txtTemporaryVdc || txtTemporaryTole || txtTemporaryHouseNo || txtTemporaryWard))
        {
            tempAddrAtion="D";
        }


        var IndividualAddress =
        {

            PAN 		  : pan_no,
            Request_No    : request_no,
            Office_Code   : office_code,    


            AddressSNO    : ePara.TemporaryAddressSno?ePara.TemporaryAddressSno:0,

            From_Date     : nepServerDate,
            HouseNo       : txtTemporaryHouseNo,
            WardNo        : txtTemporaryWard,
            StreetName    : txtTemporaryTole,
            VdcTown       : txtTemporaryVdc,
            LocationType  : locationType1,
            DistrictCode  : cboTemporaryDiscrict,
            AreaCode      : '00',//Ext.ComponentQuery.query('#txtTemporaryArea')[0].getValue(),
            status        : '1',
            Action        : tempAddrAtion,
            AddressType   : 'T'
        };

        var personEPan = 
        {
            PAN 		  : pan_no,
            Request_No    : request_no,
            Office_Code   : office_code,

            TaxpayerCatId:businessTyp,
            TaxpayerType:busSubTyp,
            TranDate     : null,
            FName_Nepali : Ext.ComponentQuery.query('#txtPersonFNameNep')[0].getValue(),
            MName_Nepali : Ext.ComponentQuery.query('#txtPersonMNameNep')[0].getValue(),
            LName_Nepali : Ext.ComponentQuery.query('#txtPersonLNameNep')[0].getValue(),
            FName_Eng    : Ext.ComponentQuery.query('#txtPersonFNameEng')[0].getValue(),
            MName_Eng    : Ext.ComponentQuery.query('#txtPersonMNameEng')[0].getValue(),
            LName_Eng    : Ext.ComponentQuery.query('#txtPersonLNameEng')[0].getValue(),
            Sex          : Ext.ComponentQuery.query('#rdoGroupGender')[0].items.get(0).getGroupValue(),
            Nationality  : Ext.ComponentQuery.query('#cboNationality')[0].getValue(),
            DOB          : Ext.ComponentQuery.query('#txtDob')[0].getValue(),
            //DocumentID   : Ext.ComponentQuery.query('#')[0].getValue(),
            //IdNumber     : Ext.ComponentQuery.query('#')[0].getValue(),
            //IdIssueAuthority: Ext.ComponentQuery.query('#')[0].getValue(),
            //IdIssueDate  : Ext.ComponentQuery.query('#')[0].getValue(),
            //IdIssuePlace : Ext.ComponentQuery.query('#')[0].getValue(),
            SpouceFName  : Ext.ComponentQuery.query('#txtwifeFname')[0].getValue(),
            SpouceMName  : Ext.ComponentQuery.query('#txtwifeMname')[0].getValue(),
            SpouceLName  : Ext.ComponentQuery.query('#txtwifeLname')[0].getValue(),
            FatherFName  : Ext.ComponentQuery.query('#txtFatherFname')[0].getValue(),
            FatherMName  : Ext.ComponentQuery.query('#txtFatherMname')[0].getValue(),
            FatherLName  : Ext.ComponentQuery.query('#txtFatherLname')[0].getValue(),
            MotherFName  : Ext.ComponentQuery.query('#txtMotherFname')[0].getValue(),
            MotherMName  : Ext.ComponentQuery.query('#txtMotherMname')[0].getValue(),
            MotherLName  : Ext.ComponentQuery.query('#txtMotherLname')[0].getValue(),
            GrandFatherFName : Ext.ComponentQuery.query('#txtGrandFatherFname')[0].getValue(),
            GrandFatherMName : Ext.ComponentQuery.query('#txtGrandFatherMname')[0].getValue(),
            GrandFatherLName : Ext.ComponentQuery.query('#txtGrandFatherLname')[0].getValue(),
            GUFName : Ext.ComponentQuery.query('#PersRegGuardianFName')[0].getValue(),
            GUMName : Ext.ComponentQuery.query('#PersRegGuardianMName')[0].getValue(),
            GULName : Ext.ComponentQuery.query('#PersRegGuardianLName')[0].getValue(),
            photo :  Ext.getCmp('sespicid').getValue(),
            LstProfession  :profList,
            PermanentAddress     : Address,//getJson(Ext.getStore('permAddressStore')),

            LstDocument    : docList,
            TemporaryAddress:IndividualAddress,//getJson(Ext.getStore('tempAddressStore'))
            TaxpayerProfessions:profList,
            Action : 'E'//Ext.ComponentQuery.query('#PersonalPanAction')[0].getValue()
        };




        Ext.Ajax.request({
            url: '../Handlers/Registration/PersonEPanHandler.ashx?method=SavePersonEPanAU',
            params:{personEPan:JSON.stringify(personEPan)},
            // params:'',
            success: function ( response ) {
                var text = response.responseText;
                var resp=Ext.decode(text);       
                if(resp.success=='True'||resp.success=='true')
                {                    
                    msg("Status","Personal Information Saved Successfully.");                    
                    me.Reload();
                    Ext.ComponentQuery.query('#PPAN_Reg_Next')[0].enable();
                    Ext.ComponentQuery.query('#PersonalPanAction')[0].setValue('E');
                }
                else
                {
                    msg("FAILURE","Personal Information Saving Failed.");
                }

            },
            failure: function ( result, request ) {
                msg("FAILURE","Personal Information Saving Failed.");
            }

        });

    },

    onFilePhotoChange: function(filefield, value, eOpts) {
        var perReg=Ext.getCmp('PersonRegistrationAU');
        var paramm=perReg.extraParam;

        var pan_no = paramm.pan_no.toString(); 
        var request_no = paramm.request_no.toString();
        var office_code = paramm.office_code.toString();

        console.log('dir:',pan_no + request_no + office_code);
        //var objSubmissionNo = Ext.ComponentQuery.query('#hdnSubmissionNo')[0].getValue();
        Ext.getCmp('UploadControl').getForm().submit({
            url: '../Handlers/PhotoHandle/PHOTOUploader.ashx',
            params:{submissionNo:pan_no + request_no + office_code},
            waitMsg: 'Please wait',
            success: function(form,action) {
                // console.log(action);
                // console.log(form.result);
                // console.log(action.result);
                Ext.getCmp('sespicid').setValue(action.result.msg);
                Ext.getCmp('imgPerson').setSrc('../Handlers/PhotoHandle/temp/'+pan_no+request_no+office_code+"/"+action.result.msg);
                Ext.create('MyApp.view.PictureCutterAU').show();
                $('.cropbox').attr('src','../Handlers/PhotoHandle/temp/'+pan_no+request_no+office_code+"/"+action.result.msg);
                $('.preview').attr('src','../Handlers/PhotoHandle/temp/'+pan_no+request_no+office_code+"/"+action.result.msg);
                Ext.ComponentQuery.query('#ImgToSend')[0].setValue(action.result.msg);

            },
            failure: function(form,action) {
            }
        });

    },

    onBtnProfessionClick: function(button, e, eOpts) {
        if(button.up('form').getForm().isValid())
        {
            Ext.getStore('professionStore').add({ProfessionText:Ext.ComponentQuery.query('#txtProfession')[0].getValue()});
            Ext.ComponentQuery.query('#txtProfession')[0].setValue();
        }
    },

    onBtnSubmitClick: function(button, e, eOpts) {
        Ext.Msg.confirm('Confirm Action',
        'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?',
        function(btn) {
            if(btn == 'yes'){
                var nepServerDate=document.getElementById('nepDate').innerHTML;

                var pan_no="";
                var request_no="";
                var office_code="";

                var businessTyp="";
                var busSubTyp="";
                var persRez=Ext.getCmp('PersonRegistrationAU');
                var me=this;

                ePara=persRez.extraParam;



                if(ePara)
                {   
                    pan_no 		= ePara.pan_no; 
                    request_no  = ePara.request_no;
                    office_code = ePara.office_code;

                    businessTyp = ePara.busTyp;   
                    busSubTyp =   ePara.busSubTyp;
                    regFor=       ePara.regFor;
                }

                if(Ext.getCmp('sespicid').getValue()===""){
                    msg("WARNING","Please select profile picture before submit");
                    return;
                }

                var profListStore=Ext.getStore('PerReg_TaxPayerProfession');
                profListStore.clearFilter();
                var profList=getJson(profListStore);
                profListStore.filter(function(item){
                    return item.get("Action")!= 'D';
                }); 


                var DocTypeStore=Ext.getStore('DocType');
                DocTypeStore.each(function(record){

                    record.set('Document',null);

                });

                var docList=getJson(DocTypeStore);

                var locationType="";
                if(Ext.ComponentQuery.query('#PerRegRerm_LocationType1')[0].checked)
                {
                    locationType="VD";
                }
                else if(Ext.ComponentQuery.query('#PerRegRerm_LocationType2')[0].checked)
                {
                    locationType="MN";
                }
                else if(Ext.ComponentQuery.query('#PerRegRerm_LocationType3')[0].checked)
                {
                    locationType="MM";
                }
                else if(Ext.ComponentQuery.query('#PerRegRerm_LocationType4')[0].checked)
                {
                    locationType="SM";
                }


                var cboPermanentDiscrict=Ext.ComponentQuery.query('#cboPermanentDiscrict')[0].getValue();
                var txtPermanentVdc=Ext.ComponentQuery.query('#txtPermanentVdc')[0].getValue();
                var txtPermanentTole=Ext.ComponentQuery.query('#txtPermanentTole')[0].getValue();
                var txtPermanentHouseNo=Ext.ComponentQuery.query('#txtPermanentHouseNo')[0].getValue();
                var txtPermanentWard=Ext.ComponentQuery.query('#txtPermanentWard')[0].getValue();

                var permAddrAtion=ePara.PermanentAddressSno?'E':'A';

                if( !(Number(cboPermanentDiscrict)||txtPermanentVdc || txtPermanentTole || txtPermanentHouseNo || txtPermanentWard))
                {
                    permAddrAtion="D";
                }

                var Address =
                {   
                    PAN 		  : pan_no,
                    Request_No    : request_no,
                    Office_Code   : office_code,

                    AddressSNO    : ePara.PermanentAddressSno?ePara.PermanentAddressSno:0,
                    From_Date     : nepServerDate,
                    HouseNo       : Ext.ComponentQuery.query('#txtPermanentHouseNo')[0].getValue(),
                    WardNo        : Ext.ComponentQuery.query('#txtPermanentWard')[0].getValue(),
                    StreetName    : Ext.ComponentQuery.query('#txtPermanentTole')[0].getValue(),
                    VdcTown       : Ext.ComponentQuery.query('#txtPermanentVdc')[0].getValue(),
                    LocationType  : locationType,
                    DistrictCode  : Ext.ComponentQuery.query('#cboPermanentDiscrict')[0].getValue(),
                    AreaCode      : '00',//Ext.ComponentQuery.query('#txtPermanentArea')[0].getValue(),
                    status        : '1',
                    Action        : permAddrAtion,
                    AddressType   : 'P'
                };

                var locationType1="";
                if(Ext.ComponentQuery.query('#PerRegTemp_LocationType1')[0].checked)
                {
                    locationType1="VD";
                }
                else if(Ext.ComponentQuery.query('#PerRegTemp_LocationType2')[0].checked)
                {
                    locationType1="MN";
                }
                else if(Ext.ComponentQuery.query('#PerRegTemp_LocationType3')[0].checked)
                {
                    locationType1="MM";
                }
                else if(Ext.ComponentQuery.query('#PerRegTemp_LocationType4')[0].checked)
                {
                    locationType1="SM";
                }

                var cboTemporaryDiscrict=Ext.ComponentQuery.query('#cboTemporaryDiscrict')[0].getValue();
                var txtTemporaryVdc=Ext.ComponentQuery.query('#txtTemporaryVdc')[0].getValue();
                var txtTemporaryTole=Ext.ComponentQuery.query('#txtTemporaryTole')[0].getValue();
                var txtTemporaryHouseNo=Ext.ComponentQuery.query('#txtTemporaryHouseNo')[0].getValue();
                var txtTemporaryWard=Ext.ComponentQuery.query('#txtTemporaryWard')[0].getValue();

                var tempAddrAtion=ePara.TemporaryAddressSno?'E':'A';

                if( !(Number(cboTemporaryDiscrict)||txtTemporaryVdc || txtTemporaryTole || txtTemporaryHouseNo || txtTemporaryWard))
                {
                    tempAddrAtion="D";
                }


                var IndividualAddress =
                {

                    PAN 		  : pan_no,
                    Request_No    : request_no,
                    Office_Code   : office_code,    


                    AddressSNO    : ePara.TemporaryAddressSno?ePara.TemporaryAddressSno:0,

                    From_Date     : nepServerDate,
                    HouseNo       : txtTemporaryHouseNo,
                    WardNo        : txtTemporaryWard,
                    StreetName    : txtTemporaryTole,
                    VdcTown       : txtTemporaryVdc,
                    LocationType  : locationType1,
                    DistrictCode  : cboTemporaryDiscrict,
                    AreaCode      : '00',//Ext.ComponentQuery.query('#txtTemporaryArea')[0].getValue(),
                    status        : '1',
                    Action        : tempAddrAtion,
                    AddressType   : 'T'
                };

                var personEPan = 
                {
                    PAN 		  : pan_no,
                    Request_No    : request_no,
                    Office_Code   : office_code,

                    TaxpayerCatId:businessTyp,
                    TaxpayerType:busSubTyp,
                    TranDate     : null,
                    FName_Nepali : Ext.ComponentQuery.query('#txtPersonFNameNep')[0].getValue(),
                    MName_Nepali : Ext.ComponentQuery.query('#txtPersonMNameNep')[0].getValue(),
                    LName_Nepali : Ext.ComponentQuery.query('#txtPersonLNameNep')[0].getValue(),
                    FName_Eng    : Ext.ComponentQuery.query('#txtPersonFNameEng')[0].getValue(),
                    MName_Eng    : Ext.ComponentQuery.query('#txtPersonMNameEng')[0].getValue(),
                    LName_Eng    : Ext.ComponentQuery.query('#txtPersonLNameEng')[0].getValue(),
                    Sex          : Ext.ComponentQuery.query('#rdoGroupGender')[0].items.get(0).getGroupValue(),
                    Nationality  : Ext.ComponentQuery.query('#cboNationality')[0].getValue(),
                    DOB          : Ext.ComponentQuery.query('#txtDob')[0].getValue(),
                    //DocumentID   : Ext.ComponentQuery.query('#')[0].getValue(),
                    //IdNumber     : Ext.ComponentQuery.query('#')[0].getValue(),
                    //IdIssueAuthority: Ext.ComponentQuery.query('#')[0].getValue(),
                    //IdIssueDate  : Ext.ComponentQuery.query('#')[0].getValue(),
                    //IdIssuePlace : Ext.ComponentQuery.query('#')[0].getValue(),
                    SpouceFName  : Ext.ComponentQuery.query('#txtwifeFname')[0].getValue(),
                    SpouceMName  : Ext.ComponentQuery.query('#txtwifeMname')[0].getValue(),
                    SpouceLName  : Ext.ComponentQuery.query('#txtwifeLname')[0].getValue(),
                    FatherFName  : Ext.ComponentQuery.query('#txtFatherFname')[0].getValue(),
                    FatherMName  : Ext.ComponentQuery.query('#txtFatherMname')[0].getValue(),
                    FatherLName  : Ext.ComponentQuery.query('#txtFatherLname')[0].getValue(),
                    MotherFName  : Ext.ComponentQuery.query('#txtMotherFname')[0].getValue(),
                    MotherMName  : Ext.ComponentQuery.query('#txtMotherMname')[0].getValue(),
                    MotherLName  : Ext.ComponentQuery.query('#txtMotherLname')[0].getValue(),
                    GrandFatherFName : Ext.ComponentQuery.query('#txtGrandFatherFname')[0].getValue(),
                    GrandFatherMName : Ext.ComponentQuery.query('#txtGrandFatherMname')[0].getValue(),
                    GrandFatherLName : Ext.ComponentQuery.query('#txtGrandFatherLname')[0].getValue(),
                    GUFName : Ext.ComponentQuery.query('#PersRegGuardianFName')[0].getValue(),
                    GUMName : Ext.ComponentQuery.query('#PersRegGuardianMName')[0].getValue(),
                    GULName : Ext.ComponentQuery.query('#PersRegGuardianLName')[0].getValue(),
                    photo :  Ext.getCmp('sespicid').getValue(),
                    LstProfession  :profList,
                    PermanentAddress     : Address,//getJson(Ext.getStore('permAddressStore')),

                    LstDocument    : docList,
                    TemporaryAddress:IndividualAddress,//getJson(Ext.getStore('tempAddressStore'))
                    TaxpayerProfessions:profList,
                    Action : 'E'//Ext.ComponentQuery.query('#PersonalPanAction')[0].getValue()
                };


                Ext.Ajax.request({
                    url: '../Handlers/Registration/PersonEPanHandler.ashx?method=SavePersonEPanAU',
                    params:{personEPan:JSON.stringify(personEPan)},
                    // params:'',
                    success: function ( response ) {
                        var text = response.responseText;
                        var resp=Ext.decode(text);  
                        Ext.ComponentQuery.query('#PersonalPanAction')[0].setValue('E');

                        if(resp.success=='True'||resp.success=='true')
                        {                       
                            Ext.ComponentQuery.query('#PersonalPanAction')[0].setValue('E');
                            Ext.Ajax.request({
                                url: '../Handlers/Registration/RegSubmissionNoHandler.ashx?method=SubmitRegistrationAU',
                                params:{pan_no:pan_no,request_no:request_no,office_code:office_code},
                                // params:'',
                                success: function ( ressponse ) {
                                    var respp = ressponse.responseText;
                                    var dta=Ext.decode(respp);   
                                    if(dta.root.success=='true'||dta.root.success=='True'||dta.root.success)
                                    {                                                  


                                        msg("Status","Registration Information Saved And Submitted Successfully.");
                                    }
                                    else
                                    {
                                        me.submitMessage(dta.root);
                                    }
                                    me.Reload();
                                },
                                failure: function ( result, request ) {
                                    me.Reload();
                                    msg("FAILURE","Registration Information Saved Successfully But Submission Failed.");
                                }

                            });

                        }
                        else
                        {
                            msg("FAILURE","Registration Information Could Not Be Saved And Submission Failed.");
                        }

                    },
                    failure: function ( result, request ) {
                        msg("FAILURE","Registration Information Could Not Be Saved And Submission Failed.");
                    }

                });       
            }
        },
        this);
    },

    onPpan_printClick: function(button, e, eOpts) {
        var perReg=Ext.getCmp('PersonRegistrationAU');
        var obj={submissionNo:perReg.extraParam.subNo};
        var url="../Reporting/Registration/ReportHandlers/PersonRegReportHandler.ashx";
        var winOption="width=730,height=345,left=100,top=100,resizable=yes,scrollbars=yes";
        OpenWindowWithPost(url,winOption,"NewFile",obj);
    },

    onPPAN_Reg_NextClick: function(button, e, eOpts) {
        var perReg=Ext.getCmp('PersonRegistrationAU');
        var paramm=perReg.extraParam;

        var pan_no = paramm.pan_no; 
        var request_no = paramm.request_no;
        var office_code = paramm.office_code;
        var busType=paramm.busTyp;
        var busSubTyp=paramm.busSubTyp;
        var regFor=paramm.regFor;

        if(indexOf.call(regFor, "ITAX") >=0)
        {

            uiConfig = {menuLink:'BusinessRegistrationAU',pageTitle:'Business Registration'};            
            DynamicUI(uiConfig,function(){          
            },{pan_no:pan_no,request_no:request_no,office_code:office_code,busTyp:busType,busSubTyp:busSubTyp,regFor:regFor});

            }

            /*var pan="";
            var businessTyp="";
            var businessSubTyp="";
            var submissionNo="";
            var val= "";
            var regFor="";
            epara=Ext.getCmp('PersonRegistrationAU').extraParam;
            if(epara)   
            {
            submissionNo = epara.subNo;
            businessTyp=epara.busTyp;
            businessSubTyp=epara.busSubTyp;
            val=epara.regFor;
            regFor=val;
            pan=epara.pan;
            }


            var count=0;
            var msg="";
            var ppanAction="";  // A=add,R=readonly(disable edit)  in PPAN

            var  uiConfig ={}; 
            //{subNo:submissionNo,busTyp:businessTyp,busSubTyp:businessSubTyp,regFor:regFor}
            /////
            if(val==1)  //PPAN
            {        
                return;
            }
            else if(val==2)  //ITAX
            {
                var parmms={};
                if(pan)
                {
                    parmms= {subNo:submissionNo,busTyp:businessTyp,busSubTyp:businessSubTyp,regFor:regFor,pan:pan};
                }
                else
                {
                    parmms = {subNo:submissionNo,busTyp:businessTyp,busSubTyp:businessSubTyp,regFor:regFor};
                }
                uiConfig = {menuLink:'BusinessRegistration',pageTitle:'Business Registration'};
                DynamicUI(uiConfig,function(){         
                    Ext.ComponentQuery.query('#Bus_Reg_RedirectURL')[0].setValue(val);
                    Ext.ComponentQuery.query('#Bus_Reg_PanAction')[0].setValue("A");
                    var BusRegNext=Ext.ComponentQuery.query('#Bus_Reg_Next')[0];            
                    BusRegNext.hide();


                },parmms);
            }
            else if(val==5)  //ITAX,VAT,EXCISE
            {
                uiConfig = {menuLink:'BusinessRegistration',pageTitle:'Business Registration'};
                DynamicUI(uiConfig,function(){         
                    Ext.ComponentQuery.query('#Bus_Reg_RedirectURL')[0].setValue(val);
                    Ext.ComponentQuery.query('#Bus_Reg_PanAction')[0].setValue("A");
                    var BusRegNext=Ext.ComponentQuery.query('#Bus_Reg_Next')[0];            
                    BusRegNext.show();


                },{subNo:submissionNo,busTyp:businessTyp,busSubTyp:businessSubTyp,regFor:regFor});
                }
                else if(val==6)  //ITAX,VAT
                {
                    uiConfig = {menuLink:'BusinessRegistration',pageTitle:'Business Registration'};
                    DynamicUI(uiConfig,function(){         
                        Ext.ComponentQuery.query('#Bus_Reg_RedirectURL')[0].setValue(val);
                        Ext.ComponentQuery.query('#Bus_Reg_PanAction')[0].setValue("A");
                        var BusRegNext=Ext.ComponentQuery.query('#Bus_Reg_Next')[0];            
                        BusRegNext.show();


                    },{subNo:submissionNo,busTyp:businessTyp,busSubTyp:businessSubTyp,regFor:regFor});

                    }
                    else if(val==8)  //ITAX,EXCISE
                    {
                        uiConfig = {menuLink:'BusinessRegistration',pageTitle:'Business Registration'};
                        DynamicUI(uiConfig,function(){         
                            Ext.ComponentQuery.query('#Bus_Reg_RedirectURL')[0].setValue(val);
                            Ext.ComponentQuery.query('#Bus_Reg_PanAction')[0].setValue("A");
                            var BusRegNext=Ext.ComponentQuery.query('#Bus_Reg_Next')[0];            
                            BusRegNext.show();


                        },{subNo:submissionNo,busTyp:businessTyp,busSubTyp:businessSubTyp,regFor:regFor});
                        }

                        /////
                        */

    },

    onPerReg_ProfCatCollapse: function(field, eOpts) {
        var subCat=Ext.ComponentQuery.query('#PerReg_ProfSubCat')[0];
        subCat.setValue('');
        var combobox=Ext.ComponentQuery.query('#PerReg_ProfCat')[0];
        var value = combobox.getValue();

        if(value)
        {
            var record = combobox.findRecord(combobox.valueField || combobox.displayField, value);
            var index = combobox.store.indexOf(record);

            var store=Ext.getStore('PerRegTaxPayerProfCat');
            var store1=Ext.getStore('PerRegTaxPayerProfSubCat');
            store1.removeAll();

            if(store.getAt(index))
            {        
                store1.loadData(store.getAt(index).get('TaxPayerProfessionSubCat'));         
            }
        }
    },

    onPerReg_btnAddProfClick: function(button, e, eOpts) {
        var paramm=Ext.getCmp('PersonRegistrationAU').extraParam;

        var pan_no = paramm.pan_no; 
        var request_no = paramm.request_no;
        var office_code = paramm.office_code;

        var profCat=Ext.ComponentQuery.query('#PerReg_ProfCat')[0];
        var profSubCat=Ext.ComponentQuery.query('#PerReg_ProfSubCat')[0];
        var certificateNo=Ext.ComponentQuery.query('#PerReg_ProfFromDate')[0];//CertificateNo
        var profStore=Ext.getStore('PerReg_TaxPayerProfession');
        if(!profCat.getValue() || !profSubCat.getValue() )
        { 
            var cnt=1; 
            var errMsg="";

            errMsg= !profCat.getValue()? errMsg+ cnt++ + ") Select Profession Category. <br/>":errMsg;
            errMsg= !profSubCat.getValue()? errMsg+  cnt++ + ") Select Profession Sub Category. <br/>":errMsg;
            //errMsg= !profFromDate.getValue()? errMsg+  cnt++ + ") From date is missing. <br/>":errMsg;

            msg("WARNING",errMsg);
            return false;
        }
        //validateFutureDate(profFromDate.getValue(),'Y',function(){profFromDate.focus();});


        var recordIndex = profStore.findBy(
        function(record, id){
            if( record.get('ProfCatID') ===profCat.getValue() && 
            record.get('ProfSubCatID') === profSubCat.getValue() )
            {
                return true;
            }
            else
            {
                return false;
            }

        });

        if(recordIndex>=0)
        {
            msg('WARNING','This profession already exists .<br/>');
        }
        else
        {
            var profession={
                PAN:pan_no,
                Office_Code:office_code,
                Request_No:request_no,        
                ProfCatID:profCat.getValue(),
                ProfCatName:profCat.getRawValue(),
                ProfSubCatID:profSubCat.getValue(),
                ProSubCatName:profSubCat.getRawValue(),
                CertificateNo:certificateNo.getValue(),
                Action:'A'
            };
            profStore.add(profession);
        }

    },

    onFormAfterRender: function(component, eOpts) {
        var me=this;
        me.Reload();
    },

    Reload: function() {
        var perReg=Ext.getCmp('PersonRegistrationAU');
        var distReg=Ext.getStore('DistrictRegistration');
        if(perReg.extraParam)   
        {   

            var paramm=perReg.extraParam;

            var pan_no = paramm.pan_no; 
            var request_no = paramm.request_no;
            var office_code = paramm.office_code;
            var busType=paramm.busTyp;
            var regFor=paramm.regFor;

            if(indexOf.call(regFor, "ITAX") >=0 || indexOf.call(regFor, "VAT") >=0 || indexOf.call(regFor, "EXCS") >=0)
            { 
                Ext.ComponentQuery.query('#PPAN_Reg_Next')[0].enable();
                Ext.ComponentQuery.query('#PPAN_Reg_Next')[0].show();
            }
            else
            {
                Ext.ComponentQuery.query('#PPAN_Reg_Next')[0].disable();
                Ext.ComponentQuery.query('#PPAN_Reg_Next')[0].hide();
            }


            Ext.Ajax.request({
                url: '../Handlers/Registration/RegistrationsForHandler.ashx?method=IsSubmittedAU',   //check
                params:{pan_no:pan_no,request_no:request_no,office_code:office_code},
                success: function ( result, request ) {            
                    var rsp = Ext.decode(result.responseText);
                    if(rsp.message=='true'||rsp.message=='True')
                    {
                        ConvertFieldsToReadOnly("PersonRegistrationAU");
                        Ext.ComponentQuery.query('#PerReg_btnAddProf')[0].disable();
                        Ext.ComponentQuery.query('#btnSave')[0].disable();
                        Ext.ComponentQuery.query('#btnSubmit')[0].disable();
                        Ext.ComponentQuery.query('#btnCancel')[0].disable();
                        Ext.ComponentQuery.query('#PPAN_Reg_Next')[0].enable();

                    }

                    Ext.getStore('Nationality').load({
                        scope: this,
                        callback: function(records, operation, success) {
                            Ext.ComponentQuery.query('#cboNationality')[0].setValue('np');            
                            ///
                            Ext.getStore('PerRegTaxPayerProfCat').load({
                                scope: this,
                                callback: function(records, operation, success) {
                                    distReg.load({
                                        scope: this,
                                        callback: function(records, operation, success) {                                        
                                            Ext.ComponentQuery.query('#cboPermanentDiscrict')[0].setValue("0");
                                            Ext.ComponentQuery.query('#cboTemporaryDiscrict')[0].setValue("0");
                                            var DocTypeStore = Ext.getStore('DocType');
                                            var ObjPersonEPAN=null;
                                            Ext.Ajax.request({
                                                url: '../Handlers/Registration/PersonEPanHandler.ashx?method=GetPersonEPanAU',    //check
                                                params:{pan_no:pan_no,request_no:request_no,office_code:office_code},
                                                success: function ( result, request ) {

                                                    ObjPersonEPAN = Ext.decode(result.responseText);  

                                                    var pInfo=ObjPersonEPAN.root;

                                                    if(pInfo)
                                                    {
                                                        DocTypeStore.loadData(pInfo.LstDocument); 
                                                        Ext.ComponentQuery.query('#PersonalPanAction')[0].setValue('E');//pInfo.Action=="E"?"E":"A");
                                                        // Ext.ComponentQuery.query('#hdnSubmissionNo')[0].setValue(ObjPersonEPAN.root.SubmissionNo);   //check

                                                        Ext.ComponentQuery.query('#txtPersonFNameNep')[0].setValue(pInfo.FName_Nepali);
                                                        Ext.ComponentQuery.query('#txtPersonMNameNep')[0].setValue(pInfo.MName_Nepali);
                                                        Ext.ComponentQuery.query('#txtPersonLNameNep')[0].setValue(pInfo.LName_Nepali);
                                                        Ext.ComponentQuery.query('#txtPersonFNameEng')[0].setValue(pInfo.FName_Eng);
                                                        Ext.ComponentQuery.query('#txtPersonMNameEng')[0].setValue(pInfo.MName_Eng);
                                                        Ext.ComponentQuery.query('#txtPersonLNameEng')[0].setValue(pInfo.LName_Eng);

                                                        // Ext.ComponentQuery.query('#rdoGroupGender')[0].items.get(0).setGroupValue(ObjPersonEPAN.root.photo);
                                                        if(ObjPersonEPAN.root.photo)
                                                        {                                                    
                                                            Ext.getCmp('imgPerson').setSrc('../../Handlers/PhotoHandle/temp/'+pInfo.PAN.toString()+pInfo.Request_No.toString()+pInfo.Office_Code.toString()+"/"+pInfo.photo);
                                                        }
                                                        Ext.ComponentQuery.query('#cboNationality')[0].setValue(pInfo.Nationality?pInfo.Nationality:'np');
                                                        Ext.ComponentQuery.query('#txtDob')[0].setValue(pInfo.DOB);
                                                        Ext.ComponentQuery.query('#txtwifeFname')[0].setValue(pInfo.SpouceFName);
                                                        Ext.ComponentQuery.query('#txtwifeMname')[0].setValue(pInfo.SpouceMName);
                                                        Ext.ComponentQuery.query('#txtwifeLname')[0].setValue(pInfo.SpouceLName);
                                                        Ext.ComponentQuery.query('#txtFatherFname')[0].setValue(pInfo.FatherFName);
                                                        Ext.ComponentQuery.query('#txtFatherMname')[0].setValue(pInfo.FatherMName);
                                                        Ext.ComponentQuery.query('#txtFatherLname')[0].setValue(pInfo.FatherLName);
                                                        Ext.ComponentQuery.query('#txtGrandFatherFname')[0].setValue(pInfo.GrandFatherFName);
                                                        Ext.ComponentQuery.query('#txtGrandFatherMname')[0].setValue(pInfo.GrandFatherMName);
                                                        Ext.ComponentQuery.query('#txtGrandFatherLname')[0].setValue(pInfo.GrandFatherLName);

                                                        Ext.ComponentQuery.query('#txtMotherFname')[0].setValue(pInfo.MotherFName);
                                                        Ext.ComponentQuery.query('#txtMotherMname')[0].setValue(pInfo.MotherMName);
                                                        Ext.ComponentQuery.query('#txtMotherLname')[0].setValue(pInfo.MotherLName);

                                                        Ext.ComponentQuery.query('#PersRegGuardianFName')[0].setValue(pInfo.GUFName);
                                                        Ext.ComponentQuery.query('#PersRegGuardianMName')[0].setValue(pInfo.GUMName);
                                                        Ext.ComponentQuery.query('#PersRegGuardianLName')[0].setValue(pInfo.GULName);

                                                        Ext.getCmp('sespicid').setValue(pInfo.photo);



                                                        var pAddr=pInfo.PermanentAddress;
                                                        if(pAddr)
                                                        {
                                                            Ext.getCmp('PersonRegistrationAU').extraParam.PermanentAddressSno=pAddr.AddressSNO;

                                                            Ext.ComponentQuery.query('#txtPermanentHouseNo')[0].setValue(pAddr.HouseNo);
                                                            Ext.ComponentQuery.query('#txtPermanentWard')[0].setValue(pAddr.WardNo);
                                                            Ext.ComponentQuery.query('#txtPermanentTole')[0].setValue(pAddr.StreetName);
                                                            Ext.ComponentQuery.query('#txtPermanentVdc')[0].setValue(pAddr.VdcTown);
                                                            Ext.ComponentQuery.query('#cboPermanentDiscrict')[0].setValue(pAddr.DistrictCode?pAddr.DistrictCode:'0');
                                                            Ext.ComponentQuery.query('#txtPermanentArea')[0].setValue(pAddr.AreaCode);
                                                        }

                                                        var tAddr=pInfo.TemporaryAddress;
                                                        if(tAddr)
                                                        {
                                                            Ext.getCmp('PersonRegistrationAU').extraParam.TemporaryAddressSno=tAddr.AddressSNO;

                                                            Ext.ComponentQuery.query('#txtTemporaryHouseNo')[0].setValue(tAddr.HouseNo);
                                                            Ext.ComponentQuery.query('#txtTemporaryWard')[0].setValue(tAddr.WardNo);
                                                            Ext.ComponentQuery.query('#txtTemporaryTole')[0].setValue(tAddr.StreetName);
                                                            Ext.ComponentQuery.query('#txtTemporaryVdc')[0].setValue(tAddr.VdcTown);
                                                            Ext.ComponentQuery.query('#cboTemporaryDiscrict')[0].setValue(tAddr.DistrictCode?tAddr.DistrictCode:'0');
                                                            Ext.ComponentQuery.query('#txtTemporaryArea')[0].setValue(tAddr.AreaCode);
                                                            Ext.ComponentQuery.query('#hdnaddressSno')[0].setValue(tAddr.AddressSNO);
                                                        }
                                                        if(ObjPersonEPAN.root.TaxpayerProfessions)
                                                        {

                                                            Ext.getStore('PerReg_TaxPayerProfession').loadData(pInfo.TaxpayerProfessions);
                                                        }



                                                    }
                                                    else
                                                    {
                                                        msg('WARNING','Individual Information Not Found');                                                
                                                    }
                                                },
                                                failure: function ( result, request ) {
                                                    msg('WARNING','Could Not Load Personal Details');
                                                }

                                            });
                                        }
                                    });

                                }
                            });
                            ///

                        }
                    });


                },
                failure:function(result, request)
                {
                    msg('WARNING','Could Not Load Personal Details');            
                    return;
                }
            });


        }

    },

    submitMessage: function(obj) {
        var winPopup = Ext.create('MyApp.view.SubmitError',{
            autoScroll:true,
            width:700,
            height:500,

            draggable:true,
            maximizable:true,
            minimizable:true,
            resizable:false,
            modal:true,
            title:"",
            y:80,
            layout:'fit'
        });           

        winPopup.extraParam={param:obj};
        winPopup.show();

    },

    init: function(application) {
        this.control({
            "#btnProfession": {
                click: this.onBtnProfessionClick,
                click: this.onBtnProfessionClick
            },
            "#btnUpload_Epan": {
                click: this.onBtnUpload_EpanClick
            },
            "#btnSave": {
                click: this.onBtnSaveClick
            },
            "#filePhoto": {
                change: this.onFilePhotoChange
            },
            "#btnSubmit": {
                click: this.onBtnSubmitClick
            },
            "#ppan_print": {
                click: this.onPpan_printClick
            },
            "#PPAN_Reg_Next": {
                click: this.onPPAN_Reg_NextClick
            },
            "#PerReg_ProfCat": {
                collapse: this.onPerReg_ProfCatCollapse
            },
            "#PerReg_btnAddProf": {
                click: this.onPerReg_btnAddProfClick
            },
            "#PersonRegistrationAU": {
                afterrender: this.onFormAfterRender
            }
        });
    }

});
