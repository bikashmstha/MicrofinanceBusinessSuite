/*
 * File: app/view/LoanPurpose.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.LoanPurpose', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.tab.Panel',
        'Ext.tab.Tab',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.toolbar.Toolbar',
        'Ext.form.field.Text',
        'Ext.grid.column.Action',
        'Ext.selection.RowModel',
        'Ext.grid.plugin.RowEditing',
        'Ext.form.field.Checkbox'
    ],

    frame: true,
    title: 'Loan Purpose',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'tabpanel',
                    frame: true,
                    itemId: 'frmLoanPurpose',
                    activeTab: 0,
                    items: [
                        {
                            xtype: 'panel',
                            frame: true,
                            title: 'Sector',
                            tabConfig: {
                                xtype: 'tab',
                                listeners: {
                                    click: {
                                        fn: me.onTabClick,
                                        scope: me
                                    }
                                }
                            },
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    itemId: 'grdLoanSector',
                                    store: 'LoanSectorStore',
                                    dockedItems: [
                                        {
                                            xtype: 'toolbar',
                                            dock: 'bottom',
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    itemId: 'btnAddSector',
                                                    text: 'Add Sector'
                                                }
                                            ]
                                        }
                                    ],
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'LoanSectorCode',
                                            text: 'LoanSectorCode',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtLoanSectorCode'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 200,
                                            dataIndex: 'LoanSectorDesc',
                                            text: 'LoanSectorDesc',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtLoanSectorDesc'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'Action',
                                            text: 'Action',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtAction'
                                            }
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var store = Ext.getStore('LoanSectorStore');
                                                var grd =  Ext.ComponentQuery.query('#grdLoanSubSector')[0];
                                                var row = store.getAt(rowIndex).data;
                                                Ext.Msg.confirm('Confirm Action', 'Do you want to Remove the LoanSector ?', function(btn) {
                                                    if(btn == 'yes'){
                                                        var objloanSector={
                                                            LoanSectorCode:row.LoanSectorCode,
                                                            LoanSectorDesc:row.LoanSectorDesc,
                                                            Action:'D'
                                                        };

                                                        var wMsg='Deleting....';
                                                        var waitSave = watiMsg(wMsg);
                                                        Ext.Ajax.request({
                                                            url: '../Handlers/Finance/Loan/LoanSectorHandler.ashx',
                                                            params: {
                                                                method:'SaveLoanSector',
                                                                loanSector:JSON.stringify(objloanSector)
                                                            },
                                                            success: function(response){
                                                                waitSave.hide();
                                                                var out=Ext.decode(response.responseText);
                                                                if(out.success==="true")
                                                                {
                                                                    var message=out.root;
                                                                    if(message.OutResultCode==="SUCCESS")
                                                                    {
                                                                        msg("SUCCESS",message.OutResultMessage,function(){
                                                                            grd.bindStore(store);
                                                                            store.removeAt(rowIndex);
                                                                        });
                                                                    }
                                                                    else
                                                                    {
                                                                        msg("FAILURE",message.OutResultMessage);
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    msg("FAILURE",out.message);
                                                                }
                                                            },
                                                            failure: function ( result, request ) {
                                                                waitSave.hide();
                                                                var out=Ext.decode(response.responseText);
                                                                msg("FAILURE",out.message);
                                                            }
                                                        });

                                                        return true;
                                                    }
                                                });
                                            },
                                            icon: '../ITS/resources/images/icons/cancel.png'
                                        }
                                    ],
                                    selModel: Ext.create('Ext.selection.RowModel', {

                                    }),
                                    plugins: [
                                        Ext.create('Ext.grid.plugin.RowEditing', {
                                            listeners: {
                                                validateedit: {
                                                    fn: me.onRowEditingValidateedit,
                                                    scope: me
                                                }
                                            }
                                        })
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            title: 'Sub Sector',
                            tabConfig: {
                                xtype: 'tab',
                                listeners: {
                                    activate: {
                                        fn: me.onTabActivate,
                                        scope: me
                                    }
                                }
                            },
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    itemId: 'grdLoanSubSector',
                                    store: 'LoanSubSectorStore',
                                    dockedItems: [
                                        {
                                            xtype: 'toolbar',
                                            dock: 'bottom',
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    itemId: 'btnLoanSubSector',
                                                    text: 'Add Sub Sector'
                                                }
                                            ]
                                        }
                                    ],
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            width: 150,
                                            dataIndex: 'LoanSubSectorCode',
                                            text: 'LoanSubSectorCode',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtLoanSubSectorCode'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 250,
                                            dataIndex: 'LoanSubSectorDesc',
                                            text: 'LoanSubSectorDesc',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtLoanSubSectorDesc'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'LoanSectorCode',
                                            text: 'LoanSectorCode',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtLoanSSectorCode'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 200,
                                            dataIndex: 'LoanSectorDesc',
                                            text: 'LoanSectorDesc',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtLoanSSectorDesc'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'Action',
                                            text: 'Action',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtAction'
                                            }
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var store = Ext.getStore('LoanSubSectorStore');
                                                var grd =  Ext.ComponentQuery.query('#grdLoanSubSector')[0];
                                                var row = store.getAt(rowIndex).data;
                                                Ext.Msg.confirm('Confirm Action', 'Do you want to Remove the LoanSubSector ?', function(btn) {
                                                    if(btn == 'yes'){
                                                        var objloanSector={
                                                            LoanSectorCode:row.LoanSectorCode,
                                                            LoanSubSectorCode:row.LoanSubSectorCode,
                                                            LoanSubSectorDesc:row.LoanSubSectorDesc,
                                                            Action:'D'
                                                        };

                                                        var wMsg='Deleting....';
                                                        var waitSave = watiMsg(wMsg);
                                                        Ext.Ajax.request({
                                                            url: '../Handlers/Finance/Maintenance/LoanSubSectorHandler.ashx',
                                                            params: {
                                                                method:'SaveLoanSubSector',
                                                                loanSubSector:JSON.stringify(objloanSector)
                                                            },
                                                            success: function(response){
                                                                waitSave.hide();
                                                                var out=Ext.decode(response.responseText);
                                                                if(out.success==="true")
                                                                {
                                                                    var message=out.root;
                                                                    if(message.OutResultCode==="SUCCESS")
                                                                    {
                                                                        msg("SUCCESS",message.OutResultMessage,function(){
                                                                            grd.bindStore(store);
                                                                            store.removeAt(rowIndex);
                                                                        });
                                                                    }
                                                                    else
                                                                    {
                                                                        msg("FAILURE",message.OutResultMessage);
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    msg("FAILURE",out.message);
                                                                }
                                                            },
                                                            failure: function ( result, request ) {
                                                                waitSave.hide();
                                                                var out=Ext.decode(response.responseText);
                                                                msg("FAILURE",out.message);
                                                            }
                                                        });

                                                        return true;
                                                    }
                                                });
                                            },
                                            icon: '../ITS/resources/images/icons/cancel.png'
                                        }
                                    ],
                                    plugins: [
                                        Ext.create('Ext.grid.plugin.RowEditing', {
                                            listeners: {
                                                validateedit: {
                                                    fn: me.onRowEditingValidateedit1,
                                                    scope: me
                                                }
                                            }
                                        })
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            title: 'Purpose',
                            tabConfig: {
                                xtype: 'tab',
                                listeners: {
                                    activate: {
                                        fn: me.onTabActivate1,
                                        scope: me
                                    }
                                }
                            },
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    itemId: 'grdLoanSubSector',
                                    store: 'LoanPurposeStore',
                                    dockedItems: [
                                        {
                                            xtype: 'toolbar',
                                            dock: 'bottom',
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    itemId: 'btnLoanPurpose',
                                                    text: 'Add Loan Purpose'
                                                }
                                            ]
                                        }
                                    ],
                                    plugins: [
                                        Ext.create('Ext.grid.plugin.RowEditing', {
                                            listeners: {
                                                validateedit: {
                                                    fn: me.onRowEditingValidateedit2,
                                                    scope: me
                                                }
                                            }
                                        })
                                    ],
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'LoanPurposeCode',
                                            text: 'LoanPurposeCode',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtLoanPurposeCode'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 200,
                                            dataIndex: 'LoanPurposeDesc',
                                            text: 'LoanPurposeDesc',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtLoanPurposeDesc'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'SubSectorCode',
                                            text: 'SubSectorCode',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtLoanSubSectorCode'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 250,
                                            dataIndex: 'SubSectorDesc',
                                            text: 'SubSectorDesc',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtLoanSubSectorDesc'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'CibCode',
                                            text: 'CibCode',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtCibCode'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'Action',
                                            text: 'Action',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtAction'
                                            }
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var store = Ext.getStore('LoanPurposeStore');
                                                var grd =  Ext.ComponentQuery.query('#grdUserRole')[0];
                                                var row = store.getAt(rowIndex).data;
                                                Ext.Msg.confirm('Confirm Action', 'Do you want to Remove the Loan Purpose ?', function(btn) {
                                                    if(btn == 'yes'){
                                                        var roleUser={
                                                            LoanPurposeCode:row.LoanPurposeCode,
                                                            LoanPurposeDesc:row.LoanPurposeDesc,
                                                            SubSectorCode:row.DefaSubSectorCodeultModule,
                                                            CibCode:row.CibCode,
                                                            Action:'D'
                                                        };

                                                        var wMsg='Deleting....';
                                                        var waitSave = watiMsg(wMsg);
                                                        Ext.Ajax.request({
                                                            url: '../Handlers/Security/Role/UserRoleHandler.ashx',
                                                            params: {
                                                                method:'SaveUserRoles',
                                                                userRoles:JSON.stringify(roleUser)
                                                            },
                                                            success: function(response){
                                                                waitSave.hide();
                                                                var out=Ext.decode(response.responseText);
                                                                if(out.success==="true")
                                                                {
                                                                    var message=out.root;
                                                                    if(message.OutResultCode==="SUCCESS")
                                                                    {
                                                                        msg("SUCCESS",message.OutResultMessage,function(){
                                                                            grd.bindStore(store);
                                                                            store.removeAt(rowIndex);
                                                                        });
                                                                    }
                                                                    else
                                                                    {
                                                                        msg("FAILURE",message.OutResultMessage);
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    msg("FAILURE",out.message);
                                                                }
                                                            },
                                                            failure: function ( result, request ) {
                                                                waitSave.hide();
                                                                var out=Ext.decode(response.responseText);
                                                                msg("FAILURE",out.message);
                                                            }
                                                        });

                                                        return true;
                                                    }
                                                });
                                            },
                                            icon: '../ITS/resources/images/icons/cancel.png'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            title: 'Loan Product Purpose',
                            tabConfig: {
                                xtype: 'tab',
                                listeners: {
                                    activate: {
                                        fn: me.onTabActivate2,
                                        scope: me
                                    }
                                }
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    fieldLabel: 'Loan Product'
                                },
                                {
                                    xtype: 'gridpanel',
                                    itemId: 'grdLoanProductPurpose',
                                    store: 'LoanProductPurposeStore',
                                    dockedItems: [
                                        {
                                            xtype: 'toolbar',
                                            dock: 'bottom',
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    itemId: 'btnProductPurpose',
                                                    text: 'Add Product Purpose'
                                                }
                                            ]
                                        }
                                    ],
                                    plugins: [
                                        Ext.create('Ext.grid.plugin.RowEditing', {
                                            listeners: {
                                                validateedit: {
                                                    fn: me.onRowEditingValidateedit3,
                                                    scope: me
                                                }
                                            }
                                        })
                                    ],
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'LoanPurposeCode',
                                            text: 'LoanPurposeCode',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtLoanPCode'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'LoanPurposeDesc',
                                            text: 'LoanPurposeDesc',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtLoanPDesc'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'InterestRate',
                                            text: 'InterestRate',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtInterestRate'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'MinLoanAmount',
                                            text: 'MinLoanAmount',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtMinLoanAmount'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'MaximumLoanAmount',
                                            text: 'MaximumLoanAmount',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtMaxLoanAmount'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'MaxLongTermMonths',
                                            text: 'MaxLongTermMonths',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtMaxLongTermMonth'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'NoOfAccountOpen',
                                            text: 'NoOfAccountOpen',
                                            editor: {
                                                xtype: 'checkboxfield',
                                                itemId: 'chkNoOfAccOpen'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'Action',
                                            text: 'Action',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtAction'
                                            }
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                var store = Ext.getStore('LoanProductPurposeStore');
                                                var grd =  Ext.ComponentQuery.query('#grdLoanProductPurpose')[0];
                                                var row = store.getAt(rowIndex).data;
                                                Ext.Msg.confirm('Confirm Action', 'Do you want to Remove the Loan Product Purpose ?', function(btn) {
                                                    if(btn == 'yes'){
                                                        var objLoanProductPurpose={
                                                            LoanPurposeCode:row.LoanPurposeCode,
                                                            LoanPurposeDesc:row.LoanPurposeDesc,
                                                            InterestRate:row.InterestRate,
                                                            MinLoanAmount:row.MinLoanAmount,
                                                            MaximumLoanAmount:row.MaximumLoanAmount,
                                                            MaxLongTermMonths:row.MaxLongTermMonths,
                                                            Action:'D'
                                                        };

                                                        var wMsg='Deleting....';
                                                        var waitSave = watiMsg(wMsg);
                                                        Ext.Ajax.request({
                                                            url: '../Handlers/Finance/Maintenance/LoanSubSectorHandler.ashx',
                                                            params: {
                                                                method:'SaveLoanPurposeProducts',
                                                                loanPurposeProducts:JSON.stringify(objLoanProductPurpose)
                                                            },
                                                            success: function(response){
                                                                waitSave.hide();
                                                                var out=Ext.decode(response.responseText);
                                                                if(out.success==="true")
                                                                {
                                                                    var message=out.root;
                                                                    if(message.OutResultCode==="SUCCESS")
                                                                    {
                                                                        msg("SUCCESS",message.OutResultMessage,function(){
                                                                            grd.bindStore(store);

                                                                            store.removeAt(rowIndex);
                                                                        });
                                                                    }
                                                                    else
                                                                    {
                                                                        msg("FAILURE",message.OutResultMessage);
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    msg("FAILURE",out.message);
                                                                }
                                                            },
                                                            failure: function ( result, request ) {
                                                                waitSave.hide();
                                                                var out=Ext.decode(response.responseText);
                                                                msg("FAILURE",out.message);
                                                            }
                                                        });

                                                        return true;
                                                    }
                                                });

                                            },
                                            icon: '../ITS/resources/images/icons/cancel.png'
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onTabClick: function(button, e, eOpts) {
        var store=Ext.getStore('LoanSectorStore');
        store.removeAll();

                Ext.Ajax.request({
                    url: '../Handlers/Finance/Maintenance/LoanSectorHandler.ashx',
                    params: {
                        method:'GetLoanSector'
                    },
                    success: function(response){

                    var data=Ext.decode(response.responseText);
                    store.removeAll();
                    store.add(data.root);


                }
                });
    },

    onRowEditingValidateedit: function(editor, e, eOpts) {
        var errMsg='';
        var loanSectorCode=Ext.ComponentQuery.query('#txtLoanSectorCode')[0];
        var loanSectorDesc=Ext.ComponentQuery.query('#txtLoanSectorDesc')[0];
        var action=Ext.ComponentQuery.query('#txtAction')[0];

                 var objLoanSector={
                            loanSectorCOde:loanSectorCode.getValue(),
                            loanSectorDesc:loanSectorDesc.getValue(),
                            Action:action.getValue()

                           };

                var wMsg='';
                if(action.getValue()==='I')
                    {
                        wMsg='Inserting....';
                    }
                else
                    {
                        wMsg='Updting....';
                    }
                var waitSave = watiMsg(wMsg);

                Ext.Ajax.request({
                           url: '../Handlers/Finance/Maintenance/LoanSectorHandler.ashx',
                           params: {
                                method:'SaveLoanSector',
                                loanSector:JSON.stringify(objLoanSector)
                            },
                            success: function(response){
                            waitSave.hide();
                            var out=Ext.decode(response.responseText);
                            console.log(out);

                            if(out.success==="true")
                                {
                                    var message=out.root;
                                    if(message.OutResultCode==="SUCCESS")
                                        {
                                            msg("SUCCESS",message.OutResultMessage,function(){
                                                var grd = Ext.ComponentQuery.query('#grdLoanSector')[0];

                                                var record = grd.getSelectionModel().getSelection()[0];
                                                record.set('Action','U');

                                            });



                                        }
                                    else
                                        {
                                          msg("FAILURE",message.OutResultMessage);
                                        }
                                }
                                else
                                    {
                                        msg("FAILURE",out.message);
                                    }
                            },
                            failure: function ( result, request ) {
                                waitSave.hide();
                                var out=Ext.decode(response.responseText);
                                msg("FAILURE",out.message);
                            }

                        });

    },

    onTabActivate: function(tab, eOpts) {
          var store=Ext.getStore('LoanSubSectorStore');
                store.removeAll();

                        Ext.Ajax.request({
                            url: '../Handlers/Finance/Maintenance/LoanSubSectorHandler.ashx',
                            params: {
                                method:'GetLoanSubSector'
                            },
                            success: function(response){

                            var data=Ext.decode(response.responseText);
                            store.removeAll();
                            store.add(data.root);
                                console.log(data.root);


                        }
                        });

    },

    onRowEditingValidateedit1: function(editor, e, eOpts) {
        var errMsg='';
        var loanSubSectorCode=Ext.ComponentQuery.query('#txtLoanSubSectorCode')[0];
        var loanSubSectorDesc=Ext.ComponentQuery.query('#txtLoanSubSectorDesc')[0];
        var loanSectorCode=Ext.ComponentQuery.query('#txtLoanSSectorCode')[0];
        var loanSectorDesc=Ext.ComponentQuery.query('#txtLoanSSectorDesc')[0];
        var action =Ext.ComponentQuery.query('#txtAction')[0];

                 var objLoanSubSector={
                            LoanSubSectorCode:loanSubSectorCode.getValue(),
                            LoanSubSectorDesc:loanSubSectorDesc.getValue(),
                            LoanSectorCode:loanSectorCode.getValue(),
                            LoanSectorDesc:loanSectorDesc.getValue(),
                            Action:action.getValue()

                           };

                var wMsg='';
                if(action.getValue()==='I')
                    {
                        wMsg='Inserting....';
                    }
                else
                    {
                        wMsg='Updting....';
                    }
                var waitSave = watiMsg(wMsg);

                Ext.Ajax.request({
                           url: '../Handlers/Finance/Maintenance/LoanSubSectorHandler.ashx',
                           params: {
                                method:'SaveLoanSubSector',
                                loanSubSector:JSON.stringify(objLoanSubSector)
                            },
                            success: function(response){
                            waitSave.hide();
                            var out=Ext.decode(response.responseText);
                            console.log(out);

                            if(out.success==="true")
                                {
                                    var message=out.root;
                                    if(message.OutResultCode==="SUCCESS")
                                        {
                                            msg("SUCCESS",message.OutResultMessage,function(){
                                                var grd = Ext.ComponentQuery.query('#grdLoanSubSector')[0];

                                                var record = grd.getSelectionModel().getSelection()[0];
                                                record.set('Action','U');

                                            });



                                        }
                                    else
                                        {
                                          msg("FAILURE",message.OutResultMessage);
                                        }
                                }
                                else
                                    {
                                        msg("FAILURE",out.message);
                                    }
                            },
                            failure: function ( result, request ) {
                                waitSave.hide();
                                var out=Ext.decode(response.responseText);
                                msg("FAILURE",out.message);
                            }

                        });

    },

    onTabActivate1: function(tab, eOpts) {
          var store=Ext.getStore('LoanPurposeStore');
                store.removeAll();

                        Ext.Ajax.request({
                            url: '../Handlers/Finance/Maintenance/LoanPurposeHandler.ashx',
                            params: {
                                method:'GetLoanPurpose'
                            },
                            success: function(response){

                            var data=Ext.decode(response.responseText);
                            store.removeAll();
                            store.add(data.root);
                                console.log(data.root);


                        }
                        });

    },

    onRowEditingValidateedit2: function(editor, e, eOpts) {
        var errMsg='';
        var loanPurposeCode=Ext.ComponentQuery.query('#txtLoanPurposeCode')[0];
        var loanPurposeDesc=Ext.ComponentQuery.query('#txtLoanPurposeDesc')[0];
        var loanSubSectorCode=Ext.ComponentQuery.query('#txtLoanSubSectorCode')[0];
        var loanSubSectorDesc=Ext.ComponentQuery.query('#txtLoanSubSectorDesc')[0];
        var cibCode=Ext.ComponentQuery.query('#txtCibCode')[0];


        var action=Ext.ComponentQuery.query('#txtAction')[0];

                 var objLoanPurpose={
                            LoanPurposeCode:loanPurposeCode.getValue(),
                            LoanPurposeDesc:loanPurposeDesc.getValue(),
                            SubSectorCode:loanSubSectorCode.getValue(),
                            SubSectorDesc:loanSubSectorDesc.getValue(),
                            CibCode:cibCode.getValue(),
                            Action:action.getValue()

                           };

                var wMsg='';
                if(action.getValue()==='I')
                    {
                        wMsg='Inserting....';
                    }
                else
                    {
                        wMsg='Updting....';
                    }
                var waitSave = watiMsg(wMsg);

                Ext.Ajax.request({
                           url: '../Handlers/Finance/Maintenance/LoanPurposeHandler.ashx',
                           params: {
                                method:'SaveLoanPurpose',
                                loanPurpose:JSON.stringify(objLoanPurpose)
                            },
                            success: function(response){
                            waitSave.hide();
                            var out=Ext.decode(response.responseText);
                            console.log(out);

                            if(out.success==="true")
                                {
                                    var message=out.root;
                                    if(message.OutResultCode==="SUCCESS")
                                        {
                                            msg("SUCCESS",message.OutResultMessage,function(){
                                                var grd = Ext.ComponentQuery.query('#grdLoanSector')[0];

                                                var record = grd.getSelectionModel().getSelection()[0];
                                                record.set('Action','U');

                                            });



                                        }
                                    else
                                        {
                                          msg("FAILURE",message.OutResultMessage);
                                        }
                                }
                                else
                                    {
                                        msg("FAILURE",out.message);
                                    }
                            },
                            failure: function ( result, request ) {
                                waitSave.hide();
                                var out=Ext.decode(response.responseText);
                                msg("FAILURE",out.message);
                            }

                        });

    },

    onTabActivate2: function(tab, eOpts) {
        var store=Ext.getStore('LoanProductPurposeStore');
        var loanProductCode='1';
                store.removeAll();

                        Ext.Ajax.request({
                            url: '../Handlers/Finance/Maintenance/LoanPurposeProductsHandler.ashx?method=GetLoanPurposeProducts',
                            params: {
                                LoanProductCode:loanProductCode

                            },
                            success: function(response){

                            var data=Ext.decode(response.responseText);
                            store.removeAll();
                            store.add(data.root);
                                console.log(data.root);

                        }
                        });

    },

    onRowEditingValidateedit3: function(editor, e, eOpts) {
        var errMsg='';
        var loanPurposeCode=Ext.ComponentQuery.query('#txtLoanPCode')[0];
        var loanProductDesc=Ext.ComponentQuery.query('#txtLoanPDesc')[0];
        var interestRate=Ext.ComponentQuery.query('#txtInterestRate')[0];
        var minLoanAmount=Ext.ComponentQuery.query('#txtMinLoanAmount')[0];
        var maxLoanAmount=Ext.ComponentQuery.query('#txtMaxLoanAmount')[0];
        var maxLongTermMonth=Ext.ComponentQuery.query('#txtMaxLongTermMonth')[0];
        //var noOfAccountOpen=Ext.ComponentQuery.query('#chkNoOfAccOpen')[0];
        var action=Ext.ComponentQuery.query('#txtAction')[0];

                 var objLoanProducts={
                            LoanPurposeCode:loanPurposeCode.getValue(),
                            LoanProductCode:loanPurposeCode.getValue(),
                            InterestRate:interestRate.getValue(),
                            MinLoanAmount:minLoanAmount.getValue(),
                            MaxLoanAmount:maxLoanAmount.getValue(),
                            MinLoanTermsMonths:'1',
                            MaxLoanTermsMonths:'10',
                            NoOfAccountOpen:'1',
                            Active:'Y',
                            Action:action.getValue()

                           };

                var wMsg='';
                if(action.getValue()==='I')
                    {
                        wMsg='Inserting....';
                    }
                else
                    {
                        wMsg='Updting....';
                    }
                var waitSave = watiMsg(wMsg);

                Ext.Ajax.request({
                           url: '../Handlers/Finance/Maintenance/LoanPurposeProductsHandler.ashx',
                           params: {
                                method:'SaveLoanPurposeProducts',
                                loanPurposeProducts:JSON.stringify(objLoanProducts)
                            },
                            success: function(response){
                            waitSave.hide();
                            var out=Ext.decode(response.responseText);
                            console.log(out);

                            if(out.success==="true")
                                {
                                    var message=out.root;
                                    if(message.OutResultCode==="SUCCESS")
                                        {
                                            msg("SUCCESS",message.OutResultMessage,function(){
                                                var grd = Ext.ComponentQuery.query('#grdLoanProductPurpose')[0];

                                                var record = grd.getSelectionModel().getSelection()[0];
                                                record.set('Action','U');

                                            });



                                        }
                                    else
                                        {
                                          msg("FAILURE",message.OutResultMessage);
                                        }
                                }
                                else
                                    {
                                        msg("FAILURE",out.message);
                                    }
                            },
                            failure: function ( result, request ) {
                                waitSave.hide();
                                var out=Ext.decode(response.responseText);
                                msg("FAILURE",out.message);
                            }

                        });

    }

});