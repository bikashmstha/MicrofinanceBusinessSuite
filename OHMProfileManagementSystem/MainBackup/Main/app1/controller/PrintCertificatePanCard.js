/*
 * File: app/controller/PrintCertificatePanCard.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.PrintCertificatePanCard', {
    extend: 'Ext.app.Controller',

    stores: [
        'RemainingPanModel'
    ],

    onBtnPrintPanClick: function(button, e, eOpts) {

        var Print_txtPAN=Ext.ComponentQuery.query('#Print_txtPAN')[0];
        var Print_txtPurpose=Ext.ComponentQuery.query('#Print_txtPurpose')[0];
        var Print_txtCopies=Ext.ComponentQuery.query('#Print_txtCopies')[0];



        if(Print_txtPAN.getValue()===null || Print_txtPAN.getValue()==="" )
        {
            msg("WARNING","कृपया स्था . ले . नं . भर्नुहोस् !!! ");
            return;
        }


        var v=Ext.ComponentQuery.query('#rdbPanCard')[0].getValue();
        var path="";
        var card="";

        if(v)
        {
            path="../Reporting/Registration/ReportHandlers/PANCardHandler.ashx";
            card='P';
        }
        else
        {
            path="../Reporting/Registration/ReportHandlers/PANCertificateHandler.ashx";
            card='C';
        }





        var data={
            DocumentType :card,
            NoOfCopy:1,//Print_txtCopies.getValue(), 
            Pan:Print_txtPAN.getValue(), 
            //PrintedBy:Print_txtPrintedBy.getValue(), 
            Purpose:Print_txtPurpose.getValue(),     
            UserId:'',
            msg:''

        };






        var obj={data:JSON.stringify(data)};
        var url=path;
        var winOption="width=730,height=345,left=100,top=100,resizable=yes,scrollbars=yes";
        OpenWindowWithPost(url,winOption,"NewFile",obj);

        this.Reset();
    },

    onBtnCancelPrintClick: function(button, e, eOpts) {
        this.Reset();
    },

    onBtnPrintRemainingClick: function(button, e, eOpts) {
        if(Ext.ComponentQuery.query('#txtFromDate')[0].getValue()==="" || Ext.ComponentQuery.query('#txtFromDate')[0].getValue()==="")
        {
            msg("WARNING","Please select From Date");
            return;
        }

        if(Ext.ComponentQuery.query('#txtToDate')[0].getValue()==="" || Ext.ComponentQuery.query('#txtToDate')[0].getValue()==="")
        {
            msg("WARNING","Please select To Date");
            return;
        }



        var arrSelected = [];
        var strPrint="";
        var rec="";
        var printList="";
        var grd=Ext.ComponentQuery.query('#grdRemainingPan')[0];
        var offCode = Ext.get('offCode').dom.innerHTML;

        var selectedGrdPan = grd.getSelectionModel().getSelection();

        if(selectedGrdPan.length < 1)
        {
            msg("WARNING","Please select PAN !!!");
            return;
        }
        else
        {
            for (var i = 0; i < selectedGrdPan.length; i++)
            {
                var v=Ext.ComponentQuery.query('#rbdcerrem')[0].getValue();
                if(v)
                {
                    path="../Reporting/Registration/ReportHandlers/RemainingPanHandler.ashx";
                    card='C';
                }
                else
                {
                    path="../Reporting/Registration/ReportHandlers/RemainingPanHandler.ashx";
                    card='P';
                }

                rec={    

                    DocumentType:card,   
                    Pan:selectedGrdPan[i].data.Pan,
                    //PrintedBy:txtPrintedByRmNPan.getValue(),
                    NoOfCopy:'2',
                    Purpose:'print',
                    UserId:'',
                    TaxpayerName:''   
                };
                arrSelected.push(rec); 
            }
            console.log("selected>>",arrSelected); 
        }


        var obj={data:JSON.stringify(arrSelected)};
        var url=path;
        var winOption="width=730,height=345,left=100,top=100,resizable=yes,scrollbars=yes";
        OpenWindowWithPost(url,winOption,"NewFile",obj);

        this.Reset();




    },

    onBtnCancelPanClick: function(button, e, eOpts) {
        /*
        Ext.ComponentQuery.query('#rbdcerrem')[0].setValue(false);
        Ext.ComponentQuery.query('#rbdcardrem')[0].setValue(false);

        Ext.ComponentQuery.query('#txtFromDate')[0].setValue("");
        Ext.ComponentQuery.query('#txtToDate')[0].setValue("");
        Ext.ComponentQuery.query('#txtPrintedByRmNPan')[0].setValue("");






        var str=Ext.getStore('RemainingPanModel');
        str.loadData([],false);
        */

        this.Reset();
    },

    onPrint_txtPANBlur: function(component, e, eOpts) {
        var me=this;
        var offCode = Ext.get('offCode').dom.innerHTML;
        var Print_txtPAN = Ext.ComponentQuery.query('#Print_txtPAN')[0];


        Ext.Ajax.request({
            url:"../Reporting/Registration/ReportHandlers/PANCardHandler.ashx" ,
            params:{paninfo:"test",pan:Print_txtPAN.getValue(),offCode:offCode},
            success: function ( result, request ) {            
                var obj = Ext.decode(result.responseText);

                if(obj.message=="0")
                {
                    msg("WARNING","PAN doesn't exist !!!");

                    Ext.ComponentQuery.query('#rdbCertificate')[0].disable(true);
                    Ext.ComponentQuery.query('#rdbPanCard')[0].disable(true);
                    Ext.ComponentQuery.query('#btnPrintPan')[0].disable(true);
                }
                else if(obj.message=="1")
                {
                    msg("WARNING","PAN is not Registered in this office !!!");

                    Ext.ComponentQuery.query('#rdbCertificate')[0].disable(true);
                    Ext.ComponentQuery.query('#rdbPanCard')[0].disable(true);
                    Ext.ComponentQuery.query('#btnPrintPan')[0].disable(true);

                }
                else if(obj.message=="2")
                {
                    msg("WARNING","PAN is Deactivated !!!");      

                    Ext.ComponentQuery.query('#rdbCertificate')[0].disable(true);
                    Ext.ComponentQuery.query('#rdbPanCard')[0].disable(true);
                    Ext.ComponentQuery.query('#btnPrintPan')[0].disable(true);
                }
                else if(obj.message=="P")
                {
                    Ext.ComponentQuery.query('#rdbCertificate')[0].disable(true);
                    Ext.ComponentQuery.query('#rdbPanCard')[0].enable(true);
                    Ext.ComponentQuery.query('#btnPrintPan')[0].enable(true);

                }
                else if(obj.message=="I")
                {
                    Ext.ComponentQuery.query('#rdbCertificate')[0].enable(true);
                    Ext.ComponentQuery.query('#rdbPanCard')[0].enable(true);
                    Ext.ComponentQuery.query('#btnPrintPan')[0].enable(true);

                }
                else if(obj.message=="B")
                {            
                    Ext.ComponentQuery.query('#rdbPanCard')[0].disable(true);
                    Ext.ComponentQuery.query('#rdbCertificate')[0].enable(true);
                    Ext.ComponentQuery.query('#btnPrintPan')[0].enable(true);
                }



            },
            failure:function (result, request)
            {
                //wait.hide();
                msg("FAILURE","Error in Fecthing Data");
            }
        });


    },

    onPrintCertificatePanCardAfterRender: function(component, eOpts) {
        this.Reset();
    },

    onRbdcerremChange: function(field, newValue, oldValue, eOpts) {
        this.Reset();
    },

    Reset: function() {
        Ext.ComponentQuery.query('#Print_txtPAN')[0].setValue('');
        Ext.ComponentQuery.query('#Print_txtPurpose')[0].setValue('');
        Ext.ComponentQuery.query('#Print_txtCopies')[0].setValue('');
        Ext.ComponentQuery.query('#Print_txtPrintedBy')[0].setValue('');

        Ext.ComponentQuery.query('#rdbCertificate')[0].disable(true);
        Ext.ComponentQuery.query('#rdbPanCard')[0].disable(true);
        Ext.ComponentQuery.query('#btnPrintPan')[0].disable(true);

        Ext.ComponentQuery.query('#txtFromDate')[0].setValue('');
        Ext.ComponentQuery.query('#txtToDate')[0].setValue('');

        Ext.getStore('RemainingPanModel').removeAll();

    },

    init: function(application) {
        this.control({
            "#btnPrintPan": {
                click: this.onBtnPrintPanClick
            },
            "#btnCancelPrint": {
                click: this.onBtnCancelPrintClick
            },
            "#btnPrintRemaining": {
                click: this.onBtnPrintRemainingClick
            },
            "#btnCancelPan": {
                click: this.onBtnCancelPanClick
            },
            "#Print_txtPAN": {
                blur: this.onPrint_txtPANBlur
            },
            "#PrintCertificatePanCard": {
                afterrender: this.onPrintCertificatePanCardAfterRender
            },
            "#rbdcerrem": {
                change: this.onRbdcerremChange
            }
        });
    }

});
