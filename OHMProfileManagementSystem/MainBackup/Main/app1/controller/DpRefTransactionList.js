/*
 * File: app/controller/DpRefTransactionList.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.DpRefTransactionList', {
    extend: 'Ext.app.Controller',

    stores: [
        'DRefOfficerTranList',
        'DOfficerAgency',
        'DLike'
    ],
    views: [
        'DpRefTransactionList'
    ],

    onBtnDRTLSearchClick: function(button, e, eOpts) {
        var me = this;

        /*var cboUser = Ext.ComponentQuery.query("#DRLTUserFilter")[0];
        var txtType = Ext.ComponentQuery.query("#DRLTTypeFilter")[0];
        var cboLike = Ext.ComponentQuery.query("#DRLTLikeFilter")[0];*/

        var cboUser = Ext.ComponentQuery.query("#cboDRLTUser")[0];
        var txtType = Ext.ComponentQuery.query("#txtDRLTType")[0];
        var cboLike = Ext.ComponentQuery.query("#cboDRLTLike")[0];

        var user = cboUser.getValue();
        var type = txtType.getValue();
        var like = cboLike.getValue();

        var form = Ext.ComponentQuery.query("#frmDLRTFilters")[0].getForm();
        var grid = Ext.ComponentQuery.query("#grdDRLTTranList")[0];
        var store = Ext.getStore('DRefOfficerTranList');

        var searchTran = deepCloneStore(store,"SearchDpStore");

        if(!form.isValid())
        {
            msg("WARNING","Please enter the Search fields");
            return false;
        }

        if(user==="Claim No"&&type!==""&&like!=="")
        {
            searchTran.filter(function(item){
                return (item.get("TranNo")==type);
            });
        }
        else if(user==="User"&&type!==""&&like!=="")
        {
            searchTran.filter(function(item){
                return (item.get("Username")==type);
            });
        }
        else if(user==="From Date"&&type!==""&&like!=="")
        {
            searchTran.filter(function(item){
                return (item.get("FromDate")==type);
            });
        }
        else if(user==="To Date"&&type!==""&&like!=="")
        {
            searchTran.filter(function(item){
                return (item.get("ToDate")==type);
            });
        }
        else if(user==="Status"&&type!==""&&like!=="")
        {
            searchTran.filter(function(item){
                return (item.get("NFStatus")==type);
            });
        }
        else if(user==="Vat Amount"&&type!==""&&like!=="")
        {
            searchTran.filter(function(item){
                return (item.get("VatAmt")==type);
            });
        }
        else if(user==="Status"&&type!==""&&like!=="")
        {
            searchTran.filter(function(item){
                return (item.get("NFStatus")==type);
            });
        }

        grid.store = searchTran;
        grid.bindStore(searchTran);
    },

    onBtnDRTLResetClick: function(button, e, eOpts) {
        var user = Ext.ComponentQuery.query("#cboDRLTUser")[0];
        var like = Ext.ComponentQuery.query("#cboDRLTLike")[0];
        var type = Ext.ComponentQuery.query("#txtDRLTType")[0];

        user.setValue("");
        user.clearInvalid();
        like.setValue("");
        like.clearInvalid();
        type.setValue("");
        type.clearInvalid();

        var str = Ext.getStore('DRefOfficerTranList');
        var gd = Ext.ComponentQuery.query("#grdDRLTTranList")[0];
        var hdncode = Ext.ComponentQuery.query("#hdnDRTLcode")[0].getValue();

        str.load({
            params:{officeCode:hdncode}
        });

        gd.store = str;
        gd.bindStore(str);
    },

    onGrdDRLTTranListItemClick: function(dataview, record, item, index, e, eOpts) {
        var me = this;

        var claimNo = record.data.TranNo;
        var hdnaction = Ext.ComponentQuery.query("#hdnDRTLaction")[0].getValue();

        var param = "";
        var url = "";
        var winOption = "";

        if(hdnaction=="view")
        {
            me.MultiFunction(claimNo); 
        }
    },

    MultiFunction: function(tran) {
        var me = this;

        var hdnuser = Ext.ComponentQuery.query("#hdnDRTLuser")[0];

        var getuser = hdnuser.getValue();

        me.getController('MyApp.controller.DpRefEntryDetails').init();
        me.getController('MyApp.controller.DpRefEntryDetails').drpClaim(tran,getuser);
    },

    viewTranList: function(code, user) {

        Ext.getCmp('cntLTNARDisplay').removeAll();

        var DTran = Ext.create('MyApp.view.DpRefTransactionList');

        var hdnTranListcode = Ext.ComponentQuery.query("#hdnDRTLcode")[0];
        hdnTranListcode.setValue(code);
        var hdnTranListuser = Ext.ComponentQuery.query("#hdnDRTLuser")[0];
        hdnTranListuser.setValue(user);

        var pnlToRender = Ext.getCmp('cntLTNARDisplay');

        pnlToRender.add(DTran);

        var store = Ext.getStore('DRefOfficerTranList');
        store.load({
            params:{officeCode:hdnTranListcode.getValue()}
        });

    },

    init: function(application) {
        this.control({
            "#btnDRTLSearch": {
                click: this.onBtnDRTLSearchClick
            },
            "#btnDRTLReset": {
                click: this.onBtnDRTLResetClick
            },
            "#grdDRLTTranList": {
                itemclick: this.onGrdDRLTTranListItemClick
            }
        });
    }

});
