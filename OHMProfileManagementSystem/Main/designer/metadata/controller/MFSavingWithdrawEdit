{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "MFSavingWithdrawEdit",
        "stores": [
            "SavingProductMFSavingStore",
            "CenterCodeStore",
            "SavingAccountNumberSearchStore",
            "EmployeeSearchShortStore",
            "ContraAccountStore",
            "MFSavingAccountNumberSearchStore"
        ]
    },
    "configAlternates": {
        "designer|userClassName": "string",
        "stores": "typedarray"
    },
    "name": "MyController2",
    "designerId": "69100abe-b7cc-4b12-98cc-68aeb84f0c8b",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#frmALlMfSavingAccount",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MFSavingWithdrawEdit",
                "fn": "onFrmALlMfSavingAccountAfterRender",
                "implHandler": [
                    "Ext.ComponentQuery.query(\"#txtWithdrawDateBS\")[0].setValue(getMisDateBS());",
                    "Ext.ComponentQuery.query(\"#txtWithdrawDateAD\")[0].setValue(getMisDateAD());",
                    "Ext.ComponentQuery.query(\"#txtWithdrawDateBS\")[0].setValue(getMisDateBS());",
                    "Ext.ComponentQuery.query(\"#txtWithdrawDateAD\")[0].setValue(getMisDateAD());",
                    "",
                    "var productName='';",
                    "Ext.Ajax.request({",
                    "    url: '../Handlers/Finance/Transaction/SavingTransaction/ProductForWithdrawlHandler.ashx',",
                    "    params: {",
                    "        method:'GetProductForWithDrawl',",
                    "        ProductName:productName",
                    "    },",
                    "    success: function(response){",
                    "        var data=Ext.decode(response.responseText);",
                    "        var savingProductMFSavingStore=Ext.getStore('SavingProductMFSavingStore');",
                    "        savingProductMFSavingStore.removeAll();",
                    "        savingProductMFSavingStore.add(data.root);",
                    "    }",
                    "});",
                    "",
                    "",
                    "var officeCode='';",
                    "var centerName='';",
                    "Ext.Ajax.request({",
                    "    url: '../Handlers/Finance/Maintenance/CenterHandler.ashx',",
                    "    params: {",
                    "        method:'GetCenterListLov',",
                    "        offCode:getOfficeCode(),CenterName:centerName",
                    "    },",
                    "    success: function(response){",
                    "        var data=Ext.decode(response.responseText);",
                    "        var CenterCodeStore=Ext.getStore('CenterCodeStore');",
                    "        CenterCodeStore.removeAll();",
                    "        CenterCodeStore.add(data.root);",
                    "    }",
                    "});",
                    "",
                    "",
                    "",
                    "var officeCode='';",
                    "var productCode='';",
                    "var savingAccountNo='';",
                    "",
                    "Ext.Ajax.request({",
                    "    url: '../Handlers/Finance/Transaction/EditTransaction/AdjustmentaccountforwithdrawHandler.ashx',",
                    "    params: {",
                    "        method:'GetAdjAccForWithdraw',",
                    "        OfficeCode:getOfficeCode(),ProductCode:productCode,SavingAccountNo:savingAccountNo",
                    "    },",
                    "    success: function(response){",
                    "        var data=Ext.decode(response.responseText);",
                    "        var savingAccountNumberSearchStore=Ext.getStore('SavingAccountNumberSearchStore');",
                    "        savingAccountNumberSearchStore.removeAll();",
                    "        savingAccountNumberSearchStore.add(data.root);",
                    "    }",
                    "});",
                    "",
                    "",
                    " var offCode ='';",
                    "var empName='';",
                    "Ext.Ajax.request({",
                    "    url: '../Handlers/Supervisor/EmployeeHandler.ashx',",
                    "    params: {",
                    "        method:'GetFieldAssistants',",
                    "        officeCode:getOfficeCode(),empName:empName",
                    "    },",
                    "    success: function(response){",
                    "    var data=Ext.decode(response.responseText);",
                    "        var employeeSearchShortStore=Ext.getStore('EmployeeSearchShortStore');",
                    "        employeeSearchShortStore.removeAll();",
                    "        employeeSearchShortStore.add(data.root);",
                    "    }",
                    "});",
                    "",
                    "Ext.Ajax.request({",
                    "    url: '../Handlers/Finance/Maintenance/AccountHeadEntryHandler.ashx',",
                    "    params: {",
                    "        method:'GetContraAccount',",
                    "        offCode:getOfficeCode()",
                    "    },",
                    "    success: function(response){",
                    "        var data=Ext.decode(response.responseText);",
                    "        var contraAccountStore =Ext.getStore('ContraAccountStore');",
                    "        contraAccountStore.removeAll();",
                    "        contraAccountStore.add(data.root);",
                    "    }",
                    "});",
                    "",
                    "var memberName='';",
                    "",
                    "Ext.Ajax.request({",
                    "    url: '../Handlers/Finance/Transaction/SavingTransaction/ClientSavingAccountHandler.ashx',",
                    "    params: {",
                    "        method:'GetMemberAccountOpen',",
                    "        offCode:getOfficeCode(),memberName:memberName",
                    "    },",
                    "    success: function(response){",
                    "        var data=Ext.decode(response.responseText);",
                    "        var mfSavingAccountNumberSearchStore=Ext.getStore('MFSavingAccountNumberSearchStore');",
                    "        mfSavingAccountNumberSearchStore.removeAll();",
                    "        mfSavingAccountNumberSearchStore.add(data.root);",
                    "    }",
                    "});",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    ""
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view",
                "implHandler": "code"
            },
            "name": "onFrmALlMfSavingAccountAfterRender",
            "designerId": "6cab576c-846d-4d99-9bde-038e6480310b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnSearch",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton35",
                "fn": "onBtnSearchClick",
                "implHandler": [
                    "var offCode = '';",
                    "var withdrawlNo = '';",
                    "var savingAccountNo='';",
                    "var clientName='';",
                    "var fromDate='';",
                    "var toDate='';",
                    "        Ext.Ajax.request({",
                    "            url: '../Handlers/Finance/Transaction/SavingTransaction/MfWithdrawlDetailHandler.ashx',",
                    "                    params: {",
                    "                        method:'GetMfWithdrawDetail',",
                    "                        offCode:getOfficeCode(),withdrawlNo:withdrawlNo,savingAccountNo:savingAccountNo,clientName:clientName,fromDate:fromDate,toDate:toDate",
                    "                    },",
                    "                    success: function(response){",
                    "                        var data=Ext.decode(response.responseText);",
                    "                       // var mfSavingDepositSearchStore=Ext.getStore('MFSavingDepositSearchStore');",
                    "                        //mfSavingDepositSearchStore.removeAll();",
                    "                        //mfSavingDepositSearchStore.add(data.root);",
                    "                    }",
                    "                });",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view",
                "implHandler": "code"
            },
            "name": "onBtnSearchClick",
            "designerId": "6760e818-a040-483f-ba31-318576907b0c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnWithdraw",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton34",
                "fn": "onBtnWithdrawClick",
                "implHandler": [
                    "var accountNo=Ext.ComponentQuery.query(\"#txtSavingAccountNo\")[0].getValue();",
                    "var withdrawDate=Ext.ComponentQuery.query(\"#txtWithdrawDateBS\")[0].getValue();",
                    "var withdrawAmount=Ext.ComponentQuery.query(\"#txtCurrentBalance\")[0].getValue();",
                    "var chequeNo=Ext.ComponentQuery.query(\"#txtChequeNo\")[0].getValue();",
                    "var payeeName=Ext.ComponentQuery.query(\"#txtPayeeName\")[0].getValue();",
                    "var contraAccount=Ext.ComponentQuery.query(\"#ddlContraAccount\")[0].getValue();",
                    "//var remarks=Ext.ComponentQuery.query(\"#txtEmployeeId\")[0].getValue();",
                    "//var voucherNo=Ext.ComponentQuery.query(\"#txtRemarks\")[0].getValue();",
                    "//var withdrawType=Ext.ComponentQuery.query(\"#txtLoanPeriod\")[0].getValue();",
                    "var maxWithdrawAmount=Ext.ComponentQuery.query(\"#txtWithdrawAmtLimit\")[0].getValue();",
                    "//var tranOfficeCode=Ext.ComponentQuery.query(\"#txtGraceDays\")[0].getValue();",
                    "",
                    "                var objsavingWithdraw={",
                    "                                         AccountNo:accountNo,",
                    "                                         WithdrawDate:withdrawDate,",
                    "                                         WithdrawAmount:withdrawAmount,",
                    "                                         ChequeNo :chequeNo,",
                    "                                         PayeeName:payeeName,",
                    "                                         ContraAccount:contraAccount,",
                    "                                         Remarks:remarks,",
                    "                                         VoucherNo:voucherNo,",
                    "                                         WithdrawType:withdrawType,",
                    "                                         TranOfficeCode:tranOfficeCode,",
                    "                                         CreatedBy:'',",
                    "                                         FiscalYear:'',",
                    "                                         WithdrawalNo:''",
                    "                                       };",
                    "",
                    "",
                    "",
                    "                                var wMsg='';",
                    "                                var waitSave = watiMsg(wMsg);",
                    "",
                    "                                Ext.Ajax.request({",
                    "                                            url: '../Handlers/Finance/Transaction/SavingTransaction/MfSavingWithdrawHandler.ashx',",
                    "                                            params: {",
                    "                                                method:'Save',",
                    "                                                savingWithdraw:JSON.stringify(objsavingWithdraw)",
                    "                                            },",
                    "                                            success: function(response){",
                    "                                            waitSave.hide();",
                    "                                            var out=Ext.decode(response.responseText);",
                    "                                            console.log(out);",
                    "",
                    "                                            if(out.success===\"true\")",
                    "                                                {",
                    "                                                    var message=out.root;",
                    "                                                    if(message.OutResultCode===\"SUCCESS\")",
                    "                                                        {",
                    "                                                            msg(\"SUCCESS\",message.OutResultMessage,function(){",
                    "",
                    "                                                            });",
                    "",
                    "",
                    "",
                    "                                                        }",
                    "                                                    else",
                    "                                                        {",
                    "                                                          msg(\"FAILURE\",message.OutResultMessage);",
                    "                                                        }",
                    "                                                }",
                    "                                                else",
                    "                                                    {",
                    "                                                        msg(\"FAILURE\",out.message);",
                    "                                                    }",
                    "                                            },",
                    "                                            failure: function ( result, request ) {",
                    "                                                waitSave.hide();",
                    "                                                var out=Ext.decode(response.responseText);",
                    "                                                msg(\"FAILURE\",out.message);",
                    "                                            }",
                    "",
                    "                                        });",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view",
                "implHandler": "code"
            },
            "name": "onBtnWithdrawClick",
            "designerId": "27185a95-cb16-49ef-bf61-0caea8e3f269"
        }
    ]
}