{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "OfficeSetup",
        "stores": [
            "OfficeSearchStore",
            "OfficeActiveInactiveStore",
            "OfficeTypeSearchStore",
            "DistrictSearchStore",
            "VdcSearchStore",
            "ParentOfficeSearchStore",
            "AccountHeadSearchStore"
        ]
    },
    "configAlternates": {
        "designer|userClassName": "string",
        "stores": "typedarray"
    },
    "name": "MyController",
    "designerId": "3f75f3ea-0836-4b69-aa77-cf938397974a",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#BtnInsertOfficeInfo",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton9",
                "fn": "onBtnInsertOfficeInfoClick",
                "implHandler": [
                    "var strMsgCode='';",
                    "var strMsgDesc='';",
                    "var strOfficeCode='';",
                    "",
                    "var officeCode=Ext.ComponentQuery.query('#txtOfficeCode')[0];",
                    "var officeName=Ext.ComponentQuery.query('#txtOfficeName')[0];",
                    "var officeTypeCode=Ext.ComponentQuery.query('#txtOfficeTypeCode')[0];",
                    "var parentOfficeCode=Ext.ComponentQuery.query('#txtParentOfficeCode')[0];",
                    "var districtCode=Ext.ComponentQuery.query('#txtDistrictCode')[0];",
                    "var contactPerson=Ext.ComponentQuery.query('#txtContactPerson')[0];",
                    "var phoneNo=Ext.ComponentQuery.query('#txtPhoneNo')[0];",
                    "var faxNo=Ext.ComponentQuery.query('#txtFaxNo')[0];",
                    "var email=Ext.ComponentQuery.query('#txtEmail')[0];",
                    "var address=Ext.ComponentQuery.query('#txtAddress')[0];",
                    "var areaGrading='';",
                    "var officeAccCodePrefix=Ext.ComponentQuery.query('#txtOfficeAcPrefix')[0];",
                    "var establishedDate=Ext.ComponentQuery.query('#txtEstablishedDateAD')[0];",
                    "var vdcCode=Ext.ComponentQuery.query('#txtVdcNpCode')[0];",
                    "var officeStatus=Ext.ComponentQuery.query('#chkActive')[0];",
                    "var officeInactiveDate='';",
                    "var createdBy='demo';",
                    "var createdOn='12/12/2017';",
                    "var centerRange='';",
                    "var firstLoanDisburseDay='';",
                    "var displaySeq='';",
                    "var currentFiscalYear='';",
                    "var lastFiscalyear='';",
                    "var maxPeriodAdditionalLoan='';",
                    "var compoulsaryCollectionAmt='';",
                    "var maxNoOfLoan='';",
                    "var controlFromCdms='';",
                    "var budgetControlYn=Ext.ComponentQuery.query('#chkBudgetAllocation')[0];",
                    "var locationCode='';",
                    "var approvalRangeControl='';",
                    "var currentYear='';",
                    "var branchOnMW='';",
                    "var interBranchAccountHead=Ext.ComponentQuery.query('#txtInterBranchAccountHeadCode')[0];",
                    "var ABBSWithdrawLimit =Ext.ComponentQuery.query('#txtAbbsWithdrawLimit')[0];",
                    "var ABBSDepositLimit=Ext.ComponentQuery.query('#txtAbbsDepositLimit')[0];",
                    "var ABBSAllowYN=Ext.ComponentQuery.query('#chkAbbstransaction')[0];",
                    "var migrationInProcess=Ext.ComponentQuery.query('#chkMigrationInProcess')[0];",
                    "var budgetAllocationYN=Ext.ComponentQuery.query('#chkBudgetAllocation')[0];",
                    "var transactionDate=Ext.ComponentQuery.query('#txtTransactionDateBS')[0];",
                    "var autoAdjustmentCollsht=Ext.ComponentQuery.query('#chkAutoCollnSheet')[0];",
                    "var autoAccountOnNonMem=Ext.ComponentQuery.query('#chkCreateAcOnNonMember')[0];",
                    "",
                    "var insertUpdate='I';",
                    "var rowId=Ext.ComponentQuery.query('#hdnRowID')[0];",
                    "",
                    "var resultCode='';",
                    "var resultMsg='';",
                    "",
                    "",
                    "var office={",
                    "",
                    "    OfficeCode :officeCode.getValue(),",
                    "    OfficeName: officeName.getValue(),",
                    "    OfficeTypeCode :officeTypeCode.getValue(),",
                    "    ParentOfficeCode :parentOfficeCode.getValue(),",
                    "    DistrictCode :districtCode.getValue(),",
                    "    ContactPerson :contactPerson.getValue(),",
                    "    PhoneNumber : phoneNo.getValue(),",
                    "    FaxNumber :faxNo.getValue(),",
                    "    Email :email.getValue(),",
                    "    Address :address.getValue(),",
                    "    AreaGrading: areaGrading,",
                    "    OfficeAccCodePrefix :officeAccCodePrefix.getValue(),",
                    "    EstablishedDate :establishedDate.getValue(),",
                    "    VdcCode :vdcCode.getValue(),",
                    "    CreatedBy :createdBy,",
                    "    CreatedOn :createdOn,",
                    "    MigratedDate :'',",
                    "    ThirdPartyData :'',",
                    "    OfficeStatus :officeStatus.getValue(),",
                    "    CenterRange :centerRange,",
                    "    FirstLoanDisburseDate :firstLoanDisburseDay,",
                    "    DisplaySeq :displaySeq,",
                    "    CurrentFiscalYear :currentFiscalYear,",
                    "    LastFiscalYear :lastFiscalyear,",
                    "    MaxPeriodAdditionalLoan :maxPeriodAdditionalLoan,",
                    "    CompulsoryCollectionAmt :compoulsaryCollectionAmt,",
                    "    MaxNoOfLoan :maxNoOfLoan,",
                    "    ControlFromCdms :controlFromCdms,",
                    "    BudgetControlYN :budgetControlYn.getValue()?'Y':'N',",
                    "    LocationCode :locationCode,",
                    "    ApprovalRangeControl :approvalRangeControl,",
                    "    CurrentYear :currentYear,",
                    "    BranchOnMW :branchOnMW,",
                    "    InterbranchAccountHead :interBranchAccountHead.getValue(),",
                    "    OfficeInactiveDate :officeInactiveDate,",
                    "    MigrationInProcess :migrationInProcess.getValue()?'Y':'N',",
                    "    TransactionDate :transactionDate.getValue(),",
                    "    DefaultLocationCode :'',",
                    "    ReportingGrp :'',",
                    "    AbbsAllowYN :ABBSAllowYN.getValue()?'Y':'N',",
                    "    AbbsWithdrawLimit :ABBSWithdrawLimit.getValue(),",
                    "    AbbsDepositLimit: ABBSDepositLimit.getValue(),",
                    "    SrgEnableYN :'',",
                    "    AutoAdjustmentCollSht :autoAdjustmentCollsht.getValue()?'Y':'N',",
                    "    OpenPublicMem :'',",
                    "    AutoAcOnNonMem :autoAccountOnNonMem.getValue()?'Y':'N',",
                    "    OfficeCategory :'',",
                    "    PRAccountHead :'',",
                    "    Action :'I',",
                    "     RowID:rowId.getValue(),",
                    "    BudgetAlloCationYN :budgetAllocationYN.getValue()",
                    "",
                    "};",
                    "",
                    "var waitSave = watiMsg(\"Saving Office .Please wait ...\");",
                    "Ext.Ajax.request({",
                    "    url: '../Handlers/GeneralMasterParameters/office/OfficeHandler.ashx',",
                    "    params: {",
                    "        method:'Save',",
                    "        office:JSON.stringify(office)",
                    "    },",
                    "    success: function ( response, request ) {",
                    "                 waitSave.hide();",
                    "                    var out=Ext.decode(response.responseText);",
                    "                    console.log(out);",
                    "",
                    "                    if(out.success===\"true\")",
                    "                        {",
                    "                           msg(\"SUCCESS\",out.message);",
                    "                      }",
                    "                        else",
                    "                            {",
                    "                                msg(\"FAILURE\",out.message);",
                    "                            }",
                    "                    },",
                    "                    failure: function ( result, request ) {",
                    "                        waitSave.hide();",
                    "                        var out=Ext.decode(response.responseText);",
                    "                        msg(\"FAILURE\",out.message);",
                    "                    }",
                    "",
                    "",
                    "",
                    "        });",
                    "",
                    "",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view",
                "implHandler": "code"
            },
            "name": "onBtnInsertOfficeInfoClick",
            "designerId": "bb495e05-fe21-484e-ab56-2b7a63bd11b7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnSearchOffice",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton10",
                "fn": "onBtnSearchOfficeClick",
                "implHandler": [
                    " var officeCode=Ext.ComponentQuery.query('#txtSearchOfficeCode')[0];",
                    "        var officeName=Ext.ComponentQuery.query('#txtSearchOfficeName')[0];",
                    "var office={",
                    "    OfficeCode:officeCode.getValue(),",
                    "    OfficeName:officeName.getValue()",
                    "",
                    "};",
                    "",
                    "Ext.Ajax.request({",
                    "    url: '../Handlers/GeneralMasterParameters/office/OfficeHandler.ashx',",
                    "    params: {",
                    "        method:'Search',",
                    "          office:JSON.stringify(office)",
                    "    },",
                    "    success: function(response){",
                    "",
                    "",
                    "var obj = Ext.decode(response.responseText);",
                    "",
                    "                        console.log('resp',response);",
                    "",
                    "",
                    "",
                    "      if(obj.success === \"true\")",
                    "                {",
                    "",
                    "                    var store=Ext.getStore('OfficeSearchStore');",
                    "                    store.removeAll();",
                    "                    store.add(obj.root);",
                    "",
                    "                }",
                    "                else",
                    "                {",
                    "",
                    "                    msg(\"FAILURE\",obj.message);",
                    "                }",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view",
                "implHandler": "code"
            },
            "name": "onBtnSearchOfficeClick",
            "designerId": "bf7ceb70-b4f6-49d3-ba58-d8cc4c1c15e2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnUpdateOfficeInfo",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton11",
                "fn": "onBtnUpdateOfficeInfoClick",
                "implHandler": [
                    "var strMsgCode='';",
                    "var strMsgDesc='';",
                    "var strOfficeCode='';",
                    "",
                    "var officeCode=Ext.ComponentQuery.query('#txtOfficeCode')[0];",
                    "var officeName=Ext.ComponentQuery.query('#txtOfficeName')[0];",
                    "var officeTypeCode=Ext.ComponentQuery.query('#txtOfficeTypeCode')[0];",
                    "var parentOfficeCode=Ext.ComponentQuery.query('#txtParentOfficeCode')[0];",
                    "var districtCode=Ext.ComponentQuery.query('#txtDistrictCode')[0];",
                    "var contactPerson=Ext.ComponentQuery.query('#txtContactPerson')[0];",
                    "var phoneNo=Ext.ComponentQuery.query('#txtPhoneNo')[0];",
                    "var faxNo=Ext.ComponentQuery.query('#txtFaxNo')[0];",
                    "var email=Ext.ComponentQuery.query('#txtEmail')[0];",
                    "var address=Ext.ComponentQuery.query('#txtAddress')[0];",
                    "var areaGrading='';",
                    "var officeAccCodePrefix=Ext.ComponentQuery.query('#txtOfficeAcPrefix')[0];",
                    "var establishedDate=Ext.ComponentQuery.query('#txtEstablishedDateAD')[0];",
                    "var vdcCode=Ext.ComponentQuery.query('#txtVdcNpCode')[0];",
                    "var officeStatus=Ext.ComponentQuery.query('#chkActive')[0];",
                    "var officeInactiveDate='';",
                    "var createdBy='demo';",
                    "var createdOn='12/12/2017';",
                    "var centerRange='';",
                    "var firstLoanDisburseDay='';",
                    "var displaySeq='';",
                    "var currentFiscalYear='';",
                    "var lastFiscalyear='';",
                    "var maxPeriodAdditionalLoan='';",
                    "var compoulsaryCollectionAmt='';",
                    "var maxNoOfLoan='';",
                    "var controlFromCdms='';",
                    "var budgetControlYn=Ext.ComponentQuery.query('#chkBudgetAllocation')[0];",
                    "var locationCode='';",
                    "var approvalRangeControl='';",
                    "var currentYear='';",
                    "var branchOnMW='';",
                    "var interBranchAccountHead=Ext.ComponentQuery.query('#txtInterBranchAccountHeadCode')[0];",
                    "var ABBSWithdrawLimit =Ext.ComponentQuery.query('#txtAbbsWithdrawLimit')[0];",
                    "var ABBSDepositLimit=Ext.ComponentQuery.query('#txtAbbsDepositLimit')[0];",
                    "var ABBSAllowYN=Ext.ComponentQuery.query('#chkAbbstransaction')[0];",
                    "var migrationInProcess=Ext.ComponentQuery.query('#chkMigrationInProcess')[0];",
                    "var budgetAllocationYN=Ext.ComponentQuery.query('#chkBudgetAllocation')[0];",
                    "var transactionDate=Ext.ComponentQuery.query('#txtTransactionDateBS')[0];",
                    "var autoAdjustmentCollsht=Ext.ComponentQuery.query('#chkAutoCollnSheet')[0];",
                    "var autoAccountOnNonMem=Ext.ComponentQuery.query('#chkCreateAcOnNonMember')[0];",
                    "",
                    "var insertUpdate='I';",
                    "var rowId=Ext.ComponentQuery.query('#hdnRowID')[0];",
                    "",
                    "var resultCode='';",
                    "var resultMsg='';",
                    "",
                    "",
                    "var office={",
                    "",
                    "    OfficeCode :officeCode.getValue(),",
                    "    OfficeName: officeName.getValue(),",
                    "    OfficeTypeCode :officeTypeCode.getValue(),",
                    "    ParentOfficeCode :parentOfficeCode.getValue(),",
                    "    DistrictCode :districtCode.getValue(),",
                    "    ContactPerson :contactPerson.getValue(),",
                    "    PhoneNumber : phoneNo.getValue(),",
                    "    FaxNumber :faxNo.getValue(),",
                    "    Email :email.getValue(),",
                    "    Address :address.getValue(),",
                    "    AreaGrading: areaGrading,",
                    "    OfficeAccCodePrefix :officeAccCodePrefix.getValue(),",
                    "    EstablishedDate :establishedDate.getValue(),",
                    "    VdcCode :vdcCode.getValue(),",
                    "    CreatedBy :createdBy,",
                    "    CreatedOn :createdOn,",
                    "    MigratedDate :'',",
                    "    ThirdPartyData :'',",
                    "    OfficeStatus :officeStatus.getValue(),",
                    "    CenterRange :centerRange,",
                    "    FirstLoanDisburseDate :firstLoanDisburseDay,",
                    "    DisplaySeq :displaySeq,",
                    "    CurrentFiscalYear :currentFiscalYear,",
                    "    LastFiscalYear :lastFiscalyear,",
                    "    MaxPeriodAdditionalLoan :maxPeriodAdditionalLoan,",
                    "    CompulsoryCollectionAmt :compoulsaryCollectionAmt,",
                    "    MaxNoOfLoan :maxNoOfLoan,",
                    "    ControlFromCdms :controlFromCdms,",
                    "    BudgetControlYN :budgetControlYn.getValue()?'Y':'N',",
                    "    LocationCode :locationCode,",
                    "    ApprovalRangeControl :approvalRangeControl,",
                    "    CurrentYear :currentYear,",
                    "    BranchOnMW :branchOnMW,",
                    "    InterbranchAccountHead :interBranchAccountHead.getValue(),",
                    "    OfficeInactiveDate :officeInactiveDate,",
                    "    MigrationInProcess :migrationInProcess.getValue()?'Y':'N',",
                    "    TransactionDate :transactionDate.getValue(),",
                    "    DefaultLocationCode :'',",
                    "    ReportingGrp :'',",
                    "    AbbsAllowYN :ABBSAllowYN.getValue()?'Y':'N',",
                    "    AbbsWithdrawLimit :ABBSWithdrawLimit.getValue(),",
                    "    AbbsDepositLimit: ABBSDepositLimit.getValue(),",
                    "    SrgEnableYN :'',",
                    "    AutoAdjustmentCollSht :autoAdjustmentCollsht.getValue()?'Y':'N',",
                    "    OpenPublicMem :'',",
                    "    AutoAcOnNonMem :autoAccountOnNonMem.getValue()?'Y':'N',",
                    "    OfficeCategory :'',",
                    "    PRAccountHead :'',",
                    "    Action :'U',",
                    "    RowID:rowId.getValue(),",
                    "    BudgetAlloCationYN :budgetAllocationYN.getValue()",
                    "",
                    "};",
                    "",
                    "var waitSave = watiMsg(\"Updating Office .Please wait ...\");",
                    "",
                    "Ext.Ajax.request({",
                    "    url: '../Handlers/GeneralMasterParameters/office/OfficeHandler.ashx',",
                    "    params: {",
                    "        method:'Save',",
                    "        office:JSON.stringify(office)",
                    "    },",
                    "    success: function ( response, request ) {",
                    "                 waitSave.hide();",
                    "                    var out=Ext.decode(response.responseText);",
                    "                    console.log(out);",
                    "",
                    "                    if(out.success===\"true\")",
                    "                        {",
                    "                           msg(\"SUCCESS\",out.message);",
                    "                      }",
                    "                        else",
                    "                            {",
                    "                                msg(\"FAILURE\",out.message);",
                    "                            }",
                    "                    },",
                    "                    failure: function ( result, request ) {",
                    "                        waitSave.hide();",
                    "                        var out=Ext.decode(response.responseText);",
                    "                        msg(\"FAILURE\",out.message);",
                    "                    }",
                    "",
                    "",
                    "",
                    "        });",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view",
                "implHandler": "code"
            },
            "name": "onBtnUpdateOfficeInfoClick",
            "designerId": "f04cc110-4a1c-497b-9d5c-38f55611c272"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnDeleteOfficeInfo",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton12",
                "fn": "onBtnDeleteOfficeInfoClick",
                "implHandler": [
                    "var strMsgCode='';",
                    "var strMsgDesc='';",
                    "var strOfficeCode='';",
                    "",
                    "var officeCode=Ext.ComponentQuery.query('#txtOfficeCode')[0];",
                    "var officeName=Ext.ComponentQuery.query('#txtOfficeName')[0];",
                    "var officeTypeCode=Ext.ComponentQuery.query('#txtOfficeTypeCode')[0];",
                    "var parentOfficeCode=Ext.ComponentQuery.query('#txtParentOfficeCode')[0];",
                    "var districtCode=Ext.ComponentQuery.query('#txtDistrictCode')[0];",
                    "var contactPerson=Ext.ComponentQuery.query('#txtContactPerson')[0];",
                    "var phoneNo=Ext.ComponentQuery.query('#txtPhoneNo')[0];",
                    "var faxNo=Ext.ComponentQuery.query('#txtFaxNo')[0];",
                    "var email=Ext.ComponentQuery.query('#txtEmail')[0];",
                    "var address=Ext.ComponentQuery.query('#txtAddress')[0];",
                    "var areaGrading='';",
                    "var officeAccCodePrefix=Ext.ComponentQuery.query('#txtOfficeAcPrefix')[0];",
                    "var establishedDate=Ext.ComponentQuery.query('#txtEstablishedDateAD')[0];",
                    "var vdcCode=Ext.ComponentQuery.query('#txtVdcNpCode')[0];",
                    "var officeStatus='N';",
                    "var officeInactiveDate='';",
                    "var createdBy='demo';",
                    "var createdOn='12/12/2017';",
                    "var centerRange='';",
                    "var firstLoanDisburseDay='';",
                    "var displaySeq='';",
                    "var currentFiscalYear='';",
                    "var lastFiscalyear='';",
                    "var maxPeriodAdditionalLoan='';",
                    "var compoulsaryCollectionAmt='';",
                    "var maxNoOfLoan='';",
                    "var controlFromCdms='';",
                    "var budgetControlYn=Ext.ComponentQuery.query('#chkBudgetAllocation')[0];",
                    "var locationCode='';",
                    "var approvalRangeControl='';",
                    "var currentYear='';",
                    "var branchOnMW='';",
                    "var interBranchAccountHead=Ext.ComponentQuery.query('#txtInterBranchAccountHeadCode')[0];",
                    "var ABBSWithdrawLimit =Ext.ComponentQuery.query('#txtAbbsWithdrawLimit')[0];",
                    "var ABBSDepositLimit=Ext.ComponentQuery.query('#txtAbbsDepositLimit')[0];",
                    "var ABBSAllowYN=Ext.ComponentQuery.query('#chkAbbstransaction')[0];",
                    "var migrationInProcess=Ext.ComponentQuery.query('#chkMigrationInProcess')[0];",
                    "var budgetAllocationYN=Ext.ComponentQuery.query('#chkBudgetAllocation')[0];",
                    "var transactionDate=Ext.ComponentQuery.query('#txtTransactionDateBS')[0];",
                    "var autoAdjustmentCollsht=Ext.ComponentQuery.query('#chkAutoCollnSheet')[0];",
                    "var autoAccountOnNonMem=Ext.ComponentQuery.query('#chkCreateAcOnNonMember')[0];",
                    "",
                    "var insertUpdate='D';",
                    "var rowId=Ext.ComponentQuery.query('#hdnRowID')[0];",
                    "",
                    "var resultCode='';",
                    "var resultMsg='';",
                    "",
                    "",
                    "var office={",
                    "",
                    "    OfficeCode :officeCode.getValue(),",
                    "    OfficeName: officeName.getValue(),",
                    "    OfficeTypeCode :officeTypeCode.getValue(),",
                    "    ParentOfficeCode :parentOfficeCode.getValue(),",
                    "    DistrictCode :districtCode.getValue(),",
                    "    ContactPerson :contactPerson.getValue(),",
                    "    PhoneNumber : phoneNo.getValue(),",
                    "    FaxNumber :faxNo.getValue(),",
                    "    Email :email.getValue(),",
                    "    Address :address.getValue(),",
                    "    AreaGrading: areaGrading,",
                    "    OfficeAccCodePrefix :officeAccCodePrefix.getValue(),",
                    "    EstablishedDate :establishedDate.getValue(),",
                    "    VdcCode :vdcCode.getValue(),",
                    "    CreatedBy :createdBy,",
                    "    CreatedOn :createdOn,",
                    "    MigratedDate :'',",
                    "    ThirdPartyData :'',",
                    "    OfficeStatus :'I',",
                    "    CenterRange :centerRange,",
                    "    FirstLoanDisburseDate :firstLoanDisburseDay,",
                    "    DisplaySeq :displaySeq,",
                    "    CurrentFiscalYear :currentFiscalYear,",
                    "    LastFiscalYear :lastFiscalyear,",
                    "    MaxPeriodAdditionalLoan :maxPeriodAdditionalLoan,",
                    "    CompulsoryCollectionAmt :compoulsaryCollectionAmt,",
                    "    MaxNoOfLoan :maxNoOfLoan,",
                    "    ControlFromCdms :controlFromCdms,",
                    "    BudgetControlYN :budgetControlYn.getValue()?'Y':'N',",
                    "    LocationCode :locationCode,",
                    "    ApprovalRangeControl :approvalRangeControl,",
                    "    CurrentYear :currentYear,",
                    "    BranchOnMW :branchOnMW,",
                    "    InterbranchAccountHead :interBranchAccountHead.getValue(),",
                    "    OfficeInactiveDate :officeInactiveDate,",
                    "    MigrationInProcess :migrationInProcess.getValue()?'Y':'N',",
                    "    TransactionDate :transactionDate.getValue(),",
                    "    DefaultLocationCode :'',",
                    "    ReportingGrp :'',",
                    "    AbbsAllowYN :ABBSAllowYN.getValue()?'Y':'N',",
                    "    AbbsWithdrawLimit :ABBSWithdrawLimit.getValue(),",
                    "    AbbsDepositLimit: ABBSDepositLimit.getValue(),",
                    "    SrgEnableYN :'',",
                    "    AutoAdjustmentCollSht :autoAdjustmentCollsht.getValue()?'Y':'N',",
                    "    OpenPublicMem :'',",
                    "    AutoAcOnNonMem :autoAccountOnNonMem.getValue()?'Y':'N',",
                    "    OfficeCategory :'',",
                    "    PRAccountHead :'',",
                    "    Action :'U',",
                    "    RowID:rowId.getValue(),",
                    "    BudgetAlloCationYN :budgetAllocationYN.getValue()",
                    "",
                    "};",
                    "",
                    "var waitSave = watiMsg(\"Updating Office .Please wait ...\");",
                    "",
                    "Ext.Ajax.request({",
                    "    url: '../Handlers/GeneralMasterParameters/office/OfficeHandler.ashx',",
                    "    params: {",
                    "        method:'Save',",
                    "        office:JSON.stringify(office)",
                    "    },",
                    "     success: function ( response, request ) {",
                    "                 waitSave.hide();",
                    "                    var out=Ext.decode(response.responseText);",
                    "                    console.log(out);",
                    "",
                    "                    if(out.success===\"true\")",
                    "                        {",
                    "                           msg(\"SUCCESS\",out.message);",
                    "                      }",
                    "                        else",
                    "                            {",
                    "                                msg(\"FAILURE\",out.message);",
                    "                            }",
                    "                    },",
                    "                    failure: function ( result, request ) {",
                    "                        waitSave.hide();",
                    "                        var out=Ext.decode(response.responseText);",
                    "                        msg(\"FAILURE\",out.message);",
                    "                    }",
                    "",
                    "",
                    "",
                    "        });",
                    "",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view",
                "implHandler": "code"
            },
            "name": "onBtnDeleteOfficeInfoClick",
            "designerId": "fbbffffd-3ba4-4926-b385-4965a28ba466"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtOfficeTypeCode",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField",
                "fn": "onTxtOfficeTypeCodeAfterRender",
                "implHandler": [
                    "component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SelectOfficeTypePopUp',{",
                    "           ",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });"
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onTxtOfficeTypeCodeAfterRender",
            "designerId": "e60360a5-c682-4e3e-8af5-5ec12688dde4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtDistrictCode",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField64",
                "fn": "onTxtDistrictCodeAfterRender",
                "implHandler": [
                    "component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SelectDistrictPopup',{",
                    "           ",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });",
                    ""
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view",
                "implHandler": "code"
            },
            "name": "onTxtDistrictCodeAfterRender",
            "designerId": "c417a6d1-554b-4254-a3f4-c92677c76ca8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtVdcNpCode",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField2",
                "fn": "onTxtVdcNpCodeAfterRender",
                "implHandler": [
                    "component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SelectVdcPopup',{",
                    "            ",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });"
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view",
                "implHandler": "code"
            },
            "name": "onTxtVdcNpCodeAfterRender",
            "designerId": "236ec59a-9e7a-4869-839a-e4cbdf4926cb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtParentOfficeCode",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField4",
                "fn": "onTxtParentOfficeCodeAfterRender",
                "implHandler": [
                    "component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SearchOfficePopup',{",
                    "           ",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });"
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view",
                "implHandler": "code"
            },
            "name": "onTxtParentOfficeCodeAfterRender",
            "designerId": "3b5ab245-3a8d-4740-946f-9b10f6675d08"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtInterBranchAccountHeadCode",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField80",
                "fn": "onTxtInterBranchAccountHeadCodeAfterRender",
                "implHandler": [
                    "component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SelectInterBranchAccountHeadPopup',{",
                    "           ",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });"
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view",
                "implHandler": "code"
            },
            "name": "onTxtInterBranchAccountHeadCodeAfterRender",
            "designerId": "24a13fe8-5406-43c2-b0a8-4ff679238ab8"
        }
    ]
}