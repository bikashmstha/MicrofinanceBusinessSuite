/*
 * File: app/controller/VATRegistrationAU.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.VATRegistrationAU', {
    extend: 'Ext.app.Controller',

    stores: [
        'BusReg_ApproxBusDetStore',
        'VAT_Reg_Contact_5',
        'VAT_Reg_DistrictStore',
        'VATReg_DocumentTypeStore'
    ],

    onVAT_Reg_NextClick: function(button, e, eOpts) {
        var vatReg=Ext.getCmp('VATRegistrationAU');

        var subNo="";
        var busType="";
        var val="";
        var regFor="";
        if(vatReg.extraParam)   
        {    
            subNo = vatReg.extraParam.subNo; 
            busType=vatReg.extraParam.busTyp;
            val=vatReg.extraParam.regFor;
            regFor=val;
        }


        //var val=Ext.ComponentQuery.query('#VAT_Reg_RedirectURL')[0].getValue();

        if(val==5)  //ITAX,VAT,EXCISE
        {
            uiConfig = {menuLink:'ExciseRegistration',pageTitle:'Excise Registration'};
            DynamicUI(uiConfig,function(){         
                //Ext.ComponentQuery.query('#Excise_Reg_RedirectURL')[0].setValue(val);
                //Ext.ComponentQuery.query('#Excise_Reg_PanAction')[0].setValue("A");
                // var ExciseRegNext=Ext.ComponentQuery.query('#Excise_Reg_Next')[0];            
                // ExciseRegNext.show();


            },{subNo:subNo,busTyp:busType,regFor:regFor});
            }    
            else if(val==7)  //ITAX,VAT
            {
                uiConfig = {menuLink:'ExciseRegistration',pageTitle:'Excise Registration'};
                DynamicUI(uiConfig,function(){         
                    //Ext.ComponentQuery.query('#Excise_Reg_RedirectURL')[0].setValue(val);
                    //Ext.ComponentQuery.query('#Excise_Reg_PanAction')[0].setValue("A");
                    // var ExciseRegNext=Ext.ComponentQuery.query('#Excise_Reg_Next')[0];            
                    // ExciseRegNext.show();


                },{subNo:subNo,busTyp:busType,regFor:regFor});

                }
                else
                {
                    return;
                }

                /////
    },

    onVAT_Reg_btnSaveClick: function(button, e, eOpts) {
        var nepServerDate=document.getElementById('nepDate').innerHTML;
        var me=this;

        var vatReg=Ext.getCmp('VATRegistrationAU');
        var paramm=vatReg.extraParam;

        var pan_no = paramm.pan_no; 
        var request_no = paramm.request_no;
        var office_code = paramm.office_code;
        var busType=paramm.busTyp;
        var busSubTyp=paramm.busSubTyp;
        var regFor=paramm.regFor;


        var saveAction=paramm.Action;



        var locationType3="";
        if(Ext.ComponentQuery.query('#VAT_Reg_T52LocationType1')[0].checked)
        {
            locationType="VD";
        }
        else if(Ext.ComponentQuery.query('#VAT_Reg_T52LocationType2')[0].checked)
        {
            locationType="MN";
        }
        else if(Ext.ComponentQuery.query('#VAT_Reg_T52LocationType3')[0].checked)
        {
            locationType="MM";
        }
        else if(Ext.ComponentQuery.query('#VAT_Reg_T52LocationType4')[0].checked)
        {
            locationType="SM";
        }

        var BusReg_ApproxBusDetStore= Ext.getStore('BusReg_ApproxBusDetStore');
        var Bus_Reg_Contact_5= Ext.getStore('VAT_Reg_Contact_5');


        //VATReg.extraParam.BusinessPersonnelSNo= businessPersonnelAddress.SNo;
        //VATReg.extraParam.businessPersonnelAddressAddressSNo= businessPersonnelAddressAddress.AddressSNO;

        var ContactPersonAddressAddress=
        {
            AddressSNO:paramm.businessPersonnelAddressAddressSNo?paramm.businessPersonnelAddressAddressSNo:0,
            HouseNo:Ext.ComponentQuery.query('#VAT_Reg_T52_Child_HouseNo')[0].getValue(),
            WardNo:Ext.ComponentQuery.query('#VAT_Reg_T52_Child_WardNo')[0].getValue()?Ext.ComponentQuery.query('#VAT_Reg_T52_Child_WardNo')[0].getValue():null,
            StreetName:Ext.ComponentQuery.query('#VAT_Reg_T52_Child_Tole')[0].getValue(),
            VdcTown:Ext.ComponentQuery.query('#VAT_Reg_T52_Child_VDC')[0].getValue(),
            LocationType:locationType3,
            DistrictCode:Ext.ComponentQuery.query('#VAT_Reg_T52_Child_District')[0].getValue(),
            Telephone:Bus_Reg_Contact_5.getAt(3).data.Value,
            AreaCode:'00',
            Fax:Bus_Reg_Contact_5.getAt(1).data.Value,
            Email:Bus_Reg_Contact_5.getAt(0).data.Value,
            PoBox:null,
            ExpiryDate:null,
            UserId:'ITS',//null,
            TranDate:null,   
            TranNo:null,

            PAN:pan_no,
            Office_Code:office_code,
            Request_No:request_no,

            Action:saveAction
        };

        var ContactPersonAddress={
            PAN:pan_no,
            Office_Code:office_code,
            Request_No:request_no,

            Business_SNO:0,
            BusinessPersonnelType:'CV',
            FromDateHas:'',
            Sno:paramm.BusinessPersonnelSNo?paramm.BusinessPersonnelSNo:0,
            AddressSNO:paramm.businessPersonnelAddressAddressSNo?paramm.businessPersonnelAddressAddressSNo:0,
            FromDate:nepServerDate,
            ToDate:null,
            Status:'S',
            TranNo:null,
            Action:saveAction,
            Address:ContactPersonAddressAddress
        };

        var ContactPerson=
        {
            PAN:pan_no,
            Office_Code:office_code,
            Request_No:request_no,

            Business_SNO:0,
            BusPerType:'CV',
            FromDate:nepServerDate,
            SNo:paramm.BusinessPersonnelSNo?paramm.BusinessPersonnelSNo:0,
            ToDate:null,
            FirstNameEng:Ext.ComponentQuery.query('#VAT_Reg_T52FirstNameEnglish')[0].getValue(),
            MiddleNameEng:Ext.ComponentQuery.query('#VAT_Reg_T52MiddleNameEnglish')[0].getValue(),
            LastNameEng:Ext.ComponentQuery.query('#VAT_Reg_T52LastNameEnglish')[0].getValue(),
            FirstNameNep:Ext.ComponentQuery.query('#VAT_Reg_T52FirstNameNepali')[0].getValue(),
            MiddleNameNep:Ext.ComponentQuery.query('#VAT_Reg_T52MiddleNameNepali')[0].getValue(),
            LastNameNep:Ext.ComponentQuery.query('#VAT_Reg_T52LastNameNepali')[0].getValue(),
            TranNo:null,
            Action:saveAction,
            BusinessPersonnelAddress:ContactPersonAddress,
            AppointedDate:Ext.ComponentQuery.query('#VAT_Reg_T52AppointedDate')[0].getValue(),
            IdDocument:Ext.ComponentQuery.query('#VAT_Reg_T52PaperType')[0].getValue(),
            IdNumber:Ext.ComponentQuery.query('#VAT_Reg_T52IdentityNo')[0].getValue(),
            IdIssueAuthority:Ext.ComponentQuery.query('#VAT_Reg_T52IssuedByOrg')[0].getValue(),
            IdIssueDate:Ext.ComponentQuery.query('#VAT_Reg_T52IssuedDate')[0].getValue(),
            IdIssuePlace:Ext.ComponentQuery.query('#VAT_Reg_T52IssuedByOrgPlace')[0].getValue(),
            Document:[],
            DocNameUnique:Ext.ComponentQuery.query('#VAT_Reg_T52DocumentTxt')[0].fullName,
            DocName:Ext.ComponentQuery.query('#VAT_Reg_T52DocumentTxt')[0].getValue(),
            Post:Ext.ComponentQuery.query('#VAT_Reg_T52Post')[0].getValue()
        };


        var taxpayerInfo=
        {

            PAN:pan_no,
            Office_Code:office_code,
            Request_No:request_no,

            TaxpayerType:'',
            UserID:'ITS',
            TranDate:Ext.ComponentQuery.query('#VAT_Reg_ApplicationDate')[0].getValue(),
            TaxableTurnover:BusReg_ApproxBusDetStore.getAt(0).data.YearlyBusiness,
            ExmptTurnoverIT:BusReg_ApproxBusDetStore.getAt(1).data.YearlyBusiness,
            ExmptTurnoverVAT:BusReg_ApproxBusDetStore.getAt(2).data.YearlyBusiness,
            Income:BusReg_ApproxBusDetStore.getAt(3).data.YearlyBusiness,
            AssessIncome:BusReg_ApproxBusDetStore.getAt(4).data.YearlyBusiness,
            TaxableIncome:BusReg_ApproxBusDetStore.getAt(5).data.YearlyBusiness,
            Export:BusReg_ApproxBusDetStore.getAt(6).data.YearlyBusiness,
            ExpectedTaxableTurnover:BusReg_ApproxBusDetStore.getAt(0).data.UpComingQuarterlyBusiness,
            ExpectedExmptTurnoverIT:BusReg_ApproxBusDetStore.getAt(1).data.UpComingQuarterlyBusiness,
            ExpectedExmptTurnoverVAT:BusReg_ApproxBusDetStore.getAt(2).data.UpComingQuarterlyBusiness,
            ExpectedIncome:BusReg_ApproxBusDetStore.getAt(3).data.UpComingQuarterlyBusiness,
            ExpectedAssessIncome:BusReg_ApproxBusDetStore.getAt(4).data.UpComingQuarterlyBusiness,
            ExpectedTaxableIncome:BusReg_ApproxBusDetStore.getAt(5).data.UpComingQuarterlyBusiness,
            ExpectedExport:BusReg_ApproxBusDetStore.getAt(6).data.UpComingQuarterlyBusiness,
            VountaryRegistrationVAT:Ext.ComponentQuery.query('#VAT_Reg_IsSelfMotivatedY')[0].getValue(),
            VoluntaryRegistrationFrom:Ext.ComponentQuery.query('#VAT_Reg_RegAppliedDate')[0].getValue(),
            OldITRegNumber:Ext.ComponentQuery.query('#VAT_Reg_ITRegNo')[0].getValue(),
            VATTpin:Ext.ComponentQuery.query('#VAT_Reg_MuAaKaTaxPayerRegNo')[0].getValue(),
            TranNo:null   ,
            ContactPerson:ContactPerson


        };

        Ext.Ajax.request({
            url: '../Handlers/Registration/Taxpayer/TaxpayerInfoHandler.ashx?method=RegisterVatTaxpayerAU',
            params: {
                taxpayerInfo:JSON.stringify( taxpayerInfo)
            },
            success: function(response){
                var text = response.responseText;
                var resp=Ext.decode(text);
                if(resp.success=='True'|| resp.success=='true')
                {
                    msg("Status","VAT Registration Successful.");
                    Ext.ComponentQuery.query('#VAT_Reg_Next')[0].enable();
                    me.Reload();
                }
                else
                {
                    msg("FAILURE","VAT Registration Failed.");
                }

            },
            failure: function ( result, request ) {
                msg("Failure"," Network Error !!!");  

            }
        });   


    },

    onVAT_Reg_btnSubmitClick: function(button, e, eOpts) {
        var nepServerDate=document.getElementById('nepDate').innerHTML;
        var me=this; 

        Ext.Msg.confirm('Confirm Action',
        'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?',
        function(btn) {
            if(btn == 'yes'){       


                var vatReg=Ext.getCmp('VATRegistrationAU');
                var paramm=vatReg.extraParam;

                var pan_no = paramm.pan_no; 
                var request_no = paramm.request_no;
                var office_code = paramm.office_code;
                var busType=paramm.busTyp;
                var busSubTyp=paramm.busSubTyp;
                var regFor=paramm.regFor;


                var saveAction=paramm.Action;



                var locationType3="";
                if(Ext.ComponentQuery.query('#VAT_Reg_T52LocationType1')[0].checked)
                {
                    locationType="VD";
                }
                else if(Ext.ComponentQuery.query('#VAT_Reg_T52LocationType2')[0].checked)
                {
                    locationType="MN";
                }
                else if(Ext.ComponentQuery.query('#VAT_Reg_T52LocationType3')[0].checked)
                {
                    locationType="MM";
                }
                else if(Ext.ComponentQuery.query('#VAT_Reg_T52LocationType4')[0].checked)
                {
                    locationType="SM";
                }

                var BusReg_ApproxBusDetStore= Ext.getStore('BusReg_ApproxBusDetStore');
                var Bus_Reg_Contact_5= Ext.getStore('VAT_Reg_Contact_5');


                //VATReg.extraParam.BusinessPersonnelSNo= businessPersonnelAddress.SNo;
                //VATReg.extraParam.businessPersonnelAddressAddressSNo= businessPersonnelAddressAddress.AddressSNO;

                var ContactPersonAddressAddress=
                {
                    AddressSNO:paramm.businessPersonnelAddressAddressSNo?paramm.businessPersonnelAddressAddressSNo:0,
                    HouseNo:Ext.ComponentQuery.query('#VAT_Reg_T52_Child_HouseNo')[0].getValue(),
                    WardNo:Ext.ComponentQuery.query('#VAT_Reg_T52_Child_WardNo')[0].getValue()?Ext.ComponentQuery.query('#VAT_Reg_T52_Child_WardNo')[0].getValue():null,
                    StreetName:Ext.ComponentQuery.query('#VAT_Reg_T52_Child_Tole')[0].getValue(),
                    VdcTown:Ext.ComponentQuery.query('#VAT_Reg_T52_Child_VDC')[0].getValue(),
                    LocationType:locationType3,
                    DistrictCode:Ext.ComponentQuery.query('#VAT_Reg_T52_Child_District')[0].getValue(),
                    Telephone:Bus_Reg_Contact_5.getAt(3).data.Value,
                    AreaCode:'00',
                    Fax:Bus_Reg_Contact_5.getAt(1).data.Value,
                    Email:Bus_Reg_Contact_5.getAt(0).data.Value,
                    PoBox:null,
                    ExpiryDate:null,
                    UserId:'ITS',//null,
                    TranDate:null,   
                    TranNo:null,

                    PAN:pan_no,
                    Office_Code:office_code,
                    Request_No:request_no,

                    Action:saveAction
                };

                var ContactPersonAddress={
                    PAN:pan_no,
                    Office_Code:office_code,
                    Request_No:request_no,

                    Business_SNO:0,
                    BusinessPersonnelType:'CV',
                    FromDateHas:'',
                    Sno:paramm.BusinessPersonnelSNo?paramm.BusinessPersonnelSNo:0,
                    AddressSNO:paramm.businessPersonnelAddressAddressSNo?paramm.businessPersonnelAddressAddressSNo:0,
                    FromDate:nepServerDate,
                    ToDate:null,
                    Status:'S',
                    TranNo:null,
                    Action:saveAction,
                    Address:ContactPersonAddressAddress
                };

                var ContactPerson=
                {
                    PAN:pan_no,
                    Office_Code:office_code,
                    Request_No:request_no,

                    Business_SNO:0,
                    BusPerType:'CV',
                    FromDate:nepServerDate,
                    SNo:paramm.BusinessPersonnelSNo?paramm.BusinessPersonnelSNo:0,
                    ToDate:null,
                    FirstNameEng:Ext.ComponentQuery.query('#VAT_Reg_T52FirstNameEnglish')[0].getValue(),
                    MiddleNameEng:Ext.ComponentQuery.query('#VAT_Reg_T52MiddleNameEnglish')[0].getValue(),
                    LastNameEng:Ext.ComponentQuery.query('#VAT_Reg_T52LastNameEnglish')[0].getValue(),
                    FirstNameNep:Ext.ComponentQuery.query('#VAT_Reg_T52FirstNameNepali')[0].getValue(),
                    MiddleNameNep:Ext.ComponentQuery.query('#VAT_Reg_T52MiddleNameNepali')[0].getValue(),
                    LastNameNep:Ext.ComponentQuery.query('#VAT_Reg_T52LastNameNepali')[0].getValue(),
                    TranNo:null,
                    Action:saveAction,
                    BusinessPersonnelAddress:ContactPersonAddress,
                    AppointedDate:Ext.ComponentQuery.query('#VAT_Reg_T52AppointedDate')[0].getValue(),
                    IdDocument:Ext.ComponentQuery.query('#VAT_Reg_T52PaperType')[0].getValue(),
                    IdNumber:Ext.ComponentQuery.query('#VAT_Reg_T52IdentityNo')[0].getValue(),
                    IdIssueAuthority:Ext.ComponentQuery.query('#VAT_Reg_T52IssuedByOrg')[0].getValue(),
                    IdIssueDate:Ext.ComponentQuery.query('#VAT_Reg_T52IssuedDate')[0].getValue(),
                    IdIssuePlace:Ext.ComponentQuery.query('#VAT_Reg_T52IssuedByOrgPlace')[0].getValue(),
                    Document:[],
                    DocNameUnique:Ext.ComponentQuery.query('#VAT_Reg_T52DocumentTxt')[0].fullName,
                    DocName:Ext.ComponentQuery.query('#VAT_Reg_T52DocumentTxt')[0].getValue(),
                    Post:Ext.ComponentQuery.query('#VAT_Reg_T52Post')[0].getValue()
                };


                var taxpayerInfo=
                {

                    PAN:pan_no,
                    Office_Code:office_code,
                    Request_No:request_no,

                    TaxpayerType:'',
                    UserID:'ITS',
                    TranDate:Ext.ComponentQuery.query('#VAT_Reg_ApplicationDate')[0].getValue(),
                    TaxableTurnover:BusReg_ApproxBusDetStore.getAt(0).data.YearlyBusiness,
                    ExmptTurnoverIT:BusReg_ApproxBusDetStore.getAt(1).data.YearlyBusiness,
                    ExmptTurnoverVAT:BusReg_ApproxBusDetStore.getAt(2).data.YearlyBusiness,
                    Income:BusReg_ApproxBusDetStore.getAt(3).data.YearlyBusiness,
                    AssessIncome:BusReg_ApproxBusDetStore.getAt(4).data.YearlyBusiness,
                    TaxableIncome:BusReg_ApproxBusDetStore.getAt(5).data.YearlyBusiness,
                    Export:BusReg_ApproxBusDetStore.getAt(6).data.YearlyBusiness,
                    ExpectedTaxableTurnover:BusReg_ApproxBusDetStore.getAt(0).data.UpComingQuarterlyBusiness,
                    ExpectedExmptTurnoverIT:BusReg_ApproxBusDetStore.getAt(1).data.UpComingQuarterlyBusiness,
                    ExpectedExmptTurnoverVAT:BusReg_ApproxBusDetStore.getAt(2).data.UpComingQuarterlyBusiness,
                    ExpectedIncome:BusReg_ApproxBusDetStore.getAt(3).data.UpComingQuarterlyBusiness,
                    ExpectedAssessIncome:BusReg_ApproxBusDetStore.getAt(4).data.UpComingQuarterlyBusiness,
                    ExpectedTaxableIncome:BusReg_ApproxBusDetStore.getAt(5).data.UpComingQuarterlyBusiness,
                    ExpectedExport:BusReg_ApproxBusDetStore.getAt(6).data.UpComingQuarterlyBusiness,
                    VountaryRegistrationVAT:Ext.ComponentQuery.query('#VAT_Reg_IsSelfMotivatedY')[0].getValue(),
                    VoluntaryRegistrationFrom:Ext.ComponentQuery.query('#VAT_Reg_RegAppliedDate')[0].getValue(),
                    OldITRegNumber:Ext.ComponentQuery.query('#VAT_Reg_ITRegNo')[0].getValue(),
                    VATTpin:Ext.ComponentQuery.query('#VAT_Reg_MuAaKaTaxPayerRegNo')[0].getValue(),
                    TranNo:null   ,
                    ContactPerson:ContactPerson


                };

                Ext.Ajax.request({
                    url: '../Handlers/Registration/Taxpayer/TaxpayerInfoHandler.ashx?method=RegisterVatTaxpayerAU',
                    params: {
                        taxpayerInfo:JSON.stringify( taxpayerInfo)
                    },
                    success: function(response){
                        var text = response.responseText;
                        var resp=Ext.decode(text);
                        if(resp.success=='True'|| resp.success=='true')
                        {
                            Ext.Ajax.request({
                                url: '../Handlers/Registration/RegSubmissionNoHandler.ashx?method=SubmitRegistrationAU',
                                params:{pan_no:pan_no,request_no:request_no,office_code:office_code},
                                // params:'',
                                success: function ( ressponse ) {
                                    var respp = ressponse.responseText;
                                    var dta=Ext.decode(respp);   
                                    if(dta.root.success=='true'||dta.root.success=='True'||dta.root.success)
                                    {                                                    


                                        msg("Status","Registration Information Saved And Submitted Successfully.");
                                    }
                                    else
                                    {
                                        me.submitMessage(dta.root);
                                    }
                                    me.Reload();
                                },
                                failure: function ( result, request ) {
                                    me.Reload();
                                    msg("FAILURE","Registration Information Saved Successfully But Submission Failed.");
                                }

                            });
                        }
                        else
                        {
                            msg("FAILURE","Registration Information Saving Failed.");
                        }
                        me.Reload();
                    },
                    failure: function ( result, request ) {
                        msg("FAILURE","Registration Information Saving Failed."); 
                        me.Reload();
                    }
                });   



                //////
            }
        },
        this);
        ///

    },

    onVATRegistrationAUAfterRender: function(component, eOpts) {
        //var statuBar= waitMsg("Loading Data. Please Wait...");
        this.Reload();
    },

    onVAT_Reg_btnCheckFilingPeriodClick: function(button, e, eOpts) {
        var txtFilingPeriod = Ext.ComponentQuery.query('#VAT_Reg_FilingPeriod')[0];
        txtFilingPeriod.setValue("");
        var voluntary = Ext.ComponentQuery.query('#VAT_Reg_IsSelfMotivatedY')[0].getValue();
        var threshold=Ext.ComponentQuery.query('#VATRegistrationAU')[0].extraParam.Threshold;

        if(voluntary===false)
        {
            txtFilingPeriod.setValue("Monthly ( मासिक )");
        }
        else
        {    
            var store = Ext.getStore('BusReg_ApproxBusDetStore'); 

            var TaxableTurnover = store.getAt(0).data.YearlyBusiness;
            TaxableTurnover=TaxableTurnover?TaxableTurnover:0;

            var ExpectedTaxableTurnover = store.getAt(0).data.UpComingQuarterlyBusiness;

            if(!ExpectedTaxableTurnover)
            {
                msg('WARNING','Please Provide Expected Taxable Turnover For Calculating Filing Period');
                return;
            }
            else
            {
                ExpectedTaxableTurnover=4*Number(ExpectedTaxableTurnover);
            }
            valToCompare=TaxableTurnover>ExpectedTaxableTurnover?TaxableTurnover:ExpectedTaxableTurnover;
            if(valToCompare>threshold)
            {
                txtFilingPeriod.setValue("Monthly ( मासिक )");
            }
            else
            {
                txtFilingPeriod.setValue("Trimester ( चाैमासिक )");
            }

        }


    },

    Reload: function() {
        var me=this;

        var vatReg=Ext.getCmp('VATRegistrationAU');
        var paramm=vatReg.extraParam;

        var pan_no = paramm.pan_no; 
        var request_no = paramm.request_no;
        var office_code = paramm.office_code;
        var busType=paramm.busTyp;
        var busSubTyp=paramm.busSubTyp;
        var regFor=paramm.regFor;




        if(indexOf.call(regFor, "EXCS") >=0)
        { 
            Ext.ComponentQuery.query('#VAT_Reg_Next')[0].enable();
            Ext.ComponentQuery.query('#VAT_Reg_Next')[0].show();
        }
        else
        {
            Ext.ComponentQuery.query('#VAT_Reg_Next')[0].disable();
            Ext.ComponentQuery.query('#VAT_Reg_Next')[0].hide();
        }


        Ext.getStore('VAT_Reg_DistrictStore').load();
        Ext.getStore('VATReg_DocumentTypeStore').load();



        Ext.Ajax.request({
            url: '../Handlers/Registration/Taxpayer/TaxpayerInfoHandler.ashx?method=GetVatTaxpayerAU',
            params:{pan_no:pan_no,request_no:request_no,office_code:office_code},
            success: function ( result, request ) {
                var data = Ext.decode(result.responseText); 
                if(data.root)
                {              
                    ///////
                    var taxpayerInfo=data.root; 
                    var businessPersonnel=taxpayerInfo.ContactPerson;
                    var businessPersonnelAddress=businessPersonnel.BusinessPersonnelAddress;
                    var businessPersonnelAddressAddress=businessPersonnelAddress.Address;

                    if(taxpayerInfo.Status=='Y')
                    {
                        me.MakeReadOnly();               
                    }

                    paramm.Threshold=data.root.Threshold;
                    paramm.Action=businessPersonnel.Action;
                    paramm.BusinessPersonnelSNo= businessPersonnel.SNo;
                    paramm.businessPersonnelAddressAddressSNo= businessPersonnelAddressAddress.AddressSNO;

                    var BusReg_ApproxBusDetStore=Ext.getStore('BusReg_ApproxBusDetStore');
                    var VAT_Reg_Contact_5=Ext.getStore('VAT_Reg_Contact_5');

                    //start Set business
                    Ext.ComponentQuery.query('#VAT_Reg_RegAppliedDate')[0].setValue(taxpayerInfo.VoluntaryRegistrationFrom);
                    Ext.ComponentQuery.query('#VAT_Reg_ITRegNo')[0].setValue(taxpayerInfo.OldITRegNumber);
                    Ext.ComponentQuery.query('#VAT_Reg_MuAaKaTaxPayerRegNo')[0].setValue(taxpayerInfo.VATTpin);
                    Ext.ComponentQuery.query('#VAT_Reg_ApplicationDate')[0].setValue(taxpayerInfo.TranDate);
                    if(taxpayerInfo.VountaryRegistrationVAT==true)
                    {
                        Ext.ComponentQuery.query('#VAT_Reg_IsSelfMotivatedY')[0].setValue(true);
                    }
                    else
                    {
                        Ext.ComponentQuery.query('#VAT_Reg_IsSelfMotivatedN')[0].setValue(true);
                    }




                    BusReg_ApproxBusDetStore.getAt(0).set({YearlyBusiness:taxpayerInfo.TaxableTurnover});
                    BusReg_ApproxBusDetStore.getAt(1).set({YearlyBusiness:taxpayerInfo.ExmptTurnoverIT});
                    BusReg_ApproxBusDetStore.getAt(2).set({YearlyBusiness:taxpayerInfo.ExmptTurnoverVAT});
                    BusReg_ApproxBusDetStore.getAt(3).set({YearlyBusiness:taxpayerInfo.Income});
                    BusReg_ApproxBusDetStore.getAt(4).set({YearlyBusiness:taxpayerInfo.AssessIncome});
                    BusReg_ApproxBusDetStore.getAt(5).set({YearlyBusiness:taxpayerInfo.TaxableIncome});
                    BusReg_ApproxBusDetStore.getAt(6).set({YearlyBusiness:taxpayerInfo.Export});
                    BusReg_ApproxBusDetStore.getAt(0).set({UpComingQuarterlyBusiness:taxpayerInfo.ExpectedTaxableTurnover});
                    BusReg_ApproxBusDetStore.getAt(1).set({UpComingQuarterlyBusiness:taxpayerInfo.ExpectedExmptTurnoverIT});
                    BusReg_ApproxBusDetStore.getAt(2).set({UpComingQuarterlyBusiness:taxpayerInfo.ExpectedExmptTurnoverVAT});
                    BusReg_ApproxBusDetStore.getAt(3).set({UpComingQuarterlyBusiness:taxpayerInfo.ExpectedIncome});
                    BusReg_ApproxBusDetStore.getAt(4).set({UpComingQuarterlyBusiness:taxpayerInfo.ExpectedTaxableIncome});
                    BusReg_ApproxBusDetStore.getAt(5).set({UpComingQuarterlyBusiness:taxpayerInfo.ExpectedTaxableIncome});
                    BusReg_ApproxBusDetStore.getAt(6).set({UpComingQuarterlyBusiness:taxpayerInfo.ExpectedExport});



                    //start Set businessPersonnelAddressAddress
                    var locationType=businessPersonnelAddressAddress.LocationType;
                    if(locationType=="VD")
                    {
                        Ext.ComponentQuery.query('#VAT_Reg_T52LocationType1')[0].setValue(true);
                    }
                    else if(locationType=="MN")
                    {
                        Ext.ComponentQuery.query('#VAT_Reg_T52LocationType2')[0].setValue(true);
                    }
                    else if(locationType=="MM")
                    {
                        Ext.ComponentQuery.query('#VAT_Reg_T52LocationType3')[0].setValue(true);
                    }
                    else if(locationType=="SM")
                    {
                        Ext.ComponentQuery.query('#VAT_Reg_T52LocationType4')[0].setValue(true);
                    }                



                    Ext.ComponentQuery.query('#VAT_Reg_T52_Child_HouseNo')[0].setValue(businessPersonnelAddressAddress.HouseNo);
                    Ext.ComponentQuery.query('#VAT_Reg_T52_Child_WardNo')[0].setValue(businessPersonnelAddressAddress.WardNo);
                    Ext.ComponentQuery.query('#VAT_Reg_T52_Child_Tole')[0].setValue(businessPersonnelAddressAddress.StreetName);
                    Ext.ComponentQuery.query('#VAT_Reg_T52_Child_VDC')[0].setValue(businessPersonnelAddressAddress.VdcTown);

                    Ext.ComponentQuery.query('#VAT_Reg_T52_Child_District')[0].setValue(businessPersonnelAddressAddress.DistrictCode);
                    VAT_Reg_Contact_5.getAt(3).set({Value:businessPersonnelAddressAddress.Telephone});
                    // Ext.ComponentQuery.query('#VAT_Reg_T52_Child_Region')[0].setValue(businessPersonnelAddressAddress.AreaCode);
                    VAT_Reg_Contact_5.getAt(1).set({Value:businessPersonnelAddressAddress.Fax});
                    VAT_Reg_Contact_5.getAt(0).set({Value:businessPersonnelAddressAddress.Email});   

                    //end Set BusinessPersonnelAddressAddress

                    //start Set BusinessPersonnel   
                    Ext.ComponentQuery.query('#VAT_Reg_T52FirstNameEnglish')[0].setValue(businessPersonnel.FirstNameEng);
                    Ext.ComponentQuery.query('#VAT_Reg_T52MiddleNameEnglish')[0].setValue(businessPersonnel.MiddleNameEng);
                    Ext.ComponentQuery.query('#VAT_Reg_T52LastNameEnglish')[0].setValue(businessPersonnel.LastNameEng);
                    Ext.ComponentQuery.query('#VAT_Reg_T52FirstNameNepali')[0].setValue(businessPersonnel.FirstNameNep);
                    Ext.ComponentQuery.query('#VAT_Reg_T52MiddleNameNepali')[0].setValue(businessPersonnel.MiddleNameNep);
                    Ext.ComponentQuery.query('#VAT_Reg_T52LastNameNepali')[0].setValue(businessPersonnel.LastNameNep);
                    Ext.ComponentQuery.query('#VAT_Reg_T52AppointedDate')[0].setValue(businessPersonnel.AppointedDate);
                    Ext.ComponentQuery.query('#VAT_Reg_T52PaperType')[0].setValue(businessPersonnel.IdDocument);
                    Ext.ComponentQuery.query('#VAT_Reg_T52IdentityNo')[0].setValue(businessPersonnel.IdNumber);
                    Ext.ComponentQuery.query('#VAT_Reg_T52IssuedByOrg')[0].setValue(businessPersonnel.IdIssueAuthority);
                    Ext.ComponentQuery.query('#VAT_Reg_T52IssuedDate')[0].setValue(businessPersonnel.IdIssueDate);
                    Ext.ComponentQuery.query('#VAT_Reg_T52IssuedByOrgPlace')[0].setValue(businessPersonnel.IdIssuePlace);
                    Ext.ComponentQuery.query('#VAT_Reg_T52DocumentTxt')[0].fullName=businessPersonnel.DocNameUnique;
                    Ext.ComponentQuery.query('#VAT_Reg_T52DocumentTxt')[0].setValue(businessPersonnel.DocName);
                    Ext.ComponentQuery.query('#VAT_Reg_T52Post')[0].setValue(businessPersonnel.Post);
                    //end Set BusinessPersonnel
                    ////////
                    //   status.close();

                }

            },
            failure: function ( result, request ) {

                Ext.Msg.show({
                    title: 'Failure',
                    msg: 'ERROR OCURRED !!!' ,
                    buttons: Ext.MessageBox.OK,
                    icon:Ext.Msg.ERROR
                });
            }

        });

    },

    MakeReadOnly: function() {
        var pan=Ext.ComponentQuery.query('#VATRegistrationAU')[0];
        pan.query('.field,.combo').forEach(function(c){c.setReadOnly(true);});
        pan.query('.grid').forEach(function(c){ c.on('beforeedit', function(editor, e) { return false;});});

        var VAT_Reg_Next=Ext.ComponentQuery.query('#VAT_Reg_Next')[0]; 
        VAT_Reg_Next.enable();


        var VAT_Reg_T52Document=Ext.ComponentQuery.query('#VAT_Reg_T52Document')[0]; 
        VAT_Reg_T52Document.disable();

        var VAT_Reg_btnSave=Ext.ComponentQuery.query('#VAT_Reg_btnSave')[0]; 
        VAT_Reg_btnSave.disable();

        var VAT_Reg_btnSubmit=Ext.ComponentQuery.query('#VAT_Reg_btnSubmit')[0]; 
        VAT_Reg_btnSubmit.disable();

        var VAT_Reg_btnCancel=Ext.ComponentQuery.query('#VAT_Reg_btnCancel')[0]; 
        VAT_Reg_btnCancel.disable();

    },

    submitMessage: function(obj) {
        var winPopup = Ext.create('MyApp.view.SubmitError',{
            autoScroll:true,
            width:700,
            height:500,

            draggable:true,
            maximizable:true,
            minimizable:true,
            resizable:false,
            modal:true,
            title:"",
            y:80,
            layout:'fit'
        });           

        winPopup.extraParam={param:obj};
        winPopup.show();

    },

    init: function(application) {
        this.control({
            "#VAT_Reg_Next": {
                click: this.onVAT_Reg_NextClick
            },
            "#VAT_Reg_btnSave": {
                click: this.onVAT_Reg_btnSaveClick
            },
            "#VAT_Reg_btnSubmit": {
                click: this.onVAT_Reg_btnSubmitClick
            },
            "#VATRegistrationAU": {
                afterrender: this.onVATRegistrationAUAfterRender
            },
            "#VAT_Reg_btnCheckFilingPeriod": {
                click: this.onVAT_Reg_btnCheckFilingPeriodClick
            }
        });
    }

});
