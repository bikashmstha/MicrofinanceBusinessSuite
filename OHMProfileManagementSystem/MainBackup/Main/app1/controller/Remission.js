/*
 * File: app/controller/Remission.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.Remission', {
    extend: 'Ext.app.Controller',

    stores: [
        'RemissionOn',
        'FiscalYear',
        'RemissionDetails'
    ],

    onBtnAddtxtRemissionDetailClick: function(button, e, eOpts) {
        var count = 0;
        var errorMsg = "";
        var loadMsg = "";



        //var txtRemissionNumber = Ext.ComponentQuery.query('#txtRemissionNumber')[0].getValue();
        var txtRemission_PanNo =  Ext.ComponentQuery.query('#txtRemission_PanNo')[0].getValue();
        var txtRemission_AccType = Ext.ComponentQuery.query('#txtRemission_AccType')[0].getValue();
        var txtRemissionDate = Ext.ComponentQuery.query('#txtRemissionDate')[0].getValue();
        var txtRemissionReason = Ext.ComponentQuery.query('#txtRemissionReason')[0].getValue();
        var txtRemissionAuthority = Ext.ComponentQuery.query('#txtRemissionAuthority')[0].getValue();
        var txtRemissionOrderDate = Ext.ComponentQuery.query('#txtRemissionOrderDate')[0].getValue();
        var txtRemissionOfficerCode = Ext.ComponentQuery.query('#txtRemissionOfficerCode')[0].getValue();
        var txtRemissionOfficerName = Ext.ComponentQuery.query('#txtRemissionOfficerName')[0].getValue();

        if(txtRemissionDate === "")
        {

            count++;
            errorMsg = errorMsg + '<br/>'+ count + ") कृपया मिनाहा मिति भर्नुहोस्!!!";

        }

        if(txtRemission_PanNo === "")
        {

            count++;
            errorMsg = errorMsg + '<br/>'+ count + ") कृपया स्था . ले . नं . भर्नुहोस्!!!";

        }

        if(txtRemission_AccType === "")
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ")कृपया खाताको किसिम  भर्नुहोस्!!!";

        }



        if(count >0)
        {
            msg("WARNING",errorMsg);
            return false;
        }







        //var btnAddtxtRemissionDetail = Ext.ComponentQuery.query('#btnAddtxtRemissionDetail')[0];
        var grd = Ext.ComponentQuery.query('#grdRemissionDetails')[0];
        var rec = {
            OfficeCode:null,
            RemissionNo:'',
            RemissionDate:'',
            RemissionOn:'',
            RemissionAmount:null,
            FiscalYear:'',
            Terminal:'',
            Trandate:'',
            UserName:'',
            Action:''
        };

        if(grd.store.add(rec))
        {
            var btnAddtxtRemissionDetail= Ext.ComponentQuery.query('#btnAddtxtRemissionDetail')[0];
            btnAddtxtRemissionDetail.disable(true);
        }
        //grd.store.add(rec);

        var col = grd.headerCt.getHeaderAtIndex(0);
        var recd = grd.store.data.items;
        var record = recd[recd.length-1];
        grd.getPlugin('plugIngrdRemissionDetails').startEdit(record, col);		

    },

    onTxtRemission_PanNoBlur: function(component, e, eOpts) {
        this.RemissionTaxpayerInfo();
    },

    onBtn_Remission_SaveClick: function(button, e, eOpts) {
        this.SaveRemission("I");
    },

    onBtn_Remission_EditClick: function(button, e, eOpts) {
        var hdnRemission_Action = Ext.ComponentQuery.query('#hdnRemission_Action')[0];
        var hdnlblRemissionAction  = Ext.ComponentQuery.query('#hdnlblRemissionAction')[0];
        var txtRemissionNumber = Ext.ComponentQuery.query('#txtRemissionNumber')[0];
        hdnRemission_Action.setValue("E");
        hdnlblRemissionAction.setValue("Updating ...  मिनाहा न. भर्नुहोस् !!!");
        txtRemissionNumber.setDisabled(false);
        txtRemissionNumber.focus();

        Ext.ComponentQuery.query('#txtRemission_PanNo')[0].setReadOnly(true);
        Ext.ComponentQuery.query('#txtRemission_PanNo')[0].clearInvalid();



    },

    onBtn_Remission_DeleteClick: function(button, e, eOpts) {
        var me = this;
        var hdnRemission_Action = Ext.ComponentQuery.query('#hdnRemission_Action')[0];
        var hdnlblRemissionAction  = Ext.ComponentQuery.query('#hdnlblRemissionAction')[0];
        hdnRemission_Action.setValue("D");
        hdnlblRemissionAction.setValue("Deleting  ...  मिनाहा न. भर्नुहोस् !!!");


    },

    onBtn_Remission_submitClick: function(button, e, eOpts) {

        var me = this;
        var count = 0;
        var errorMsg = "";
        var loadMsg = "";

        var form = button.up('form').getForm();
        var action =  Ext.ComponentQuery.query('#hdnRemission_Action')[0].getValue();
        var hdn_Remission_Office_Code = Ext.ComponentQuery.query('#hdn_Remission_Office_Code')[0].getValue();
        var offCode = Ext.ComponentQuery.query('#RemissionLoginOffcode')[0].getValue();


        var txtRemission_PanNo =  Ext.ComponentQuery.query('#txtRemission_PanNo')[0].getValue();
        var txtRemission_AccType = Ext.ComponentQuery.query('#txtRemission_AccType')[0].getValue();
        var txtRemissionDate = Ext.ComponentQuery.query('#txtRemissionDate')[0].getValue();



        if(txtRemissionDate === "")
        {

            count++;
            errorMsg = errorMsg + '<br/>'+ count + ") कृपया  मिनाहा मिति भर्नुहोस् !!!";

        }

        if(txtRemission_PanNo === "")
        {

            count++;
            errorMsg = errorMsg + '<br/>'+ count + ") कृपया स्था . ले . नं . भर्नुहोस् !!!";

        }

        if(txtRemission_AccType === "")
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया खाताको किसिम  भर्नुहोस् !!!";

        }



        if(count >0)
        {
            msg("WARNING",errorMsg);
            return false;
        }


        /*
        if(action == "E" && Ext.ComponentQuery.query('#txtRemissionNumber')[0].getValue()  === "")
        {
        msg("WARNING","Please Enter Remission Number !!!");

        return;
        }

        if(!form.isValid())
        {
        msg("WARNING","Please Fill the required fields !!!");   
        return;

        }
        */

        if(action === "D")
        {

            //------------------------------------------------------
            // NB: Posting Data to Server
            //------------------------------------------------------

            Ext.Ajax.request({
                url:"../Handlers/IncomeTax/Remissions/RemissionInfoHandler.ashx?method=DeleteRemission",
                params:{OfficeCode:Ext.ComponentQuery.query('#RemissionLoginOffcode')[0].getValue(),RemissionNumber:Ext.ComponentQuery.query('#txtRemissionNumber')[0].getValue()
                },
                success: function ( result, request ) {

                    var obj = Ext.decode(result.responseText);

                    msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);

                    if(obj.success === "false") return;


                    me.ClearRemission();



                },
                failure: function ( result, request ) {

                    var obj = Ext.decode(result.responseText);

                    msg("FAILURE",obj.message);
                    return;
                }

            });


        }

        else
        {
            Ext.Msg.confirm('Confirm Action', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
                if(btn == 'yes'){


                    me.SaveRemission("F");

                    return true;
                }
            }, this);


        }

    },

    onBtn_Remission_CancelClick: function(button, e, eOpts) {

        this.ClearRemission();
    },

    onTxtRemissionAmountChange: function(field, newValue, oldValue, eOpts) {

        this.CalRemAmount();
    },

    onTxtRemissionNumberKeypress: function(textfield, e, eOpts) {
        var me=this;
        //var hdn_Remission_Office_Code1 = Ext.ComponentQuery.query('#hdn_Remission_Office_Code')[0].getValue();
        //var txtRemissionNumber1 =  Ext.ComponentQuery.query('#txtRemissionNumber')[0].getValue();
        //alert(hdn_Remission_Office_Code1,txtRemissionNumber1);

        Ext.getStore('RemissionDetails').loadData([],false);

        if(e.keyCode === 13 || e.keyCode === 9)
        {
            // var hdn_Remission_Office_Code = Ext.ComponentQuery.query('#hdn_Remission_Office_Code')[0].getValue();
            //var txtRemissionNumber =  Ext.ComponentQuery.query('#txtRemissionNumber')[0].getValue();
            //var offCode = Ext.ComponentQuery.query('#RemissionLoginOffcode')[0].getValue();
            // alert(hdn_Remission_Office_Code,txtRemissionNumber);

            Ext.Ajax.request({
                url: '../Handlers/IncomeTax/Remissions/RemissionInfoHandler.ashx',
                params: {
                    method:'GetRemission',OfficeCode:Ext.ComponentQuery.query('#RemissionLoginOffcode')[0].getValue(),RemissionNumber:Ext.ComponentQuery.query('#txtRemissionNumber')[0].getValue(),
                    id: 1
                },
                success: function(response){
                    var obj =Ext.decode( response.responseText);
                    console.log(obj);
                    var itbRemission = obj.root;
                    var taxpayer = itbRemission.Taxpayer;
                    var office = taxpayer.Office;
                    var address = taxpayer.BusinessAddress.Address;


                    //Ext.ComponentQuery.query('#hdn_Remission_Office_Code')[0].setValue(office.OfficeCode);

                    Ext.ComponentQuery.query('#Remission_IROName')[0].setValue(office.OfficeNameNepali);
                    Ext.ComponentQuery.query('#txtRemission_Name')[0].setValue(taxpayer.Name);

                    Ext.ComponentQuery.query('#txtRemission_HouseNo')[0].setValue(address.HouseNo);

                    Ext.ComponentQuery.query('#txtRemission_WardNo')[0].setValue(address.WardNo);

                    Ext.ComponentQuery.query('#txtRemission_ToleName')[0].setValue(address.StreetName);


                    if(address.LocationType === 'MM')
                    {
                        Ext.ComponentQuery.query('#rdl_Remission_Metro_Mun')[0].setValue(true);
                    }
                    else if(address.LocationType === 'SM')
                    {
                        Ext.ComponentQuery.query('#rdl_Remission_Sub_Metro_Mun')[0].setValue(true);
                    }
                    else if(address.LocationType === 'MN')
                    {
                        Ext.ComponentQuery.query('#rdl_Remission_Mun')[0].setValue(true);
                    }
                    else if(address.LocationType === 'VD')
                    {
                        Ext.ComponentQuery.query('#rdl_Remission_VDC')[0].setValue(true);
                    }

                    Ext.ComponentQuery.query('#txtRemission_VDCName')[0].setValue(address.VdcTown);

                    Ext.ComponentQuery.query('#txtRemission_DistrictName')[0].setValue(address.DistrictNameNep);

                    Ext.ComponentQuery.query('#txtRemission_Phone')[0].setValue(address.Telephone);

                    Ext.ComponentQuery.query('#txtRemission_Mobile')[0].setValue(address.Phone);

                    Ext.ComponentQuery.query('#txtRemission_Email')[0].setValue(address.Email);

                    if(taxpayer.AcctStatus ==='A')
                    Ext.ComponentQuery.query('#Remission_TpOfficeType')[0].setValue('सक्रिय');

                    //Load Remission

                    Ext.ComponentQuery.query('#txtRemission_PanNo')[0].setValue(itbRemission.PAN); 
                    Ext.ComponentQuery.query('#txtRemission_AccType')[0].setValue(itbRemission.AccType);
                    Ext.ComponentQuery.query('#txtRemissionDate')[0].setValue(itbRemission.RemissionDate);
                    Ext.ComponentQuery.query('#txtRemissionReason')[0].setValue(itbRemission.RemissionReason);
                    Ext.ComponentQuery.query('#txtRemissionAuthority')[0].setValue(itbRemission.RemissionAuthority);
                    Ext.ComponentQuery.query('#txtRemissionOrderDate')[0].setValue(itbRemission.OrderDate);
                    Ext.ComponentQuery.query('#txtRemissionOfficerCode')[0].setValue(itbRemission.OfficerCode);
                    Ext.ComponentQuery.query('#txtRemissionOfficerName')[0].setValue(itbRemission.OfficerName);
                    Ext.ComponentQuery.query('#hdnRemissionTranNo')[0].setValue(itbRemission.TranNo);
                    // Ext.ComponentQuery.query('#hdnRemission_Action')[0].setValue(itbRemission.TranNo);

                    // Load Remission Details


                    //Ext.ComponentQuery.query('#txtTotalRemissionAmount')[0].setValue(itbRemission.RemissionDetails.RemissionAmount);
                    var hdnRemission_Action = Ext.ComponentQuery.query('#hdnRemission_Action')[0];
                    if(hdnRemission_Action.getValue() !== "D")
                    hdnRemission_Action.setValue(itbRemission.Action);

                    var grd = Ext.ComponentQuery.query('#grdRemissionDetails')[0];
                    var store  = Ext.getStore('RemissionDetails');
                    var sum = 0;
                    var finAmount = Ext.ComponentQuery.query('#txtTotalRemissionAmount')[0];

                    store.add(itbRemission.RemissionDetails);

                    store.each(function (rec) {     
                        var rAmount = rec.get('RemissionAmount') === ""? null:rec.get('RemissionAmount');

                        rec.data.RemissionAmount = rAmount;

                        var rAmount1 = (rAmount === null)?0:rAmount;

                        rec.data.RemissionAmount = rAmount1;

                        if(rec.data.RemissionAmount !== "")
                        {
                            sum = parseFloat(sum) + parseFloat(rec.data.RemissionAmount); 
                        }

                    });

                    grd.bindStore(store);
                    //alert(sum);
                    finAmount.setValue(sum);
                    // console.log('amount' + itbRemission.RemissionDetails.RemissionAmount);

                    var btn_Remission_Save = Ext.ComponentQuery.query("#btn_Remission_Save")[0];
                    var btn_Remission_submit = Ext.ComponentQuery.query("#btn_Remission_submit")[0];
                    var btn_Remission_Delete = Ext.ComponentQuery.query("#btn_Remission_Delete")[0];
                    var btnAddtxtRemissionDetail= Ext.ComponentQuery.query('#btnAddtxtRemissionDetail')[0];

                    if(obj.message === "F" || itbRemission.RecordStatus === "F") 
                    {

                        btnAddtxtRemissionDetail.disable(true);
                        btn_Remission_Save.setDisabled(true);
                        btn_Remission_submit.setDisabled(true);
                        btn_Remission_Delete.setDisabled(true);

                        msg("WARNING","This Record is already Finalized !!!");

                        return;                
                    }

                    if(obj.message === "D" || itbRemission.RecordStatus === "D") 
                    {

                        btnAddtxtRemissionDetail.disable(true);
                        btn_Remission_Save.setDisabled(true);
                        btn_Remission_submit.setDisabled(true);
                        btn_Remission_Delete.setDisabled(true);

                        msg("WARNING","This Record is already Deleted !!!");

                        return;                
                    }




                },
                failure: function ( result, request ) {
                    Ext.Msg.show({
                        title: 'Failure',
                        msg: 'ERROR OCURRED !!!' ,
                        buttons: Ext.MessageBox.OK,
                        icon:Ext.Msg.ERROR
                    });
                }
            });                    

        }

    },

    onBtn_Remission_BackClick: function(button, e, eOpts) {

        var param = Ext.ComponentQuery.query('#pnlRemission')[0].extraParam;
        var tNo = param.tranNo;
        var idxM = param.indexM;
        var idxT = param.indexT;
        //alert(tNo);
        //alert(idxM);
        //alert(idxT);

        Ext.ComponentQuery.query('#PopupWindow')[0].close();

        uiConfig = {menuLink:mName,pageTitle:mName};
        var params={tranNo:tranNo,from:"MV"};

        dynamicPopUp(mName,{params:params});
    },

    onPnlRemissionAfterRender: function(component, eOpts) {
        var acctType = Ext.ComponentQuery.query('#txtRemission_AccType')[0];
        acctType.setValue('10');
        var offCode = Ext.get('offCode').dom.innerHTML;
        Ext.ComponentQuery.query('#RemissionLoginOffcode')[0].setValue(offCode);
        Ext.getStore('RemissionDetails').loadData([],false);

        var me=this;

        var hdnAct = Ext.ComponentQuery.query('#hdnRemAct')[0];
        hdnAct.setValue("T");
        //var grd1 = Ext.ComponentQuery.query('#grdRemissionDetails')[0];
        //grd1.getStore().removeAll();
        var objParam = Ext.ComponentQuery.query('#pnlRemission')[0];


        //console.log(objParam);
        if (!objParam.extraParam)
        {
            me.ReadOnlyShowHideControls("");
            hdnAct.setValue("");
            /* me.LoadUserOffice();

            hdnAct.setValue("");
            me.ClearControls();
            me.ReadOnlyData("p");*/
            return;
        }

        var param = objParam.extraParam.params;
        var tranNo = param.tranNo;

        //alert(tranNo);
        //var wait = watiMsg('loading ...');

        Ext.Ajax.request({
            url: '../Handlers/IncomeTax/Remissions/RemissionInfoHandler.ashx',
            params: {
                method:'GetRemissionByTranNo',tranNo:tranNo,
                id: 1
            },
            success: function(response){
                var obj =Ext.decode( response.responseText);
                console.log(obj);
                var itbRemission = obj.root;
                var taxpayer = itbRemission.Taxpayer;
                var office = taxpayer.Office;
                var address = taxpayer.BusinessAddress.Address;
                Ext.getStore('RemissionDetails').loadData([],false);


                //Ext.ComponentQuery.query('#hdn_Remission_Office_Code')[0].setValue(office.OfficeCode);

                Ext.ComponentQuery.query('#Remission_IROName')[0].setValue(office.OfficeNameNepali);
                Ext.ComponentQuery.query('#txtRemission_Name')[0].setValue(taxpayer.Name);

                Ext.ComponentQuery.query('#txtRemission_HouseNo')[0].setValue(address.HouseNo);

                Ext.ComponentQuery.query('#txtRemission_WardNo')[0].setValue(address.WardNo);

                Ext.ComponentQuery.query('#txtRemission_ToleName')[0].setValue(address.StreetName);


                if(address.LocationType === 'MM')
                {
                    Ext.ComponentQuery.query('#rdl_Remission_Metro_Mun')[0].setValue(true);
                }
                else if(address.LocationType === 'SM')
                {
                    Ext.ComponentQuery.query('#rdl_Remission_Sub_Metro_Mun')[0].setValue(true);
                }
                else if(address.LocationType === 'MN')
                {
                    Ext.ComponentQuery.query('#rdl_Remission_Mun')[0].setValue(true);
                }
                else if(address.LocationType === 'VD')
                {
                    Ext.ComponentQuery.query('#rdl_Remission_VDC')[0].setValue(true);
                }

                Ext.ComponentQuery.query('#txtRemission_VDCName')[0].setValue(address.VdcTown);

                Ext.ComponentQuery.query('#txtRemission_DistrictName')[0].setValue(address.DistrictNameNep);

                Ext.ComponentQuery.query('#txtRemission_Phone')[0].setValue(address.Telephone);

                Ext.ComponentQuery.query('#txtRemission_Mobile')[0].setValue(address.Phone);

                Ext.ComponentQuery.query('#txtRemission_Email')[0].setValue(address.Email);

                if(taxpayer.AcctStatus==='A')
                Ext.ComponentQuery.query('#Remission_TpOfficeType')[0].setValue('सक्रिय');

                //Load Remission

                Ext.ComponentQuery.query('#txtRemission_PanNo')[0].setValue(itbRemission.PAN); 
                Ext.ComponentQuery.query('#txtRemission_AccType')[0].setValue(itbRemission.AccType);
                Ext.ComponentQuery.query('#txtRemissionDate')[0].setValue(itbRemission.RemissionDate);
                Ext.ComponentQuery.query('#txtRemissionReason')[0].setValue(itbRemission.RemissionReason);
                Ext.ComponentQuery.query('#txtRemissionAuthority')[0].setValue(itbRemission.RemissionAuthority);
                Ext.ComponentQuery.query('#txtRemissionOrderDate')[0].setValue(itbRemission.OrderDate);
                Ext.ComponentQuery.query('#txtRemissionOfficerCode')[0].setValue(itbRemission.OfficerCode);
                Ext.ComponentQuery.query('#txtRemissionOfficerName')[0].setValue(itbRemission.OfficerName);
                Ext.ComponentQuery.query('#hdnRemissionTranNo')[0].setValue(itbRemission.TranNo);
                // Ext.ComponentQuery.query('#hdnRemission_Action')[0].setValue(itbRemission.TranNo);

                // Load Remission Details


                //Ext.ComponentQuery.query('#txtTotalRemissionAmount')[0].setValue(itbRemission.RemissionDetails.RemissionAmount);
                var hdnRemission_Action = Ext.ComponentQuery.query('#hdnRemission_Action')[0];
                if(hdnRemission_Action.getValue() !== "D")
                hdnRemission_Action.setValue(itbRemission.Action);

                var grd = Ext.ComponentQuery.query('#grdRemissionDetails')[0];
                var store  = Ext.getStore('RemissionDetails');
                var sum = 0;
                var finAmount = Ext.ComponentQuery.query('#txtTotalRemissionAmount')[0];

                store.add(itbRemission.RemissionDetails);

                store.each(function (rec) {     
                    var rAmount = rec.get('RemissionAmount') === ""? null:rec.get('RemissionAmount');

                    rec.data.RemissionAmount = rAmount;

                    var rAmount1 = (rAmount === null)?0:rAmount;

                    rec.data.RemissionAmount = rAmount1;

                    if(rec.data.RemissionAmount !== "")
                    {
                        sum = parseFloat(sum) + parseFloat(rec.data.RemissionAmount); 
                    }

                });

                grd.bindStore(store);

                finAmount.setValue(sum);
                // console.log('amount' + itbRemission.RemissionDetails.RemissionAmount);


            },
            failure: function ( result, request ) {
                Ext.Msg.show({
                    title: 'Failure',
                    msg: 'ERROR OCURRED !!!' ,
                    buttons: Ext.MessageBox.OK,
                    icon:Ext.Msg.ERROR
                });
            }
        }); 

        me.ReadOnlyShowHideControls("t");


    },

    RemissionTaxpayerInfo: function() {
        var offCode = Ext.ComponentQuery.query('#RemissionLoginOffcode')[0].getValue();
        //alert(offCode);
        var pan = Ext.ComponentQuery.query('#txtRemission_PanNo')[0].getValue();
        //var acctType = Ext.ComponentQuery.query('#txtRemission_AccType')[0];
        var acctType = Ext.ComponentQuery.query('#txtRemission_AccType')[0].getValue();
        //acctType.setValue('10');
        LoadTaxpayerInfoWithValidPan(pan,acctType,function(data){
            var taxpayer = data.root.Taxpayer;
            var address = taxpayer.BusinessAddress.Address;
            var office = taxpayer.Office;
            console.log('office phone'+ office);
            if(taxpayer.AcctStatus === "D")
            {
                msg("WARNING","PAN is Deactivated !!!");
                return;
            }
            if(offCode != office.OfficeCode)
            {
                msg("WARNING","PAN is not Registered in this office !!!");

                return;
            }

            Ext.ComponentQuery.query('#txtRemission_PanNo')[0].setValue(pan);

            Ext.ComponentQuery.query('#txtRemission_AccType')[0].setValue(acctType);

            Ext.ComponentQuery.query('#hdn_Remission_Office_Code')[0].setValue(office.OfficeCode);
            Ext.ComponentQuery.query('#Remission_IROName')[0].setValue(office.OfficeNameNepali);
            Ext.ComponentQuery.query('#txtRemission_Name')[0].setValue(taxpayer.Name);

            Ext.ComponentQuery.query('#txtRemission_HouseNo')[0].setValue(address.HouseNo);

            Ext.ComponentQuery.query('#txtRemission_WardNo')[0].setValue(address.WardNo);

            Ext.ComponentQuery.query('#txtRemission_ToleName')[0].setValue(address.StreetName);


            if(address.LocationType=='MM')
            {
                Ext.ComponentQuery.query('#rdl_Remission_Metro_Mun')[0].setValue(true);
            }
            else if(address.LocationType=='SM')
            {
                Ext.ComponentQuery.query('#rdl_Remission_Sub_Metro_Mun')[0].setValue(true);
            }
            else if(address.LocationType=='MN')
            {
                Ext.ComponentQuery.query('#rdl_Remission_Mun')[0].setValue(true);
            }
            else if(address.LocationType=='VD')
            {
                Ext.ComponentQuery.query('#rdl_Remission_VDC')[0].setValue(true);
            }

            Ext.ComponentQuery.query('#txtRemission_VDCName')[0].setValue(address.VdcTown);

            Ext.ComponentQuery.query('#txtRemission_DistrictName')[0].setValue(address.DistrictNameNep);

            //Ext.ComponentQuery.query('#txtRemission_Phone')[0].setValue(address.Phone);
            Ext.ComponentQuery.query('#txtRemission_Phone')[0].setValue(address.Telephone);

            Ext.ComponentQuery.query('#txtRemission_Mobile')[0].setValue(address.Phone); 

            Ext.ComponentQuery.query('#txtRemission_Email')[0].setValue(address.Email);

            if(taxpayer.AcctStatus==='A')
            Ext.ComponentQuery.query('#Remission_TpOfficeType')[0].setValue('सक्रिय');



        });
    },

    SaveRemission: function(rStatus) {
        var me = this;
        var count = 0;
        var errorMsg = "";
        var loadMsg = "";


        var hdn_Remission_Office_Code = Ext.ComponentQuery.query('#hdn_Remission_Office_Code')[0].getValue()=== "" ?null:Ext.ComponentQuery.query('#hdn_Remission_Office_Code')[0].getValue();
        var txtRemissionNumber = Ext.ComponentQuery.query('#txtRemissionNumber')[0].getValue();
        var txtRemission_PanNo =  Ext.ComponentQuery.query('#txtRemission_PanNo')[0].getValue();
        var txtRemission_AccType = Ext.ComponentQuery.query('#txtRemission_AccType')[0].getValue();
        var txtRemissionDate = Ext.ComponentQuery.query('#txtRemissionDate')[0].getValue();
        var txtRemissionReason = Ext.ComponentQuery.query('#txtRemissionReason')[0].getValue();
        var txtRemissionAuthority = Ext.ComponentQuery.query('#txtRemissionAuthority')[0].getValue();
        var txtRemissionOrderDate = Ext.ComponentQuery.query('#txtRemissionOrderDate')[0].getValue();
        var txtRemissionOfficerCode = Ext.ComponentQuery.query('#txtRemissionOfficerCode')[0].getValue();
        var txtRemissionOfficerName = Ext.ComponentQuery.query('#txtRemissionOfficerName')[0].getValue();
        var hdnRemissionTranNo = Ext.ComponentQuery.query('#hdnRemissionTranNo')[0].getValue()=== "" ?null:Ext.ComponentQuery.query('#hdnRemissionTranNo')[0].getValue();
        var action = Ext.ComponentQuery.query('#hdnRemission_Action')[0].getValue();


        if(txtRemissionDate === "")
        {

            count++;
            errorMsg = errorMsg + '<br/>'+ count + ") कृपया  मिनाहा मिति भर्नुहोस् !!!";

        }

        if(txtRemission_PanNo === "")
        {

            count++;
            errorMsg = errorMsg + '<br/>'+ count + ") कृपया स्था . ले . नं . भर्नुहोस् !!!";

        }

        if(txtRemission_AccType === "")
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया खाताको किसिम  भर्नुहोस् !!!";

        }



        if(count >0)
        {
            msg("WARNING",errorMsg);
            return false;
        }




        if(action == "E")
        {
            loadMsg = "Updating ...";
        }
        else
        {
            loadMsg = "Saving ...";
        }


        var strRemissionDetails = Ext.getStore('RemissionDetails');

        strRemissionDetails.clearFilter();

        var itaxstrRemissionDetails = "";
        var itaxstrRemission = "";


        if(strRemissionDetails.getCount() > 0)
        {
            itaxstrRemissionDetails = getJson(strRemissionDetails); 

            strRemissionDetails.filter(function(item){
                return item.get("Action")!= 'D';
            });
        }



        itaxstrRemission = { 
            OfficeCode:hdn_Remission_Office_Code !== ""?hdn_Remission_Office_Code:null, 
            RemissionNumber:txtRemissionNumber !== ""?txtRemissionNumber:null,
            PAN:txtRemission_PanNo,
            RemissionDate:txtRemissionDate,
            RemissionReason:txtRemissionReason,
            RemissionAuthority:txtRemissionAuthority,
            OrderDate:txtRemissionOrderDate,
            RecordStatus:rStatus,
            OfficerCode:txtRemissionOfficerCode,
            OfficerName:txtRemissionOfficerName,
            TranNo:hdnRemissionTranNo !== ""?hdnRemissionTranNo:null,
            Terminal:'',
            Trandate:'',
            UserName:'',
            AccType:txtRemission_AccType,
            Action:action!== ""?action:"",
            RemissionDetails:itaxstrRemissionDetails !== ""?itaxstrRemissionDetails:null
        };

        var waitSave = watiMsg(loadMsg);

        //console.log();

        //------------------------------------------------------
        // NB: Posting Data to Server
        //------------------------------------------------------

        Ext.Ajax.request({
            url:"../Handlers/IncomeTax/Remissions/RemissionInfoHandler.ashx?method=SaveRemission",
            params:{remission:JSON.stringify(itaxstrRemission)},
            success: function ( result, request ) {

                waitSave.hide();

                var obj = Ext.decode(result.responseText);

                if(obj.success == "false" && obj.message === "ErrorDuplicate data !")
                {
                    msg("WARNING","Remission No is Already Exists !!!");
                    return;
                }

                msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);

                if(obj.success === "false") return;
                me.ClearRemission();


            },
            failure: function ( result, request ) {

                waitSave.hide();

                var errMsg = "Error in " + loadMsg;

                msg("FAILURE",errMsg);
                return;
            }

        });

    },

    ClearRemission: function() {
        // Clear Taxpayer Info

        Ext.ComponentQuery.query('#txtRemission_PanNo')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemission_AccType')[0].setValue("10");
        //Ext.ComponentQuery.query('#hdn_Remission_Office_Code')[0].setValue("");
        Ext.ComponentQuery.query('#Remission_IROName')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemission_Name')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemission_HouseNo')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemission_WardNo')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemission_ToleName')[0].setValue("");
        Ext.ComponentQuery.query('#rdl_Remission_Metro_Mun')[0].setValue(false);
        Ext.ComponentQuery.query('#rdl_Remission_Sub_Metro_Mun')[0].setValue(false);
        Ext.ComponentQuery.query('#rdl_Remission_Mun')[0].setValue(false);
        Ext.ComponentQuery.query('#rdl_Remission_VDC')[0].setValue(false);
        Ext.ComponentQuery.query('#txtRemission_VDCName')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemission_DistrictName')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemission_Phone')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemission_Mobile')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemission_Email')[0].setValue("");
        Ext.ComponentQuery.query('#Remission_TpOfficeType')[0].setValue("");


        //Ext.ComponentQuery.query('#hdn_Remission_Office_Code')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemissionNumber')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemission_PanNo')[0].setValue("");
        //Ext.ComponentQuery.query('#txtRemission_AccType')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemissionDate')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemissionReason')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemissionAuthority')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemissionOrderDate')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemissionOfficerCode')[0].setValue("");
        Ext.ComponentQuery.query('#txtRemissionOfficerName')[0].setValue("");
        Ext.ComponentQuery.query('#hdnRemissionTranNo')[0].setValue("");
        Ext.ComponentQuery.query('#hdnRemission_Action')[0].setValue("");
        Ext.ComponentQuery.query('#txtTotalRemissionAmount')[0].setValue("");
        Ext.getStore('RemissionDetails').loadData([],false);

        Ext.ComponentQuery.query('#hdnlblRemissionAction')[0].setValue("");

        var btn_Remission_Save = Ext.ComponentQuery.query("#btn_Remission_Save")[0];
        var btn_Remission_submit = Ext.ComponentQuery.query("#btn_Remission_submit")[0];
        var btn_Remission_Delete = Ext.ComponentQuery.query("#btn_Remission_Delete")[0];
        btn_Remission_Save.setDisabled(false);
        btn_Remission_submit.setDisabled(false);
        btn_Remission_Delete.setDisabled(false);
        var btnAddtxtRemissionDetail= Ext.ComponentQuery.query('#btnAddtxtRemissionDetail')[0];
        btnAddtxtRemissionDetail.disable(false);



    },

    CalRemAmount: function() {
        var grd = Ext.ComponentQuery.query('#grdRemissionDetails')[0];
        var store = grd.getStore();
        var selectedRow = grd.getSelectionModel();
        var record = grd.getSelectionModel().getSelection()[0];
        var txtRemissionAmount = Ext.ComponentQuery.query('#txtRemissionAmount')[0].getValue();
        var finAmount = Ext.ComponentQuery.query('#txtTotalRemissionAmount')[0];
        var rAmount = (txtRemissionAmount === "")?0:txtRemissionAmount;
        var totAmount = parseFloat(rAmount);

        Ext.ComponentQuery.query('#txtRemissionAmount')[0].setValue(totAmount);

        finAmount.setValue("");

        //This code sum numbers in certain column
        var sum = 0; 

        var rowIdx = store.indexOf(record);
        var idx = 0;


        store.each(function (rec) {     

            if(rec.get('RemissionAmount') !=="" && rowIdx !== idx)
            {
                sum = parseFloat(sum) + parseFloat(rec.get('RemissionAmount')); 
            }

            idx++;


        });

        var overallTot = parseFloat(sum) + parseFloat(totAmount);

        finAmount.setValue(overallTot);
    },

    ReadOnlyShowHideControls: function(txt) {
        /*
        var form = (Ext.ComponentQuery.query('#frm_Remission')[0]).getForm();
        //var fields = form.getFields();
        console.log("f",fields);
        disableControls(form,true);

        if(txt === "t")
        {
            //Convert All Fields To Read Only\r",

            Ext.each(fields.items, function (f) {
                f.inputEl.dom.disabled = true;
            });
            //End Converting Fields To Read Only\r",
        }

        else
        {
            //Convert All Fields To Read Only\r",

            Ext.each(fields.items, function (f) {
                f.inputEl.dom.disabled = false;
            });
            //End Converting Fields To Read Only\r",
        }
        */
        if(txt === "t")
        {
            Ext.ComponentQuery.query('#txtRemissionNumber')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtRemission_PanNo')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtRemission_AccType')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtRemissionDate')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtRemissionReason')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtRemissionAuthority')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtRemissionOrderDate')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtRemissionOfficerCode')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtRemissionOfficerName')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#hdnRemissionTranNo')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#hdnRemission_Action')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtTotalRemissionAmount')[0].setReadOnly(true);

            var btn_Remission_Save = Ext.ComponentQuery.query("#btn_Remission_Save")[0];
            btn_Remission_Save.disable(true);
            var btn_Remission_Edit = Ext.ComponentQuery.query("#btn_Remission_Edit")[0];
            btn_Remission_Edit.disable(true);
            var btn_Remission_Delete = Ext.ComponentQuery.query("#btn_Remission_Delete")[0];
            btn_Remission_Delete.disable(true);
            var btn_Remission_submit = Ext.ComponentQuery.query("#btn_Remission_submit")[0]; 
            btn_Remission_submit.disable(true);
            var btn_Remission_Cancel = Ext.ComponentQuery.query("#btn_Remission_Cancel")[0];
            btn_Remission_Cancel.disable(true);

            var btnAdd = Ext.ComponentQuery.query("#btnAddtxtRemissionDetail")[0];
            btnAdd.disable(true);

            var btn_Remission_Back = Ext.ComponentQuery.query("#btn_Remission_Back")[0];
            btn_Remission_Back.enable(true);




        }
    },

    init: function(application) {
        this.control({
            "#btnAddtxtRemissionDetail": {
                click: this.onBtnAddtxtRemissionDetailClick
            },
            "#txtRemission_PanNo": {
                blur: this.onTxtRemission_PanNoBlur
            },
            "#btn_Remission_Save": {
                click: this.onBtn_Remission_SaveClick
            },
            "#btn_Remission_Edit": {
                click: this.onBtn_Remission_EditClick
            },
            "#btn_Remission_Delete": {
                click: this.onBtn_Remission_DeleteClick
            },
            "#btn_Remission_submit": {
                click: this.onBtn_Remission_submitClick
            },
            "#btn_Remission_Cancel": {
                click: this.onBtn_Remission_CancelClick
            },
            "#txtRemissionAmount": {
                change: this.onTxtRemissionAmountChange
            },
            "#txtRemissionNumber": {
                keypress: this.onTxtRemissionNumberKeypress
            },
            "#btn_Remission_Back": {
                click: this.onBtn_Remission_BackClick
            },
            "#pnlRemission": {
                afterrender: this.onPnlRemissionAfterRender
            }
        });
    }

});
