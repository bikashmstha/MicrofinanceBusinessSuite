/*
 * File: app/controller/AppealDecision.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.AppealDecision', {
    extend: 'Ext.app.Controller',

    stores: [
        'ACLines',
        'FilingPeriodStore',
        'AppealOnSubjectStore',
        'Period'
    ],

    onPnlAppealDecisionAfterRender: function(component, eOpts) {
        var me=this;
        var offCode= Ext.get('offCode').dom.innerHTML;
        var txtOffCode = Ext.ComponentQuery.query("#offcodeAD")[0];

        var hdnAction=Ext.ComponentQuery.query("#hdnAction")[0];
        hdnAction.setValue("T");
        var hdnAct=Ext.ComponentQuery.query("#hdnActAD")[0];
        var hdnActApplDec=Ext.ComponentQuery.query("#hdnActionApplDec")[0];

        var grd = Ext.ComponentQuery.query('#grdAppealDecision')[0];
        grd.getStore("ACLines").removeAll();

        var objParam = Ext.ComponentQuery.query('#pnlAppealDecision')[0].extraParam;

        if (!objParam)
        {
            txtOffCode.setValue(offCode);
            //me.LoadOfficeUser();
            me.ReadOnlyControls("");
            me.clearControlsAD();
            hdnAction.setValue("");
            return;
        }

        else if(objParam.params.from === "MV")
        {
            me.LoadAppealDecisionWithTranNo();
            me.ReadOnlyControls("t");
        }

        else if(objParam.params.from === "AU"  )
        {
            hdnAction.setValue("");
            hdnAct.setValue("");
            hdnActApplDec.setValue("");

            if(objParam.params.auAction === "A")
            {

                me.LoadPostedACHeader();

            }
            else if(objParam.params.auAction === "E" || objParam.params.auAction === "V")
            {
                if( objParam.params.auAction === "V")
                {
                    me.ReadOnlyControls("t");
                }
                me.LoadACHeaderWithAU();

            }
            me.ReadOnlyControls("au");
        }
    },

    onBtnBackVadClick: function(button, e, eOpts) {
        var param=Ext.ComponentQuery.query('#pnlAppealDecision')[0].extraParam;

        var tNo=param.tranNo;
        var idxM=param.indexM;
        var idxT=param.indexT;

        //alert(tNo);
        //alert(idxM);
        //alert(idxT);

        uiConfig = {menuLink:'ModuleVerification',pageTitle:'Module Verification'};
        DynamicUI(uiConfig,null,{tranNo:tNo,indexM:idxM,indexT:idxT });
    },

    onBtnSaveVadClick: function(button, e, eOpts) {
        var txtAppealNo = Ext.ComponentQuery.query('#appealnoAD')[0];
        var txtDecNo = Ext.ComponentQuery.query('#txtDecno')[0];
        var txtDecDate =Ext.ComponentQuery.query('#txtDecdate')[0];
        var txtUserAC = Ext.ComponentQuery.query('#txtUserAC')[0];

        var appealNo = txtAppealNo.getValue();
        var decNo = txtDecNo.getValue();
        var decDate = txtDecDate.getValue();
        var userAC = txtUserAC.getValue();


        var btnEdit = Ext.ComponentQuery.query('#btnEditVad')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteVad')[0];

        var grd = Ext.ComponentQuery.query('#grdAppealDecision')[0];
        //console.log('grd',grd.getStore());
        var store = grd.getStore();
        var cnt=store.data.items.length;

        for(var rindx=0;rindx<cnt;rindx++)
        {
            if(e.rowIdx != rindx)
            {
                var currRowData=store.data.items[rindx].data;
                //console.log("CR",currRowData);

                var amountRetained=currRowData.AmountRetained;

                if(!amountRetained)
                {
                    msg("WARNING","कृपया निर्णय ठहर गरिएको रकम हाल्नलाई ग्रिडको रो डबल क्लिक गर्नुहोस् !");
                    return false;

                }
            }
        }

        var errMsg="";
        var errCount=0;

        if(!appealNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदन दर्ता नं. हाल्नुहोस् !<br/>";
            txtAppealNo.focus();
        }
        if(!decNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया निर्णय नं. हाल्नुहोस् !<br/>";
            txtDecNo.focus();
        }

        if(!decDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया निर्णय मिति हाल्नुहोस् !<br/>";
            txtDecDate.focus();
        }
        if(!userAC)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया निर्णय कर्ता हाल्नुहोस् !<br/>";
            txtUserAC.focus();

        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }
        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }

        /*else
        {
        btnEdit.enable(true);
        btnDelete.enable(true);
        this.save("I");
        }*/

        var me =this;

        var objParam = Ext.ComponentQuery.query('#pnlAppealDecision')[0].extraParam;
        //console.log('save',objParam);
        if (!objParam)
        {
            btnEdit.enable(true);
            btnDelete.enable(true);
            me.save("I");
        }
        else if(objParam.params.from === "AU")
        {

            btnEdit.disable(true);
            btnDelete.disable(true);
            me.SaveACHeaderWithLinesAU("I","E");
            me.ReadOnlyControls("au");

        }
    },

    onBtnSubmitVadClick: function(button, e, eOpts) {
        var me = this;
        var hdnAction=Ext.ComponentQuery.query("#hdnAction")[0];
        var hdnActApplDec=Ext.ComponentQuery.query("#hdnActionApplDec")[0];
        var txtAppealNo = Ext.ComponentQuery.query('#appealnoAD')[0];
        var txtDecNo = Ext.ComponentQuery.query('#txtDecno')[0];
        var txtDecDate =Ext.ComponentQuery.query('#txtDecdate')[0];
        var txtUserAC = Ext.ComponentQuery.query('#txtUserAC')[0];

        var appealNo = txtAppealNo.getValue();
        var decNo = txtDecNo.getValue();
        var decDate = txtDecDate.getValue();
        var userAC = txtUserAC.getValue();

        var btnSubmitVad=Ext.ComponentQuery.query('#btnSubmitVad')[0];
        var btnSaveVad=Ext.ComponentQuery.query('#btnSaveVad')[0];

        var grd = Ext.ComponentQuery.query('#grdAppealDecision')[0];
        //console.log('grd',grd.getStore());
        var store = grd.getStore();
        var cnt=store.data.items.length;

        for(var rindx=0;rindx<cnt;rindx++)
        {
            if(e.rowIdx != rindx)
            {
                var currRowData=store.data.items[rindx].data;
                //console.log("CR",currRowData);

                var amountRetained=currRowData.AmountRetained;

                if(!amountRetained)
                {
                    msg("WARNING","कृपया निर्णय ठहर गरिएको रकम हाल्नलाई ग्रिडको रो डबल क्लिक गर्नुहोस् !");
                    return false;

                }
            }
        }

        var errMsg="";
        var errCount=0;

        if(!appealNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदन दर्ता नं. हाल्नुहोस् !<br/>";
            txtAppealNo.focus();
        }
        if(!decNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया निर्णय नं. हाल्नुहोस् !<br/>";
            txtDecNo.focus();
        }

        if(!decDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया निर्णय मिति हाल्नुहोस् !<br/>";
            txtDecDate.focus();
        }
        if(!userAC)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया निर्णय कर्ता हाल्नुहोस् !<br/>";
            txtUserAC.focus();

        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }

        var objParam = Ext.ComponentQuery.query('#pnlAppealDecision')[0].extraParam;
        //console.log('Submit',objParam);
        if (!objParam)
        {
            if(hdnActApplDec.lastValue === "D")
            {  
                Ext.Msg.confirm('Confirm', 'के तपाई साचै नै डाटा DELETE गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.save("D");
                        btnSubmitVad.enable(true);
                        btnSaveVad.enable(true);
                        me.clearControlsAD();

                        return true;
                    }
                }, this);


            }
            else
            {

                Ext.Msg.confirm('Confirm Action', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन्। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.save("F");
                        btnSubmitVad.enable(true);
                        btnSaveVad.enable(true);
                        me.clearControlsAD();

                        return true;
                    }
                }, this);

            }

        }
        else if(objParam.params.from === "AU")
        {

            // alert('submit');
            Ext.Msg.confirm('Confirm Action', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन्। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
                if(btn == 'yes'){

                    me.SaveACHeaderWithLinesAU("F","E");
                    btnSubmitVad.enable(true);
                    btnSaveVad.enable(true);
                    me.clearControlsAD();
                    me.ReadOnlyControls("au");
                    return true;
                }
            }, this);
        }

    },

    onAppealnoADKeypress: function(textfield, e, eOpts) {
        /*if(e.keyCode === 13)
        {

        this.LoadAppealDecisionWithLines();

        }*/








    },

    onAppealnoADBlur: function(component, e, eOpts) {
        var appealnoAD = Ext.ComponentQuery.query("#appealnoAD")[0];
        if(appealnoAD.getValue() === "")
        {
            msg('WARNING',"कृपया पुनरावेदन दर्ता न. हाल्नुहोस्  !");
            appealnoAD.focus();
            return;
        }  
        this.LoadAppealDecisionWithLines();
    },

    onTxtDecdateBlur: function(component, e, eOpts) {
        // not allowed future date
        return validateFutureDate(field.getValue(),"Y",function(){ field.focus();});
    },

    onGrdAppealDecisionBeforeRender: function(component, eOpts) {
        var grid = Ext.ComponentQuery.query('#grdAppealDecision')[0];

        grid.columns[4].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";   

            var strFilPeriod = Ext.getStore("FilingPeriodStore");                
            var index = strFilPeriod.find('FilPeriod',value);
            var rec = strFilPeriod.getAt(index);

            var strPeriod = Ext.getStore("Period");

            var items=Ext.getStore('FilingPeriodStore').data.items;    


            for(var i=0;i<items.length;i++)
            {

                if(items[i].data.FilPeriod === value)
                {
                    temp=items[i].data.FilPeriodDesc;
                    break;
                }        
            }   


            // console.log("rec",rec);

            if(rec !== false && rec !== undefined)
            {
                strPeriod.loadData(rec.data.Period);
            } 


            return temp;
        };


        grid.columns[8].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";    


            var items=Ext.getStore('Period').data.items;


            for(var i=0;i<items.length;i++)
            {

                if(items[i].data.Period==value)
                {
                    temp=items[i].data.PeriodDesc;
                    break;
                }        
            }


            return temp;
        };

        /*
        grid.columns[3].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
        var temp="";    
        console.log("v",value);
        if("M" === value)
        {
        temp = "मासिक";
        }
        else if("B" === value)
        {
        temp = "दूई मासिक ";
        }
        else {
        temp = "चौमासिक";
        }

        return temp;
        };

        */
    },

    onBtnCancelVadClick: function(button, e, eOpts) {

        var btnEdit = Ext.ComponentQuery.query('#btnEditVad')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteVad')[0];
        btnEdit.enable(true);
        btnDelete.enable(true);
        this.clearControlsAD();
    },

    onBtnEditVadClick: function(button, e, eOpts) {
        var me=this;
        me.ReadOnlyControls("e");
        me.clearControlsAD();
        var hdnAction=Ext.ComponentQuery.query("#hdnAction")[0];

        var lblActionAppealDec = Ext.ComponentQuery.query('#lblActionAppealDec')[0];
        var txtAppealNo = Ext.ComponentQuery.query('#appealnoAD')[0];

        var btnSave = Ext.ComponentQuery.query('#btnSaveVad')[0];
        var btnEdit = Ext.ComponentQuery.query('#btnEditVad')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteVad')[0];

        hdnAction.setValue("E");
        txtAppealNo.focus(true);
        btnSave.enable(true);
        btnEdit.disable(true);
        btnDelete.disable(true);

        lblActionAppealDec.setValue("Updating ...............");
        /*var appealnoAD = Ext.ComponentQuery.query("#appealnoAD")[0];
        if(appealnoAD.getValue() === "")
        {
        msg('WARNING',"कृपया पुनरावेदन दर्ता न. हाल्नुहोस्  !");
        appealnoAD.focus();
        return;
        }*/


    },

    onBtnDeleteVadClick: function(button, e, eOpts) {
        var me=this;
        me.ReadOnlyControls("d");
        me.clearControlsAD();
        var hdnAction=Ext.ComponentQuery.query("#hdnAction")[0];

        var lblActionAppealDec = Ext.ComponentQuery.query('#lblActionAppealDec')[0];
        var txtAppealNo = Ext.ComponentQuery.query('#appealnoAD')[0];

        var btnSave = Ext.ComponentQuery.query('#btnSaveVad')[0];
        var btnEdit = Ext.ComponentQuery.query('#btnEditVad')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteVad')[0];


        hdnAction.setValue("D");
        txtAppealNo.focus(true);
        btnSave.disable(true);
        btnEdit.disable(true);
        btnDelete.disable(true);

        lblActionAppealDec.setValue("Deleting ...............");
        /*var appealnoAD = Ext.ComponentQuery.query("#appealnoAD")[0];
        if(appealnoAD.getValue() === "")
        {
        msg('WARNING',"कृपया पुनरावेदन दर्ता न. हाल्नुहोस्  !");
        appealnoAD.focus();
        return;
        }  
        */


    },

    onTxtApplDecReasonADKeypress: function(textfield, e, eOpts) {
        return unicodeKeyPress(textfield,e,eOpts);
    },

    onTxtApplDecReasonADKeyup: function(textfield, e, eOpts) {
        return unicodeKeyUp(textfield,e,eOpts);
    },

    onTxtApplDecReasonADChange: function(field, newValue, oldValue, eOpts) {
        return unicodeChange(field, newValue, oldValue, eOpts);

    },

    onTxtApplDecReasonADFocus: function(component, e, eOpts) {
        return unicodeFocus(field,eOpts);
    },

    onTxtUserACKeypress: function(textfield, e, eOpts) {
        return unicodeKeyPress(textfield,e,eOpts);
    },

    onTxtUserACKeyup: function(textfield, e, eOpts) {
        return unicodeKeyUp(textfield,e,eOpts);
    },

    onTxtUserACChange: function(field, newValue, oldValue, eOpts) {
        return unicodeChange(field, newValue, oldValue, eOpts);

    },

    onTxtUserACFocus: function(component, e, eOpts) {
        return unicodeFocus(field,eOpts);
    },

    save: function(status) {
        var me=this;
        //var  waitMsg=watiMsg('Saving .....');

        var offcodeAD = Ext.ComponentQuery.query("#offcodeAD")[0];    
        /*if(offcodeAD.getValue() === "")
        {
        msg("WARNING","कार्यालय कोड हाल्नुहोस् !!!");
        return;
        }
        */

        var appealnoAD = Ext.ComponentQuery.query("#appealnoAD")[0];
        if(appealnoAD.getValue() === "")
        {
            msg("WARNING","पुनरावेदन दर्ता न. हाल्नुहोस्  !!!");
            return;
        }


        var acOffcode=Ext.ComponentQuery.query("#txtAcOffcode")[0];


        var acDecNo=Ext.ComponentQuery.query("#txtDecno")[0];
        //if(acDecNo.getValue()==="")
        //{
        // msg("WARNING","निर्णय न. भर्णुश !!!");
        // return;
        //}


        var acDateAd=Ext.ComponentQuery.query("#txtDecdate")[0];

        //.....................................

        //var btnSubmitVad=Ext.ComponentQuery.query('#btnSubmitVad')[0];
        //btnSubmitVad.disable(true);
        //....................................

        var pan=Ext.ComponentQuery.query('#txtPanAC')[0];
        var applDate=Ext.ComponentQuery.query('#txtappealdateAD')[0];
        var applOnMaNo=Ext.ComponentQuery.query('#txtappealOnMaNo')[0];
        var applLocCode=Ext.ComponentQuery.query('#txtApplLocCode')[0];
        var applRegNo=Ext.ComponentQuery.query('#txtApplRegNo')[0];

        var acctType=Ext.ComponentQuery.query('#hdnAcctType')[0];
        var tranDate=Ext.ComponentQuery.query('#hdnTranDate')[0];
        var orderDate=Ext.ComponentQuery.query('#hdnOrderDate')[0];
        var orderNo=Ext.ComponentQuery.query('#hdnOrderNo')[0];
        //var apealReason=Ext.ComponentQuery.query('#hdnAppealReason')[0];
        var appealStatus=Ext.ComponentQuery.query('#hdnAppealStatus')[0];
        var hdnuserId=Ext.ComponentQuery.query('#hdnUserId')[0];
        var apTranNo=Ext.ComponentQuery.query('#hdnApTranNo')[0];
        var acTranNo=Ext.ComponentQuery.query('#hdnAcTranNo')[0];
        //var rStatus=Ext.ComponentQuery.query('#hdnPrStatus')[0];
        var decRemarks=Ext.ComponentQuery.query('#txtApplDecReasonAD')[0];

        var userId=Ext.ComponentQuery.query("#txtUserAC")[0];

        var strLines = Ext.getStore('ACLines');

        //------------------------------------------------------
        // NB: Posting Data to Server
        //------------------------------------------------------

        var appHeader = "";
        var appLines = "";

        strLines.clearFilter();

        if(strLines.getCount() > 0)
        {
            AppealLinesLST = getJson(strLines); 

        }
        /*
        console.log("l",AppealLinesLST);

        if(AppealLinesLST.AmountRetained === undefined || AppealLinesLST.AmountRetained === null)
        {
        msg("WARNING","कृपया निर्णय ठहर गरिएको रकम हाल्नलाई row double click गर्नुहोस् ! ");
        return;
        }
        */
        appHeader = {


            OffCode:offcodeAD.getValue(), 
            AppealNo:appealnoAD.getValue() === ""?null:appealnoAD.getValue(),
            Pan:pan.getValue(),
            ApplDate:applDate.getValue(),
            ApplOnMaNo:applOnMaNo.getValue(),
            ApplLocCode:applLocCode.getValue(),
            ApplRegNo:applRegNo.getValue(),
            AcOffCode:acOffcode.getValue() === ""?null:acOffcode.getValue(), 
            AcDate:acDateAd.getValue(),
            AcDecisionNo:acDecNo.getValue(),
            AcUserID:userId.getValue(),   
            Action:Ext.ComponentQuery.query("#hdnAction")[0].getValue(),

            AcctType:acctType.getValue(),
            TranDate:tranDate.getValue(),
            OrderDate:orderDate.getValue(),
            OrderNo:orderNo.getValue(),
            ApplReason:decRemarks.getValue(),
            ApplStatus:appealStatus.getValue(),
            UserID:hdnuserId.getValue(),
            ApTranNo:apTranNo.getValue()===""?null:apTranNo.getValue(),
            AcTranNo:acTranNo.getValue()===""?null:acTranNo.getValue(),
            Rstatus:status,

            AppealLinesLST:AppealLinesLST !== ""?AppealLinesLST:null
        } ;

        Ext.Ajax.request({
            url: '../Handlers/VAT/Appeal/AppealHeaderHandler.ashx?method=UpdateAppealHeader',
            params: {appealHeader:JSON.stringify(appHeader)},
            success: function ( result, request ) {  
                // waitMsg.hide(); 

                var obj = Ext.decode(result.responseText);

                //  console.log('obj',obj.message);  

                if(obj.success === "false")
                {

                    msg("FAILURE",obj.message);
                    return;
                }
                //alert(status);

                if(status === "F")
                {
                    msg("INFO","पुनरावेदन निर्णय गरिएको डाटा सफलतापुर्वक Submit भयो ।");
                    return;
                }
                else if(status === "D")
                {
                    msg("INFO","पुनरावेदन निर्णय गरिएको डाटा सफलतापुर्वक Delete भयो ।");
                    return;
                }
                else
                {
                    msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);
                }
            },
            failure: function ( result, request ) {

                // waitSave.hide();

                var obj = Ext.decode(result.responseText);

                msg("FAILURE",obj.message);
                return;
            }

        });
        me.clearControlsAD();
    },

    clearControlsAD: function(txt) {
        var offcodeAD=Ext.ComponentQuery.query("#offcodeAD")[0];
        //offcodeAD.reset();
        var txtAcOffcode=Ext.ComponentQuery.query("#txtAcOffcode")[0];
        var appealnoAD=Ext.ComponentQuery.query("#appealnoAD")[0];
        var txtPan=Ext.ComponentQuery.query("#txtPanAC")[0];
        var txtappealdateAD=Ext.ComponentQuery.query("#txtappealdateAD")[0];
        var txtTaxpayer=Ext.ComponentQuery.query("#txtTaxpayer")[0];
        var txtTPAddress=Ext.ComponentQuery.query("#txtTPAddress")[0];
        var txtappealOnMaNo=Ext.ComponentQuery.query("#txtappealOnMaNo")[0];
        var txtApplLocCode=Ext.ComponentQuery.query("#txtApplLocCode")[0];
        var txtApplRegNo=Ext.ComponentQuery.query("#txtApplRegNo")[0];
        var txtDecno=Ext.ComponentQuery.query("#txtDecno")[0];
        var txtDecdate=Ext.ComponentQuery.query("#txtDecdate")[0];
        var txtUserAC=Ext.ComponentQuery.query("#txtUserAC")[0];
        var strAppealLines=Ext.getStore('ACLines');
        var txtAmtRtd=Ext.ComponentQuery.query('#txtAmtRtd')[0];
        var applDecReason=Ext.ComponentQuery.query('#txtApplDecReasonAD')[0];
        var lblActionAppealDec = Ext.ComponentQuery.query('#lblActionAppealDec')[0];
        var btnSaveVad=Ext.ComponentQuery.query('#btnSaveVad')[0];
        var btnSubmitVad=Ext.ComponentQuery.query('#btnSubmitVad')[0];
        var btnEdit = Ext.ComponentQuery.query('#btnEditVad')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteVad')[0];

        if(txt === "N")
        {
            txtAcOffcode.reset();
            //appealnoAD.reset();
            txtPan.reset();
            txtappealdateAD.reset();
            txtTaxpayer.reset();
            txtTPAddress.reset();
            txtappealOnMaNo.reset();
            txtApplLocCode.reset();
            txtApplRegNo.reset();
            txtDecno.reset();
            txtDecdate.reset();
            txtUserAC.reset();
            strAppealLines.removeAll();
            txtAmtRtd.reset();
            applDecReason.reset();
            lblActionAppealDec.reset();
            lblActionAppealDec.setVisible(false);
            btnSaveVad.disable(true);
            btnSubmitVad.disable(true);
            btnEdit.disable(true);
            btnDelete.disable(true);
        }
        else
        {
            txtAcOffcode.reset();
            appealnoAD.reset();
            txtPan.reset();
            txtappealdateAD.reset();
            txtTaxpayer.reset();
            txtTPAddress.reset();
            txtappealOnMaNo.reset();
            txtApplLocCode.reset();
            txtApplRegNo.reset();
            txtDecno.reset();
            txtDecdate.reset();
            txtUserAC.reset();
            strAppealLines.removeAll();
            txtAmtRtd.reset();
            applDecReason.reset();
            lblActionAppealDec.reset();
            lblActionAppealDec.setVisible(false);
            btnSaveVad.enable(true);
            btnSubmitVad.enable(true);
            //btnEdit.enable(true);
            //btnDelete.enable(true);
        }

    },

    LoadAppealDecisionWithLines: function() {
        var me = this;
        var acOffcode=Ext.ComponentQuery.query('#txtAcOffcode')[0];
        acOffcode.enable(true);


        var grd = Ext.ComponentQuery.query('#grdAppealDecision')[0];
        grd.getStore("ACLines").removeAll();

        var offcodeAD = Ext.ComponentQuery.query("#offcodeAD")[0];
        var appealnoAD = Ext.ComponentQuery.query("#appealnoAD")[0];
        var pan=Ext.ComponentQuery.query("#txtPanAC")[0];
        var appealdateAD=Ext.ComponentQuery.query("#txtappealdateAD")[0];
        var appealOnMaNo=Ext.ComponentQuery.query("#txtappealOnMaNo")[0];
        var applLocCode=Ext.ComponentQuery.query("#txtApplLocCode")[0];
        var applRegNo=Ext.ComponentQuery.query("#txtApplRegNo")[0];
        var hdnAction=Ext.ComponentQuery.query("#hdnAction")[0];

        var tpName=Ext.ComponentQuery.query("#txtTaxpayer")[0];
        var tpAddress=Ext.ComponentQuery.query("#txtTPAddress")[0];


        var tranDate=Ext.ComponentQuery.query('#hdnTranDate')[0];
        var orderDate=Ext.ComponentQuery.query('#hdnOrderDate')[0];
        var orderNo=Ext.ComponentQuery.query('#hdnOrderNo')[0];

        var appealStatus=Ext.ComponentQuery.query('#hdnAppealStatus')[0];
        var hdnuserId=Ext.ComponentQuery.query('#hdnUserId')[0];
        var apTranNo=Ext.ComponentQuery.query('#hdnApTranNo')[0];
        var acTranNo=Ext.ComponentQuery.query('#hdnAcTranNo')[0];
        var rStatus=Ext.ComponentQuery.query('#hdnPrStatus')[0];
        var decNo=Ext.ComponentQuery.query('#txtDecno')[0];
        var decDate=Ext.ComponentQuery.query('#txtDecdate')[0];
        var userAC=Ext.ComponentQuery.query('#txtUserAC')[0];

        var btnSaveVad=Ext.ComponentQuery.query('#btnSaveVad')[0];
        var btnSubmitVad=Ext.ComponentQuery.query('#btnSubmitVad')[0];
        var btnEditVad=Ext.ComponentQuery.query('#btnEditVad')[0];
        var btnDeleteVad=Ext.ComponentQuery.query('#btnDeleteVad')[0];

        var userId=Ext.ComponentQuery.query("#txtUserAC")[0];

        var applDecReason=Ext.ComponentQuery.query('#txtApplDecReasonAD')[0];

        /*
        if(offcodeAD.getValue() === "")
        {
        msg("WARNING","Enter Office-Code !!!");
        return;
        }*/
        /*
        if(appealnoAD.getValue() === "")
        {
        msg("WARNING","पुनरावेदन दर्ता न. हाल्नुहोस्  !!!");
        appealnoAD.focus();
        return;
        }  
        */

        //console.log('store', grd.getStore().data.items);

        //console.log('count',grd.getStore().getCount());
        //var waitMsg=watiMsg('Loading.......');


        Ext.Ajax.request({

            url:'../Handlers/VAT/Appeal/AppealHeaderHandler.ashx',
            params:{
                method:'GetAppealHeaderAC',offCode:offcodeAD.getValue(),appealNo:appealnoAD.getValue(),pan:"",acctType:""
            },

            success: function(response){    
                //  waitMsg.hide();
                var sum = 0;
                var obj =Ext.decode(response.responseText);
                //console.log(obj);
                var row = obj.root;

                // console.log("row",row);

                // -----checking office-code---------------------

                if(obj.root.ApplOnMaNo===""||obj.root.ApplOnMaNo===null)
                {
                    me.clearControlsAD("N");
                    // msg("WARNING","यो पुनरावेदन दर्ता न.भेटाऊन सकेन !");
                    msg("WARNING"," यो पुनरावेदन नं रूजु भएको छैन!");
                    return;
                }


                //------------------------------------------------


                // ----Making Save and Submit Button Disable while R-STATUS IS "F"------------------
                var hdnAct=Ext.ComponentQuery.query("#hdnActAD")[0];
                var hdnActApplDec=Ext.ComponentQuery.query("#hdnActionApplDec")[0];
                //lert(obj.root.Action);
                if(obj.root.Rstatus === "V" && obj.root.Action === "A")
                {
                    btnSaveVad.enable(true);
                    btnSubmitVad.enable(true);
                    decNo.setReadOnly(false);
                    decDate.setReadOnly(false);
                    userAC.setReadOnly(false);
                    applDecReason.setReadOnly(false);
                    hdnAct.setValue("");
                    hdnActApplDec.setValue("");
                }

                // ----Making Save and Submit Button Enable while R-STATUS IS "I"------------------


                else if(obj.root.Rstatus === "I" && obj.root.Action === "E")
                {
                    if(hdnAction.lastValue === "D")
                    {
                        msg("MESSAGE","यो बिबरण परिबर्तन गर्न पाउने छैन !");
                        btnSaveVad.disable(true);

                        decNo.setReadOnly(true);
                        decDate.setReadOnly(true);
                        userAC.setReadOnly(true);
                        applDecReason.setReadOnly(true);
                        hdnActApplDec.setValue("D");
                    }
                    else
                    {
                        btnSaveVad.enable(true);
                        btnSubmitVad.enable(true);

                        decNo.setReadOnly(false);
                        decDate.setReadOnly(false);
                        userAC.setReadOnly(false);
                        applDecReason.setReadOnly(false);
                        hdnAct.setValue("");
                        hdnActApplDec.setValue("");
                    }
                }

                else if(obj.root.Rstatus === "D" && obj.root.Action === "E")
                {
                    msg("MESSAGE","यो बिबरण परिबर्तन गर्न पाउने छैन !<br>यो बिबरण पहिला नै DELETE भइसक्यो !");
                    btnSaveVad.disable(true);
                    btnSubmitVad.disable(true);
                    btnEditVad.disable(true);
                    btnDeleteVad.disable(true);
                    decNo.setReadOnly(true);
                    decDate.setReadOnly(true);
                    userAC.setReadOnly(true);
                    applDecReason.setReadOnly(true);
                    hdnActApplDec.setValue("D");
                }

                else if(obj.root.Rstatus === "F" && obj.root.Action === "E")
                {
                    msg("MESSAGE","यो बिबरण परिबर्तन गर्न पाउने छैन !<br>यो बिबरण पहिला नै FINALIZED भइसक्यो !");
                    btnSaveVad.disable(true);
                    btnSubmitVad.disable(true);
                    btnEditVad.disable(true);
                    btnDeleteVad.disable(true);
                    decNo.setReadOnly(true);
                    decDate.setReadOnly(true);
                    userAC.setReadOnly(true);
                    applDecReason.setReadOnly(true);
                    hdnAct.setValue("F");
                }

                else if(obj.root.Rstatus === "V" && obj.root.Action === "E")
                {
                    msg("MESSAGE","यो बिबरण परिबर्तन गर्न पाउने छैन !<br>यो बिबरण पहिला नै VERIFIED भइसक्यो !");
                    btnSaveVad.disable(true);
                    btnSubmitVad.disable(true);
                    btnEditVad.disable(true);
                    btnDeleteVad.disable(true);
                    decNo.setReadOnly(true);
                    decDate.setReadOnly(true);
                    userAC.setReadOnly(true);
                    applDecReason.setReadOnly(true);
                    hdnActApplDec.setValue("V");
                }
                else/*(obj.root.Rstatus != "V" && obj.root.Action != "A")*/
                {
                    //msg("MESSAGE","यो बिबरण रूजु भएको छैन!");
                    btnSaveVad.enable(true);
                    btnSubmitVad.enable(true);
                }


                //-------------------------------------------------------------------------



                //-------setting values in fields------------------


                var txtAmtRtd = Ext.ComponentQuery.query('#txtAmtRtd')[0];
                appealdateAD.setValue(row.ApplDate);   
                pan.setValue(row.Pan);
                appealOnMaNo.setValue(row.ApplOnMaNo);
                applLocCode.setValue(row.ApplLocCode);
                applRegNo.setValue(row.ApplRegNo); 

                var taxpayer=row.TaxPayer;
                // console.log(taxpayer);
                var bAddress =taxpayer.BusinessAddress.Address;

                tpName.setValue(taxpayer.Name);
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var wn=bAddress.WardNo;
                var dn=bAddress.DistrictNameNep;
                var svn=sn +"/" + vt;
                var addr=svn + "-" + wn + "," + dn;
                tpAddress.setValue(addr);
                //tpName.setValue(row.Name);
                //tpAddress.setValue(row.Address);

                Ext.ComponentQuery.query('#hdnAcctType')[0].setValue(row.AcctType);
                tranDate.setValue(row.TranDate);
                orderDate.setValue(row.OrderDate);
                orderNo.setValue(row.OrderNo);

                appealStatus.setValue(row.ApplStatus);
                hdnuserId.setValue(row.UserID);
                apTranNo.setValue(row.ApTranNo);
                acTranNo.setValue(row.AcTranNo);
                rStatus.setValue(row.Rstatus);
                decNo.setValue(row.AcDecisionNo);
                decDate.setValue(row.AcDate);
                userAC.setValue(row.AcUserID);
                acOffcode.setValue(row.AcOffCode);


                var valueoffcodeAD= Ext.ComponentQuery.query("#offcodeAD")[0].getValue();

                acOffcode.setValue(valueoffcodeAD);


                // ---------------------------------------------------


                hdnAction.setValue(row.Action);
                //console.log('aa', hdnAction.getValue());
                if(hdnAction.getValue() === "A")
                {
                    applDecReason.setValue("");
                }
                else
                {
                    applDecReason.setValue(row.ApplReason);
                }

                //-----------------------------------------------
                //grd.getStore("AppealLines").add(row.AppealLines);

                var store = Ext.getStore('ACLines');


                // store.add(row.AppealLinesLST);   
                store.loadData(row.AppealLinesLST); 
                //-------------------Displaying Total Amount-Retained----------------------

                store.each(function (rec) {

                    var taxYear = rec.get('TaxYear') === ""? null:rec.get('TaxYear');
                    var amount = rec.get('Amount') === ""? null:rec.get('Amount');
                    var amtRetained = rec.get('AmountRetained') === ""? null:rec.get('AmountRetained');

                    rec.data.TaxYear = taxYear;
                    rec.data.Amount = amount;
                    rec.data.AmountRetained = amtRetained;   

                    //alert("taxYear"+ taxYear);
                    // alert("amtRetained"+ amtRetained);

                    var amtRetained1 = (amtRetained === null)?0:amtRetained;


                    sum = Number(sum) + Number(amtRetained1); 


                });         

                txtAmtRtd.setValue(sum);
                // console.log(" tot ",txtAmtRtd.getValue());

                //-----------------------------------------------------------------------------

            },                   

            failure:function(response)
            {			
                // waitMsg.hide();
                msg('FAILURE',Ext.decode(response));
            }
        });
    },

    LoadOfficeUser: function() {
        var offcodeAD=Ext.ComponentQuery.query("#offcodeAD")[0];

        var waitMsg=watiMsg('Loading');

        Ext.Ajax.request({
            url:"../Handlers/Security/OfficeUserHandler.ashx?method=GetUserOffice",
            params:{},
            success: function ( result, request ) {            


                var obj = Ext.decode(result.responseText);  
                // console.log(obj.root.OfficeCode);
                var data=obj.root;
                var offCode=data.OfficeCode;

                waitMsg.hide();

                offcodeAD.setValue(offCode);  


            },
            failure: function ( result, request ) {


                msg("FAILURE","Error in Fetching Data !!!");
            }
        });
    },

    LoadAppealDecisionWithTranNo: function() {

        var objParam = Ext.ComponentQuery.query('#pnlAppealDecision')[0].extraParam;
        //console.log(objParam);
        var tranNo= objParam.params.tranNo;
        //alert(tranNo);

        Ext.Ajax.request({

            url:'../Handlers/VAT/Appeal/AppealHeaderHandler.ashx?method=GetAppealHeaderACWithTranNo',
            params:{tranNo:tranNo},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }

                var row = obj.root;
                if(row === "")
                {
                    msg("WARNING","डाटा भेटाऊन सकेन !");
                    return;
                }


                var acOffcode=Ext.ComponentQuery.query('#txtAcOffcode')[0];
                acOffcode.enable(true);

                var offcodeAD = Ext.ComponentQuery.query("#offcodeAD")[0];
                var appealnoAD = Ext.ComponentQuery.query("#appealnoAD")[0];
                var pan=Ext.ComponentQuery.query("#txtPanAC")[0];
                var appealdateAD=Ext.ComponentQuery.query("#txtappealdateAD")[0];
                var appealOnMaNo=Ext.ComponentQuery.query("#txtappealOnMaNo")[0];
                var applLocCode=Ext.ComponentQuery.query("#txtApplLocCode")[0];
                var applRegNo=Ext.ComponentQuery.query("#txtApplRegNo")[0];

                var tpName=Ext.ComponentQuery.query("#txtTaxpayer")[0];
                var tpAddress=Ext.ComponentQuery.query("#txtTPAddress")[0];

                var decNo=Ext.ComponentQuery.query('#txtDecno')[0];
                var decDate=Ext.ComponentQuery.query('#txtDecdate')[0];
                var userAC=Ext.ComponentQuery.query('#txtUserAC')[0];
                var userId=Ext.ComponentQuery.query("#txtUserAC")[0];
                var applDecReason=Ext.ComponentQuery.query('#txtApplDecReasonAD')[0];

                var txtAmtRtd = Ext.ComponentQuery.query('#txtAmtRtd')[0];

                //-------setting values in fields------------------

                acOffcode.setValue(row.AcOffCode);
                offcodeAD.setValue(row.OffCode);
                appealnoAD.setValue(row.AppealNo);
                pan.setValue(row.Pan);
                appealdateAD.setValue(row.ApplDate); 
                appealOnMaNo.setValue(row.ApplOnMaNo);
                applLocCode.setValue(row.ApplLocCode);
                applRegNo.setValue(row.ApplRegNo); 

                var taxpayer=row.TaxPayer;
                // console.log(taxpayer);
                var bAddress =taxpayer.BusinessAddress.Address;

                tpName.setValue(taxpayer.Name);
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var wn=bAddress.WardNo;
                var dn=bAddress.DistrictNameNep;
                var svn=sn +"/" + vt;
                var addr=svn + "-" + wn + "," + dn;
                tpAddress.setValue(addr);

                decNo.setValue(row.AcDecisionNo);
                decDate.setValue(row.AcDate);
                userAC.setValue(row.AcUserID);
                applDecReason.setValue(row.ApplReason);

                // ---------------------------------------------------


                var store = Ext.getStore('ACLines');

                store.loadData(row.AppealLinesLST); 

                //-------------------Displaying Total Amount-Retained----------------------

                var sum = 0;

                store.each(function (rec) {

                    var taxYear = rec.get('TaxYear') === ""? null:rec.get('TaxYear');
                    var amount = rec.get('Amount') === ""? null:rec.get('Amount');
                    var amtRetained = rec.get('AmountRetained') === ""? null:rec.get('AmountRetained');

                    rec.data.TaxYear = taxYear;
                    rec.data.Amount = amount;
                    rec.data.AmountRetained = amtRetained;   

                    var amtRetained1 = (amtRetained === null)?0:amtRetained;
                    sum = Number(sum) + Number(amtRetained1); 


                });         

                txtAmtRtd.setValue(sum);

                //-----------------------------------------------------------------------------

            },                   

            failure:function(response)
            {			
                // waitMsg.hide();
                msg('FAILURE',Ext.decode(response));
            }
        });
    },

    ReadOnlyControls: function(txt) {
        var appealno = Ext.ComponentQuery.query("#appealnoAD")[0];
        var txtDecno = Ext.ComponentQuery.query("#txtDecno")[0];
        var txtDecdate = Ext.ComponentQuery.query("#txtDecdate")[0];
        var txtUserAC = Ext.ComponentQuery.query("#txtUserAC")[0];
        var applDecReason = Ext.ComponentQuery.query("#txtApplDecReasonAD")[0];
        var fButton = Ext.ComponentQuery.query("#fCntButtonAD")[0];
        var fbtnBack = Ext.ComponentQuery.query("#fCntBackAD")[0];
        var lblActionAppealDec = Ext.ComponentQuery.query('#lblActionAppealDec')[0];
        var form=(Ext.ComponentQuery.query('#frmAppealDecision')[0]).getForm();
        var fields = form.getFields();

        var btnCancel = Ext.ComponentQuery.query('#btnCancelVad')[0];

        if(txt === "t")
        {

            Ext.each(fields.items, function (f) {
                f.inputEl.dom.disabled = true;
            });

            /* appealno.setReadOnly(true);
            txtDecno.setReadOnly(true);
            txtDecdate.setReadOnly(true);
            txtUserAC.setReadOnly(true);
            applDecReason.setReadOnly(true);*/
            // fbtnBack.setVisible(true);
            fButton.setVisible(false);
        }
        else if(txt === "e")
        {
            txtDecno.setReadOnly(false);
            txtDecdate.setReadOnly(false);
            txtUserAC.setReadOnly(false);
            applDecReason.setReadOnly(false);
            lblActionAppealDec.setVisible(true);
        }
        else if(txt === "d")
        {
            txtDecno.setReadOnly(true);
            txtDecdate.setReadOnly(true);
            txtUserAC.setReadOnly(true);
            applDecReason.setReadOnly(true);
            lblActionAppealDec.setVisible(true);
        }
        else if(txt === "au")
        {

            btnCancel.disable(true);
        }
        else
        {

            Ext.each(fields.items, function (f) {
                f.inputEl.dom.disabled = false;
            });

            /*
            appealno.setReadOnly(false);
            txtDecno.setReadOnly(false);
            txtDecdate.setReadOnly(false);
            txtUserAC.setReadOnly(false);
            applDecReason.setReadOnly(false);*/
            //fbtnBack.setVisible(false);
            fButton.setVisible(true);
            btnCancel.enable(true);
        }

    },

    LoadPostedACHeader: function() {

        var objParam = Ext.ComponentQuery.query('#pnlAppealDecision')[0].extraParam;
        //console.log(objParam);

        var offCodeAU = objParam.params.offCode;
        var requestNo = objParam.params.requestNo;
        var offCode = objParam.params.pks[0].data.Value;
        var appealNo = objParam.params.pks[1].data.Value;

        Ext.Ajax.request({

            url:'../Handlers/VAT/Appeal/AppealHeaderHandler.ashx?method=GetPostedACHeader',
            params:{offCodeAU:offCodeAU,requestNo:requestNo,offCode:offCode,appealNo:appealNo},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }

                var row = obj.root;
                if(row === "")
                {
                    msg("WARNING","डाटा भेटाऊन सकेन !");
                    return;
                }


                var acOffcode=Ext.ComponentQuery.query('#txtAcOffcode')[0];
                acOffcode.enable(true);

                var offcodeAD = Ext.ComponentQuery.query("#offcodeAD")[0];
                var appealnoAD = Ext.ComponentQuery.query("#appealnoAD")[0];
                var pan=Ext.ComponentQuery.query("#txtPanAC")[0];
                var appealdateAD=Ext.ComponentQuery.query("#txtappealdateAD")[0];
                var appealOnMaNo=Ext.ComponentQuery.query("#txtappealOnMaNo")[0];
                var applLocCode=Ext.ComponentQuery.query("#txtApplLocCode")[0];
                var applRegNo=Ext.ComponentQuery.query("#txtApplRegNo")[0];

                var tpName=Ext.ComponentQuery.query("#txtTaxpayer")[0];
                var tpAddress=Ext.ComponentQuery.query("#txtTPAddress")[0];

                var decNo=Ext.ComponentQuery.query('#txtDecno')[0];
                var decDate=Ext.ComponentQuery.query('#txtDecdate')[0];
                var userAC=Ext.ComponentQuery.query('#txtUserAC')[0];
                var userId=Ext.ComponentQuery.query("#txtUserAC")[0];
                var applDecReason=Ext.ComponentQuery.query('#txtApplDecReasonAD')[0];

                var txtAmtRtd = Ext.ComponentQuery.query('#txtAmtRtd')[0];

                //-------setting values in fields------------------

                acOffcode.setValue(row.AcOffCode);
                offcodeAD.setValue(row.OffCode);
                appealnoAD.setValue(row.AppealNo);
                pan.setValue(row.Pan);
                appealdateAD.setValue(row.ApplDate); 
                appealOnMaNo.setValue(row.ApplOnMaNo);
                applLocCode.setValue(row.ApplLocCode);
                applRegNo.setValue(row.ApplRegNo); 

                var taxpayer=row.TaxPayer;
                // console.log(taxpayer);
                var bAddress =taxpayer.BusinessAddress.Address;

                tpName.setValue(taxpayer.Name);
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var wn=bAddress.WardNo;
                var dn=bAddress.DistrictNameNep;
                var svn=sn +"/" + vt;
                var addr=svn + "-" + wn + "," + dn;
                tpAddress.setValue(addr);

                decNo.setValue(row.AcDecisionNo);
                decDate.setValue(row.AcDate);
                userAC.setValue(row.AcUserID);
                applDecReason.setValue(row.ApplReason);

                // ---------------------------------------------------


                var store = Ext.getStore('ACLines');

                store.loadData(row.AppealLinesLST); 

                //-------------------Displaying Total Amount-Retained----------------------

                var sum = 0;

                store.each(function (rec) {

                    var taxYear = rec.get('TaxYear') === ""? null:rec.get('TaxYear');
                    var amount = rec.get('Amount') === ""? null:rec.get('Amount');
                    var amtRetained = rec.get('AmountRetained') === ""? null:rec.get('AmountRetained');

                    rec.data.TaxYear = taxYear;
                    rec.data.Amount = amount;
                    rec.data.AmountRetained = amtRetained;   

                    var amtRetained1 = (amtRetained === null)?0:amtRetained;
                    sum = Number(sum) + Number(amtRetained1); 


                });         

                txtAmtRtd.setValue(sum);

                //-----------------------------------------------------------------------------

            },                   

            failure:function(response)
            {			
                // waitMsg.hide();
                msg('FAILURE',Ext.decode(response));
            }
        });
    },

    LoadACHeaderWithAU: function() {

        var objParam = Ext.ComponentQuery.query('#pnlAppealDecision')[0].extraParam;
        //console.log(objParam);

        var offCodeAU = objParam.params.offCode;
        var requestNo = objParam.params.requestNo;

        Ext.Ajax.request({

            url:'../Handlers/VAT/Appeal/AppealHeaderHandler.ashx?method=GetACHeaderAU',
            params:{offCodeAU:offCodeAU,requestNo:requestNo},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }

                var row = obj.root;
                if(row === "")
                {
                    msg("WARNING","डाटा भेटाऊन सकेन !");
                    return;
                }


                var acOffcode=Ext.ComponentQuery.query('#txtAcOffcode')[0];
                acOffcode.enable(true);

                var offcodeAD = Ext.ComponentQuery.query("#offcodeAD")[0];
                var appealnoAD = Ext.ComponentQuery.query("#appealnoAD")[0];
                var pan=Ext.ComponentQuery.query("#txtPanAC")[0];
                var appealdateAD=Ext.ComponentQuery.query("#txtappealdateAD")[0];
                var appealOnMaNo=Ext.ComponentQuery.query("#txtappealOnMaNo")[0];
                var applLocCode=Ext.ComponentQuery.query("#txtApplLocCode")[0];
                var applRegNo=Ext.ComponentQuery.query("#txtApplRegNo")[0];

                var tpName=Ext.ComponentQuery.query("#txtTaxpayer")[0];
                var tpAddress=Ext.ComponentQuery.query("#txtTPAddress")[0];

                var decNo=Ext.ComponentQuery.query('#txtDecno')[0];
                var decDate=Ext.ComponentQuery.query('#txtDecdate')[0];
                var userAC=Ext.ComponentQuery.query('#txtUserAC')[0];
                var userId=Ext.ComponentQuery.query("#txtUserAC")[0];
                var applDecReason=Ext.ComponentQuery.query('#txtApplDecReasonAD')[0];

                var txtAmtRtd = Ext.ComponentQuery.query('#txtAmtRtd')[0];

                //-------setting values in fields------------------

                acOffcode.setValue(row.AcOffCode);
                offcodeAD.setValue(row.OffCode);
                appealnoAD.setValue(row.AppealNo);
                pan.setValue(row.Pan);
                appealdateAD.setValue(row.ApplDate); 
                appealOnMaNo.setValue(row.ApplOnMaNo);
                applLocCode.setValue(row.ApplLocCode);
                applRegNo.setValue(row.ApplRegNo); 

                var taxpayer=row.TaxPayer;
                // console.log(taxpayer);
                var bAddress =taxpayer.BusinessAddress.Address;

                tpName.setValue(taxpayer.Name);
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var wn=bAddress.WardNo;
                var dn=bAddress.DistrictNameNep;
                var svn=sn +"/" + vt;
                var addr=svn + "-" + wn + "," + dn;
                tpAddress.setValue(addr);

                decNo.setValue(row.AcDecisionNo);
                decDate.setValue(row.AcDate);
                userAC.setValue(row.AcUserID);
                applDecReason.setValue(row.ApplReason);

                // ---------------------------------------------------


                var store = Ext.getStore('ACLines');

                store.loadData(row.AppealLinesLST); 

                //-------------------Displaying Total Amount-Retained----------------------

                var sum = 0;

                store.each(function (rec) {

                    var taxYear = rec.get('TaxYear') === ""? null:rec.get('TaxYear');
                    var amount = rec.get('Amount') === ""? null:rec.get('Amount');
                    var amtRetained = rec.get('AmountRetained') === ""? null:rec.get('AmountRetained');

                    rec.data.TaxYear = taxYear;
                    rec.data.Amount = amount;
                    rec.data.AmountRetained = amtRetained;   

                    var amtRetained1 = (amtRetained === null)?0:amtRetained;
                    sum = Number(sum) + Number(amtRetained1); 


                });         

                txtAmtRtd.setValue(sum);

                //-----------------------------------------------------------------------------

            },                   

            failure:function(response)
            {			
                // waitMsg.hide();
                msg('FAILURE',Ext.decode(response));
            }
        });
    },

    SaveACHeaderWithLinesAU: function(rStatus,action) {
        var me=this;
        //var  waitMsg=watiMsg('Saving .....');

        var offcodeAD = Ext.ComponentQuery.query("#offcodeAD")[0];    
        /*if(offcodeAD.getValue() === "")
        {
        msg("WARNING","कार्यालय कोड हाल्नुहोस् !!!");
        return;
        }
        */

        var appealnoAD = Ext.ComponentQuery.query("#appealnoAD")[0];
        if(appealnoAD.getValue() === "")
        {
            msg("WARNING","पुनरावेदन दर्ता न. हाल्नुहोस्  !!!");
            return;
        }


        var acOffcode=Ext.ComponentQuery.query("#txtAcOffcode")[0];


        var acDecNo=Ext.ComponentQuery.query("#txtDecno")[0];
        //if(acDecNo.getValue()==="")
        //{
        // msg("WARNING","निर्णय न. भर्णुश !!!");
        // return;
        //}


        var acDateAd=Ext.ComponentQuery.query("#txtDecdate")[0];

        //.....................................

        //var btnSubmitVad=Ext.ComponentQuery.query('#btnSubmitVad')[0];
        //btnSubmitVad.disable(true);
        //....................................

        var pan=Ext.ComponentQuery.query('#txtPanAC')[0];
        var applDate=Ext.ComponentQuery.query('#txtappealdateAD')[0];
        var applOnMaNo=Ext.ComponentQuery.query('#txtappealOnMaNo')[0];
        var applLocCode=Ext.ComponentQuery.query('#txtApplLocCode')[0];
        var applRegNo=Ext.ComponentQuery.query('#txtApplRegNo')[0];

        var acctType= "00";//Ext.ComponentQuery.query('#hdnAcctType')[0];
        var tranDate="";//Ext.ComponentQuery.query('#hdnTranDate')[0];
        var orderDate=Ext.ComponentQuery.query('#hdnOrderDate')[0];
        var orderNo=Ext.ComponentQuery.query('#hdnOrderNo')[0];
        //var apealReason=Ext.ComponentQuery.query('#hdnAppealReason')[0];
        var appealStatus=Ext.ComponentQuery.query('#hdnAppealStatus')[0];
        var hdnuserId=Ext.ComponentQuery.query('#hdnUserId')[0];
        var apTranNo=Ext.ComponentQuery.query('#hdnApTranNo')[0];
        var acTranNo=Ext.ComponentQuery.query('#hdnAcTranNo')[0];
        //var rStatus=Ext.ComponentQuery.query('#hdnPrStatus')[0];
        var decRemarks=Ext.ComponentQuery.query('#txtApplDecReasonAD')[0];

        var userId=Ext.ComponentQuery.query("#txtUserAC")[0];

        var strLines = Ext.getStore('ACLines');

        var objParam = Ext.ComponentQuery.query('#pnlAppealDecision')[0].extraParam;
        //console.log('obj',objParam);

        var offCodeAU = objParam.params.offCode;
        var requestNo = objParam.params.requestNo;
        var tranNo = objParam.params.tranNo;

        //------------------------------------------------------
        // NB: Posting Data to Server
        //------------------------------------------------------

        var appHeader = "";
        var appLines = "";

        strLines.clearFilter();

        if(strLines.getCount() > 0)
        {
            AppealLinesLST = getJson(strLines); 

        }
        /*
        console.log("l",AppealLinesLST);

        if(AppealLinesLST.AmountRetained === undefined || AppealLinesLST.AmountRetained === null)
        {
        msg("WARNING","कृपया निर्णय ठहर गरिएको रकम हाल्नलाई row double click गर्नुहोस् ! ");
        return;
        }
        */
        appHeader = {

            OffCodeAU:offCodeAU,
            RequestNo:requestNo,
            OffCode:offcodeAD.getValue(), 
            AppealNo:appealnoAD.getValue() === ""?null:appealnoAD.getValue(),
            Pan:pan.getValue(),
            ApplDate:applDate.getValue(),
            ApplOnMaNo:applOnMaNo.getValue(),
            ApplLocCode:applLocCode.getValue(),
            ApplRegNo:applRegNo.getValue(),
            AcOffCode:acOffcode.getValue() === ""?null:acOffcode.getValue(), 
            AcDate:acDateAd.getValue(),
            AcDecisionNo:acDecNo.getValue(),
            AcUserID:userId.getValue(),   
            Action:action,//Ext.ComponentQuery.query("#hdnAction")[0].getValue(),

            AcctType:acctType,//acctType.getValue(),
            TranDate:tranDate,//tranDate.getValue(),
            OrderDate:orderDate.getValue(),
            OrderNo:orderNo.getValue(),
            ApplReason:decRemarks.getValue(),
            ApplStatus:appealStatus.getValue(),
            UserID:hdnuserId.getValue(),
            ApTranNo:apTranNo.getValue()===""?null:apTranNo.getValue(),
            AcTranNo:tranNo,//acTranNo.getValue()===""?null:acTranNo.getValue(),
            Rstatus:rStatus,

            AppealLinesLST:AppealLinesLST !== ""?AppealLinesLST:null
        } ;

        Ext.Ajax.request({
            url: '../Handlers/VAT/Appeal/AppealHeaderHandler.ashx?method=SaveACHeaderAU',
            params: {appealHeader:JSON.stringify(appHeader)},
            success: function ( result, request ) {  
                // waitMsg.hide(); 

                var obj = Ext.decode(result.responseText);

                //  console.log('obj',obj.message);  

                if(rStatus === "F")
                {
                    msg('INFO','पुनरावेदनमा गएको डाटा सफलतापुर्वक Submit भयो ।');
                    return;
                }
                else
                {
                    if(action === "E")
                    {
                        msg('INFO','पुनरावेदनमा गएको डाटा सफलतापुर्वक Save भयो ।');
                        return;
                    }
                    else
                    {
                        msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);
                    }
                }
            }

        });
    },

    init: function(application) {
        this.control({
            "#pnlAppealDecision": {
                afterrender: this.onPnlAppealDecisionAfterRender
            },
            "#btnBackVad": {
                click: this.onBtnBackVadClick
            },
            "#btnSaveVad": {
                click: this.onBtnSaveVadClick
            },
            "#btnSubmitVad": {
                click: this.onBtnSubmitVadClick
            },
            "#appealnoAD": {
                keypress: this.onAppealnoADKeypress,
                blur: this.onAppealnoADBlur
            },
            "#txtDecdate": {
                blur: this.onTxtDecdateBlur
            },
            "#grdAppealDecision": {
                beforerender: this.onGrdAppealDecisionBeforeRender
            },
            "#btnCancelVad": {
                click: this.onBtnCancelVadClick
            },
            "#btnEditVad": {
                click: this.onBtnEditVadClick
            },
            "#btnDeleteVad": {
                click: this.onBtnDeleteVadClick
            },
            "#txtApplDecReasonAD": {
                keypress: this.onTxtApplDecReasonADKeypress,
                keyup: this.onTxtApplDecReasonADKeyup,
                change: this.onTxtApplDecReasonADChange,
                focus: this.onTxtApplDecReasonADFocus
            },
            "#txtUserAC": {
                keypress: this.onTxtUserACKeypress,
                keyup: this.onTxtUserACKeyup,
                change: this.onTxtUserACChange,
                focus: this.onTxtUserACFocus
            }
        });
    }

});
