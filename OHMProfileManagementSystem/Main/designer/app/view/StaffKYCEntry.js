/*
 * File: app/view/StaffKYCEntry.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.StaffKYCEntry', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Number',
        'Ext.button.Button',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.selection.RowModel',
        'Ext.grid.column.Action'
    ],

    frame: true,
    title: 'Staff Information Entry',

    layout: {
        type: 'table',
        columns: 4
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    itemId: 'frmStaffKYCEntry',
                    bodyPadding: 10,
                    title: 'My Form',
                    layout: {
                        type: 'table',
                        columns: 4
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            itemId: 'txtMembershipDateBS',
                            fieldLabel: 'Date(B.S.)',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtMembershipDateAD',
                            margin: '0 0 0 10',
                            fieldLabel: 'Date(A.D.)',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 24
                        },
                        {
                            xtype: 'combobox',
                            colspan: 2,
                            itemId: 'ddlOccupation',
                            margin: '0 0 0 10',
                            fieldLabel: 'Occupation',
                            labelWidth: 110,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            displayField: 'OccupationDesc',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'OccupationStore',
                            valueField: 'OccupationCode'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtMemberID',
                            fieldLabel: 'Member Id',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 65
                        },
                        {
                            xtype: 'combobox',
                            colspan: 2,
                            itemId: 'ddlCaste',
                            margin: '0 0 0 10',
                            fieldLabel: 'Caste',
                            labelWidth: 110,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            size: 40,
                            displayField: 'CasteDesc',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'CasteDetailStore',
                            valueField: 'CasteCode'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtEmpID',
                            fieldLabel: 'Employee Id',
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            listeners: {
                                afterrender: {
                                    fn: me.onTxtEmpIDAfterRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtEmpName',
                            margin: '0 0 0 10',
                            fieldLabel: 'Label',
                            hideLabel: true,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 40
                        },
                        {
                            xtype: 'numberfield',
                            itemId: 'txtBoyNo',
                            margin: '0 0 0 10',
                            fieldLabel: 'Boy No',
                            labelWidth: 110,
                            listeners: {
                                change: {
                                    fn: me.onTxtBoyNoChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'numberfield',
                            itemId: 'txtGirlNo',
                            margin: '0 0 0 99',
                            fieldLabel: 'Girl No',
                            listeners: {
                                change: {
                                    fn: me.onTxtGirlNoChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtFirstName',
                            fieldLabel: 'First Name',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtLastName',
                            margin: '0 0 0 10',
                            fieldLabel: 'Last Name',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 24
                        },
                        {
                            xtype: 'numberfield',
                            itemId: 'txtChildrenNo',
                            margin: '0 0 0 10',
                            fieldLabel: 'Children No',
                            labelWidth: 110,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'combobox',
                            itemId: 'ddlMartialStatus',
                            margin: '0 0 0 99',
                            fieldLabel: 'Martial Status',
                            emptyText: '---Select---',
                            displayField: 'RefDtlName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'MsReferenceCodeDetailsDestinationFormatStore',
                            valueField: 'RefDtlCode'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtAddress',
                            fieldLabel: 'Address',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 65
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtDOBBS',
                            margin: '0 0 0 10',
                            fieldLabel: 'DOB(B.S.)',
                            labelWidth: 110,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtDOBAD',
                            margin: '0 0 0 99',
                            fieldLabel: '(A.D.)',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtPostalAddress',
                            fieldLabel: 'Postal Address',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 65
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtNomineeName',
                            margin: '0 0 0 10',
                            fieldLabel: 'Nominee Name',
                            labelWidth: 110,
                            size: 75
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtFatherName',
                            fieldLabel: 'Father Name',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 65
                        },
                        {
                            xtype: 'combobox',
                            colspan: 2,
                            itemId: 'txtNomineeRelation',
                            margin: '0 0 0 10',
                            fieldLabel: 'Nominee Relation',
                            labelWidth: 110,
                            emptyText: '---Select---',
                            displayField: 'RefDtlName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'MsReferenceCodeDetailsDestinationParameterStore',
                            valueField: 'RefDtlCode'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtSpouseName',
                            fieldLabel: 'Spouse Name',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 65
                        },
                        {
                            xtype: 'combobox',
                            itemId: 'txtIdentityType',
                            margin: '0 0 0 10',
                            fieldLabel: 'Identity Type',
                            labelWidth: 110,
                            emptyText: '---Select---',
                            displayField: 'RefDtlName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'MsReferenceCodeDetailsDestinationTypeStore',
                            valueField: 'RefDtlCode'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtIdentityNo',
                            margin: '0 0 0 99',
                            fieldLabel: 'Identity No'
                        },
                        {
                            xtype: 'combobox',
                            colspan: 2,
                            itemId: 'ddlEducation',
                            fieldLabel: 'Education',
                            emptyText: '---Select---',
                            size: 65,
                            displayField: 'EducationDesc',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'EducationStore',
                            valueField: 'EducationCode'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtClosedDateBS',
                            margin: '0 0 0 10',
                            fieldLabel: 'Closed Date(B.S.)',
                            labelWidth: 110
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtClosedDateAD',
                            margin: '0 0 0 99',
                            fieldLabel: '(A.D.)',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'container',
                            colspan: 4,
                            height: 28,
                            margin: '10 0 0 0',
                            layout: {
                                type: 'hbox',
                                align: 'stretch',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'btnInsertStaffInfo',
                                    text: 'Insert Staff Information',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnInsertStaffInfoClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    hidden: true,
                                    itemId: 'btnUpdateStaffInfo',
                                    text: 'Update Staff Information',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnUpdateStaffInfoClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'form',
                            colspan: 4,
                            frame: true,
                            margin: '10 0 0 0',
                            bodyPadding: 10,
                            title: 'Search',
                            layout: {
                                type: 'table',
                                columns: 2
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtSearchMembershipDateFromBS',
                                    fieldLabel: 'Membership Date From(B.S.)',
                                    labelWidth: 165
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtSearchMembershipDateToBS',
                                    margin: '0 0 0 180',
                                    fieldLabel: 'Membership Date To(B.S.)',
                                    labelWidth: 150
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 2,
                                    itemId: 'ddlMember',
                                    fieldLabel: 'Member',
                                    labelWidth: 165,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    emptyText: '---Select---',
                                    size: 60,
                                    displayField: 'ClientName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'MemberForChequeStore',
                                    valueField: 'ClientCode'
                                },
                                {
                                    xtype: 'container',
                                    colspan: 4,
                                    height: 28,
                                    margin: '10 0 0 0',
                                    width: 1163,
                                    layout: {
                                        type: 'hbox',
                                        align: 'stretch',
                                        pack: 'center'
                                    },
                                    items: [
                                        {
                                            xtype: 'button',
                                            text: 'Search',
                                            listeners: {
                                                click: {
                                                    fn: me.onButtonClick,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            colspan: 4,
                            itemId: 'grdEmployeeDetail',
                            store: 'EmployeeDetailStore',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'ClientCode',
                                    text: 'Member Code'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'MemberName',
                                    text: 'MemberName'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'Address',
                                    text: 'Address'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'MemDate',
                                    text: 'Membership Date'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'Active',
                                    text: 'Active'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                Ext.ComponentQuery.query('#grdEmployeeDetail')[0].getSelectionModel().select(rowIndex);
                                                //get reference of store
                                                var store = Ext.getStore('EmployeeDetailStore');

                                                //get selected row using rowindex
                                                var row = store.getAt(rowIndex).data;


                                                // set values
                                                console.log('row',row);
                                                Ext.ComponentQuery.query('#txtMemberID')[0].setValue(row.ClientCode);
                                                Ext.ComponentQuery.query('#txtFirstName')[0].setValue(row.Fname);
                                                Ext.ComponentQuery.query('#txtLastName')[0].setValue(row.Lname);
                                                Ext.ComponentQuery.query('#txtMembershipDateAD')[0].setValue(row.MembershipDate);
                                                Ext.ComponentQuery.query('#txtMembershipDateBS')[0].setValue(row.MemDate);
                                                Ext.ComponentQuery.query('#txtAddress')[0].setValue(row.Address);
                                                Ext.ComponentQuery.query('#ddlMartialStatus')[0].setValue(row.MaritalStatus);
                                                Ext.ComponentQuery.query('#txtFatherName')[0].setValue(row.FatherName);
                                                Ext.ComponentQuery.query('#txtSpouseName')[0].setValue(row.SpouseName);
                                                Ext.ComponentQuery.query('#txtNomineeName')[0].setValue(row.NomineeName);
                                                Ext.ComponentQuery.query('#txtNomineeRelation')[0].setValue(row.NomineeRelation);
                                                Ext.ComponentQuery.query('#txtIdentityType')[0].setValue(row.IdDocumentType);
                                                Ext.ComponentQuery.query('#txtIdentityNo')[0].setValue(row.IdDocumentNo);
                                                Ext.ComponentQuery.query('#txtEmpID')[0].setValue(row.EmployeeId);
                                                Ext.ComponentQuery.query('#txtClosedDateAD')[0].setValue(row.MembershipCloseDate);
                                                Ext.ComponentQuery.query('#txtPostalAddress')[0].setValue(row.PostalAddress);
                                                Ext.ComponentQuery.query('#ddlOccupation')[0].setValue(row.OccupationCode);
                                                Ext.ComponentQuery.query('#txtBoyNo')[0].setValue(row.NoBoyChild);
                                                Ext.ComponentQuery.query('#txtGirlNo')[0].setValue(row.NoGirlChild);
                                                Ext.ComponentQuery.query('#txtDOBAD')[0].setValue(row.Dob);
                                                Ext.ComponentQuery.query('#txtChildrenNo')[0].setValue(row.ChildrenNo);
                                                Ext.ComponentQuery.query('#ddlCaste')[0].setValue(row.CasteCode);
                                                Ext.ComponentQuery.query('#ddlEducation')[0].setValue(row.EducationCode);




                                                //set buttons visible
                                                Ext.ComponentQuery.query('#btnUpdateStaffInfo')[0].setVisible(true);

                                                Ext.ComponentQuery.query('#btnInsertStaffInfo')[0].setVisible(false);
                                            },
                                            icon: '../ITS/resources/images/icons/Modify.png'
                                        }
                                    ]
                                }
                            ],
                            selModel: Ext.create('Ext.selection.RowModel', {

                            })
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            itemId: 'hdnGender',
                            fieldLabel: 'Label'
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFrmStaffKYCEntryAfterRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onTxtEmpIDAfterRender: function(component, eOpts) {
        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectEmployeePopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });
    },

    onTxtBoyNoChange: function(field, newValue, oldValue, eOpts) {
        if(Ext.ComponentQuery.query('#txtBoyNo')[0].getValue()===''&& Ext.ComponentQuery.query('#txtGirlNo')[0].getValue()===''){
            var noOfchildren=null;
        }
        else if(Ext.ComponentQuery.query('#txtBoyNo')[0].getValue()==='')
            {
                var noOfChildren=parseInt(Ext.ComponentQuery.query('#txtGirlNo')[0].getValue());
            }
        else if(Ext.ComponentQuery.query('#txtGirlNo')[0].getValue()==='')
            {
                var noOfChildren=parseInt(Ext.ComponentQuery.query('#txtBoyNo')[0].getValue());
            }
        else{
            var noOfChildren=parseInt(Ext.ComponentQuery.query('#txtBoyNo')[0].getValue())+parseInt(Ext.ComponentQuery.query('#txtGirlNo')[0].getValue());
        }
        Ext.ComponentQuery.query('#txtChildrenNo')[0].setValue(noOfChildren);
    },

    onTxtGirlNoChange: function(field, newValue, oldValue, eOpts) {
        if(Ext.ComponentQuery.query('#txtBoyNo')[0].getValue()==='')
            {
                var noOfChildren=parseInt(Ext.ComponentQuery.query('#txtGirlNo')[0].getValue());
            }
        else if(Ext.ComponentQuery.query('#txtGirlNo')[0].getValue()==='')
            {
                var noOfChildren=parseInt(Ext.ComponentQuery.query('#txtBoyNo')[0].getValue());
            }
        else{
            var noOfChildren=parseInt(Ext.ComponentQuery.query('#txtBoyNo')[0].getValue())+parseInt(Ext.ComponentQuery.query('#txtGirlNo')[0].getValue());
        }
        Ext.ComponentQuery.query('#txtChildrenNo')[0].setValue(noOfChildren);
    },

    onBtnInsertStaffInfoClick: function(button, e, eOpts) {
        var insObj={
        MembershipDate:Ext.ComponentQuery.query('#txtMembershipDateAD')[0].getValue(),
        Address:Ext.ComponentQuery.query('#txtAddress')[0].getValue(),
        MaritalStatus:Ext.ComponentQuery.query('#ddlMartialStatus')[0].getValue(),
        FatherName:Ext.ComponentQuery.query('#txtFatherName')[0].getValue(),
        SpouseName:Ext.ComponentQuery.query('#txtSpouseName')[0].getValue(),
        BirthYear:null,
        NoBoyChild:Ext.ComponentQuery.query('#txtBoyNo')[0].getValue(),
        NoGirlChild:Ext.ComponentQuery.query('#txtGirlNo')[0].getValue(),
        NomineeName:Ext.ComponentQuery.query('#txtNomineeName')[0].getValue(),
        NomineeRelation:Ext.ComponentQuery.query('#txtNomineeRelation')[0].getValue(),
        IdDocumentType:Ext.ComponentQuery.query('#txtIdentityType')[0].getValue(),
        IdDocumentNo:Ext.ComponentQuery.query('#txtIdentityNo')[0].getValue(),
        MemberType:'S',
        EmployeeId:Ext.ComponentQuery.query('#txtEmpID')[0].getValue(),
        CasteCode:Ext.ComponentQuery.query('#ddlCaste')[0].getValue(),
        Fname:Ext.ComponentQuery.query('#txtFirstName')[0].getValue(),
        Lname:Ext.ComponentQuery.query('#txtLastName')[0].getValue(),
        MembershipCloseDate:Ext.ComponentQuery.query('#txtClosedDateAD')[0].getValue(),
        PostalAddress:Ext.ComponentQuery.query('#txtPostalAddress')[0].getValue(),
        Gender:Ext.ComponentQuery.query('#hdnGender')[0].getValue(),
        OccupationCode:Ext.ComponentQuery.query('#ddlOccupation')[0].getValue(),
        EducationCode:Ext.ComponentQuery.query('#ddlEducation')[0].getValue(),
        Active:'Y',
        ChildrenNo:Ext.ComponentQuery.query('#txtChildrenNo')[0].getValue(),
        ReasonForInactive:null,
        ImagePath:null,
        TranOfficeCode:getOfficeCode(),
        FixedCollectionAmount:'0',
        ThirdPartyData:null,
        Dob:Ext.ComponentQuery.query('#txtDOBAD')[0].getValue(),
        TelephoneNo:null,
        MobileNo:null,
        FaxNo:null,
        JointImagePath:null,
        GrandFatherName:null,
        MinorYN:null,
        MinorName:null,
        MinorRelation:null,
        EmailAddress:null,
        FingerPrintRight:null,
        CreatedBy:getCurrentUser(),
        Action:'I'
        };

        var waitSave = watiMsg("Inserting Staff Information..Please wait ...");
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/StaffLoanTransaction/EmployeeKycInfoHandler.ashx',
            params: {
                method:'SaveEmployeeKycInfo',
                employeeKycInfo:JSON.stringify(insObj)
            },
            success: function ( response, request ) {
                         waitSave.hide();
                            var out=Ext.decode(response.responseText);
                            console.log(out);

                            if(out.success==="true")
                                {
                                   msg("SUCCESS",out.message);
                              }
                                else
                                    {
                                        msg("FAILURE",out.message);
                                    }
                            },
                            failure: function ( result, request ) {
                                waitSave.hide();
                                var out=Ext.decode(response.responseText);
                                msg("FAILURE",out.message);
                            }



                });


    },

    onBtnUpdateStaffInfoClick: function(button, e, eOpts) {
        var insObj={
        MembershipDate:Ext.ComponentQuery.query('#txtMembershipDateAD')[0].getValue(),
        Address:Ext.ComponentQuery.query('#txtAddress')[0].getValue(),
        MaritalStatus:Ext.ComponentQuery.query('#ddlMartialStatus')[0].getValue(),
        FatherName:Ext.ComponentQuery.query('#txtFatherName')[0].getValue(),
        SpouseName:Ext.ComponentQuery.query('#txtSpouseName')[0].getValue(),
        BirthYear:null,
        NoBoyChild:Ext.ComponentQuery.query('#txtBoyNo')[0].getValue(),
        NoGirlChild:Ext.ComponentQuery.query('#txtGirlNo')[0].getValue(),
        NomineeName:Ext.ComponentQuery.query('#txtNomineeName')[0].getValue(),
        NomineeRelation:Ext.ComponentQuery.query('#txtNomineeRelation')[0].getValue(),
        IdDocumentType:Ext.ComponentQuery.query('#txtIdentityType')[0].getValue(),
        IdDocumentNo:Ext.ComponentQuery.query('#txtIdentityNo')[0].getValue(),
        MemberType:'S',
        EmployeeId:Ext.ComponentQuery.query('#txtEmpID')[0].getValue(),
        CasteCode:Ext.ComponentQuery.query('#ddlCaste')[0].getValue(),
        Fname:Ext.ComponentQuery.query('#txtFirstName')[0].getValue(),
        Lname:Ext.ComponentQuery.query('#txtLastName')[0].getValue(),
        MembershipCloseDate:Ext.ComponentQuery.query('#txtClosedDateAD')[0].getValue(),
        PostalAddress:Ext.ComponentQuery.query('#txtPostalAddress')[0].getValue(),
        Gender:Ext.ComponentQuery.query('#hdnGender')[0].getValue(),
        OccupationCode:Ext.ComponentQuery.query('#ddlOccupation')[0].getValue(),
        EducationCode:Ext.ComponentQuery.query('#ddlEducation')[0].getValue(),
        Active:'Y',
        ChildrenNo:Ext.ComponentQuery.query('#txtChildrenNo')[0].getValue(),
        ReasonForInactive:null,
        ImagePath:null,
        TranOfficeCode:getOfficeCode(),
        FixedCollectionAmount:'0',
        ThirdPartyData:null,
        Dob:Ext.ComponentQuery.query('#txtDOBAD')[0].getValue(),
        TelephoneNo:null,
        MobileNo:null,
        FaxNo:null,
        JointImagePath:null,
        GrandFatherName:null,
        MinorYN:null,
        MinorName:null,
        MinorRelation:null,
        EmailAddress:null,
        FingerPrintRight:null,
        CreatedBy:getCurrentUser(),
        Action:'U'
        };

        var waitSave = watiMsg("Updating Staff Information..Please wait ...");
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/StaffLoanTransaction/EmployeeKycInfoHandler.ashx',
            params: {
                method:'SaveEmployeeKycInfo',
                employeeKycInfo:JSON.stringify(insObj)
            },
            success: function ( response, request ) {
                         waitSave.hide();
                            var out=Ext.decode(response.responseText);
                            console.log(out);

                            if(out.success==="true")
                                {
                                   msg("SUCCESS",out.message);
                              }
                                else
                                    {
                                        msg("FAILURE",out.message);
                                    }
                            },
                            failure: function ( result, request ) {
                                waitSave.hide();
                                var out=Ext.decode(response.responseText);
                                msg("FAILURE",out.message);
                            }



                });


    },

    onButtonClick: function(button, e, eOpts) {
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/StaffLoanTransaction/EmployeeKycDetailHandler.ashx',
            params: {
                method:'GetEmpKycDetail',
                OfficeCode:getOfficeCode(),
                ClientCode:Ext.ComponentQuery.query('#ddlMember')[0].getValue(),
                ClientName:null,
                DateFrom:null,//Ext.ComponentQuery.query('#txtDepositDateFromBs')[0].getValue(),
                DateTo:null,//Ext.ComponentQuery.query('#txtDepositDateToBs')[0].getValue()



            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('EmployeeDetailStore');
                    store.removeAll();
                    store.add(obj.root);


                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });
    },

    onFrmStaffKYCEntryAfterRender: function(component, eOpts) {
        Ext.ComponentQuery.query('#txtMembershipDateBS')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtMembershipDateAD')[0].setValue(getMisDateAD());
        Ext.ComponentQuery.query('#txtSearchMembershipDateFromBS')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtSearchMembershipDateToBS')[0].setValue(getMisDateBS());


        var employeeDetailStore=Ext.getStore('EmployeeDetailStore');
        employeeDetailStore.removeAll();

        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/Maintenance/OccupationHandler.ashx',
            params: {
                method:'GetOccupationLov',
                OccupationDesc:null,


            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('OccupationStore');
                    store.removeAll();
                    store.add(obj.root);
                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });



        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/Maintenance/CasteDetailHandler.ashx',
            params: {
                method:'GetCaste',
                CasteDesc:null,


            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('CasteDetailStore');
                    store.removeAll();
                    store.add(obj.root);
                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });



        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'MARITAL_STATUS'
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                            var DestinationFormatStore=Ext.getStore('MsReferenceCodeDetailsDestinationFormatStore');
                            DestinationFormatStore.removeAll();
                            DestinationFormatStore.add(obj.root);

                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });


        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'NOMINEE_RELATION'
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                            var DestinationParameterStore=Ext.getStore('MsReferenceCodeDetailsDestinationParameterStore');
                            DestinationParameterStore.removeAll();
                            DestinationParameterStore.add(obj.root);



                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });

        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'ID_DOCUMENT_TYPE'
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                           var DestinationTypeStore=Ext.getStore('MsReferenceCodeDetailsDestinationTypeStore');
                            DestinationTypeStore.removeAll();
                            DestinationTypeStore.add(obj.root);


                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });




        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/Maintenance/EducationHandler.ashx',
            params: {
                method:'GetEducationLov',
                educationDesc:null
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                           var Store=Ext.getStore('EducationStore');
                            Store.removeAll();
                            Store.add(obj.root);


                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });




        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/StaffLoanTransaction/EmployeeKycClientHandler.ashx',
            params: {
                method:'GetEmpKycClientSearch',
                OfficeCode:getOfficeCode(),
                EmpName:null
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                           var Store=Ext.getStore('MemberForChequeStore');
                            Store.removeAll();
                            Store.add(obj.root);


                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });
    }

});