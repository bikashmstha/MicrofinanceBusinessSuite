/*
 * File: app/view/PurchaseReturn.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.PurchaseReturn', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.selection.RowModel',
        'Ext.grid.plugin.RowEditing',
        'Ext.grid.column.Action',
        'Ext.form.field.Checkbox'
    ],

    frame: true,
    title: 'Purchase Return',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    bodyPadding: 10,
                    title: 'Goods Return',
                    layout: {
                        type: 'table',
                        columns: 3
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            colspan: 3,
                            itemId: 'txtSerialNo',
                            fieldLabel: 'Serial No',
                            labelWidth: 105,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 95
                        },
                        {
                            xtype: 'combobox',
                            itemId: 'ddlGoodsReceiptNo',
                            fieldLabel: 'Goods Receipt No',
                            labelWidth: 105,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            displayField: 'ReferenceNo',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'GoodReceiptReturnStore',
                            valueField: 'ReferenceNo',
                            listeners: {
                                change: {
                                    fn: me.onDdlGoodsReceiptNoChange,
                                    scope: me
                                },
                                select: {
                                    fn: me.onDdlGoodsReceiptNoSelect,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtFiscalYear',
                            margin: '0 0 0 230',
                            fieldLabel: 'Fiscal Year',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtDateBS',
                            fieldLabel: 'Date(B.S.)',
                            labelWidth: 105
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtDateAD',
                            margin: '0 0 0 230',
                            fieldLabel: '(A.D.)',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtSupplierCode',
                            fieldLabel: 'Supplier',
                            labelWidth: 105,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtSupplierName',
                            margin: '0 0 0 10',
                            hideLabel: true,
                            labelWidth: 105,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 70
                        },
                        {
                            xtype: 'combobox',
                            colspan: 3,
                            itemId: 'ddlStoreLocation',
                            fieldLabel: 'Store Location',
                            labelWidth: 105,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            displayField: 'LocationDesc',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'LocationStore',
                            valueField: 'LocationCode'
                        },
                        {
                            xtype: 'combobox',
                            colspan: 3,
                            itemId: 'ddlToDepartment',
                            fieldLabel: 'To Department',
                            labelWidth: 105,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            displayField: 'DeptName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'DepartmentShortStore',
                            valueField: 'DeptCode'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 3,
                            itemId: 'txtRemarks',
                            fieldLabel: 'Remarks',
                            labelWidth: 105,
                            size: 95
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    frame: true,
                    itemId: 'grdItems',
                    width: 1000,
                    title: ' Items',
                    store: 'GoodReceiptDetailDetailStore',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            width: 155,
                            dataIndex: 'ItemCode',
                            text: 'ItemCode',
                            editor: {
                                xtype: 'combobox',
                                itemId: 'txtEditItemCode',
                                displayField: 'ItemCode',
                                store: 'OsItemStore',
                                valueField: 'ItemCode',
                                listeners: {
                                    select: {
                                        fn: me.onTxtEditItemCodeSelect,
                                        scope: me
                                    }
                                }
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 156,
                            dataIndex: 'ItemName',
                            text: 'ItemName',
                            editor: {
                                xtype: 'textfield',
                                itemId: 'txtEditItemName'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 157,
                            dataIndex: 'TransactionQuantity',
                            text: 'TransactionQuantity',
                            editor: {
                                xtype: 'textfield',
                                itemId: 'txtEditTranQuantity'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 154,
                            dataIndex: 'UnitCode',
                            text: 'TransactionCost',
                            editor: {
                                xtype: 'textfield',
                                itemId: 'txtEditUnitCost'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 145,
                            dataIndex: 'TotalCost',
                            text: 'TotalCost',
                            editor: {
                                xtype: 'textfield',
                                itemId: 'txtEditTotalCost'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'InsertUpdateDtl',
                            text: 'InsertUpdateDtl'
                        },
                        {
                            xtype: 'actioncolumn',
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        Ext.Msg.confirm('Confirm Action', 'Do you want to Remove the selected Receipt Details?', function(btn) {
                                            if(btn == 'yes'){
                                                Ext.ComponentQuery.query('#grdItems')[0].getSelectionModel().select(rowIndex);
                                                //get reference of store
                                                var store = Ext.getStore('GoodReceiptDetailDetailStore');

                                                //get selected row using rowindex
                                                store.removeAt(rowIndex);
                                            }
                                        });


                                    },
                                    icon: '../ITS/resources/images/icons/cancel.png'
                                }
                            ]
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'bottom',
                            items: [
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlItemCode',
                                    displayField: 'ItemCode',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'OsItemStore',
                                    valueField: 'ItemCode',
                                    listeners: {
                                        select: {
                                            fn: me.onDdlItemCodeSelect,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtItemName'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtTranQuantity'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtUnitCost'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtTotalCost'
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'btnAdd',
                                    text: 'Add',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnAddClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    selModel: Ext.create('Ext.selection.RowModel', {

                    }),
                    plugins: [
                        Ext.create('Ext.grid.plugin.RowEditing', {
                            listeners: {
                                validateedit: {
                                    fn: me.onRowEditingValidateedit,
                                    scope: me
                                },
                                canceledit: {
                                    fn: me.onRowEditingCanceledit,
                                    scope: me
                                }
                            }
                        })
                    ]
                },
                {
                    xtype: 'container',
                    height: 28,
                    margin: '10 0 0 0',
                    layout: {
                        type: 'table',
                        columns: 3
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            colspan: 1,
                            itemId: 'txtTotalRemarks',
                            margin: '0 0 0 100',
                            fieldLabel: 'Total Quantity',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 1,
                            itemId: 'txtGrandTotalCost',
                            margin: '0 0 0 50',
                            fieldLabel: 'Grand Total Cost',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    height: 28,
                    margin: '10 0 0 0',
                    width: 745,
                    layout: {
                        type: 'hbox',
                        align: 'stretch',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'button',
                            itemId: 'btnSavePurchaseReturn',
                            padding: 5,
                            text: 'Save Purchase Return',
                            listeners: {
                                click: {
                                    fn: me.onBtnSavePurchaseReturnClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'form',
                    frame: true,
                    bodyPadding: 10,
                    title: 'Reports',
                    items: [
                        {
                            xtype: 'form',
                            frame: true,
                            bodyPadding: 10,
                            title: 'Destination',
                            layout: {
                                type: 'table',
                                columns: 3
                            },
                            items: [
                                {
                                    xtype: 'combobox',
                                    colspan: 1,
                                    itemId: 'ddlDestinationFormat',
                                    fieldLabel: 'Destination Format',
                                    labelWidth: 110,
                                    emptyText: '---Select---',
                                    displayField: 'RefDtlName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'MsReferenceCodeDetailsDestinationFormatStore',
                                    valueField: 'RefDtlCode'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 2,
                                    itemId: 'ddlDestinationParamater',
                                    margin: '0 0 0 150',
                                    fieldLabel: 'Destination Parameter',
                                    labelWidth: 125,
                                    emptyText: '---Select---',
                                    displayField: 'RefDtlName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'MsReferenceCodeDetailsDestinationParameterStore',
                                    valueField: 'RefDtlCode'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 1,
                                    itemId: 'ddlDestinationType',
                                    fieldLabel: 'Destination Type',
                                    labelWidth: 110,
                                    emptyText: '---Select---',
                                    displayField: 'RefDtlName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'MsReferenceCodeDetailsDestinationTypeStore',
                                    valueField: 'RefDtlCode'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    colspan: 2,
                                    margin: '0 0 0 150',
                                    fieldLabel: 'Print',
                                    labelWidth: 125
                                },
                                {
                                    xtype: 'container',
                                    colspan: 3,
                                    height: 28,
                                    layout: {
                                        type: 'hbox',
                                        align: 'stretch',
                                        pack: 'center'
                                    },
                                    items: [
                                        {
                                            xtype: 'button',
                                            itemId: 'btnOk',
                                            padding: 5,
                                            text: 'Ok'
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'form',
                    frame: true,
                    margin: '10 0 0 0',
                    bodyPadding: 10,
                    title: 'Search',
                    layout: {
                        type: 'table',
                        columns: 3
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            itemId: 'txtSearchFiscalYear',
                            fieldLabel: 'Fiscal Year'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtFromDate',
                            margin: '0 0 0 10',
                            fieldLabel: 'From Date',
                            labelWidth: 70
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtToDate',
                            margin: '0 0 0 10',
                            fieldLabel: 'To Date',
                            labelWidth: 70
                        },
                        {
                            xtype: 'combobox',
                            colspan: 3,
                            itemId: 'ddlLocation',
                            fieldLabel: 'Location',
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            displayField: 'LocationDesc',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'LocationStore',
                            valueField: 'LocationCode'
                        },
                        {
                            xtype: 'container',
                            colspan: 3,
                            height: 28,
                            margin: '10 0 0 0',
                            width: 727,
                            layout: {
                                type: 'hbox',
                                align: 'stretch',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'btnSearch',
                                    padding: 5,
                                    text: 'Search',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnSearchClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            colspan: 3,
                            itemId: 'grdPurchaseReturnDetail',
                            margin: '10 0 0 0',
                            width: 745,
                            title: '',
                            store: 'GoodReceiptMasterDetailStore',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'ReferenceNo',
                                    text: 'ReferenceNo'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'FiscalYear',
                                    text: 'FiscalYear'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'SupplierDesc',
                                    text: 'SupplierDesc'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'TransactionDate',
                                    text: 'TransactionDate'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'TransactionDateNep',
                                    text: 'TransactionDateNep'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                Ext.ComponentQuery.query('#grdPurchaseReturnDetail')[0].getSelectionModel().select(rowIndex);
                                                //get reference of store
                                                var store = Ext.getStore('GoodReceiptMasterDetailStore');

                                                //get selected row using rowindex
                                                var row = store.getAt(rowIndex).data;


                                                // set values
                                                console.log('row',row);

                                                Ext.ComponentQuery.query('#ddlGoodsReceiptNo')[0].setValue(row.ReferenceNo);
                                                Ext.ComponentQuery.query('#txtFiscalYear')[0].setValue(row.FiscalYear);
                                                Ext.ComponentQuery.query('#txtDateBS')[0].setValue(row.TransactionDateNep);
                                                Ext.ComponentQuery.query('#txtDateAD')[0].setValue(row.TransactionDate);
                                                Ext.ComponentQuery.query('#ddlStoreLocation')[0].setValue(row.LocationCode);
                                                Ext.ComponentQuery.query('#txtSupplierCode')[0].setValue(row.SupplierCode);
                                                Ext.ComponentQuery.query('#txtSupplierName')[0].setValue(row.SupplierDesc);
                                                Ext.ComponentQuery.query('#ddlToDepartment')[0].setValue(row.DeptCode);
                                                Ext.ComponentQuery.query('#txtRemarks')[0].setValue(row.Remarks);



                                                Ext.Ajax.request({
                                                    url: '../Handlers/Inventory/Transaction/GoodReceiptDetailDetailHandler.ashx',
                                                    params: {
                                                        method:'GetGoodReceiptDtlDetail',
                                                        ReferenceNo:row.ReferenceNo,

                                                    },
                                                    success: function ( response, request ) {

                                                        var out=Ext.decode(response.responseText);
                                                        console.log(out);

                                                        if(out.success==="true")
                                                        {
                                                            var store=Ext.getStore('GoodReceiptDetailDetailStore');
                                                            store.removeAll();
                                                            store.add(out.root);

                                                        }
                                                        else
                                                        {
                                                            msg("FAILURE",out.message);
                                                        }
                                                    },
                                                    failure: function ( result, request ) {

                                                        var out=Ext.decode(result.responseText);
                                                        msg("FAILURE",result.message);
                                                    }

                                                });





                                                //set buttons visible
                                                //Ext.ComponentQuery.query('#btnUpdateOfficeInfo')[0].setVisible(true);
                                                //Ext.ComponentQuery.query('#btnDeleteOfficeInfo')[0].setVisible(true);
                                                //Ext.ComponentQuery.query('#BtnInsertOfficeInfo')[0].setVisible(false);
                                            },
                                            icon: '../ITS/resources/images/icons/Modify.png'
                                        }
                                    ]
                                }
                            ],
                            selModel: Ext.create('Ext.selection.RowModel', {

                            })
                        }
                    ]
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onPanelAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onDdlGoodsReceiptNoChange: function(field, newValue, oldValue, eOpts) {
        Ext.Ajax.request({
            url: '../Handlers/Inventory/Transaction/GoodReceiptReturnItemHandler.ashx',
            params: {
                method:'GetGoodReceiptReturnItem',
                ItemDesc:null,
                ReferenceNo:Ext.ComponentQuery.query('#ddlGoodsReceiptNo')[0].getValue()
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                           var store=Ext.getStore('OsItemStore');
                            store.removeAll();
                            store.add(obj.root);


                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });
    },

    onDdlGoodsReceiptNoSelect: function(combo, records, eOpts) {
        Ext.ComponentQuery.query('#txtSupplierCode')[0].setValue(records[0].data.SupplierCode);
        Ext.ComponentQuery.query('#txtSupplierName')[0].setValue(records[0].data.SupplierDesc);
    },

    onTxtEditItemCodeSelect: function(combo, records, eOpts) {
        Ext.ComponentQuery.query('#txtEditItemName')[0].setValue(records[0].data.ItemName);
    },

    onDdlItemCodeSelect: function(combo, records, eOpts) {
        Ext.ComponentQuery.query('#txtItemName')[0].setValue(records[0].data.ItemName);
    },

    onBtnAddClick: function(button, e, eOpts) {
        /*Ext.Ajax.request({
            url: '../Handlers/Inventory/Transaction/LocationHandler.ashx',
            params: {
                method:'GetLocation',
                OfficeCode:getOfficeCode(),
                LocationDesc:null
            },
            success: function ( response, request ) {

                var out=Ext.decode(response.responseText);
                console.log(out);

                if(out.success==="true")
                {*/
                    var store=Ext.getStore('GoodReceiptDetailDetailStore');
                    var GoodReceiptDetail ={
                        ItemCode:Ext.ComponentQuery.query('#ddlItemCode')[0].getValue(),
                        ItemName:Ext.ComponentQuery.query('#txtItemName')[0].getValue(),
                       // OrderNo: Ext.ComponentQuery.query('#txtOrderNo')[0].getValue(),
                        TransactionQuantity : Ext.ComponentQuery.query('#txtTranQuantity')[0].getValue(),
                        UnitCode:Ext.ComponentQuery.query('#txtUnitCost')[0].getValue(),
                        TotalCost:Ext.ComponentQuery.query('#txtTotalCost')[0].getValue(),
                       // ExpiryDateBs:Ext.ComponentQuery.query('#txtExpiryDateBS')[0].getValue(),
                       // ExpiryDate:Ext.ComponentQuery.query('#txtExpiryDateAD')[0].getValue(),
                        InsertUpdateDtl:'U'
                    };

                    store.add(GoodReceiptDetail);/*

                }
                else
                {
                    msg("FAILURE",out.message);
                }
            },
            failure: function ( result, request ) {

                var out=Ext.decode(result.responseText);
                msg("FAILURE",result.message);
            }

        });*/
    },

    onRowEditingValidateedit: function(editor, e, eOpts) {

    },

    onRowEditingCanceledit: function(editor, e, eOpts) {

    },

    onBtnSavePurchaseReturnClick: function(button, e, eOpts) {
        var store=Ext.getStore('GoodReceiptDetailDetailStore');
        var insObj={

        FiscalYear:Ext.ComponentQuery.query('#txtFiscalYear')[0].getValue(),
        SupplierCode:Ext.ComponentQuery.query('#txtSupplierCode')[0].getValue(),
        LocationCode:Ext.ComponentQuery.query('#ddlStoreLocation')[0].getValue(),//'HO',//,
        TransactionType:'PR',
        TransactionDate:Ext.ComponentQuery.query('#txtDateAD')[0].getValue(),
        TransactionDateNep:Ext.ComponentQuery.query('#txtDateBS')[0].getValue(),
        Remarks:Ext.ComponentQuery.query('#txtRemarks')[0].getValue(),
        Date1:getMisDateAD(),
        Username:getCurrentUser(),
        PostedFlag:'Y',
        ParentRefNo:Ext.ComponentQuery.query('#ddlGoodsReceiptNo')[0].getValue(),
        DeptCode:Ext.ComponentQuery.query('#ddlToDepartment')[0].getValue(),
        ApprovedTag:'N',
        TranOfficeCode:getOfficeCode(),
        CreTranOffice_Code:getOfficeCode(),
        InsertUpdate:'I',

        ItemTransactionDetails:getJson(store)
        };

        var waitSave = watiMsg("Saving...Please wait ...");
        Ext.Ajax.request({
            url: '../Handlers/Inventory/Transaction/InItemTransactionMasterHandler.ashx',
            params: {
                method:'SaveInItemTransactionMaster',
                inItemTransactionMaster:JSON.stringify(insObj)
            },
            success: function ( response, request ) {
                waitSave.hide();
                var out=Ext.decode(response.responseText);
                console.log(out);

                if(out.success==="true")
                {
                    msg("SUCCESS",out.message);
                }
                else
                {
                    msg("FAILURE",out.message);
                }
            },
            failure: function ( result, request ) {
                waitSave.hide();
                var out=Ext.decode(result.responseText);
                msg("FAILURE",out.message);
            }



        });
    },

    onBtnSearchClick: function(button, e, eOpts) {
        Ext.Ajax.request({
            url: '../Handlers/Inventory/Transaction/GoodReceiptReturnMasterDetailHandler.ashx',
            params: {
                method:'GetGoodReceiptReturnMstDtl',
                OfficeCode:getOfficeCode(),
                ReferenceNo:null,
                FiscalYear:Ext.ComponentQuery.query('#txtSearchFiscalYear')[0].getValue(),
                LocationCode:Ext.ComponentQuery.query('#ddlLocation')[0].getValue(),
                FromDate:Ext.ComponentQuery.query('#txtFromDate')[0].getValue(),
                ToDate:Ext.ComponentQuery.query('#txtToDate')[0].getValue()

            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                           var DestinationTypeStore=Ext.getStore('GoodReceiptMasterDetailStore');
                            DestinationTypeStore.removeAll();
                            DestinationTypeStore.add(obj.root);


                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });
    },

    onPanelAfterRender: function(component, eOpts) {
        Ext.ComponentQuery.query('#txtDateBS')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtFromDate')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtToDate')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtDateAD')[0].setValue(getMisDateAD());
        Ext.ComponentQuery.query('#txtFiscalYear')[0].setValue(getFiscalYear());
        Ext.ComponentQuery.query('#txtSearchFiscalYear')[0].setValue(getFiscalYear());

        Ext.Ajax.request({
            url: '../Handlers/Inventory/Transaction/GoodReceiptReturnHandler.ashx',
            params: {
                method:'GetGoodReceiptReturn',
                ReferenceNo:null
            },
            success: function ( response, request ) {

                var out=Ext.decode(response.responseText);
                console.log(out);

                if(out.success==="true")
                {
                    var store=Ext.getStore('GoodReceiptReturnStore');
                    store.removeAll();
                    store.add(out.root);

                }
                else
                {
                    msg("FAILURE",out.message);
                }
            },
            failure: function ( result, request ) {

                var out=Ext.decode(result.responseText);
                msg("FAILURE",result.message);
            }

        });


        Ext.Ajax.request({
            url: '../Handlers/Inventory/Transaction/LocationHandler.ashx',
            params: {
                method:'GetLocation',
                OfficeCode:getOfficeCode(),
                LocationDesc:null
            },
            success: function ( response, request ) {

                var out=Ext.decode(response.responseText);
                console.log(out);

                if(out.success==="true")
                {
                    var store=Ext.getStore('LocationStore');
                    store.removeAll();
                    store.add(out.root);

                }
                else
                {
                    msg("FAILURE",out.message);
                }
            },
            failure: function ( result, request ) {

                var out=Ext.decode(result.responseText);
                msg("FAILURE",result.message);
            }

        });




        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/Maintenance/DepartmentHandler.ashx',
            params: {
                method:'GetDepartment',
                OfficeCode:getOfficeCode()
            },
            success: function ( response, request ) {

                var out=Ext.decode(response.responseText);
                console.log(out);

                if(out.success==="true")
                {
                    var store=Ext.getStore('DepartmentShortStore');
                    store.removeAll();
                    store.add(out.root);

                }
                else
                {
                    msg("FAILURE",out.message);
                }
            },
            failure: function ( result, request ) {

                var out=Ext.decode(result.responseText);
                msg("FAILURE",result.message);
            }

        });


        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'REPORTS_DESFORMAT'
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                            var DestinationFormatStore=Ext.getStore('MsReferenceCodeDetailsDestinationFormatStore');
                            DestinationFormatStore.removeAll();
                            DestinationFormatStore.add(obj.root);

                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });

        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'REPORTS_PARAMETER_FORM'
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                            var DestinationParameterStore=Ext.getStore('MsReferenceCodeDetailsDestinationParameterStore');
                            DestinationParameterStore.removeAll();
                            DestinationParameterStore.add(obj.root);



                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });

        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'REPORTS_DESTYPE'
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                           var DestinationTypeStore=Ext.getStore('MsReferenceCodeDetailsDestinationTypeStore');
                            DestinationTypeStore.removeAll();
                            DestinationTypeStore.add(obj.root);


                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });




    }

});