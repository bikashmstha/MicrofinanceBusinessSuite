/*
 * File: app/view/PictureCutter.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.PictureCutter', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.panel.Panel',
        'Ext.button.Button',
        'Ext.form.field.Hidden'
    ],

    height: 450,
    id: 'PictureCutter',
    itemId: 'PictureCutter',
    width: 750,
    title: 'Edit Your Picture',
    modal: true,

    layout: {
        type: 'hbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'container',
                    flex: 4,
                    padding: 5,
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'panel',
                            flex: 1,
                            border: 1,
                            frame: true,
                            html: '<div style="backgound-color:black;height:100%;width:100%;overflow:auto;">\r\n<img src="http://localhost:2544/photo/f4e4cf4c-0ae3-4ff1-9c12-68e9b7619af8Lighthouse.jpg" class="cropbox" />\r\n</div>',
                            id: 'picturesource',
                            itemId: 'picturesource',
                            title: 'Picture Source',
                            layout: {
                                type: 'vbox',
                                align: 'stretch'
                            }
                        }
                    ]
                },
                {
                    xtype: 'container',
                    flex: 1,
                    padding: 10,
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'panel',
                            flex: 1,
                            border: 1,
                            frame: true,
                            title: 'Picture Preview ',
                            layout: {
                                type: 'vbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'container',
                                    flex: 0.5,
                                    hidden: true,
                                    html: '<div style="width:100px;height:100px;overflow:hidden;border: 2px solid black;margin: 2px;" factor=1>\r\n        <img id="PreviewImage" style="width:100px;height:100px;" src="http://localhost:2544/photo/2ec42c6c-8edc-4ed7-9852-37a2dcde765cJellyfish.jpg" class="preview" />\r\n    </div>',
                                    width: 109
                                },
                                {
                                    xtype: 'container',
                                    flex: 1,
                                    padding: 10,
                                    width: 200,
                                    layout: {
                                        type: 'vbox',
                                        align: 'center'
                                    },
                                    items: [
                                        {
                                            xtype: 'button',
                                            handler: function(button, event) {
                                                var objSubmissionNo="";
                                                var persRez=Ext.getCmp('PersonRegistration');
                                                if(persRez.extraParam)
                                                {
                                                    objSubmissionNo = persRez.extraParam.subNo;
                                                }
                                                Ext.Ajax.request({
                                                    url: '../Handlers/PhotoHandle/PHOTOCutter.ashx',
                                                    params: {
                                                        X: Ext.ComponentQuery.query('#X')[0].getValue(),
                                                        Y: Ext.ComponentQuery.query('#Y')[0].getValue(),
                                                        H: Ext.ComponentQuery.query('#H')[0].getValue(),
                                                        W: Ext.ComponentQuery.query('#W')[0].getValue(),
                                                        img:Ext.ComponentQuery.query('#ImgToSend')[0].getValue(),
                                                        submissionNo: objSubmissionNo
                                                    },
                                                    success: function(response){
                                                        var responseObj = Ext.decode(response.responseText);

                                                        Ext.getCmp('sespicid').setValue(responseObj.msg);
                                                        Ext.getCmp('imgPerson').setSrc('../Handlers/PhotoHandle/temp/'+responseObj.macid+"/"+responseObj.msg);
                                                    }
                                                });
                                            },
                                            text: 'Take This Picture'
                                        },
                                        {
                                            xtype: 'hiddenfield',
                                            flex: 1,
                                            id: 'hdnstyleforimage',
                                            itemId: 'hdnstyleforimage',
                                            fieldLabel: 'Label'
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'hiddenfield',
                    id: 'X',
                    itemId: 'X',
                    fieldLabel: 'Label'
                },
                {
                    xtype: 'hiddenfield',
                    id: 'Y',
                    itemId: 'Y',
                    fieldLabel: 'Label'
                },
                {
                    xtype: 'hiddenfield',
                    id: 'H',
                    itemId: 'H',
                    fieldLabel: 'Label'
                },
                {
                    xtype: 'hiddenfield',
                    id: 'W',
                    itemId: 'W',
                    fieldLabel: 'Label'
                },
                {
                    xtype: 'hiddenfield',
                    id: 'ImgToSend',
                    itemId: 'ImgToSend',
                    fieldLabel: 'Label'
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onPictureEditAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onPictureEditAfterRender: function(component, eOpts) {
        //var referenceToImage = Ext.getCmp('picturesource').down('image').el.dom;
        $('.cropbox').Jcrop({
            onChange: showPreview,
            onSelect: showPreview,
            setSelect:[ 109, 150, 50, 50 ],
            aspectRatio: 1
        });

        function showPreview(coords)
        {


            Ext.ComponentQuery.query('#X')[0].setValue(coords.x);
            Ext.ComponentQuery.query('#Y')[0].setValue(coords.y);
            Ext.ComponentQuery.query('#H')[0].setValue(coords.h);
            Ext.ComponentQuery.query('#W')[0].setValue(coords.w);

            if (parseInt(coords.w) > 0)
            {
                $('.preview').each(function(){

                    $(this).parent().width(coords.w*$(this).parent().attr('factor'));
                    $(this).parent().height(coords.h*$(this).parent().attr('factor'));

                    var rx = $(this).parent().width() / coords.w;
                    var ry = $(this).parent().height() / coords.h;

                    $(this).css({
                        width: Math.round(rx * 500) + 'px',
                        height: Math.round(ry * 370) + 'px',
                        marginLeft: '-' + Math.round(rx * coords.x) + 'px',
                        marginTop: '-' + Math.round(ry * coords.y) + 'px'
                    });

                });

            }
        }



    }

});