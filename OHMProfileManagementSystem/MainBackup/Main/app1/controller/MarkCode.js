/*
 * File: app/controller/MarkCode.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.MarkCode', {
    extend: 'Ext.app.Controller',

    models: [
        'MarkCodes'
    ],
    stores: [
        'MarkCodes'
    ],

    onBtnSaveMCClick: function(button, e, eOpts) {
        var me = this;

        var store = Ext.getStore('MarkCodes');

        var txtMarkCode = Ext.ComponentQuery.query('#txtMarkCode')[0];
        var txtMarkCodeDescEng = Ext.ComponentQuery.query('#txtMarkCodeDescEng')[0];
        var txtMarkCodeDescNep = Ext.ComponentQuery.query('#txtMarkCodeDescNep')[0];
        var chkITAX = Ext.ComponentQuery.query('#chkITAX')[0];
        var chkVAT = Ext.ComponentQuery.query('#chkVAT')[0];
        var chkEXCISE = Ext.ComponentQuery.query('#chkEXCISE')[0];

        var markCode = txtMarkCode.getValue();
        var markCodeDesc = txtMarkCodeDescEng.getValue();
        var markCodedescNep = txtMarkCodeDescNep.getValue();
        var ITAX = chkITAX.getValue();
        var VAT = chkVAT.getValue();
        var EXCISE = chkEXCISE.getValue();

        var grid = Ext.ComponentQuery.query('#grdMarkCodeLIst')[0];
        var selected = grid.getSelectionModel().getSelection()[0];
        var act;
        if(markCode ==="")
        {
            msg("WARNING","Please enter MarkCode",function(){txtMarkCode.focus(); });
            return false;
        }

        if(markCodeDesc==="")
        {
            msg("WARNING","Please enter MarkCodeDescEng",function(){txtMarkCodeDescEng.focus(); });
            return false;
        }

        if(markCodedescNep==="")
        {
            msg("WARNING","Please enter MarkCodeDescNep",function(){txtMarkCodeDescNep.focus(); });
            return false;
        }
        if(ITAX===false || VAT===false || EXCISE===false )
        {
            msg("WARNING","Please select Account Type");
            return false;
        }

        if (selected!== undefined)
        {
            act='E';
        }
        else
        {
            act = 'I';
        }

        var AcctTypearray = [];

        if (ITAX===true)
        {
            AcctTypearray.push({MarkCode:markCode, 
                MarkDesc:markCodeDesc,
                MarkDescNep:markCodedescNep,
                AcctType:'10',
                Action:act
            });

        }
        if (VAT===true)
        {
            AcctTypearray.push({MarkCode:markCode, 
                MarkDesc:markCodeDesc,
                MarkDescNep:markCodedescNep,
                AcctType:'00',
                Action:act
            });

        }

        if (EXCISE===true)
        {
            AcctTypearray.push({MarkCode:markCode, 
                MarkDesc:markCodeDesc,
                MarkDescNep:markCodedescNep,
                AcctType:'11',
                Action:act
            });
        }



        var marksCodes={
            marksList:AcctTypearray
        };

        //var waitSave =watiMsg('Saving ...');


        Ext.Ajax.request({
            url:"../Handlers/Common/MarksCodesHandler.ashx?method=SaveMarksCodes",
            params:{marksCodes:JSON.stringify(marksCodes)},
            success: function ( result, request ){
                // waitSave.hide();
                var obj = Ext.decode(result.responseText);

                msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);

                store.load();
                me.clear("Reset");

                if(obj.success === "false")

                {return;}

            },

            failure: function ( result, request ){

                // waitSave.hide();
                msg("FAILURE","Error in Fetching Data !!!");
                return;
            }

        });

    },

    onGrdMarkCodeLIstAfterRender: function(component, eOpts) {
        var store = Ext.getStore('MarkCodes');
        store.load();
    },

    onGrdMarkCodeLIstItemClick: function(dataview, record, item, index, e, eOpts) {
        var me = this;

        me.clear("Reset");

        var txtMarkCode = Ext.ComponentQuery.query('#txtMarkCode')[0];
        var txtMarkCodeDescEng = Ext.ComponentQuery.query('#txtMarkCodeDescEng')[0];
        var txtMarkCodeDescNep = Ext.ComponentQuery.query('#txtMarkCodeDescNep')[0];

        var chkITAX = Ext.ComponentQuery.query("#chkITAX")[0];
        var chkVAT = Ext.ComponentQuery.query("#chkVAT")[0];
        var chkEXCISE = Ext.ComponentQuery.query("#chkEXCISE")[0];

        chkITAX.setReadOnly(true);
        chkVAT.setReadOnly(true);
        chkEXCISE.setReadOnly(true);

        var btnSaveMC = Ext.ComponentQuery.query('#btnSaveMC')[0];

        txtMarkCode.setValue(record.data.MarkCode);
        txtMarkCode.setReadOnly(true);

        txtMarkCodeDescEng.setValue(record.data.MarkDesc);
        txtMarkCodeDescNep.setValue(record.data.MarkDescNep);

        var accttype = record.data.AcctType;

        if (accttype=='10')
        {
            chkITAX.setValue(true);
        }
        if (accttype=='00')
        {
            chkVAT.setValue(true);
        }
        if (accttype=='11')
        {
            chkEXCISE.setValue(true);
        }


        btnSaveMC.setText('Edit');
        btnSaveMC.setIconCls('icon-edit');


    },

    onBtnCancellMCClick: function(button, e, eOpts) {
        var me = this;

        me.clear("Reset");
        var grid = Ext.ComponentQuery.query('#grdMarkCodeLIst')[0];
        grid.getSelectionModel().deselectAll();

    },

    onBtnDeleteMCClick: function(button, e, eOpts) {
        var me = this;

        var store = Ext.getStore('MarkCodes');

        var txtMarkCode = Ext.ComponentQuery.query('#txtMarkCode')[0];
        var txtMarkCodeDescEng = Ext.ComponentQuery.query('#txtMarkCodeDescEng')[0];
        var txtMarkCodeDescNep = Ext.ComponentQuery.query('#txtMarkCodeDescNep')[0];
        var chkITAX = Ext.ComponentQuery.query('#chkITAX')[0];
        var chkVAT = Ext.ComponentQuery.query('#chkVAT')[0];
        var chkEXCISE = Ext.ComponentQuery.query('#chkEXCISE')[0];

        var markCode = txtMarkCode.getValue();
        var markCodeDesc = txtMarkCodeDescEng.getValue();
        var markCodedescNep = txtMarkCodeDescNep.getValue();
        var ITAX = chkITAX.getValue();
        var VAT = chkVAT.getValue();
        var EXCISE = chkEXCISE.getValue();

        var act = 'D';

        var AcctTypearray = [];

        if (Ext.ComponentQuery.query('#chkITAX')[0].getValue()===true)
        {
            AcctTypearray.push({MarkCode:txtMarkCode, 
                MarkDesc:txtMarkCodeDescEng,
                MarkDescNep:txtMarkCodeDescNep,
                AcctType:'10',
                Action:act
            });

        }
        if (ITAX===true)
        {
            AcctTypearray.push({MarkCode:markCode, 
                MarkDesc:markCodeDesc,
                MarkDescNep:markCodedescNep,
                AcctType:'10',
                Action:act
            });

        }
        if (VAT===true)
        {
            AcctTypearray.push({MarkCode:markCode, 
                MarkDesc:markCodeDesc,
                MarkDescNep:markCodedescNep,
                AcctType:'00',
                Action:act
            });

        }

        if (EXCISE===true)
        {
            AcctTypearray.push({MarkCode:markCode, 
                MarkDesc:markCodeDesc,
                MarkDescNep:markCodedescNep,
                AcctType:'11',
                Action:act
            });
        }



        var marksCodes={
            marksList:AcctTypearray
        };

        //var waitSave =watiMsg('Saving ...');


        Ext.Ajax.request({
            url:"../Handlers/Common/MarksCodesHandler.ashx?method=DeleteMarksCodes",
            params:{marksCodes:JSON.stringify(marksCodes)},
            success: function ( result, request ){
                // waitSave.hide();
                var obj = Ext.decode(result.responseText);

                msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);

                store.load();
                me.clear("Reset");

                if(obj.success === "false")

                {return;}

            },

            failure: function ( result, request ){

                // waitSave.hide();
                msg("FAILURE","Error in Fetching Data !!!");
                return;
            }

        });

    },

    clear: function(args) {
        if(args=="Reset")
        {
            var txtMarkCode = Ext.ComponentQuery.query('#txtMarkCode')[0];
            var txtMarkCodeDescEng = Ext.ComponentQuery.query('#txtMarkCodeDescEng')[0];
            var txtMarkCodeDescNep = Ext.ComponentQuery.query('#txtMarkCodeDescNep')[0];

            var chkITAX = Ext.ComponentQuery.query("#chkITAX")[0];
            var chkVAT = Ext.ComponentQuery.query("#chkVAT")[0];
            var chkEXCISE = Ext.ComponentQuery.query("#chkEXCISE")[0];


            //var chkITAX = Ext.ComponentQuery.query('#chkITAX')[0].getValue();
            var btnSaveMC = Ext.ComponentQuery.query('#btnSaveMC')[0];

            txtMarkCode.setValue("");
            txtMarkCodeDescEng.setValue("");
            txtMarkCodeDescNep.setValue("");
            chkITAX.setValue('false');
            chkVAT.setValue('false');
            chkEXCISE.setValue('false');



            txtMarkCode.setReadOnly(false);
            txtMarkCodeDescEng.setReadOnly(false);
            txtMarkCodeDescNep.setReadOnly(false);

            chkITAX.setReadOnly(false);
            chkVAT.setReadOnly(false);
            chkEXCISE.setReadOnly(false);

            btnSaveMC.setText('Save');
            btnSaveMC.setIconCls('icon-save');

            //txtMarkCode.clearInvalid();
            //txtMarkCodeDescEng.clearInvalid();
            //txtMarkCodeDescNep.clearInvalid();


        }
    },

    init: function(application) {
        this.control({
            "#btnSaveMC": {
                click: this.onBtnSaveMCClick
            },
            "#grdMarkCodeLIst": {
                afterrender: this.onGrdMarkCodeLIstAfterRender,
                itemclick: this.onGrdMarkCodeLIstItemClick
            },
            "#btnCancellMC": {
                click: this.onBtnCancellMCClick
            },
            "#btnDeleteMC": {
                click: this.onBtnDeleteMCClick
            }
        });
    }

});
