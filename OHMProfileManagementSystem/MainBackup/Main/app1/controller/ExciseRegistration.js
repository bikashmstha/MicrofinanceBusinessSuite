/*
 * File: app/controller/ExciseRegistration.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.ExciseRegistration', {
    extend: 'Ext.app.Controller',

    stores: [
        'Excise_Reg_AddGoods_GoodsStore',
        'Excise_Reg_AddGoods_PerListStore',
        'Excise_Reg_AddGoods_PermGoodsStore',
        'Excise_Reg_AddPerm_PerListStore',
        'Excise_Reg_AddPerm_PerTypStore',
        'Excise_Reg_AddWP_AddressTypeStore',
        'Excise_Reg_AddWP_RegionStore',
        'Excise_Reg_AddWP_cboDistrictStore',
        'Excise_Reg_AddWP_PermStore',
        'Excise_Reg_AddWP_Contact',
        'Excise_Reg_AddWP_WPListStore',
        'Excise_Reg_AddGodown_GDNListStore',
        'Excise_Reg_AddGodown_Contact',
        'Excise_Reg_AddGodown_AddressTypeStore',
        'Excise_Reg_AddGodown_cboDistrictStore',
        'Excise_Reg_Stages_cboPermitStore',
        'Excise_Reg_Stages_permWpStore',
        'Excise_Reg_Stages_PermitStagesStore',
        'Excise_Reg_Stages_ProductionStagesUsedStore',
        'Excise_Reg_StagesIpOp_cboPermitStore',
        'Excise_Reg_StagesIpOp_StagesStore',
        'Excise_Reg_StagesIpOp_IPRawMaterialStore',
        'Excise_Reg_StagesIpOp_OPRawMaterialStore'
    ],

    onExcise_Reg_NextClick: function(button, e, eOpts) {

    },

    onExciseRegistrationStepsAfterRender: function(component, eOpts) {
        var me=this;
        var excReg=Ext.getCmp('ExciseRegistration');

        var subNo = excReg.extraParam.subNo; 
        var busType=excReg.extraParam.busTyp;

        Ext.Ajax.request({
            url: '../Handlers/Registration/RegistrationsForHandler.ashx?method=IsSubmitted',
            params:{submissionNo:subNo},
            success: function ( result, request ) {            
                var rsp = Ext.decode(result.responseText);
                if(rsp.message=='true'||rsp.message=='True')
                {
                    ConvertFieldsToReadOnly("ExciseRegistration");

                    Ext.ComponentQuery.query('#Excise_Reg_AddPerm_btnAdd')[0].disable();
                    Ext.ComponentQuery.query('#Excise_Reg_AddPerm_btnSave')[0].disable();
                    Ext.ComponentQuery.query('#Excise_Reg_AddPerm_btnCancel')[0].disable();
                    Ext.ComponentQuery.query('#Excise_Reg_AddGoods_btnAdd')[0].disable();
                    Ext.ComponentQuery.query('#Excise_Reg_AddGoods_btnSave')[0].disable();
                    Ext.ComponentQuery.query('#Excise_Reg_AddGoods_btnCancel')[0].disable();
                    Ext.ComponentQuery.query('#Excise_Reg_AddWP_bnAddWP')[0].disable();
                    Ext.ComponentQuery.query('#Excise_Reg_AddWP_btnSave')[0].disable();
                    Ext.ComponentQuery.query('#Excise_Reg_AddWP_btnCancel')[0].disable();
                    Ext.ComponentQuery.query('#Excise_Reg_Stages_btnAdd')[0].disable();
                    Ext.ComponentQuery.query('#Excise_Reg_Stages_btnSave')[0].disable();
                    Ext.ComponentQuery.query('#Excise_Reg_Stages_btnCancel')[0].disable();
                    Ext.ComponentQuery.query('#Excise_Reg_StagesIpOp_btnSave')[0].disable();
                    Ext.ComponentQuery.query('#Excise_Reg_StagesIpOp_btnCancel')[0].disable();
                    Ext.ComponentQuery.query('#Exc_Reg_btnSubmit')[0].disable();
                    Ext.ComponentQuery.query('#Exc_Reg_btnChangeDetails')[0].disable();

                }  
                me.ReloadTab1();
            },
            failure:function(result, request)
            {
                msg('ERROR','Could Not Load Excise Details');            
                return;
            }
        });

    },

    onExciseRegistrationStepsBeforeTabChange: function(tabPanel, newCard, oldCard, eOpts) {
        if(newCard.title=="Step 1")
        {
            this.ReloadTab1();
        }
        if(newCard.title=="Step 2")
        {
            this.ReloadTab2();
        }
        else if(newCard.title=="Step 3")
        {
            this.ReloadTab3();
        }
        else if(newCard.title=="Step 4")
        {
            this.ReloadTab4();
        }
        else if(newCard.title=="Step 5")
        {
            this.ReloadTab5();
        }
    },

    onExcise_Reg_AddPerm_PermTypeChange: function(field, newValue, oldValue, eOpts) {
        if(newValue)
        {
            var combobox=Ext.ComponentQuery.query('#Excise_Reg_AddPerm_PermType')[0];
            var value = combobox.getValue();
            var record = combobox.findRecord(combobox.valueField || combobox.displayField, value);
            var index = combobox.store.indexOf(record);

            var store=Ext.getStore('Excise_Reg_AddPerm_PerTypStore');


            var permitItemActivities=[];

            var chkGroup=Ext.ComponentQuery.query('#Excise_Reg_AddPerm_PermFor')[0];
            chkGroup.removeAll(true);
            if(store.getAt(index))
            {
                if(store.getAt(index).data.PermitItemActivities)
                {
                    permitItemActivities=store.getAt(index).data.PermitItemActivities; 
                }
                else
                {
                    permitItemActivities=store.getAt(index).raw.PermitItemActivities;
                }
                var RateWhere=store.getAt(index).data.RateWhere;

                ////set details
                Ext.ComponentQuery.query('#Excise_Reg_AddPerm_PhyControl')[0].setValue(store.getAt(index).data.PhysicalControl?'Yes':'No');
                Ext.ComponentQuery.query('#Excise_Reg_AddPerm_LicReq')[0].setValue(store.getAt(index).data.LicenceRequired?'Yes':'No');
                ////

                Ext.ComponentQuery.query('#Excise_Reg_AddPerm_PermRate')[0].setValue(0.00);
                // hide/display  Asset
                var Asset= Ext.ComponentQuery.query('#Excise_Reg_AddPerm_Asset')[0];
                //alert(RateWhere);
                if(RateWhere=="P")
                {
                    Asset.hide();
                    Ext.ComponentQuery.query('#Excise_Reg_AddPerm_PermRate')[0].setValue(store.getAt(index).data.PermitRate);
                }
                else
                {
                    Asset.show();          
                    Ext.ComponentQuery.query('#Excise_Reg_AddPerm_PermRate')[0].setValue(store.getAt(index).data.Rate);

                }

                //// set checkboxgroup items

                for(var i=0;i<permitItemActivities.length;i++)
                {
                    var chk={xtype: 'checkboxfield',
                            boxLabel  : permitItemActivities[i].ActivityDescription,
                            name      : 'topping',
                            inputValue: '1',
                            id        : 'chkPermAct'+permitItemActivities[i].ActivityId
                        };
                    chk.id=permitItemActivities[i].ActivityId;
                    chkGroup.add(chk);
                }
                /////
            }
        }

    },

    onExcise_Reg_AddPerm_btnAddClick: function(button, e, eOpts) {
        var nepServerDate=document.getElementById('nepDate').innerHTML;
        var ctrl=Ext.ComponentQuery.query('#Excise_Reg_AddPerm_PermType')[0];
        ctrl.enable();
        var ctrlFor=Ext.ComponentQuery.query('#Excise_Reg_AddPerm_PermFor')[0];

        var permRate=Ext.ComponentQuery.query('#Excise_Reg_AddPerm_PermRate')[0];
        var phyCtrl=Ext.ComponentQuery.query('#Excise_Reg_AddPerm_PhyControl')[0];
        var permitFrom=Ext.ComponentQuery.query('#Excise_Reg_AddPerm_FromDate')[0];
        var permitTo=Ext.ComponentQuery.query('#Excise_Reg_AddPerm_ToDate')[0];
        var PenaltyAmt=Ext.ComponentQuery.query('#Excise_Reg_AddPerm_PenaltyAmt')[0];
        var store=Ext.getStore('Excise_Reg_AddPerm_PerListStore');

        ////
        var ptypeComboStore=Ext.getStore('Excise_Reg_AddPerm_PerTypStore');
        var comboIndex=ptypeComboStore.find( "ItemCode", ctrl.getValue() ) ;
        var fDate=ptypeComboStore.getAt(comboIndex).data.FromDate;
        var finAmt="";
        var el=Ext.ComponentQuery.query('#Excise_Reg_AddPerm_Asset')[0];
        if(!el.isHidden())
        {
            finAmt=el.getValue();
        }
        var exciseReg=Ext.getCmp('ExciseRegistration');

        var subNo = exciseReg.extraParam.subNo; 
        var busType=exciseReg.extraParam.busTyp;

        var selection=Ext.ComponentQuery.query('#Excise_Reg_AddPerm_Grd_Permits')[0].getSelectionModel().getSelection();
        if(selection.length>0)
        {   
            var selectedIndex= store.indexOf( selection[0] );
            var matchIndex=store.find( "ItemNameEnglish", ctrl.getRawValue());
            if(matchIndex!=selectedIndex && matchIndex!=-1)
            {    
                msg("WARNING","This permit is already added.");
                return;
            }

            var permit=store.getAt(selectedIndex).data;

            var actLst = ""; 
            var actList=[];

            ctrlFor.items.each(function(item) {    
                if(item.getValue())
                {
                    actLst = actLst +item.boxLabel+",";      
                    var actvty={
                        SubmissionNo:subNo,
                        ItemCode:ctrl.getValue(),
                        FromDate:fDate,
                        ActivityID:item.id,
                        PermitFrom:permitFrom.getValue(),
                        PermitTo:permitTo.getValue(),
                        Action:'A'
                    };
                    actList[actList.length]=actvty;
                }
            });



            permit.PanNo='';
            permit.SubmissionNo=subNo;
            permit.ItemCode=ctrl.getValue();
            permit.FromDate=fDate;
            permit.FinAmount=finAmt;
            permit.PermitFrom=permitFrom.getValue();
            permit.PermitTo=permitTo.getValue();
            permit.PermitStatus='';
            permit.ExciseRate=permRate.getValue();
            permit.UnderPhyCtrl=phyCtrl.getValue()=="Yes"?'Y':'N';
            permit.ItemNameEnglish=ctrl.getRawValue();
            permit.ActivityList=actLst;
            permit.RegPermitActivities=actList;
            permit.PenaltyAmount=PenaltyAmt.getValue();
            permit.Action=permit.Action=='A'?'A':'E';

            store.removeAt(selectedIndex);
            store.insert(selectedIndex,permit);
            permitFrom.setValue("");
            permitTo.setValue("");
        }
        else
        {
            if(store.find( "ItemNameEnglish", ctrl.getRawValue())>=0)
            {    
                msg("WARNING","This permit is already added.");
                return;
            }

            var actLst1 = ""; 
            var actList1=[];
            ctrlFor.items.each(function(item) {    
                if(item.getValue())
                {
                    actLst1 = actLst1 +item.boxLabel+",";      
                    var actvty={
                        SubmissionNo:subNo,
                        ItemCode:ctrl.getValue(),
                        FromDate:fDate,
                        ActivityID:item.id,
                        PermitFrom:permitFrom.getValue(),
                        PermitTo:permitTo.getValue(),
                        Action:'A'
                    };
                    actList1[actList1.length]=actvty;
                }
            });

            var permit1={
                PanNo:'',
                SubmissionNo:subNo,
                ItemCode:ctrl.getValue(),
                FromDate:fDate,
                FinAmount:finAmt,
                PermitFrom:permitFrom.getValue(),
                PermitTo:permitTo.getValue(),
                PermitStatus:'',
                ExciseRate:permRate.getValue(),
                UnderPhyCtrl: phyCtrl.getValue()=="Yes"?'Y':'N',
                ItemNameEnglish:ctrl.getRawValue(),
                ActivityList:actLst1,
                RegPermitActivities:actList1,
                Action:'A',
                PenaltyAmount:PenaltyAmt.getValue()
            };

            //alert(JSON.stringify(permit1));
            store.add(permit1);
            permitFrom.setValue("");
            permitTo.setValue("");
        }

    },

    onExcise_Reg_AddPerm_btnSaveClick: function(button, e, eOpts) {
        var me=this;
        var store=Ext.ComponentQuery.query('#Excise_Reg_AddPerm_Grd_Permits')[0].getStore();
        store.clearFilter();
        var regPermitList=getJson(store);
        store.filter(function(item){
            return item.get("Action")!= 'D';
        }); 

        Ext.Ajax.request({
            url: '../Handlers/Excise/RegPermitHandler.ashx?method=SaveRegPermits',
            params: {
                regPermits:JSON.stringify( regPermitList)
            },
            success: function(response){
                var text = response.responseText;
                var resp=Ext.decode(text);               

                if(resp.success=='True')
                {
                    var PermTypeCombo= Ext.ComponentQuery.query('#Excise_Reg_AddPerm_PermType')[0];
                    PermTypeCombo.setValue("");
                    me.ReloadTab1();
                    msg("Status","Permit/s Saved Successfully.");

                }
                else
                {
                    msg("FAILURE","Permit/s Saving Failed.");
                }
            },
            failure: function ( result, request ) {
                msg("FAILURE","Permit/s Saving Failed.");        
            }
        }); 
    },

    onExcise_Reg_AddGoods_btnSaveClick: function(button, e, eOpts) {
        var me =this;
        var store=Ext.getStore('Excise_Reg_AddGoods_PermGoodsStore');
        store.clearFilter();
        var regPermitGoodsList=getJson(store);
        store.filter(function(item){
            return item.get("Action")!= 'D';
        }); 

        Ext.Ajax.request({
            url: '../Handlers/Excise/RegPermitGoodHandler.ashx?method=SaveRegPermitGoods',
            params: {
                regPermitGoods:JSON.stringify( regPermitGoodsList)
            },
            success: function(response){
                var text = response.responseText;
                var resp=Ext.decode(text);               

                if(resp.success=='True')
                {
                    me.ReloadTab2();
                    msg("Status","Permit Goods Saved Successfully.");

                }
                else
                {
                    msg("FAILURE","Permit Goods Saving Failed.");
                }
            },
            failure: function ( result, request ) {
                msg("FAILURE","Permit Goods Saving Failed.");        
            }
        }); 
    },

    onExcise_Reg_AddGoods_cboPermChange: function(field, newValue, oldValue, eOpts) {
        Ext.Ajax.request({
            url: '../Handlers/Excise/ExcisableGoodHandler.ashx?method=GetExcisableGoods',
            params:{itemCode:newValue},
            success: function ( result, request ) {
                var data = Ext.decode(result.responseText); 
                if(data.root)
                {                
                    var store=Ext.getStore('Excise_Reg_AddGoods_GoodsStore');                
                    store.loadData(data.root);
                }

            },
            failure: function ( result, request ) {
                Ext.Msg.show({
                    title: 'Failure',
                    msg: 'ERROR OCURRED !!!' ,
                    buttons: Ext.MessageBox.OK,
                    icon:Ext.Msg.ERROR
                });
            }

        });
    },

    onExcise_Reg_AddGoods_btnAddClick: function(button, e, eOpts) {
        var nepServerDate=document.getElementById('nepDate').innerHTML;
        var me = this;
        var mesg = "";


        var cbo=Ext.ComponentQuery.query('#Excise_Reg_AddGoods_cboPerm')[0];
        var ptypeComboStore=Ext.getStore('Excise_Reg_AddPerm_PerListStore');//Excise_Reg_AddPerm_PerTypStore
        var comboIndex=ptypeComboStore.find( "ItemCode", cbo.getValue() ) ;
        var fDate=ptypeComboStore.getAt(comboIndex).data.FromDate;
        var permitFrom=ptypeComboStore.getAt(comboIndex).data.PermitFrom;

        var permGoodsStore=Ext.getStore('Excise_Reg_AddGoods_PermGoodsStore');

        var grd = Ext.ComponentQuery.query('#Excise_Reg_AddGoods_grdGoods')[0];
        var selection = grd.getSelectionModel().getSelection();

        var submissionNo="";
        var exReg=Ext.getCmp('ExciseRegistration');
        if(exReg.extraParam)   
        {
            submissionNo = exReg.extraParam.subNo;
            //  businessTyp = exReg.extraParam.busTyp;   
        }

        if(selection.length < 1)
        {
            msg("WARNING","Please select Goods to be added !!!");
            return;
        }
        else
        {
            for (var i = 0; i < selection.length; i++)
            {  
                //alert(  selection[i].data.ItemNameEnglish);
                ///////
                var recordIndex = permGoodsStore.findBy(
                function(record, id){
                    if(record.get('ItemCode') === cbo.getValue() && 
                    record.get('FrmDate') === fDate &&
                    record.get('GoodsCode') === selection[i].data.ItemCode)
                    {
                        return true;  // a record with this data exists
                    }
                    return false;  // there is no record in the store with this data
                }
                );

                if(recordIndex != -1){
                    mesg += selection[i].data.ItemNameEnglish + ' already exists .<br/>';     

                }
                else
                {
                    var good=  {
                        PanNo:'',
                        SubmissionNo:submissionNo,
                        ItemCode:cbo.getValue(),
                        FrmDate:fDate,
                        PermitFrom:permitFrom,
                        GoodsCode:selection[i].data.ItemCode,
                        FromDate:nepServerDate,
                        ToDate:'',
                        Action:'A'
                    };
                    permGoodsStore.add(good);
                }

                if(mesg !== "")
                {            
                    msg('WARNING',mesg+"<br/><b>Duplicate records were not Added.</b>");
                }

            }
        }

        /*


        grdRole .getSelectionModel().deselectAll();
        */
    },

    onExcise_Reg_AddWP_btnCancelClick: function(button, e, eOpts) {
        this.ReloadTab3();
    },

    onExcise_Reg_AddWP_bnAddWPClick: function(button, e, eOpts) {
        var nepServerDate=document.getElementById('nepDate').innerHTML;
        var contact=Ext.getStore('Excise_Reg_AddWP_Contact');

        var locationType="";
        if(Ext.ComponentQuery.query('#Excise_Reg_LocationType1')[0].checked)
        {
            locationType="VD";
        }
        else if(Ext.ComponentQuery.query('#Excise_Reg_LocationType2')[0].checked)
        {
            locationType="MN";
        }
        else if(Ext.ComponentQuery.query('#Excise_Reg_LocationType3')[0].checked)
        {
            locationType="MM";
        }
        else if(Ext.ComponentQuery.query('#Excise_Reg_LocationType4')[0].checked)
        {
            locationType="SM";
        }


        //var businessTyp="";
        var submissionNo="";
        var exReg=Ext.getCmp('ExciseRegistration');
        if(exReg.extraParam)   
        {
            submissionNo = exReg.extraParam.subNo;
            //  businessTyp = exReg.extraParam.busTyp;   
        }
        ////////
        var wpListStore=Ext.getStore('Excise_Reg_AddWP_WPListStore');

        var cbo=Ext.ComponentQuery.query('#Excise_Reg_AddWP_Permit')[0];
        var ptypeComboStore=Ext.getStore('Excise_Reg_AddPerm_PerListStore');//Excise_Reg_AddPerm_PerTypStore
        var comboIndex=ptypeComboStore.find( "ItemCode", cbo.getValue() ) ;
        var fDate=ptypeComboStore.getAt(comboIndex).data.FromDate;
        var permitFrom=ptypeComboStore.getAt(comboIndex).data.PermitFrom;
        var placeName=Ext.ComponentQuery.query('#Excise_Reg_AddWP_PlaceName')[0].getValue();
        var purpose=Ext.ComponentQuery.query('#Excise_Reg_AddWP_Purpose')[0].getValue();

        var east=Ext.ComponentQuery.query('#Excise_Reg_AddWP_East')[0].getValue();
        var west=Ext.ComponentQuery.query('#Excise_Reg_AddWP_West')[0].getValue();
        var north=Ext.ComponentQuery.query('#Excise_Reg_AddWP_North')[0].getValue();
        var south=Ext.ComponentQuery.query('#Excise_Reg_AddWP_South')[0].getValue();

        /////////

        var selection=Ext.ComponentQuery.query('#Excise_Reg_AddWP_grdWPList')[0].getSelectionModel().getSelection();
        var wpStore=Ext.getStore('Excise_Reg_AddWP_WPListStore');
        if(selection.length>0)
        { 
            var selectedIndex= wpStore.indexOf( selection[0] );

            var regPermitWorkPlace1=wpStore.getAt(selectedIndex).data;

            var workPlaceAddress1=regPermitWorkPlace1.WorkPlaceAddress;
            var address1=workPlaceAddress1.Address;      


            address1.HouseNo=Ext.ComponentQuery.query('#Excise_Reg_AddWP_HouseNo')[0].getValue();
            address1.WardNo=Ext.ComponentQuery.query('#Excise_Reg_AddWP_WardNo')[0].getValue()?Ext.ComponentQuery.query('#Excise_Reg_AddWP_WardNo')[0].getValue():null;
            address1.StreetName=Ext.ComponentQuery.query('#Excise_Reg_AddWP_Tole')[0].getValue();
            address1.VdcTown=Ext.ComponentQuery.query('#Excise_Reg_AddWP_VDC')[0].getValue();
            address1.LocationType=locationType;
            address1.DistrictCode=Ext.ComponentQuery.query('#Excise_Reg_AddWP_cboDistrict')[0].getValue(); 
            address1.Telephone=contact.getAt(3).data.Value;
            address1.AreaCode='00';
            address1.Fax=contact.getAt(1).data.Value;
            address1.Email=contact.getAt(0).data.Value;
            address1.PoBox=null;
            address1.ExpiryDate=null;
            address1.UserId='ITS';
            address1.TranDate=null;    
            address1.TranNo=null;        
            address1.Action='E';       

            workPlaceAddress1.East=east;
            workPlaceAddress1.West=west;
            workPlaceAddress1.North=north;
            workPlaceAddress1.South=south;
            workPlaceAddress1.Action='E';
            workPlaceAddress1.Address=address1;   

            regPermitWorkPlace1.Placename=placeName;
            regPermitWorkPlace1.Purpose=purpose;
            regPermitWorkPlace1.Action='E';
            regPermitWorkPlace1.WorkPlaceAddress=workPlaceAddress1;        

            wpStore.removeAt(selectedIndex);
            wpStore.insert(selectedIndex,regPermitWorkPlace1);

        }
        else
        {       
            var address={
                AddressSNO:0, 
                HouseNo:Ext.ComponentQuery.query('#Excise_Reg_AddWP_HouseNo')[0].getValue(),
                WardNo:Ext.ComponentQuery.query('#Excise_Reg_AddWP_WardNo')[0].getValue()?Ext.ComponentQuery.query('#Excise_Reg_AddWP_WardNo')[0].getValue():null,
                StreetName:Ext.ComponentQuery.query('#Excise_Reg_AddWP_Tole')[0].getValue(),
                VdcTown:Ext.ComponentQuery.query('#Excise_Reg_AddWP_VDC')[0].getValue(),
                LocationType:locationType,
                DistrictCode:Ext.ComponentQuery.query('#Excise_Reg_AddWP_cboDistrict')[0].getValue(), 
                Telephone:contact.getAt(3).data.Value,
                AreaCode:'00',
                Fax:contact.getAt(1).data.Value,
                Email:contact.getAt(0).data.Value,
                PoBox:null,
                ExpiryDate:null,
                UserId:'ITS',  //not Null field
                TranDate:null,    
                TranNo:null,
                submissionNo:submissionNo,
                Action:'A'
            };

            var workPlaceAddress={
                PanNo:'',
                SubmissionNo:submissionNo,
                WorkPlaceNo:0,
                AddressSno:0,
                East:east,
                West:west,
                North:north,
                South:south,
                Action:'A',
                Address:address

            };

            var regPermitWorkPlace={
                PanNo:'',
                SubmissionNo:submissionNo,
                ItemCode:cbo.getValue(),
                FromDate:fDate,
                PermitFrom:permitFrom,
                Seq:0,
                WorkPlaceNo:0,
                Placename:placeName,
                Purpose:purpose,
                Action:'A',
                WorkPlaceAddress:workPlaceAddress,
                Godowns:[]
            };


            wpListStore.add(regPermitWorkPlace);

        }

    },

    onExcise_Reg_AddWP_btnSaveClick: function(button, e, eOpts) {
        var me =this;
        var store=Ext.getStore('Excise_Reg_AddWP_WPListStore');
        store.clearFilter();
        var regPermitWPList=getJson(store);
        store.filter(function(item){
            return item.get("Action")!= 'D';
        }); 

        Ext.Ajax.request({
            url: '../Handlers/Excise/RegPermitWorkPlaceHandler.ashx?method=SaveRegPermitWorkPlaces',
            params: {
                regPermitWorkPlaces:JSON.stringify( regPermitWPList)
            },
            success: function(response){
                var text = response.responseText;
                var resp=Ext.decode(text);               

                if(resp.success=='True')
                {
                    me.ReloadTab3();
                    msg("Status","Work Places Saved Successfully.");

                }
                else
                {
                    msg("FAILURE","Work Places Saving Failed.");
                }
            },
            failure: function ( result, request ) {
                msg("FAILURE","Work Places Saving Failed.");        
            }
        }); 
    },

    onExcise_Reg_Stages_cboPermitChange: function(field, newValue, oldValue, eOpts) {

        if(newValue)
        {
            var combobox=Ext.ComponentQuery.query('#Excise_Reg_Stages_cboPermit')[0];
            var value = combobox.getValue();
            var record = combobox.findRecord(combobox.valueField || combobox.displayField, value);
            var index = combobox.store.indexOf(record);

            var cStore=combobox.getStore();
            rec=cStore.getAt(index);


            Ext.Ajax.request({
                url: '../Handlers/Excise/RegPermitWorkPlaceHandler.ashx?method=GetRegPermitWorkPlaces',
                params:{
                    submissionNo:Ext.getCmp('ExciseRegistration').extraParam.subNo,
                    itemCode:rec.get('ItemCode'),
                    fromDate:rec.get('FromDate'),
                    permitFrom:rec.get('PermitFrom')
                },
                success: function ( result, request ) {
                    var data = Ext.decode(result.responseText); 
                    if(data.root)
                    {                
                        var store=Ext.getStore('Excise_Reg_Stages_permWpStore');                
                        store.loadData(data.root);
                        Ext.Ajax.request({
                            url: '../Handlers/Excise/ProductionStageHandler.ashx?method=GetProductionStages',
                            params:{                            
                                ItemCode:rec.get('ItemCode')
                            },
                            success: function ( result, request ) {
                                var data1 = Ext.decode(result.responseText); 
                                if(data1.root)
                                {                
                                    var store1=Ext.getStore('Excise_Reg_Stages_PermitStagesStore');                
                                    store1.loadData(data1.root);
                                }

                            },
                            failure: function ( result, request ) {
                                Ext.Msg.show({
                                    title: 'Failure',
                                    msg: 'ERROR OCURRED !!!' ,
                                    buttons: Ext.MessageBox.OK,
                                    icon:Ext.Msg.ERROR
                                });
                            }

                        });
                    }

                },
                failure: function ( result, request ) {
                    Ext.Msg.show({
                        title: 'Failure',
                        msg: 'ERROR OCURRED !!!' ,
                        buttons: Ext.MessageBox.OK,
                        icon:Ext.Msg.ERROR
                    });
                }

            });
        }
    },

    onExcise_Reg_Stages_btnAddClick: function(button, e, eOpts) {
        var nepServerDate=document.getElementById('nepDate').innerHTML;
        var grdWP = Ext.ComponentQuery.query('#Excise_Reg_Stages_WpList')[0];
        var wpSelection = grdWP.getSelectionModel().getSelection();

        var grdStage = Ext.ComponentQuery.query('#Excise_Reg_Stages_PermitStages')[0];
        var stageSelection = grdStage.getSelectionModel().getSelection();

        var productionStagesUsedStore=Ext.getStore('Excise_Reg_Stages_ProductionStagesUsedStore');

        if(wpSelection.length < 1)
        {
            msg("WARNING","Please select Worplace/s !!!"); 
            return;
        }
        if(stageSelection.length < 1)
        {
            msg("WARNING","Please select Stage/s !!!"); 
            return;
        }

        var mesg="";
        var prodStagesUsed=[];
        for (var i = 0; i < wpSelection.length; i++)
        {  
            for (var j = 0; j < stageSelection.length; j++)
            {

                var submissionNo=wpSelection[i].data.SubmissionNo;
                var workPlaceNo=wpSelection[i].data.WorkPlaceNo;
                var itemCode=stageSelection[j].data.ItemCode;
                var stageNo=stageSelection[j].data.StageNo;
                var stageDescEng=stageSelection[j].data.StageDescEng;

                var recordIndex = productionStagesUsedStore.findBy(
                function(record, id){
                    return  ( record.get('SubmissionNo') === submissionNo && record.get('WorkPlaceNo') === workPlaceNo && record.get('ItemCode') === itemCode && record.get('StageNo') === stageNo);
                }
                );

                if(recordIndex != -1)
                {
                    mesg += stageDescEng+'('+stageNo+')' + ' Stage is already added to Workplace ('+ workPlaceNo +') .<br/>';
                }
                else
                {
                    var prodStageUsed={
                        SubmissionNo:submissionNo,
                        WorkPlaceNo:workPlaceNo,
                        ItemCode:itemCode,
                        StageNo:stageNo,
                        ItemNameEnglish:stageSelection[j].data.ItemNameEnglish,
                        StageDescEng:stageDescEng,
                        StageDescNep:stageSelection[j].data.StageDescNep,
                        Action:'A'
                    };

                    prodStagesUsed.push(prodStageUsed);
                }

            }   

            if(mesg !== "")
            {            
                msg('WARNING',mesg+"<br/><b>Duplicate records were not Added.</b>");
            }

        }

        productionStagesUsedStore.add(prodStagesUsed);

    },

    onExcise_Reg_Stages_btnSaveClick: function(button, e, eOpts) {
        var me =this;
        var store=Ext.getStore('Excise_Reg_Stages_ProductionStagesUsedStore');
        store.clearFilter();
        var productionStagesUsed=getJson(store);

        store.filter(function(item){
            return item.get("Action")!= 'D';
        }); 

        Ext.Ajax.request({
            url: '../Handlers/Excise/RegProductionStageUsedHandler.ashx?method=SaveRegProductionStagesUsed',
            params: {
                regProductionStagesUsed:JSON.stringify( productionStagesUsed)
            },
            success: function(response){
                var text = response.responseText;
                var resp=Ext.decode(text);               

                if(resp.success=='True')
                {
                    me.ReloadTab4();
                    msg("Status","Stages Saved Successfully.");

                }
                else
                {
                    msg("FAILURE","Stages Saving Failed.");
                }
            },
            failure: function ( result, request ) {
                msg("FAILURE","Stages Saving Failed.");       
            }
        }); 
    },

    onExcise_Reg_AddPerm_btnCancelClick: function(button, e, eOpts) {
        this.ReloadTab1();
    },

    onExcise_Reg_AddGoods_btnCancelClick: function(button, e, eOpts) {
        this.ReloadTab2();
    },

    onExcise_Reg_Stages_btnCancelClick: function(button, e, eOpts) {
        this.ReloadTab4();
    },

    onExcise_Reg_StagesIpOp_btnCancelClick: function(button, e, eOpts) {
        this.ReloadTab5();
    },

    onExcise_Reg_StagesIpOp_cboPermitChange: function(field, newValue, oldValue, eOpts) {
        if(newValue) 
        {
            Ext.Ajax.request({
                url: '../Handlers/Excise/RegProductionStageUsedHandler.ashx?method=GetRegProductionStagesUsed',
                params:{
                    submissionNo:Ext.getCmp('ExciseRegistration').extraParam.subNo,
                    itemCode:newValue
                },
                success: function ( result, request ) {
                    var data = Ext.decode(result.responseText); 
                    if(data.root)
                    {                      
                        var store=Ext.getStore('Excise_Reg_StagesIpOp_StagesStore');
                        store.loadData(data.root);                            
                    }

                },
                failure: function ( result, request ) {
                    Ext.Msg.show({
                        title: 'Failure',
                        msg: 'ERROR OCURRED !!!' ,
                        buttons: Ext.MessageBox.OK,
                        icon:Ext.Msg.ERROR
                    });
                }

            });
        }
    },

    onExcise_Reg_StagesIpOp_btnSaveClick: function(button, e, eOpts) {
        var me=this;

        var grdIP = Ext.ComponentQuery.query('#Excise_Reg_StagesIpOp_IPRawMaterial')[0];
        var grdOP = Ext.ComponentQuery.query('#Excise_Reg_StagesIpOp_OPRawMaterial')[0];

        var selectionIP = grdIP.getSelectionModel().getSelection();
        var selectionOP = grdOP.getSelectionModel().getSelection();

        var submissionNo="";
        var exReg=Ext.getCmp('ExciseRegistration');
        if(exReg.extraParam)   
        {
            submissionNo = exReg.extraParam.subNo;    
        }

        var grd=Ext.ComponentQuery.query('#Excise_Reg_StagesIpOp_Stages')[0];
        var sel=grd.getSelectionModel().getSelection();
        var wpNo=sel[0].get('WorkPlaceNo');

        if(selectionIP.length < 1)
        {
            msg("WARNING","Please select Input Raw Materials !!!");
            return;
        }

        if(selectionOP.length < 1)
        {
            msg("WARNING","Please select Output Raw Materials !!!");
            return;
        }

        var ipMats=[];
        var opMats=[];

        for (var i = 0; i < selectionIP.length; i++)
        {  

            var ipMat=  {            
                SubmissionNo:submissionNo,
                WorkPlaceNo:wpNo,
                ItemCode:selectionIP[i].data.ItemCode,
                StageNo:selectionIP[i].data.StageNo,
                RawMaterialID:selectionIP[i].data.RawMaterialId,
                IO:'I',            
                Action:'A'
            };
            ipMats.push(ipMat);

        }

        for (var i = 0; i < selectionOP.length; i++)
        {  

            var opMat=  {            
                SubmissionNo:submissionNo,
                WorkPlaceNo:wpNo,
                ItemCode:selectionOP[i].data.ItemCode,
                StageNo:selectionOP[i].data.StageNo,
                RawMaterialID:selectionOP[i].data.RawMaterialId,
                IO:'O',            
                Action:'A'
            };
            opMats.push(opMat);

        }

        ipMats.push.apply(ipMats,opMats);
        console.log(ipMats);
        Ext.Ajax.request({
            url: '../Handlers/Excise/RegPSMaterialHandler.ashx?method=SaveRegPSRawMaterials',
            params: {
                regPSMaterials:JSON.stringify( ipMats)
            },
            success: function(response){
                var text = response.responseText;
                var resp=Ext.decode(text);               

                if(resp.success=='True'||resp.success=='true')
                {
                    me.ReloadTab5();
                    msg("Status","Data Saved Successfully.");

                }
                else
                {
                    msg("FAILURE","Data Saving Failed.");
                }
            },
            failure: function ( result, request ) {
                msg("FAILURE","Data Saving Failed.");        
            }
        }); 

    },

    onExc_Reg_btnSubmitClick: function(button, e, eOpts) {
        var me=this; 

        Ext.Msg.confirm('Confirm Action',
        'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?',
        function(btn) {
            if(btn == 'yes'){
                //////
                var subNo = Ext.getCmp('ExciseRegistration').extraParam.subNo; 
                Ext.Ajax.request({
                    url: '../Handlers/Registration/RegSubmissionNoHandler.ashx?method=SubmitRegistration',
                    params:{submissionNo:submissionNo},
                    // params:'',
                    success: function ( ressponse ) {
                        var respp = ressponse.responseText;
                        var dta=Ext.decode(respp);   
                        if(dta.root.success=='true'||dta.root.success=='True'||dta.root.success)
                        {                                                    


                            msg("Status","Registration Information Saved And Submitted Successfully.");
                        }
                        else
                        {
                            me.submitMessage(dta.root);
                        }
                        me.Reload();
                    },
                    failure: function ( result, request ) {
                        me.Reload();
                        msg("FAILURE","Registration Information Saved Successfully But Submission Failed.");
                    }

                });
                //***
                // Ext.Ajax.request({
                //     url: '../Handlers/Registration/RegSubmissionNoHandler.ashx?method=SubmitRegistration',
                //    params: {
                //        submissionNo:subNo
                //    },
                //    success: function(response){
                //        var text = response.responseText;
                //        var resp=Ext.decode(text);
                //        if(resp.success=='True'||resp.success=='true')
                //        {
                //            msg("Status","Registration Submitted Successfully.");                   
                //        }
                //       else
                //       {
                //           msg("FAILURE","Registration Submission Failed.");
                //       }
                //   },
                //   failure: function ( result, request ) {
                //       msg("FAILURE","Registration Submission Failed.");        
                //   }
                // });   
                //**


                //////
            }
        },
        this);

    },

    ReloadTab2: function() {
        //var sourceStore=Ext.getStore('Excise_Reg_AddPerm_PerListStore');
        destinationStore=Ext.getStore('Excise_Reg_AddGoods_PerListStore');

        var subNo=Ext.getCmp('ExciseRegistration').extraParam.subNo;


        Ext.Ajax.request({
            url: '../Handlers/Excise/RegPermitHandler.ashx?method=GetRegPermitsOnly',
            params:{submissionNo:subNo},
            success: function ( result, request ) {
                var data = Ext.decode(result.responseText);
                destinationStore.loadData(data.root);
            },
            failure: function ( result, request ) {
                Ext.Msg.show({
                    title: 'Failure',
                    msg: 'ERROR OCURRED !!!' ,
                    buttons: Ext.MessageBox.OK,
                    icon:Ext.Msg.ERROR
                });
            }

        });


        //var destinationStore=Ext.getStore('Excise_Reg_AddGoods_PerListStore');
        //destinationStore.removeAll();
        //destinationStore.loadData(sourceStore.data.items);

        Ext.ComponentQuery.query('#Excise_Reg_AddGoods_cboPerm')[0].setValue("");


        var store=Ext.getStore('Excise_Reg_AddGoods_PermGoodsStore'); 
        store.removeAll();

        var goodsStore=Ext.getStore('Excise_Reg_AddGoods_GoodsStore'); 
        goodsStore.removeAll();




        var exciseReg=Ext.getCmp('ExciseRegistration');
        if(exciseReg.extraParam)   
        {    
            var subNo = exciseReg.extraParam.subNo; 
            //var busType=exciseReg.extraParam.busTyp;

            Ext.Ajax.request({
                url: '../Handlers/Excise/RegPermitGoodHandler.ashx?method=GetRegPermitGoods',
                params:{submissionNo:subNo},
                success: function ( result, request ) {
                    var data = Ext.decode(result.responseText); 
                    if(data.root)
                    {                

                        store.loadData(data.root);
                    }

                },
                failure: function ( result, request ) {
                    Ext.Msg.show({
                        title: 'Failure',
                        msg: 'ERROR OCURRED !!!' ,
                        buttons: Ext.MessageBox.OK,
                        icon:Ext.Msg.ERROR
                    });
                }

            });
        }

    },

    ReloadTab1: function() {
        var PermTypeCombo= Ext.ComponentQuery.query('#Excise_Reg_AddPerm_PermType')[0];
        PermTypeCombo.enable();

        PermTypeCombo.setValue("");

        var chkGroup=Ext.ComponentQuery.query('#Excise_Reg_AddPerm_PermFor')[0];
        chkGroup.removeAll(true);

        var store=Ext.getStore('Excise_Reg_AddPerm_PerListStore'); 
        store.removeAll();

        var ptypeComboStore=Ext.getStore('Excise_Reg_AddPerm_PerTypStore');
        ptypeComboStore.removeAll();
        ptypeComboStore.load();

        var exciseReg=Ext.getCmp('ExciseRegistration');


        if(exciseReg.extraParam)   
        {    
            var subNo = exciseReg.extraParam.subNo; 
            var busType=exciseReg.extraParam.busTyp;


            Ext.Ajax.request({
                url: '../Handlers/Excise/RegPermitHandler.ashx?method=GetRegPermits',
                params:{submissionNo:subNo},
                success: function ( result, request ) {
                    var data = Ext.decode(result.responseText); 
                    if(data.root)
                    {                               
                        store.loadData(data.root);
                    }

                },
                failure: function ( result, request ) {
                    Ext.Msg.show({
                        title: 'Failure',
                        msg: 'ERROR OCURRED !!!' ,
                        buttons: Ext.MessageBox.OK,
                        icon:Ext.Msg.ERROR
                    });
                }

            });

        }

    },

    ReloadTab3: function() {
        var PermTypeCombo= Ext.ComponentQuery.query('#Excise_Reg_AddWP_Permit')[0];
        PermTypeCombo.setValue('');

        //var sourceStore=Ext.getStore('Excise_Reg_AddPerm_PerListStore');

        var destinationStore=Ext.getStore('Excise_Reg_AddWP_PermStore');
        //destinationStore.removeAll();
        //destinationStore.loadData(sourceStore.data.items);
        var subNo=Ext.getCmp('ExciseRegistration').extraParam.subNo;


        Ext.Ajax.request({
            url: '../Handlers/Excise/RegPermitHandler.ashx?method=GetRegPermitsOnly',
            params:{submissionNo:subNo},
            success: function ( result, request ) {
                var data = Ext.decode(result.responseText);
                destinationStore.loadData(data.root);
            },
            failure: function ( result, request ) {
                Ext.Msg.show({
                    title: 'Failure',
                    msg: 'ERROR OCURRED !!!' ,
                    buttons: Ext.MessageBox.OK,
                    icon:Ext.Msg.ERROR
                });
            }

        });
        //Ext.ComponentQuery.query('#Excise_Reg_AddGoods_cboPerm')[0].setValue("");


        var store=Ext.getStore('Excise_Reg_AddWP_WPListStore'); 
        store.removeAll();

        var exciseReg=Ext.getCmp('ExciseRegistration');
        if(exciseReg.extraParam)   
        {    
            var subNo = exciseReg.extraParam.subNo; 
            //var busType=exciseReg.extraParam.busTyp;

            Ext.Ajax.request({
                url: '../Handlers/Excise/RegPermitWorkPlaceHandler.ashx?method=GetRegPermitWorkPlaces',
                params:{submissionNo:subNo},
                success: function ( result, request ) {
                    var data = Ext.decode(result.responseText); 


                    store.loadData(data.root);


                },
                failure: function ( result, request ) {
                    Ext.Msg.show({
                        title: 'Failure',
                        msg: 'ERROR OCURRED !!!' ,
                        buttons: Ext.MessageBox.OK,
                        icon:Ext.Msg.ERROR
                    });
                }

            });
        }

    },

    ReloadTab4: function() {
        var PermTypeCombo= Ext.ComponentQuery.query('#Excise_Reg_Stages_cboPermit')[0];
        PermTypeCombo.setValue('');
        var PermTypeComboStore=PermTypeCombo.getStore();

        var permWpStore=Ext.getStore('Excise_Reg_Stages_permWpStore'); 
        permWpStore.removeAll();

        var PermitStagesStore=Ext.getStore('Excise_Reg_Stages_PermitStagesStore');
        PermitStagesStore.removeAll();

        var ProductionStagesUsedStore = Ext.getStore('Excise_Reg_Stages_ProductionStagesUsedStore');
        ProductionStagesUsedStore.removeAll();

        var exciseReg=Ext.getCmp('ExciseRegistration');


        if(exciseReg.extraParam)   
        {    
            var subNo = exciseReg.extraParam.subNo; 
            var busType=exciseReg.extraParam.busTyp;


            Ext.Ajax.request({
                url: '../Handlers/Excise/RegPermitHandler.ashx?method=GetRegPermitsOnly',
                params:{submissionNo:subNo},
                success: function ( result, request ) {
                    var data = Ext.decode(result.responseText); 
                    if(data.root)
                    {                               
                        PermTypeComboStore.loadData(data.root);
                        /////
                        Ext.Ajax.request({
                            url: '../Handlers/Excise/RegProductionStageUsedHandler.ashx?method=GetRegProductionStagesUsed',
                            params:{submissionNo:subNo},
                            success: function ( result, request ) {
                                var data = Ext.decode(result.responseText); 
                                if(data.root)
                                {                               
                                    ProductionStagesUsedStore.loadData(data.root);                            
                                }

                            },
                            failure: function ( result, request ) {
                                Ext.Msg.show({
                                    title: 'Failure',
                                    msg: 'ERROR OCURRED !!!' ,
                                    buttons: Ext.MessageBox.OK,
                                    icon:Ext.Msg.ERROR
                                });
                            }

                        });
                        /////
                    }

                },
                failure: function ( result, request ) {
                    Ext.Msg.show({
                        title: 'Failure',
                        msg: 'ERROR OCURRED !!!' ,
                        buttons: Ext.MessageBox.OK,
                        icon:Ext.Msg.ERROR
                    });
                }

            });

        }

    },

    ReloadTab5: function() {
        var PermTypeCombo= Ext.ComponentQuery.query('#Excise_Reg_StagesIpOp_cboPermit')[0];
        PermTypeCombo.setValue('');
        var PermTypeComboStore=PermTypeCombo.getStore();

        var stagesStore=Ext.getStore('Excise_Reg_StagesIpOp_StagesStore'); 
        stagesStore.removeAll();

        var iPRawMaterialStore=Ext.getStore('Excise_Reg_StagesIpOp_IPRawMaterialStore');
        iPRawMaterialStore.removeAll();

        var oPRawMaterialStore=Ext.getStore('Excise_Reg_StagesIpOp_OPRawMaterialStore');
        oPRawMaterialStore.removeAll();



        var exciseReg=Ext.getCmp('ExciseRegistration');


        if(exciseReg.extraParam)   
        {    
            var subNo = exciseReg.extraParam.subNo; 
            var busType=exciseReg.extraParam.busTyp;


            Ext.Ajax.request({
                url: '../Handlers/Excise/RegPermitHandler.ashx?method=GetRegPermitsOnly',
                params:{submissionNo:subNo},
                success: function ( result, request ) {
                    var data = Ext.decode(result.responseText); 
                    if(data.root)
                    {                               
                        PermTypeComboStore.loadData(data.root);                
                    }

                },
                failure: function ( result, request ) {
                    Ext.Msg.show({
                        title: 'Failure',
                        msg: 'ERROR OCURRED !!!' ,
                        buttons: Ext.MessageBox.OK,
                        icon:Ext.Msg.ERROR
                    });
                }

            });

        }

    },

    submitMessage: function(obj) {
        var winPopup = Ext.create('MyApp.view.SubmitError',{
            autoScroll:true,
            width:700,
            height:500,

            draggable:true,
            maximizable:true,
            minimizable:true,
            resizable:false,
            modal:true,
            title:"",
            y:80,
            layout:'fit'
        });           

        winPopup.extraParam={param:obj};
        winPopup.show();

    },

    init: function(application) {
        this.control({
            "#Excise_Reg_Next": {
                click: this.onExcise_Reg_NextClick
            },
            "#ExciseRegistrationSteps": {
                afterrender: this.onExciseRegistrationStepsAfterRender,
                beforetabchange: this.onExciseRegistrationStepsBeforeTabChange
            },
            "#Excise_Reg_AddPerm_PermType": {
                change: this.onExcise_Reg_AddPerm_PermTypeChange
            },
            "#Excise_Reg_AddPerm_btnAdd": {
                click: this.onExcise_Reg_AddPerm_btnAddClick
            },
            "#Excise_Reg_AddPerm_btnSave": {
                click: this.onExcise_Reg_AddPerm_btnSaveClick
            },
            "#Excise_Reg_AddGoods_btnSave": {
                click: this.onExcise_Reg_AddGoods_btnSaveClick
            },
            "#Excise_Reg_AddGoods_cboPerm": {
                change: this.onExcise_Reg_AddGoods_cboPermChange
            },
            "#Excise_Reg_AddGoods_btnAdd": {
                click: this.onExcise_Reg_AddGoods_btnAddClick
            },
            "#Excise_Reg_AddWP_btnCancel": {
                click: this.onExcise_Reg_AddWP_btnCancelClick
            },
            "#Excise_Reg_AddWP_bnAddWP": {
                click: this.onExcise_Reg_AddWP_bnAddWPClick
            },
            "#Excise_Reg_AddWP_btnSave": {
                click: this.onExcise_Reg_AddWP_btnSaveClick
            },
            "#Excise_Reg_Stages_cboPermit": {
                change: this.onExcise_Reg_Stages_cboPermitChange
            },
            "#Excise_Reg_Stages_btnAdd": {
                click: this.onExcise_Reg_Stages_btnAddClick
            },
            "#Excise_Reg_Stages_btnSave": {
                click: this.onExcise_Reg_Stages_btnSaveClick
            },
            "#Excise_Reg_AddPerm_btnCancel": {
                click: this.onExcise_Reg_AddPerm_btnCancelClick
            },
            "#Excise_Reg_AddGoods_btnCancel": {
                click: this.onExcise_Reg_AddGoods_btnCancelClick
            },
            "#Excise_Reg_Stages_btnCancel": {
                click: this.onExcise_Reg_Stages_btnCancelClick
            },
            "#Excise_Reg_StagesIpOp_btnCancel": {
                click: this.onExcise_Reg_StagesIpOp_btnCancelClick
            },
            "#Excise_Reg_StagesIpOp_cboPermit": {
                change: this.onExcise_Reg_StagesIpOp_cboPermitChange
            },
            "#Excise_Reg_StagesIpOp_btnSave": {
                click: this.onExcise_Reg_StagesIpOp_btnSaveClick
            },
            "#Exc_Reg_btnSubmit": {
                click: this.onExc_Reg_btnSubmitClick
            }
        });
    }

});
