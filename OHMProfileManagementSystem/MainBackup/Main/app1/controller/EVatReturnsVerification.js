/*
 * File: app/controller/EVatReturnsVerification.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.EVatReturnsVerification', {
    extend: 'Ext.app.Controller',

    onRdlVUKChange: function(field, newValue, oldValue, options) {
        var submissionNo=Ext.ComponentQuery.query('#lblSubmissionNo')[0].getValue();
        var pan=Ext.ComponentQuery.query('#lblPan')[0].getValue();
        var application= Ext.ComponentQuery.query('#hfApplication')[0].getValue();
        var module=Ext.ComponentQuery.query('#hfModule')[0].getValue();

        var acctType=Ext.ComponentQuery.query('#hfAccountType')[0].getValue();
        var taxyear=Ext.ComponentQuery.query('#hfTaxyear')[0].getValue();
        var filePer=Ext.ComponentQuery.query('#hfFilePer')[0].getValue();
        var period=Ext.ComponentQuery.query('#hfPeriod')[0].getValue();

        var menuLink='';
        var pageTitle='';

        if(application=='VAT' && module=='VRET')
        {
            menuLink='VerificationByKey';
            pageTitle='Verify Vat Returns By Key';

        }

        var uiConfig = {menuLink:menuLink,
            pageTitle:pageTitle
        };


        DynamicUI(uiConfig,function(){
            Ext.ComponentQuery.query('#hfApplication')[0].setValue(application);
            Ext.ComponentQuery.query('#hfModule')[0].setValue(module);

            Ext.ComponentQuery.query('#lblSubmissionNo')[0].setValue(submissionNo);
            Ext.ComponentQuery.query('#lblPan')[0].setValue(pan);

            Ext.ComponentQuery.query('#hfAccountType')[0].setValue(acctType);
            Ext.ComponentQuery.query('#hfTaxyear')[0].setValue(taxyear);
            Ext.ComponentQuery.query('#hfFilePer')[0].setValue(filePer);
            Ext.ComponentQuery.query('#hfPeriod')[0].setValue(period);

            if(module=='VRET')
            {
                Ext.ComponentQuery.query('#txtPreviousVatDue')[0].show();
            }
            else
            {
                Ext.ComponentQuery.query('#txtPreviousVatDue')[0].hide();
            }
        });






    },

    onRdlVUUPChange: function(field, newValue, oldValue, options) {

        var submissionNo=Ext.ComponentQuery.query('#lblSubmissionNo')[0].getValue();
        var pan=Ext.ComponentQuery.query('#lblPan')[0].getValue();

        var application= Ext.ComponentQuery.query('#hfApplication')[0].getValue();
        var module=Ext.ComponentQuery.query('#hfModule')[0].getValue();

        var acctType=Ext.ComponentQuery.query('#hfAccountType')[0].getValue();
        var taxyear=Ext.ComponentQuery.query('#hfTaxyear')[0].getValue();
        var filePer=Ext.ComponentQuery.query('#hfFilePer')[0].getValue();
        var period=Ext.ComponentQuery.query('#hfPeriod')[0].getValue();

        var menuLink='VerificationByUsernamePwd';
        var pageTitle='';    
        if(application=='VAT' && module=='VRET')
        {
            pageTitle='Verify Vat Returns By Username and Password';

        }
        if(application=='IT' && module=='SA-DO1')
        {
            pageTitle='SA-D01 Verification By Username and Password';

        }


        var uiConfig = {menuLink:menuLink,
            pageTitle:pageTitle
        };


        DynamicUI(uiConfig,function(){
            Ext.ComponentQuery.query('#hfApplication')[0].setValue(application);
            Ext.ComponentQuery.query('#hfModule')[0].setValue(module);

            Ext.ComponentQuery.query('#lblSubmissionNo')[0].setValue(submissionNo);
            Ext.ComponentQuery.query('#lblPan')[0].setValue(pan);

            Ext.ComponentQuery.query('#hfAccountType')[0].setValue(acctType);
            Ext.ComponentQuery.query('#hfTaxyear')[0].setValue(taxyear);
            Ext.ComponentQuery.query('#hfFilePer')[0].setValue(filePer);
            Ext.ComponentQuery.query('#hfPeriod')[0].setValue(period);

            if(module=='VRET')
            {
                Ext.ComponentQuery.query('#txtPreviousVatDue')[0].show();
            }
            else
            {
                Ext.ComponentQuery.query('#txtPreviousVatDue')[0].hide();
            }
        });

    },

    onRdlPChange: function(field, newValue, oldValue, options) {

    },

    init: function(application) {
        this.control({
            "#rdlVUK": {
                change: this.onRdlVUKChange
            },
            "#rdlVUUP": {
                change: this.onRdlVUUPChange
            },
            "#rdlP": {
                change: this.onRdlPChange
            }
        });
    }

});
