/*
 * File: app/view/SelectMFEmployeePopup.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.SelectMFEmployeePopup', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.Text',
        'Ext.button.Button',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Column',
        'Ext.selection.RowModel'
    ],

    height: 500,
    itemId: 'SelectMFEmployeePopup',
    width: 700,
    autoScroll: true,
    title: 'Select Employee',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    itemId: 'frmSelectMFEmployeePopup',
                    bodyPadding: 10,
                    title: '',
                    items: [
                        {
                            xtype: 'container',
                            layout: 'table',
                            items: [
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtSearchEmpId',
                                    fieldLabel: 'Search'
                                },
                                {
                                    xtype: 'button',
                                    colspan: 2,
                                    itemId: 'btnSearchFieldAssistants',
                                    margin: '0 0 0 5',
                                    text: 'Search',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnSearchFieldAssistantsClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            itemId: 'grdSearchFieldAssistants',
                            title: '',
                            store: 'EmployeeSearchShortStore',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    width: 128,
                                    dataIndex: 'EmpId',
                                    text: 'Employee Code'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 500,
                                    dataIndex: 'EmpName',
                                    text: 'Employee Name'
                                }
                            ],
                            selModel: Ext.create('Ext.selection.RowModel', {
                                listeners: {
                                    beforeselect: {
                                        fn: me.onRowModelBeforeSelect,
                                        scope: me
                                    }
                                }
                            })
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFrmSelectEmpPopupAfterRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onBtnSearchFieldAssistantsClick: function(button, e, eOpts) {
        var waitSave = watiMsg('Loading Data. Please wait ...');
        Ext.Ajax.request({
            url:'../Handlers/Supervisor/EmployeeHandler.ashx',
            params:{method:'GetFieldAssistants', officeCode:getOfficeCode(),
                    empName: Ext.ComponentQuery.query('#txtSearchEmpId')[0].getValue()
                   },
            success: function ( result, request ) {

                var obj = Ext.decode(result.responseText);
                if(obj.success === 'true'){
                    //console.log("Resu",obj.root);
                    var store =Ext.getStore('EmployeeSearchShortStore');
                    store.removeAll();
                    store.add(obj.root);


                }else{msg('FAILURE','Could Not Load Data');}
                waitSave.hide();
            },
            failure: function(form, action) {
                msg("FAILURE","Could Not Load Data"); waitSave.hide();   }
        });

    },

    onRowModelBeforeSelect: function(rowmodel, record, index, eOpts) {
        Ext.MessageBox.confirm('Select', 'Are you sure ?', function(btn){

           if(btn === 'yes'){
               //console.log('record',record);

             Ext.ComponentQuery.query('#txtEmpId')[0].setValue(record.data.EmpId);
             Ext.ComponentQuery.query('#txtEmpDesc')[0].setValue(record.data.EmpName);
             Ext.ComponentQuery.query('#txtMemberCode')[0].ClientNo = record.data.ClientNo;
             //console.log(record.data.ClientNo);
             //console.log('clientno',Ext.ComponentQuery.query('#txtMemberCode')[0].ClientNo);
              // return true;
           }
           else
           {

           }
            var v = Ext.ComponentQuery.query('#SelectMFEmployeePopup')[0];

            v.close();
        });

    },

    onFrmSelectEmpPopupAfterRender: function(component, eOpts) {
        var waitSave = watiMsg('Loading Data. Please wait ...');

        Ext.Ajax.request({
            url:'../Handlers/Supervisor/EmployeeHandler.ashx',
            params:{method:'GetFieldAssistants', officeCode:getOfficeCode(), empName: null
                   },
            success: function ( result, request ) {

                var obj = Ext.decode(result.responseText);
                if(obj.success === 'true'){
                    //console.log("Resu",obj.root);
                    var store =Ext.getStore('EmployeeSearchShortStore');
                    store.removeAll();
                    store.add(obj.root);
                    waitSave.hide();

                }else{msg('FAILURE','Could Not Load Data');}
            },
            failure: function(form, action) {
                msg("FAILURE","Could Not Load Data");    }
        });

    }

});