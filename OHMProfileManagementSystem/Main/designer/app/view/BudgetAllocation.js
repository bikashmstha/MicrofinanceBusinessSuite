/*
 * File: app/view/BudgetAllocation.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.BudgetAllocation', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.field.ComboBox',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Column',
        'Ext.button.Button'
    ],

    frame: true,
    title: 'Budget Allocation',

    layout: {
        type: 'table',
        columns: 2
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'combobox',
                    colspan: 2,
                    itemId: 'ddlFiscalYear',
                    fieldLabel: 'Fiscal Year',
                    labelWidth: 120,
                    fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                    emptyText: '- - - Select - - -',
                    displayField: 'FiscalYearCode',
                    forceSelection: true,
                    queryMode: 'local',
                    store: 'FiscalYearShortStore',
                    valueField: 'FiscalYearCode'
                },
                {
                    xtype: 'combobox',
                    colspan: 2,
                    itemId: 'ddlOffice',
                    fieldLabel: 'Office Code',
                    labelWidth: 120,
                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                    emptyText: '- - - Select - - -',
                    displayField: 'OfficeName',
                    forceSelection: true,
                    queryMode: 'local',
                    store: 'OfficeShortStore',
                    valueField: 'OfficeCode'
                },
                {
                    xtype: 'textfield',
                    itemId: 'txtAllocationDateBS',
                    fieldLabel: 'Allocation Date(B.S.)',
                    labelWidth: 120,
                    emptyText: 'YYYY-MM-DD',
                    listeners: {
                        blur: {
                            fn: me.onTxtAllocationDateBSBlur,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'textfield',
                    itemId: 'txtAllocationDateAD',
                    margin: '0 0 0 10',
                    fieldLabel: '(A.D.)',
                    fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                    emptyText: 'DD-MON-YYYY'
                },
                {
                    xtype: 'gridpanel',
                    colspan: 2,
                    itemId: 'grdBudgetAllocation',
                    title: 'Budget Allocation',
                    store: 'BudgetAllocationStore',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'FiscalYear',
                            text: 'FiscalYear'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'TranOfficeCode',
                            text: 'TranOfficeCode'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'AccountCode',
                            text: 'AccountCode'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'AllocAmt',
                            text: 'AllocAmt'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'NetAllocAmt',
                            text: 'NetAllocAmt'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'AccountNo',
                            text: 'AccountNo'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'AccountDesc',
                            text: 'AccountDesc'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    colspan: 2,
                    height: 28,
                    margin: '10 0 0 0 ',
                    layout: {
                        type: 'hbox',
                        align: 'stretch',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'button',
                            itemId: 'btnSaveBudgetAllocationDetails',
                            padding: 5,
                            text: 'Save Budget Allocation Details',
                            listeners: {
                                click: {
                                    fn: me.onBtnSaveBudgetAllocationDetailsClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    itemId: 'grdBudgetAllocationShare',
                    width: 788,
                    title: 'Budget Allocation Share',
                    store: 'BudgetAllocationShareStore',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            width: 165,
                            dataIndex: 'AccountCode',
                            text: 'Account Code'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 111,
                            dataIndex: 'ReBudgetDate',
                            text: 'Re Budget Date'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 244,
                            dataIndex: 'ReAllocAmt',
                            text: 'Re Alloc Amt'
                        }
                    ]
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onPanelAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onTxtAllocationDateBSBlur: function(component, e, eOpts) {
        getEngDate(component.getValue(),function(data){
            //console.log('date',data);
            Ext.ComponentQuery.query('#txtAllocationDateAD')[0].setValue(data.message);
        });
    },

    onBtnSaveBudgetAllocationDetailsClick: function(button, e, eOpts) {
        var errMsg='';
        var categoryNo=Ext.ComponentQuery.query('#txtCategoryNo')[0];
        var categoryDesc=Ext.ComponentQuery.query('#txtCategoryDesc')[0];
        var categoryInitial=Ext.ComponentQuery.query('#txtCategoryInitial')[0];
        var action=Ext.ComponentQuery.query('#txtAction')[0];


        var objBudgetAllocationMaster={CategoryNo:categorNo.getValu(),
                 CategoryDesc:categoryDesc.getValue(),
                 CategoryInitial:categoryInitial.getValue(),
                 TranOfficeCode:null,
                 Action:action.getValue()};

        /*
        public string FiscalYear { get; set; }
                public string TranOfficeCode { get; set; }
                public string AllocDate { get; set; }
                public string Active { get; set; }
                public string InsertUpdateMst { get; set; }
                */



        var wMsg='Budget Allocation On Process...';

        var waitSave = watiMsg(wMsg);

        Ext.Ajax.request({
                    url: '../Handlers/Finance/AccountTransaction/BudgetAllocationMasterHandler.ashx',
                    params: {
                        method:'SaveBudgetAllocationMaster',
                        budgetAllocationMaster:JSON.stringify(objBudgetAllocationMaster)
                    },
                    success: function(response){
                    waitSave.hide();
                    var out=Ext.decode(response.responseText);
                    console.log(out);

                    if(out.success==="true")
                        {
                            var message=out.root;

                                    msg("SUCCESS",message.OutResultMessage,function(){
                                        //var grd = Ext.ComponentQuery.query('#grdAccountCategory')[0];

                                        //var record = grd.getSelectionModel().getSelection()[0];
                                        //record.set('Action','U');

                                    });




                        }
                        else
                            {
                                msg("FAILURE",out.message);
                            }
                    },
                    failure: function ( result, request ) {
                        waitSave.hide();
                        var out=Ext.decode(response.responseText);
                        msg("FAILURE",out.message);
                    }

                });

    },

    onPanelAfterRender: function(component, eOpts) {
        var fiscalYearShortStore=Ext.getStore('FiscalYearShortStore');
        getFiscalYears(null,function(data){
            fiscalYearShortStore.removeAll();
            fiscalYearShortStore.add(data.root);

        });

        var officeShortStore=Ext.getStore('OfficeShortStore');
        getOfficeShort(function(data){
            officeShortStore.removeAll();
            officeShortStore.add(data.root);

        });
    }

});