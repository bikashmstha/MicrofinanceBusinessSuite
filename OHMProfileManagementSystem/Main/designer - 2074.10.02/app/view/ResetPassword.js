/*
 * File: app/view/ResetPassword.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.ResetPassword', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.button.Button'
    ],

    frame: true,
    title: 'Reset User Password',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    itemId: 'frmResetPassword',
                    bodyPadding: 10,
                    items: [
                        {
                            xtype: 'combobox',
                            anchor: '100%',
                            itemId: 'ddlUser',
                            maxWidth: 350,
                            width: 350,
                            fieldLabel: 'User',
                            labelWidth: 130,
                            displayField: 'UserName',
                            queryMode: 'local',
                            store: 'UserShortStore',
                            valueField: 'UserID'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtNewPassword',
                            fieldLabel: 'New Password',
                            labelWidth: 130,
                            inputType: 'password'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtCNewPassword',
                            fieldLabel: 'Confirm New Password',
                            labelWidth: 130,
                            inputType: 'password'
                        },
                        {
                            xtype: 'button',
                            padding: 5,
                            text: 'Reset Password',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFrmResetPasswordAfterRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onButtonClick: function(button, e, eOpts) {
        var user=Ext.ComponentQuery.query('#ddlUser')[0];
        var newPwd=Ext.ComponentQuery.query('#txtNewPassword')[0];
        var cNewPwd=Ext.ComponentQuery.query('#txtCNewPassword')[0];



        var waitSave = watiMsg('Please wait ...');
        Ext.Ajax.request({
             url: '../Handlers/Security/UserHandler.ashx',
             params:{method:'ResetPassword',
                    officeCode:'00',
                    userCode:user.getValue(),
                    newPwd:newPwd.getValue(),
                     cNewPwd:cNewPwd.getValue(),
                     changeByOfficeCode:'00',
                     changeByUserCode:user.getValue()},
             success: function ( response, request ) {
                 waitSave.hide();
                    var out=Ext.decode(response.responseText);
                    console.log(out);

                    if(out.success==="true")
                        {
                           msg("SUCCESS",out.message,function(){

                                    });
                      }
                        else
                            {
                                msg("FAILURE",out.message);
                            }
                    },
                    failure: function ( result, request ) {
                        waitSave.hide();
                        var out=Ext.decode(response.responseText);
                        msg("FAILURE",out.message);
                    }

                });

    },

    onFrmResetPasswordAfterRender: function(component, eOpts) {
        var store=Ext.getStore('UserShortStore');
        store.removeAll();

        Ext.Ajax.request({
            url: '../Handlers/Security/UserHandler.ashx',
            params: {
                method:'GetUserShort'
            },
            success: function(response){

            var data=Ext.decode(response.responseText);
            console.log('data',data);
            store.removeAll();
            store.add(data.root);


        }
        });
    }

});