/*
 * File: app/view/EmployeeInformation.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.EmployeeInformation', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.Panel',
        'Ext.Img',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Checkbox',
        'Ext.form.field.File',
        'Ext.form.field.TextArea',
        'Ext.form.FieldSet',
        'Ext.form.Label',
        'Ext.button.Button',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Action',
        'Ext.panel.Tool'
    ],

    frame: true,
    style: 'border: none;',
    title: 'Employee Information',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    itemId: 'frmEmployeeInformation',
                    bodyPadding: 10,
                    title: '',
                    items: [
                        {
                            xtype: 'panel',
                            frame: true,
                            itemId: 'pnlEmployee',
                            autoScroll: true,
                            bodyBorder: false,
                            bodyPadding: 10,
                            title: 'Employee',
                            layout: {
                                type: 'table',
                                columns: 5
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtEmployeeId',
                                    fieldLabel: 'Employee Id'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtEmployeeName',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Name'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtDobBS',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Birth Date (B.S.)'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtDobAD',
                                    margin: '0 0 0 10',
                                    fieldLabel: '(A.D.)',
                                    labelWidth: 70,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'image',
                                    rowspan: 6,
                                    weight: 100,
                                    height: 150,
                                    itemId: 'imgEmployee',
                                    margin: '-15 0 0 10',
                                    width: 150
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtDisplayNo',
                                    fieldLabel: 'Display No',
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlMaritalStatus',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Marital Status',
                                    emptyText: '---Select---',
                                    displayField: 'RefDtlName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'MaritalStatusStore',
                                    valueField: 'RefDtlCode'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtJoinDateBS',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Join Date (B.S.)'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtJoinDateAD',
                                    margin: '0 0 0 10',
                                    fieldLabel: '(A.D.)',
                                    labelWidth: 70,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    itemId: 'chkActive',
                                    fieldLabel: 'Active',
                                    boxLabel: ''
                                },
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlGender',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Gender',
                                    emptyText: '---Select---',
                                    displayField: 'RefDtlName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'EmployeeGenderStore',
                                    valueField: 'RefDtlCode'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtCurrentOfficeJoinDateBS',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Current Office Join Date (B.S.)'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtCurrentOfficeJoinDateAD',
                                    margin: '0 0 0 10',
                                    fieldLabel: '(A.D.)',
                                    labelWidth: 70,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 2,
                                    itemId: 'ddlCasteCode',
                                    fieldLabel: 'Caste Code',
                                    emptyText: '---Select---',
                                    displayField: 'CasteDesc',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'CasteCodeStore',
                                    valueField: 'CasteCode'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 2,
                                    itemId: 'ddlNationality',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Nationality',
                                    emptyText: '---Select---',
                                    displayField: 'CountryDesc',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'CountryShortStore',
                                    valueField: 'CountryCode'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 2,
                                    itemId: 'ddlOfficeCode',
                                    fieldLabel: 'Office Code',
                                    emptyText: '---Select---',
                                    displayField: 'OfficeName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'EmployeeOfficeStore',
                                    valueField: 'OfficeCode'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 2,
                                    itemId: 'ddlEmployeeType',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Employee Type',
                                    emptyText: '---Select---',
                                    displayField: 'RefDtlName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'ReferenceShortStore',
                                    valueField: 'RefDtlCode'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 2,
                                    itemId: 'ddlPost',
                                    fieldLabel: 'Post',
                                    emptyText: '---Select---',
                                    displayField: 'PostDesc',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'EmployeePostStore',
                                    valueField: 'PostCode',
                                    listeners: {
                                        change: {
                                            fn: me.onDdlPostChange,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'form',
                                    colspan: 2,
                                    border: false,
                                    frame: true,
                                    height: 32,
                                    itemId: 'frmEmpImageUpload',
                                    style: 'border: none;',
                                    bodyBorder: false,
                                    bodyPadding: 0,
                                    title: '',
                                    layout: {
                                        type: 'table',
                                        columns: 3
                                    },
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            itemId: 'txtEmpImgPath',
                                            margin: '0 0 0 10',
                                            fieldLabel: 'Image path'
                                        },
                                        {
                                            xtype: 'filefield',
                                            itemId: 'fupImageEmployee',
                                            width: 69,
                                            fieldLabel: '',
                                            buttonOnly: true,
                                            listeners: {
                                                change: {
                                                    fn: me.onFupImageEmployeeChange,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 2,
                                    itemId: 'ddlDesignation',
                                    fieldLabel: 'Designation',
                                    emptyText: '---Select---',
                                    displayField: 'DesignationDesc',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'EmployeeDesignationStore',
                                    valueField: 'DesignationCode'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 3,
                                    itemId: 'ddlDepartment',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Department',
                                    emptyText: '---Select---',
                                    displayField: 'DeptName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'EmployeeDepartmentStore',
                                    valueField: 'DeptCode'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtGrade',
                                    fieldLabel: 'Grade'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtGradeValue',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Grade Value'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtLevelSno',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Level SNo.'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtOfficeIdNo',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Office Id No',
                                    labelWidth: 70
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtFatherInLawsName',
                                    fieldLabel: 'Father In Law\'s Name'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtProbationDateBS',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Probation Date (B.S.)'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtProbationDateAD',
                                    margin: '0 0 0 10',
                                    fieldLabel: '(A.D.)',
                                    labelWidth: 70,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtGrandFathersName',
                                    fieldLabel: 'GrandFather\'s Name'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtPermanentDateBS',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Permanent Date (B.S.)'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtPermanentDateAD',
                                    margin: '0 0 0 10',
                                    fieldLabel: '(A.D.)',
                                    labelWidth: 70,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtNoOfSon',
                                    fieldLabel: 'No. Of Son'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtNoOfDaughter',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'No. Of Daughter'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtFathersName',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Father\'s Name'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 2,
                                    itemId: 'ddlFathersOccupation',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Occupation',
                                    labelWidth: 70,
                                    emptyText: '---Select---',
                                    displayField: 'OccupationDesc',
                                    queryMode: 'local',
                                    store: 'EmployeeFatherOccupationStore',
                                    valueField: 'OccupationCode'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtEmailAddress',
                                    fieldLabel: 'Email Id'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtMothersName',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Mother\'s Name'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 2,
                                    itemId: 'ddlMothersOccupation',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Occupation',
                                    labelWidth: 70,
                                    emptyText: '---Select---',
                                    displayField: 'OccupationDesc',
                                    queryMode: 'local',
                                    store: 'EmployeeMotherOccupationStore',
                                    valueField: 'OccupationCode'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    itemId: 'chkBranchIncharge',
                                    fieldLabel: 'Branch Incharge/Manager',
                                    boxLabel: ''
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtIdentification',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Identification'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtSpousesName',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Spouse\'s Name'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 2,
                                    itemId: 'ddlSpousesOccupation',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Occupation',
                                    labelWidth: 70,
                                    emptyText: '---Select---',
                                    displayField: 'OccupationDesc',
                                    queryMode: 'local',
                                    store: 'EmployeeSpouseOccupationStore',
                                    valueField: 'OccupationCode'
                                },
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlIdentifcationType',
                                    fieldLabel: 'Identity Type',
                                    emptyText: '---Select---',
                                    displayField: 'RefDtlName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'EmployeeIdentityTypeStore',
                                    valueField: 'RefDtlCode'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtIdentityNo',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Identity No.'
                                },
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlIssueDistrict',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Issue District',
                                    emptyText: '---Select---',
                                    displayField: 'DistrictDesc',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'EmployeeIssueDistrictStore',
                                    valueField: 'DistrictCode'
                                }
                            ],
                            listeners: {
                                afterrender: {
                                    fn: me.onPanelAfterRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'panel',
                            frame: true,
                            title: 'Temporary Contact',
                            layout: {
                                type: 'table',
                                columns: 2
                            },
                            items: [
                                {
                                    xtype: 'textareafield',
                                    rowspan: 2,
                                    itemId: 'txtTempAddress',
                                    width: 520,
                                    fieldLabel: 'Address',
                                    cols: 100
                                },
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlTempDistrict',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'District',
                                    emptyText: '---Select---',
                                    displayField: 'DistrictDesc',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'EmployeeTempDistrictStore',
                                    valueField: 'DistrictCode'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtTempPhone',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Phone No.'
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            frame: true,
                            title: 'Permanent Contact',
                            layout: {
                                type: 'table',
                                columns: 2
                            },
                            items: [
                                {
                                    xtype: 'textareafield',
                                    rowspan: 2,
                                    itemId: 'txtPermAddress',
                                    width: 520,
                                    fieldLabel: 'Address',
                                    cols: 290
                                },
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlPermDistrict',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'District',
                                    emptyText: '---Select---',
                                    displayField: 'DistrictDesc',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'EmployeePermDistrictStore',
                                    valueField: 'DistrictCode'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtPermPhone',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Phone No.'
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            frame: true,
                            height: 250,
                            title: 'Employee Signature',
                            layout: {
                                type: 'hbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'fieldset',
                                    width: 590,
                                    title: 'Signature 1',
                                    layout: {
                                        type: 'table',
                                        columns: 2
                                    },
                                    items: [
                                        {
                                            xtype: 'form',
                                            colspan: 2,
                                            border: false,
                                            frame: true,
                                            height: 32,
                                            itemId: 'frmEmpSignature1Upload',
                                            style: 'border: none;',
                                            bodyBorder: false,
                                            bodyPadding: 0,
                                            title: '',
                                            layout: {
                                                type: 'table',
                                                columns: 3
                                            },
                                            items: [
                                                {
                                                    xtype: 'textfield',
                                                    itemId: 'txtEmpSignature1Path',
                                                    fieldLabel: 'Image path'
                                                },
                                                {
                                                    xtype: 'filefield',
                                                    itemId: 'fupEmpSignature1Path',
                                                    width: 69,
                                                    fieldLabel: '',
                                                    buttonOnly: true,
                                                    listeners: {
                                                        change: {
                                                            fn: me.onFupEmpSignature1PathChange,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'image',
                                            height: 150,
                                            itemId: 'imgEmpSignature1',
                                            width: 150
                                        }
                                    ]
                                },
                                {
                                    xtype: 'fieldset',
                                    width: 520,
                                    title: 'Signature 2',
                                    layout: {
                                        type: 'table',
                                        columns: 2
                                    },
                                    items: [
                                        {
                                            xtype: 'form',
                                            colspan: 2,
                                            border: false,
                                            frame: true,
                                            height: 32,
                                            itemId: 'frmEmpSignature2Upload',
                                            style: 'border: none;',
                                            bodyBorder: false,
                                            bodyPadding: 0,
                                            title: '',
                                            layout: {
                                                type: 'table',
                                                columns: 3
                                            },
                                            items: [
                                                {
                                                    xtype: 'textfield',
                                                    itemId: 'txtEmpSignature2Path',
                                                    fieldLabel: 'Image path'
                                                },
                                                {
                                                    xtype: 'filefield',
                                                    itemId: 'fupEmpSignature2Path',
                                                    width: 69,
                                                    fieldLabel: '',
                                                    buttonOnly: true,
                                                    listeners: {
                                                        change: {
                                                            fn: me.onFupEmpSignature2PathChange,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'image',
                                            height: 150,
                                            itemId: 'imgEmpSignature2',
                                            width: 150
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            frame: true,
                            title: 'Nominee',
                            layout: {
                                type: 'table',
                                columns: 3
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtNomineeName',
                                    fieldLabel: 'Name',
                                    size: 61
                                },
                                {
                                    xtype: 'image',
                                    rowspan: 3,
                                    height: 150,
                                    itemId: 'imgNominee',
                                    margin: '0 0 0 80',
                                    width: 150
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtNomineeRelation',
                                    fieldLabel: 'Relation',
                                    size: 61
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtNomineeAddress',
                                    fieldLabel: 'Address',
                                    size: 61
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 2,
                                    itemId: 'ddlNomineeDistrict',
                                    fieldLabel: 'District',
                                    emptyText: '---Select---',
                                    size: 61,
                                    displayField: 'DistrictDesc',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'NomineeDistrictStore',
                                    valueField: 'DistrictCode'
                                },
                                {
                                    xtype: 'form',
                                    border: false,
                                    frame: true,
                                    height: 32,
                                    itemId: 'frmNomineeImageUpload',
                                    style: 'border: none;',
                                    bodyBorder: false,
                                    bodyPadding: 0,
                                    title: '',
                                    layout: {
                                        type: 'table',
                                        columns: 3
                                    },
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            itemId: 'txtNomineeImagePath',
                                            margin: '0 0 0 75',
                                            fieldLabel: 'Image path'
                                        },
                                        {
                                            xtype: 'filefield',
                                            itemId: 'fupNomineeImagePath',
                                            width: 69,
                                            fieldLabel: '',
                                            buttonOnly: true,
                                            listeners: {
                                                change: {
                                                    fn: me.onFupNomineeImagePathChange,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    xtype: 'label',
                                    margin: '0 0 0 70',
                                    text: 'Signature 1'
                                },
                                {
                                    xtype: 'label',
                                    colspan: 2,
                                    margin: '0 0 0 100',
                                    text: 'Signature 2'
                                },
                                {
                                    xtype: 'image',
                                    height: 150,
                                    itemId: 'imgNomineeSignature1',
                                    margin: '0 0 0 50',
                                    width: 150
                                },
                                {
                                    xtype: 'image',
                                    colspan: 2,
                                    height: 150,
                                    itemId: 'imgNomineeSignature2',
                                    margin: '0 0 0 80',
                                    width: 150
                                },
                                {
                                    xtype: 'form',
                                    border: false,
                                    frame: true,
                                    height: 32,
                                    itemId: 'frmNomineeSignature1Upload',
                                    padding: 0,
                                    style: 'border: none;',
                                    bodyBorder: false,
                                    bodyPadding: 0,
                                    title: '',
                                    layout: {
                                        type: 'table',
                                        columns: 3
                                    },
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            itemId: 'txtNomineeSignature1Path',
                                            fieldLabel: 'Image path'
                                        },
                                        {
                                            xtype: 'filefield',
                                            itemId: 'fupNomineeSignature1Path',
                                            width: 69,
                                            fieldLabel: '',
                                            buttonOnly: true,
                                            listeners: {
                                                change: {
                                                    fn: me.onFupNomineeSignature1PathChange,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    xtype: 'form',
                                    colspan: 2,
                                    border: false,
                                    frame: true,
                                    height: 32,
                                    itemId: 'frmNomineeSignature2Upload',
                                    padding: 0,
                                    style: 'border: none;',
                                    bodyBorder: false,
                                    bodyPadding: 0,
                                    title: '',
                                    layout: {
                                        type: 'table',
                                        columns: 3
                                    },
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            itemId: 'txtNomineeSignature2Path',
                                            margin: '0 0 0 80',
                                            fieldLabel: 'Image path'
                                        },
                                        {
                                            xtype: 'filefield',
                                            itemId: 'fupNomineeSignature2Path',
                                            width: 69,
                                            fieldLabel: '',
                                            buttonOnly: true,
                                            listeners: {
                                                change: {
                                                    fn: me.onFupNomineeSignature2PathChange,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlNomineeIdentityType',
                                    fieldLabel: 'Identity Type',
                                    emptyText: '---Select---',
                                    displayField: 'RefDtlName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'NomineeIdentityTypeStore',
                                    valueField: 'RefDtlCode'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtNomineeIdentityNo',
                                    margin: '0 0 0 80',
                                    fieldLabel: 'Identity No'
                                },
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlNomineeIssueDistrict',
                                    fieldLabel: 'Issue District',
                                    emptyText: '---Select---',
                                    displayField: 'DistrictDesc',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'NomineeIssueDistrictStore',
                                    valueField: 'DistrictCode'
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            frame: true,
                            title: 'Payroll Information',
                            layout: {
                                type: 'table',
                                columns: 2
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtSalaryAccountNo',
                                    fieldLabel: 'Salary Account No.',
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtMemberName',
                                    fieldLabel: '',
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtHlpreAccountHeadCode',
                                    fieldLabel: 'HLPRE Account Head Code',
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtHlpreAccountHeadDesc',
                                    fieldLabel: '',
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtSalaryAccountHeadCode',
                                    fieldLabel: 'Salary Account Head Code',
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtSalaryAccountHeadDesc',
                                    fieldLabel: '',
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtMemberCode',
                                    fieldLabel: 'Client No.',
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    fieldLabel: '',
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtCitFund',
                                    fieldLabel: 'CIT Fund'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtHousingLoadAmount',
                                    fieldLabel: 'Housing Loan Amount'
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'btnInsert',
                                    text: 'Insert',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnInsertClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'btnUpdate',
                                    text: 'Update',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnUpdateClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'btnDelete',
                                    text: 'Delete'
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            frame: true,
                            autoScroll: true,
                            title: 'Search',
                            layout: {
                                type: 'table',
                                columns: 4
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtSrchEmpId',
                                    fieldLabel: 'Employee Id.'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtSrchEmpName',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Employee Name'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 2,
                                    itemId: 'ddlSrchOffCode',
                                    fieldLabel: 'Office Code',
                                    emptyText: '---Select---',
                                    displayField: 'OfficeName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'EmployeeOfficeSearchStore',
                                    valueField: 'OfficeCode'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 2,
                                    itemId: 'ddlSrchPostCode',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Post',
                                    emptyText: '---Select---',
                                    displayField: 'PostDesc',
                                    queryMode: 'local',
                                    store: 'EmployeeSrchPostStore',
                                    valueField: 'PostCode'
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 4,
                                    itemId: 'ddlSrchGender',
                                    fieldLabel: 'Gender',
                                    emptyText: '---Select---',
                                    displayField: 'RefDtlName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'EmployeeGenderSearchStore',
                                    valueField: 'RefDtlCode'
                                },
                                {
                                    xtype: 'button',
                                    colspan: 4,
                                    itemId: 'btnSearchEmployee',
                                    text: 'Search',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'gridpanel',
                                    colspan: 4,
                                    itemId: 'grdEmployees',
                                    width: 1008,
                                    title: 'Employees',
                                    store: 'EmployeeSearchStore',
                                    columns: [
                                        {
                                            xtype: 'actioncolumn',
                                            items: [
                                                {
                                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                        Ext.ComponentQuery.query('#grdEmployees')[0].getSelectionModel().select(rowIndex);
                                                        //get reference of store
                                                        var store = Ext.getStore('EmployeeSearchStore');
                                                        //get selected row using rowindex
                                                        var record = store.getAt(rowIndex).data;
                                                        // set values
                                                        console.log('row',row);


                                                        //start employee panel
                                                        Ext.ComponentQuery.query('#txtEmployeeId')[0].setValue(record.EmpId);
                                                        Ext.ComponentQuery.query('#txtEmployeeName')[0].setValue(record.EmpName);
                                                        Ext.ComponentQuery.query('#txtDobBS')[0].setValue(record.DobNepali);
                                                        Ext.ComponentQuery.query('#txtDobAD')[0].setValue(record.Dob);
                                                        //Ext.ComponentQuery.query('#txtDisplayNo')[0].setValue(record.);
                                                        Ext.ComponentQuery.query('#ddlMaritalStatus')[0].setValue(record.Married);
                                                        Ext.ComponentQuery.query('#txtJoinDateBS')[0].setValue(record.JoinDateNep);
                                                        Ext.ComponentQuery.query('#txtJoinDateAD')[0].setValue(record.JoinDate);
                                                        Ext.ComponentQuery.query('#chkActive')[0].setValue(record.ActiveFlag=='Y'?true:false);
                                                        Ext.ComponentQuery.query('#ddlGender')[0].setValue(record.Gender);
                                                        Ext.ComponentQuery.query('#txtCurrentOfficeJoinDateBS')[0].setValue(record.CurrentOfficeJoinDateNep);
                                                        Ext.ComponentQuery.query('#txtCurrentOfficeJoinDateAD')[0].setValue(record.CurrentOfficeJoinDate);
                                                        Ext.ComponentQuery.query('#ddlCasteCode')[0].setValue(record.CasteCode);
                                                        Ext.ComponentQuery.query('#ddlNationality')[0].setValue(record.CountryCode);
                                                        Ext.ComponentQuery.query('#ddlOfficeCode')[0].setValue(record.OfficeCode);
                                                        Ext.ComponentQuery.query('#ddlEmployeeType')[0].setValue(record.EmployeeType);


                                                        Ext.ComponentQuery.query('#pnlEmployee')[0].DesignationCode=record.DesignationCode;
                                                        Ext.ComponentQuery.query('#ddlPost')[0].setValue(record.PostCode);

                                                        //Ext.ComponentQuery.query('#ddlDesignation')[0].setValue(record.DesignationCode);

                                                        Ext.ComponentQuery.query("#txtEmpImgPath")[0].imgsrc=record.ImagePath;
                                                        //Ext.ComponentQuery.query('#txtEmpImgPath')[0].setValue(record.ImagePath);
                                                        var res = record.ImagePath.split("/");

                                                        var dirtyName=res[res.length-1];
                                                        var res1= dirtyName.split(" ");
                                                        var name=res1[res1.length-1];
                                                        //console.log(name);
                                                        Ext.ComponentQuery.query("#txtEmpImgPath")[0].setValue(name);
                                                        Ext.ComponentQuery.query('#imgEmployee')[0].setSrc(record.ImagePath);

                                                        //alert("record.ImagePath",record.ImagePath);
                                                        Ext.ComponentQuery.query('#ddlDepartment')[0].setValue(record.DeptCode);
                                                        Ext.ComponentQuery.query('#txtGrade')[0].setValue(record.Grade);
                                                        Ext.ComponentQuery.query('#txtGradeValue')[0].setValue(record.GradeValue);
                                                        Ext.ComponentQuery.query('#txtLevelSno')[0].setValue(record.LevelSno);

                                                        //Ext.ComponentQuery.query('#txtOfficeIdNo')[0].setValue(record.);

                                                        Ext.ComponentQuery.query('#txtFatherInLawsName')[0].setValue(record.FatherInlawName);
                                                        Ext.ComponentQuery.query('#txtProbationDateBS')[0].setValue(record.ProvisionDateBs);
                                                        Ext.ComponentQuery.query('#txtProbationDateAD')[0].setValue(record.ProvisionDate);
                                                        Ext.ComponentQuery.query('#txtGrandFathersName')[0].setValue(record.GrandfatherName);
                                                        Ext.ComponentQuery.query('#txtPermanentDateBS')[0].setValue(record.PermanentDateBs);
                                                        Ext.ComponentQuery.query('#txtPermanentDateAD')[0].setValue(record.PermanentDate);
                                                        Ext.ComponentQuery.query('#txtNoOfSon')[0].setValue(record.NoOfSon);
                                                        Ext.ComponentQuery.query('#txtNoOfDaughter')[0].setValue(record.NoOfDaughter);
                                                        Ext.ComponentQuery.query('#txtFathersName')[0].setValue(record.FatherName);
                                                        Ext.ComponentQuery.query('#ddlFathersOccupation')[0].setValue(record.FatherOccupation);
                                                        Ext.ComponentQuery.query('#txtEmailAddress')[0].setValue(record.EmailId);
                                                        Ext.ComponentQuery.query('#txtMothersName')[0].setValue(record.MotherName);
                                                        Ext.ComponentQuery.query('#ddlMothersOccupation')[0].setValue(record.MotherOccupation);
                                                        Ext.ComponentQuery.query('#chkBranchIncharge')[0].setValue(record.InchargeYN=='Y'?true:false);

                                                        Ext.ComponentQuery.query('#txtIdentification')[0].setValue(record.Identification);

                                                        Ext.ComponentQuery.query('#txtSpousesName')[0].setValue(record.SpouseName);
                                                        Ext.ComponentQuery.query('#ddlSpousesOccupation')[0].setValue(record.SpouseOccupation);
                                                        Ext.ComponentQuery.query('#ddlIdentifcationType')[0].setValue(record.IdDocumentType);
                                                        Ext.ComponentQuery.query('#txtIdentityNo')[0].setValue(record.IdentityCardNo);
                                                        Ext.ComponentQuery.query('#ddlIssueDistrict')[0].setValue(record.IdIssueDistrictCode);
                                                        //end employee panel

                                                        //start Temp COntat
                                                        Ext.ComponentQuery.query('#txtTempAddress')[0].setValue(record.TemporaryAddress);
                                                        Ext.ComponentQuery.query('#ddlTempDistrict')[0].setValue(record.TemporaryDistrictCode);
                                                        Ext.ComponentQuery.query('#txtTempPhone')[0].setValue(record.TemporaryContactPhone);
                                                        //end Temp COntat

                                                        //start Perm COntat
                                                        Ext.ComponentQuery.query('#txtPermAddress')[0].setValue(record.PermanentAddress);
                                                        Ext.ComponentQuery.query('#ddlPermDistrict')[0].setValue(record.PermanentDistrictCode);
                                                        Ext.ComponentQuery.query('#txtPermPhone')[0].setValue(record.PermanentContactPhone);
                                                        //end Perm COntat

                                                        //start Emp Signature
                                                        //Emp Signature1
                                                        Ext.ComponentQuery.query("#txtEmpSignature1Path")[0].imgsrc=record.Signature1;
                                                        //Ext.ComponentQuery.query('#txtEmpSignature1Path')[0].setValue(record.Signature1);
                                                        var res = record.Signature1.split("/");

                                                        var dirtyName=res[res.length-1];
                                                        var res1= dirtyName.split(" ");
                                                        var name=res1[res1.length-1];
                                                        //console.log(name);
                                                        Ext.ComponentQuery.query("#txtEmpSignature1Path")[0].setValue(name);
                                                        Ext.ComponentQuery.query('#imgEmpSignature1')[0].setSrc(record.Signature1);
                                                        //Emp Signature2
                                                        Ext.ComponentQuery.query("#txtEmpSignature2Path")[0].imgsrc=record.Signature2;
                                                        //Ext.ComponentQuery.query('#txtEmpSignature2Path')[0].setValue(record.Signature2);
                                                        var res = record.Signature2.split("/");

                                                        var dirtyName=res[res.length-1];
                                                        var res1= dirtyName.split(" ");
                                                        var name=res1[res1.length-1];
                                                        //console.log(name);
                                                        Ext.ComponentQuery.query("#txtEmpSignature2Path")[0].setValue(name);
                                                        Ext.ComponentQuery.query('#imgEmpSignature2')[0].setSrc(record.Signature2);
                                                        //end Emp Signature

                                                        //start Nominee panel

                                                        Ext.ComponentQuery.query('#txtNomineeName')[0].setValue(record.NomineeName);
                                                        Ext.ComponentQuery.query('#txtNomineeRelation')[0].setValue(record.Relation);
                                                        Ext.ComponentQuery.query('#txtNomineeAddress')[0].setValue(record.NomineeAddress);
                                                        Ext.ComponentQuery.query('#ddlNomineeDistrict')[0].setValue(record.NomineeDistrict);

                                                        Ext.ComponentQuery.query("#txtNomineeImagePath")[0].imgsrc=record.NomineeImage;
                                                        //Ext.ComponentQuery.query('#txtNomineeImagePath')[0].setValue(record.NomineeImage);
                                                        var res = record.NomineeImage.split("/");

                                                        var dirtyName=res[res.length-1];
                                                        var res1= dirtyName.split(" ");
                                                        var name=res1[res1.length-1];
                                                        //console.log(name);
                                                        Ext.ComponentQuery.query("#txtNomineeImagePath")[0].setValue(name);
                                                        Ext.ComponentQuery.query('#imgNominee')[0].setSrc(record.NomineeImage);

                                                        //Ext.ComponentQuery.query('#imgNominee')[0].setValue(record.);
                                                        Ext.ComponentQuery.query('#ddlNomineeIssueDistrict')[0].setValue(record.NomineeIdIssueDistrictCode);
                                                        Ext.ComponentQuery.query('#ddlNomineeIdentityType')[0].setValue(record.NomineeIdDocumentType);
                                                        Ext.ComponentQuery.query('#txtNomineeIdentityNo')[0].setValue(record.NomineeIdDocumentNo);

                                                        //Nominee Signature1
                                                        //Ext.ComponentQuery.query('#imgNomineeSignature1')[0].setValue(record.);
                                                        Ext.ComponentQuery.query("#txtNomineeSignature1Path")[0].imgsrc=record.NomineeSignature1;
                                                        //Ext.ComponentQuery.query('#txtNomineeSignature1Path')[0].setValue(record.NomineeSignature1);
                                                        var res = record.NomineeSignature1.split("/");

                                                        var dirtyName=res[res.length-1];
                                                        var res1= dirtyName.split(" ");
                                                        var name=res1[res1.length-1];
                                                        //console.log(name);
                                                        Ext.ComponentQuery.query("#txtNomineeSignature1Path")[0].setValue(name);
                                                        Ext.ComponentQuery.query('#imgNomineeSignature1')[0].setSrc(record.NomineeSignature1);

                                                        Ext.ComponentQuery.query('#txtNomineeIdentityNo')[0].setValue(record.NomineeIdDocumentNo);


                                                        //Nominee Signature2
                                                        //Ext.ComponentQuery.query('#imgNomineeSignature2')[0].setValue(record.);
                                                        Ext.ComponentQuery.query("#txtNomineeSignature2Path")[0].imgsrc=record.NomineeSignature2;
                                                        Ext.ComponentQuery.query('#imgNomineeSignature2')[0].setSrc(record.NomineeSignature2);
                                                        //Ext.ComponentQuery.query('#txtNomineeSignature2Path')[0].setValue(record.NomineeSignature2);
                                                        var res = record.NomineeSignature2.split("/");

                                                        var dirtyName=res[res.length-1];
                                                        var res1= dirtyName.split(" ");
                                                        var name=res1[res1.length-1];
                                                        //console.log(name);
                                                        Ext.ComponentQuery.query("#txtNomineeSignature2Path")[0].setValue(name);

                                                        //end Nominee panel
                                                        //start Payroll panel
                                                        Ext.ComponentQuery.query('#txtSalaryAccountNo')[0].setValue(record.SalaryAccountNo);
                                                        //Ext.ComponentQuery.query('#txtMemberName')[0].setValue(record.);

                                                        Ext.ComponentQuery.query('#txtHlpreAccountHeadCode')[0].setValue(record.HlpreAccountHeadCode);
                                                        //Ext.ComponentQuery.query('#txtHlpreAccountHeadDesc')[0].setValue(record.);

                                                        Ext.ComponentQuery.query('#txtSalaryAccountHeadCode')[0].setValue(record.SalaryAdvanceAccountHead);
                                                        //Ext.ComponentQuery.query('#txtSalaryAccountHeadDesc')[0].setValue(record.);

                                                        //Ext.ComponentQuery.query('#txtMemberCode')[0].setValue(record.);
                                                        //Ext.ComponentQuery.query('#txtMemberCode')[0].setValue(record.);

                                                        Ext.ComponentQuery.query('#txtCitFund')[0].setValue(record.ProvidentFund);
                                                        Ext.ComponentQuery.query('#txtHousingLoadAmount')[0].setValue(record.HousingLoanAmt);
                                                        //end Payroll panel
                                                    },
                                                    icon: '../ITS/resources/images/icons/Modify.png'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'EmpId',
                                            text: 'ID'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'EmpName',
                                            text: 'Name'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'OfficeCode',
                                            text: 'OfficeCode'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'Dob',
                                            text: 'Dob'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'DobNepali',
                                            text: 'DobNepali'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'Gender',
                                            text: 'Gender'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'Married',
                                            text: 'Married'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'CitizenshipNo',
                                            text: 'CitizenshipNo'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'EmployeeType',
                                            text: 'Employee Type'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'PostCode',
                                            text: 'PostCode'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'JoinDate',
                                            text: 'JoinDate'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'JoinDateNep',
                                            text: 'JoinDateNep'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'DeptCode',
                                            text: 'DeptCode'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'ActiveFlag',
                                            text: 'ActiveFlag'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'TemporaryAddress',
                                            text: 'TemporaryAddress'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'TemporaryDistrictCode',
                                            text: 'TemporaryDistrictCode'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 105,
                                            dataIndex: 'TemporaryContactPhone',
                                            text: 'Contact No (Temp.)'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'PermanentAddress',
                                            text: 'PermanentAddress'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'PermanentDistrictCode',
                                            text: 'PermanentDistrictCode'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'PermanentContactPhone',
                                            text: 'PermanentContactPhone'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'EmailId',
                                            text: 'EmailId'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'ReligionCode',
                                            text: 'ReligionCode'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'CountryCode',
                                            text: 'CountryCode'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'SpouseName',
                                            text: 'SpouseName'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'SpouseOccupation',
                                            text: 'SpouseOccupation'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'Identification',
                                            text: 'Identification'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'FatherName',
                                            text: 'FatherName'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'MotherName',
                                            text: 'MotherName'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'FatherOccupation',
                                            text: 'FatherOccupation'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'MotherOccupation',
                                            text: 'MotherOccupation'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'GrandfatherName',
                                            text: 'GrandfatherName'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'NoOfSon',
                                            text: 'NoOfSon'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'NoOfDaughter',
                                            text: 'NoOfDaughter'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'NomineeName',
                                            text: 'NomineeName'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'NomineeAddress',
                                            text: 'NomineeAddress'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'NomineeDistrict',
                                            text: 'NomineeDistrict'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'Relation',
                                            text: 'Relation'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'CurrentOfficeJoinDateNep',
                                            text: 'CurrentOfficeJoinDateNep'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'LevelSno',
                                            text: 'LevelSno'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'Grade',
                                            text: 'Grade'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'FatherInlawName',
                                            text: 'FatherInlawName'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'PfAccountNo',
                                            text: 'PfAccountNo'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'InvestmentFundId',
                                            text: 'InvestmentFundId'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'CurrentOfficeJoinDate',
                                            text: 'CurrentOfficeJoinDate'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'CitizenInvestmentTrustIdNo',
                                            text: 'CitizenInvestmentTrustIdNo'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'IdentityCardNo',
                                            text: 'IdentityCardNo'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'DesignationCode',
                                            text: 'DesignationCode'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'ProvisionDate',
                                            text: 'ProvisionDate'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'ProvisionDateBs',
                                            text: 'ProvisionDateBs'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'PermanentDate',
                                            text: 'PermanentDate'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'PermanentDateBs',
                                            text: 'PermanentDateBs'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'QuarterYN',
                                            text: 'QuarterYN'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'PfDate',
                                            text: 'PfDate'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'InchargeYN',
                                            text: 'InchargeYN'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'ImagePath',
                                            text: 'ImagePath'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'EmployeeCode',
                                            text: 'EmployeeCode'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'ThirdPartyData',
                                            text: 'ThirdPartyData'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'Fname',
                                            text: 'Fname'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'Lname',
                                            text: 'Lname'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'NomineeIdIssueDistrictCode',
                                            text: 'NomineeIdIssueDistrictCode'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'NomineeIdDocumentNo',
                                            text: 'NomineeIdDocumentNo'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'NomineeIdDocumentType',
                                            text: 'NomineeIdDocumentType'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'Signature1',
                                            text: 'Signature1'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'Signature2',
                                            text: 'Signature2'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'NomineeImage',
                                            text: 'NomineeImage'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'NomineeSignature1',
                                            text: 'NomineeSignature1'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'NomineeSignature2',
                                            text: 'NomineeSignature2'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'IdIssueDistrictCode',
                                            text: 'IdIssueDistrictCode'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'IdDocumentNo',
                                            text: 'IdDocumentNo'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'IdDocumentType',
                                            text: 'IdDocumentType'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'TerminationDate',
                                            text: 'TerminationDate'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'TerminationReason',
                                            text: 'TerminationReason'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'CasteCode',
                                            text: 'CasteCode'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'SalaryAccountNo',
                                            text: 'SalaryAccountNo'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'HlpreAccountHeadCode',
                                            text: 'HlpreAccountHeadCode'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'SalaryAdvanceAccountHead',
                                            text: 'SalaryAdvanceAccountHead'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'ClientNo',
                                            text: 'ClientNo'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'ProvidentFund',
                                            text: 'ProvidentFund'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'HousingLoanAmt',
                                            text: 'HousingLoanAmt'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'GradeValue',
                                            text: 'GradeValue'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'OldGradeVal',
                                            text: 'OldGradeVal'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'DisableYN',
                                            text: 'DisableYN'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'PostName',
                                            text: 'PostName'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'DeptName',
                                            text: 'DeptName'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'TemporaryDistrictName',
                                            text: 'TemporaryDistrictName'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'PermanentDistrictName',
                                            text: 'PermanentDistrictName'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'NomineeDistrictName',
                                            text: 'NomineeDistrictName'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'DesignationName',
                                            text: 'DesignationName'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'CasteName',
                                            text: 'CasteName'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'HlpreAccountHeadDesc',
                                            text: 'HlpreAccountHeadDesc'
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            tools: [
                {
                    xtype: 'tool',
                    cls: 'popupTool',
                    itemId: 'toolFormClear',
                    listeners: {
                        click: {
                            fn: me.onToolFormClearClick,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onDdlPostChange: function(field, newValue, oldValue, eOpts) {

        var designationCode=Ext.ComponentQuery.query('#pnlEmployee')[0].DesignationCode;

        console.log('designationCode',designationCode);
        var postCode=Ext.ComponentQuery.query("#ddlPost")[0].getValue();

        if(postCode)

            {
        Ext.Ajax.request({
                    url: '../Handlers/HumanResource/Maintenance/DesignationHandler.ashx',
                    params: {
                        method:'Search',
                        designation:JSON.stringify({PostCode:postCode})


                    },
                    success: function(response){
                                                  var obj = Ext.decode(response.responseText);
                                                  if(obj.success === "true")
                                                  {

                                                      var employeeDesignationStore=Ext.getStore('EmployeeDesignationStore');
                                                      employeeDesignationStore.removeAll();
                                                      employeeDesignationStore.add(obj.root);
                                                      if(designationCode)
                                                          {
                                                              Ext.ComponentQuery.query('#ddlDesignation')[0].setValue(designationCode);
                                                          }

                                                  }
                                                  else
                                                  {

                                                      msg("FAILURE",obj.message);
                                                  }
                    }
                });
            }
    },

    onFupImageEmployeeChange: function(filefield, value, eOpts) {
        var empId= Ext.ComponentQuery.query('#txtEmployeeId')[0].getValue();//Math.random().toString(36).substr(2, 9);

        var submissionNoValue='\\Uploads\\EmployeeImg\\';    //ImagePathName
        var myFormPanel= Ext.ComponentQuery.query("#frmEmpImageUpload")[0];
        var folderpath='../uploads/EmployeeImg/';

        myFormPanel.getForm().submit({
            url: '../Handlers/Common/PHOTOUploader.ashx',
            params:{submissionNo:submissionNoValue,employeeId:empId},
            waitMsg: 'Please wait',
            success: function(form,action) {
                var imgsrc=folderpath+action.result.msg;
                console.log("src1",imgsrc);

                //Ext.ComponentQuery.query("#txtEmpImgPath")[0].setValue(imgsrc);
                var res = imgsrc.split("/");

        var dirtyName=res[res.length-1];
        var res1= dirtyName.split(" ");
        var name=res1[res1.length-1];
        //console.log(name);
                Ext.ComponentQuery.query("#txtEmpImgPath")[0].setValue(name);

                Ext.ComponentQuery.query("#txtEmpImgPath")[0].imgsrc=imgsrc;

                Ext.ComponentQuery.query("#imgEmployee")[0].setSrc("");
                Ext.ComponentQuery.query("#imgEmployee")[0].setSrc(imgsrc);

                var picCutter=Ext.create('MyApp.view.PictureCutter');
                picCutter.submissionNo=submissionNoValue;
                picCutter.empId=empId;
                picCutter.imgName=action.result.msg;
                picCutter.imgFolderPath=folderpath;
                picCutter.imgPathControlId="#txtEmpImgPath";
                picCutter.imgControlId="#imgEmployee";
                picCutter.show();
                $('.cropbox').attr('src',imgsrc);
                $('.preview').attr('src',imgsrc);
                Ext.ComponentQuery.query('#ImgToSend')[0].setValue(imgsrc);
        console.log("src2",imgsrc);
            },
            failure: function(form,action) {
            }
        });

        /*
        var submissionNoValue=Math.random().toString(36).substr(2, 9);

        var myFormPanel= Ext.ComponentQuery.query("#frmEmpImageUpload")[0];

        myFormPanel.getForm().submit({
            url: '../Handlers/Common/PHOTOUploader.ashx',
            params:{submissionNo:submissionNoValue},
            waitMsg: 'Please wait',
            success: function(form,action) {
                // console.log(action);
                // console.log(form.result);
                // console.log(action.result);
                        //Ext.getCmp('sespicid').setValue(action.result.msg);

                Ext.ComponentQuery.query("#txtEmpImgPath")[0].setValue(action.result.msg);
                Ext.ComponentQuery.query("#imgEmployee")[0].setSrc('../uploads/'+submissionNoValue+"/"+action.result.msg);

                var picCutter=Ext.create('MyApp.view.PictureCutter');
                picCutter.submissionNo=submissionNoValue;

                picCutter.imgPathControlId="#txtEmpImgPath";
                picCutter.imgControlId="#imgEmployee";
                picCutter.show();
                $('.cropbox').attr('src','../uploads/'+submissionNoValue+"/"+action.result.msg);
                $('.preview').attr('src','../uploads/'+submissionNoValue+"/"+action.result.msg);
                Ext.ComponentQuery.query('#ImgToSend')[0].setValue(action.result.msg);

            },
            failure: function(form,action) {
            }
        });

        */

    },

    onPanelAfterRender: function(component, eOpts) {
        var misDateAD=getMisDateAD();
        Ext.ComponentQuery.query('#txtJoinDateAD')[0].setValue(misDateAD);
        Ext.ComponentQuery.query('#txtCurrentOfficeJoinDateAD')[0].setValue(misDateAD);

        var srchCaste=null;
        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/Maintenance/CasteDetailHandler.ashx',
            params: {
                method:'GetCasteShort',
                caste: srchCaste
            },
            success: function(response){
                                          var obj = Ext.decode(response.responseText);
                                          if(obj.success === "true")
                                          {
                                              var store=Ext.getStore('CasteCodeStore');
                                              store.removeAll();
                                              store.add(obj.root);

                                          }
                                          else
                                          {

                                              msg("FAILURE",obj.message);
                                          }
            }
        });

        Ext.Ajax.request({
            url: '../Handlers/Common/CountryHandler.ashx',
            params: {
                method:'GetCountryShort'

            },
            success: function(response){
                                          var obj = Ext.decode(response.responseText);
                                          if(obj.success === "true")
                                          {
                                              var store=Ext.getStore('CountryShortStore');
                                              store.removeAll();
                                              store.add(obj.root);

                                          }
                                          else
                                          {

                                              msg("FAILURE",obj.message);
                                          }
            }
        });

        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'EMPLOYEE_TYPE'

            },
            success: function(response){
                                          var obj = Ext.decode(response.responseText);
                                          if(obj.success === "true")
                                          {
                                              var store=Ext.getStore('ReferenceShortStore');
                                              store.removeAll();
                                              store.add(obj.root);

                                          }
                                          else
                                          {

                                              msg("FAILURE",obj.message);
                                          }
            }
        });

        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'ID_DOCUMENT_TYPE'

            },
            success: function(response){
                                          var obj = Ext.decode(response.responseText);
                                          if(obj.success === "true")
                                          {
                                              var employeeIdentityTypeStore=Ext.getStore('EmployeeIdentityTypeStore');
                                              employeeIdentityTypeStore.removeAll();
                                              employeeIdentityTypeStore.add(obj.root);

                                               var nomineeIdentityTypeStore=Ext.getStore('NomineeIdentityTypeStore');
                                              nomineeIdentityTypeStore.removeAll();
                                              nomineeIdentityTypeStore.add(obj.root);


                                          }
                                          else
                                          {

                                              msg("FAILURE",obj.message);
                                          }
            }
        });

        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'GENDER'

            },
            success: function(response){
                                          var obj = Ext.decode(response.responseText);
                                          if(obj.success === "true")
                                          {
                                              var employeeGenderStore=Ext.getStore('EmployeeGenderStore');
                                              employeeGenderStore.removeAll();
                                              employeeGenderStore.add(obj.root);

                                               var employeeGenderSearchStore=Ext.getStore('EmployeeGenderSearchStore');
                                              employeeGenderSearchStore.removeAll();
                                              employeeGenderSearchStore.add(obj.root);


                                          }
                                          else
                                          {

                                              msg("FAILURE",obj.message);
                                          }
            }
        });
        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'EMP_MARITAL_STATUS'

            },
            success: function(response){
                                          var obj = Ext.decode(response.responseText);
                                          if(obj.success === "true")
                                          {
                                              var maritalStatusStore=Ext.getStore('MaritalStatusStore');
                                              maritalStatusStore.removeAll();
                                              maritalStatusStore.add(obj.root);




                                          }
                                          else
                                          {

                                              msg("FAILURE",obj.message);
                                          }
            }
        });


        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/Office/OfficeHandler.ashx',
            params: {
                method:'GetOfficeList',
                userCode:getCurrentUser(),
                officeName:null

            },
            success: function(response){
                                          var obj = Ext.decode(response.responseText);
                                          if(obj.success === "true")
                                          {
                                              var employeeOfficeStore=Ext.getStore('EmployeeOfficeStore');
                                              employeeOfficeStore.removeAll();
                                              employeeOfficeStore.add(obj.root);
                                              var employeeOfficeSearchStore=Ext.getStore('EmployeeOfficeSearchStore');
                                              employeeOfficeSearchStore.removeAll();
                                              employeeOfficeSearchStore.add(obj.root);


                                          }
                                          else
                                          {

                                              msg("FAILURE",obj.message);
                                          }
            }
        });

        Ext.Ajax.request({
            url: '../Handlers/HumanResource/Maintenance/PostHandler.ashx',
            params: {
                method:'Get'


            },
            success: function(response){
                                          var obj = Ext.decode(response.responseText);
                                          if(obj.success === "true")
                                          {

                                              var employeePostStore=Ext.getStore('EmployeePostStore');
                                              employeePostStore.removeAll();
                                              employeePostStore.add(obj.root);
                                              var employeeSrchPostStore=Ext.getStore('EmployeeSrchPostStore');
                                              employeeSrchPostStore.removeAll();
                                              employeeSrchPostStore.add(obj.root);

                                          }
                                          else
                                          {

                                              msg("FAILURE",obj.message);
                                          }
            }
        });
        Ext.Ajax.request({
                    url: '../Handlers/GeneralMasterParameters/Maintenance/DepartmentHandler.ashx',
                    params: {
                        method:'GetDepartmentShort'



                    },
                    success: function(response){
                                                  var obj = Ext.decode(response.responseText);
                                                  console.log("obj.root",obj.root);
                        var employeeDepartmentStore=Ext.getStore('EmployeeDepartmentStore');
                                              employeeDepartmentStore.removeAll();
                                              employeeDepartmentStore.add(obj.root);

                    }
                });

        Ext.Ajax.request({
                    url: '../Handlers/Common/DistrictHandler.ashx',
                    params: {
                        method:'GetDistrictList',
        				districtName:null



                    },
                    success: function(response){
                                                  var obj = Ext.decode(response.responseText);
                                                  console.log("obj.root",obj.root);

        										   var employeeIssueDistrictStore=Ext.getStore('EmployeeIssueDistrictStore');
                                              employeeIssueDistrictStore.removeAll();
                                              employeeIssueDistrictStore.add(obj.root);

        									   var employeeTempDistrictStore=Ext.getStore('EmployeeTempDistrictStore');
                                              employeeTempDistrictStore.removeAll();
                                              employeeTempDistrictStore.add(obj.root);

        									   var employeePermDistrictStore=Ext.getStore('EmployeePermDistrictStore');
                                              employeePermDistrictStore.removeAll();
                                              employeePermDistrictStore.add(obj.root);

        									   var nomineeDistrictStore=Ext.getStore('NomineeDistrictStore');
                                              nomineeDistrictStore.removeAll();
                                              nomineeDistrictStore.add(obj.root);

        									   var nomineeIssueDistrictStore=Ext.getStore('NomineeIssueDistrictStore');
                                              nomineeIssueDistrictStore.removeAll();
                                              nomineeIssueDistrictStore.add(obj.root);
                    }
                });
        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/Maintenance/OccupationHandler.ashx',
            params: {
                method:'GetOccupationLov',
                OccupationDesc:null
            },
            success: function(response){
                                          var obj = Ext.decode(response.responseText);
                                          if(obj.success === "true")
                                          {
                                              var employeeFatherOccupationStore=Ext.getStore('EmployeeFatherOccupationStore');
                                              employeeFatherOccupationStore.removeAll();
                                              employeeFatherOccupationStore.add(obj.root);

                                               var employeeMotherOccupationStore=Ext.getStore('EmployeeMotherOccupationStore');
                                              employeeMotherOccupationStore.removeAll();
                                              employeeMotherOccupationStore.add(obj.root);

                                               var employeeSpouseOccupationStore=Ext.getStore('EmployeeSpouseOccupationStore');
                                              employeeSpouseOccupationStore.removeAll();
                                              employeeSpouseOccupationStore.add(obj.root);


                                          }
                                          else
                                          {

                                              msg("FAILURE",obj.message);
                                          }
            }
        });

    },

    onFupEmpSignature1PathChange: function(filefield, value, eOpts) {
        var empId= Ext.ComponentQuery.query('#txtEmployeeId')[0].getValue();//Math.random().toString(36).substr(2, 9);


        var submissionNoValue='\\Uploads\\EmpSign1Img\\';    //ImagePathName
        var myFormPanel= Ext.ComponentQuery.query("#frmEmpSignature1Upload")[0];
        var folderpath='../uploads/EmpSign1Img/';

        myFormPanel.getForm().submit({
            url: '../Handlers/Common/PHOTOUploader.ashx',
            params:{submissionNo:submissionNoValue,employeeId:empId},
            waitMsg: 'Please wait',
            success: function(form,action) {

                var imgsrc=folderpath+action.result.msg;
                console.log("src1",imgsrc);

                //Ext.ComponentQuery.query("#txtEmpSignature1Path")[0].setValue(imgsrc);
                var res = imgsrc.split("/");

        var dirtyName=res[res.length-1];
        var res1= dirtyName.split(" ");
        var name=res1[res1.length-1];
        //console.log(name);
                Ext.ComponentQuery.query("#txtEmpSignature1Path")[0].setValue(name);

                Ext.ComponentQuery.query("#txtEmpSignature1Path")[0].imgsrc=imgsrc;

                Ext.ComponentQuery.query("#imgEmpSignature1")[0].setSrc("");
                Ext.ComponentQuery.query("#imgEmpSignature1")[0].setSrc(imgsrc);

                var picCutter=Ext.create('MyApp.view.PictureCutter');
                picCutter.submissionNo=submissionNoValue;
                picCutter.empId=empId;
                picCutter.imgName=action.result.msg;
                picCutter.imgFolderPath=folderpath;
                picCutter.imgPathControlId="#txtEmpSignature1Path";
                picCutter.imgControlId="#imgEmpSignature1";
                picCutter.show();
                $('.cropbox').attr('src',imgsrc);
                $('.preview').attr('src',imgsrc);
                Ext.ComponentQuery.query('#ImgToSend')[0].setValue(imgsrc);
        console.log("src2",imgsrc);
            },
            failure: function(form,action) {
            }
        });

        /*var submissionNoValue=Math.random().toString(36).substr(2, 9);

        var myFormPanel= Ext.ComponentQuery.query("#frmEmpSignature1Upload")[0];

        myFormPanel.getForm().submit({
            url: '../Handlers/Common/PHOTOUploader.ashx',
            params:{submissionNo:submissionNoValue},
            waitMsg: 'Please wait',
            success: function(form,action) {
                // console.log(action);
                // console.log(form.result);
                // console.log(action.result);
                        //Ext.getCmp('sespicid').setValue(action.result.msg);

                Ext.ComponentQuery.query("#txtEmpSignature1Path")[0].setValue(action.result.msg);
                Ext.ComponentQuery.query("#imgEmpSignature1")[0].setSrc('../uploads/'+submissionNoValue+"/"+action.result.msg);

                var picCutter=Ext.create('MyApp.view.PictureCutter');
                picCutter.submissionNo=submissionNoValue;

                picCutter.imgPathControlId="#txtEmpSignature1Path";
                picCutter.imgControlId="#imgEmpSignature1";
                picCutter.show();
                $('.cropbox').attr('src','../uploads/'+submissionNoValue+"/"+action.result.msg);
                $('.preview').attr('src','../uploads/'+submissionNoValue+"/"+action.result.msg);
                Ext.ComponentQuery.query('#ImgToSend')[0].setValue(action.result.msg);

            },
            failure: function(form,action) {
            }
        });
        */
    },

    onFupEmpSignature2PathChange: function(filefield, value, eOpts) {
        var empId= Ext.ComponentQuery.query('#txtEmployeeId')[0].getValue();//Math.random().toString(36).substr(2, 9);


        var submissionNoValue='\\Uploads\\EmpSign2Img\\';    //ImagePathName
        var myFormPanel= Ext.ComponentQuery.query("#frmEmpSignature2Upload")[0];
        var folderpath='../uploads/EmpSign2Img/';

        myFormPanel.getForm().submit({
            url: '../Handlers/Common/PHOTOUploader.ashx',
            params:{submissionNo:submissionNoValue,employeeId:empId},
            waitMsg: 'Please wait',
            success: function(form,action) {

                var imgsrc=folderpath+action.result.msg;
                console.log("src1",imgsrc);

                //Ext.ComponentQuery.query("#txtEmpSignature2Path")[0].setValue(imgsrc);
                var res = imgsrc.split("/");

        var dirtyName=res[res.length-1];
        var res1= dirtyName.split(" ");
        var name=res1[res1.length-1];
        //console.log(name);
                Ext.ComponentQuery.query("#txtEmpSignature2Path")[0].setValue(name);
                Ext.ComponentQuery.query("#txtEmpSignature2Path")[0].imgsrc=imgsrc;


                Ext.ComponentQuery.query("#imgEmpSignature2")[0].setSrc("");
                Ext.ComponentQuery.query("#imgEmpSignature2")[0].setSrc(imgsrc);

                var picCutter=Ext.create('MyApp.view.PictureCutter');
                picCutter.submissionNo=submissionNoValue;
                picCutter.empId=empId;
                picCutter.imgName=action.result.msg;
                picCutter.imgFolderPath=folderpath;
                picCutter.imgPathControlId="#txtEmpSignature2Path";
                picCutter.imgControlId="#imgEmpSignature2";
                picCutter.show();
                $('.cropbox').attr('src',imgsrc);
                $('.preview').attr('src',imgsrc);
                Ext.ComponentQuery.query('#ImgToSend')[0].setValue(imgsrc);
        console.log("src2",imgsrc);
            },
            failure: function(form,action) {
            }
        });

        /*var submissionNoValue=Math.random().toString(36).substr(2, 9);

        var myFormPanel= Ext.ComponentQuery.query("#frmEmpSignature2Upload")[0];

        myFormPanel.getForm().submit({
            url: '../Handlers/Common/PHOTOUploader.ashx',
            params:{submissionNo:submissionNoValue},
            waitMsg: 'Please wait',
            success: function(form,action) {
                // console.log(action);
                // console.log(form.result);
                // console.log(action.result);
                        //Ext.getCmp('sespicid').setValue(action.result.msg);

                Ext.ComponentQuery.query("#txtEmpSignature2Path")[0].setValue(action.result.msg);
                Ext.ComponentQuery.query("#imgEmpSignature2")[0].setSrc('../uploads/'+submissionNoValue+"/"+action.result.msg);

                var picCutter=Ext.create('MyApp.view.PictureCutter');
                picCutter.submissionNo=submissionNoValue;

                picCutter.imgPathControlId="#txtEmpSignature2Path";
                picCutter.imgControlId="#imgEmpSignature2";
                picCutter.show();
                $('.cropbox').attr('src','../uploads/'+submissionNoValue+"/"+action.result.msg);
                $('.preview').attr('src','../uploads/'+submissionNoValue+"/"+action.result.msg);
                Ext.ComponentQuery.query('#ImgToSend')[0].setValue(action.result.msg);

            },
            failure: function(form,action) {
            }
        });
        */
    },

    onFupNomineeImagePathChange: function(filefield, value, eOpts) {
        var empId= Ext.ComponentQuery.query('#txtEmployeeId')[0].getValue();//Math.random().toString(36).substr(2, 9);


        var submissionNoValue='\\Uploads\\EmpNomineeImg\\';    //ImagePathName
        var myFormPanel= Ext.ComponentQuery.query("#frmNomineeImageUpload")[0];
        var folderpath='../uploads/EmpNomineeImg/';

        myFormPanel.getForm().submit({
            url: '../Handlers/Common/PHOTOUploader.ashx',
            params:{submissionNo:submissionNoValue,employeeId:empId},
            waitMsg: 'Please wait',
            success: function(form,action) {

                var imgsrc=folderpath+action.result.msg;
                console.log("src1",imgsrc);

                //Ext.ComponentQuery.query("#txtNomineeImagePath")[0].setValue(imgsrc);
                var res = imgsrc.split("/");

        var dirtyName=res[res.length-1];
        var res1= dirtyName.split(" ");
        var name=res1[res1.length-1];
        //console.log(name);
                Ext.ComponentQuery.query("#txtNomineeImagePath")[0].setValue(name);
                Ext.ComponentQuery.query("#txtNomineeImagePath")[0].imgsrc=imgsrc;

                Ext.ComponentQuery.query("#imgNominee")[0].setSrc("");
                Ext.ComponentQuery.query("#imgNominee")[0].setSrc(imgsrc);

                var picCutter=Ext.create('MyApp.view.PictureCutter');
                picCutter.submissionNo=submissionNoValue;
                picCutter.empId=empId;
                picCutter.imgName=action.result.msg;
                picCutter.imgFolderPath=folderpath;
                picCutter.imgPathControlId="#txtNomineeImagePath";
                picCutter.imgControlId="#imgNominee";
                picCutter.show();
                $('.cropbox').attr('src',imgsrc);
                $('.preview').attr('src',imgsrc);
                Ext.ComponentQuery.query('#ImgToSend')[0].setValue(imgsrc);
        console.log("src2",imgsrc);
            },
            failure: function(form,action) {
            }
        });

        /*
        var submissionNoValue=Math.random().toString(36).substr(2, 9);

        var myFormPanel= Ext.ComponentQuery.query("#frmNomineeImageUpload")[0];

        myFormPanel.getForm().submit({
            url: '../Handlers/Common/PHOTOUploader.ashx',
            params:{submissionNo:submissionNoValue},
            waitMsg: 'Please wait',
            success: function(form,action) {
                // console.log(action);
                // console.log(form.result);
                // console.log(action.result);
                        //Ext.getCmp('sespicid').setValue(action.result.msg);

                Ext.ComponentQuery.query("#txtNomineeImagePath")[0].setValue(action.result.msg);
                Ext.ComponentQuery.query("#imgNominee")[0].setSrc('../uploads/'+submissionNoValue+"/"+action.result.msg);

                var picCutter=Ext.create('MyApp.view.PictureCutter');
                picCutter.submissionNo=submissionNoValue;

                picCutter.imgPathControlId="#txtNomineeImagePath";
                picCutter.imgControlId="#imgNominee";
                picCutter.show();
                $('.cropbox').attr('src','../uploads/'+submissionNoValue+"/"+action.result.msg);
                $('.preview').attr('src','../uploads/'+submissionNoValue+"/"+action.result.msg);
                Ext.ComponentQuery.query('#ImgToSend')[0].setValue(action.result.msg);

            },
            failure: function(form,action) {
            }
        });
        */

    },

    onFupNomineeSignature1PathChange: function(filefield, value, eOpts) {
        var empId= Ext.ComponentQuery.query('#txtEmployeeId')[0].getValue();//Math.random().toString(36).substr(2, 9);


        var submissionNoValue='\\Uploads\\EmpNomineeSign1Img\\';    //ImagePathName
        var myFormPanel= Ext.ComponentQuery.query("#frmNomineeSignature1Upload")[0];
        var folderpath='../uploads/EmpNomineeSign1Img/';

        myFormPanel.getForm().submit({
            url: '../Handlers/Common/PHOTOUploader.ashx',
            params:{submissionNo:submissionNoValue,employeeId:empId},
            waitMsg: 'Please wait',
            success: function(form,action) {

                var imgsrc=folderpath+action.result.msg;
                console.log("src1",imgsrc);

                //Ext.ComponentQuery.query("#txtNomineeSignature1Path")[0].setValue(imgsrc);
                var res = imgsrc.split("/");

        var dirtyName=res[res.length-1];
        var res1= dirtyName.split(" ");
        var name=res1[res1.length-1];
        //console.log(name);
                Ext.ComponentQuery.query("#txtNomineeSignature1Path")[0].setValue(name);
                Ext.ComponentQuery.query("#txtNomineeSignature1Path")[0].imgsrc=imgsrc;

                Ext.ComponentQuery.query("#imgNomineeSignature1")[0].setSrc("");
                Ext.ComponentQuery.query("#imgNomineeSignature1")[0].setSrc(imgsrc);

                var picCutter=Ext.create('MyApp.view.PictureCutter');
                picCutter.submissionNo=submissionNoValue;
                picCutter.empId=empId;
                picCutter.imgName=action.result.msg;
                picCutter.imgFolderPath=folderpath;
                picCutter.imgPathControlId="#txtNomineeSignature1Path";
                picCutter.imgControlId="#imgNomineeSignature1";
                picCutter.show();
                $('.cropbox').attr('src',imgsrc);
                $('.preview').attr('src',imgsrc);
                Ext.ComponentQuery.query('#ImgToSend')[0].setValue(imgsrc);
        console.log("src2",imgsrc);
            },
            failure: function(form,action) {
            }
        });

        /*
        var submissionNoValue=Math.random().toString(36).substr(2, 9);

        var myFormPanel= Ext.ComponentQuery.query("#frmNomineeSignature1Upload")[0];

        myFormPanel.getForm().submit({
            url: '../Handlers/Common/PHOTOUploader.ashx',
            params:{submissionNo:submissionNoValue},
            waitMsg: 'Please wait',
            success: function(form,action) {
                // console.log(action);
                // console.log(form.result);
                // console.log(action.result);
                        //Ext.getCmp('sespicid').setValue(action.result.msg);

                Ext.ComponentQuery.query("#txtNomineeSignature1Path")[0].setValue(action.result.msg);
                Ext.ComponentQuery.query("#imgNomineeSignature1")[0].setSrc('../uploads/'+submissionNoValue+"/"+action.result.msg);

                var picCutter=Ext.create('MyApp.view.PictureCutter');
                picCutter.submissionNo=submissionNoValue;

                picCutter.imgPathControlId="#txtNomineeSignature1Path";
                picCutter.imgControlId="#imgNomineeSignature1";
                picCutter.show();
                $('.cropbox').attr('src','../uploads/'+submissionNoValue+"/"+action.result.msg);
                $('.preview').attr('src','../uploads/'+submissionNoValue+"/"+action.result.msg);
                Ext.ComponentQuery.query('#ImgToSend')[0].setValue(action.result.msg);

            },
            failure: function(form,action) {
            }
        });
        */
    },

    onFupNomineeSignature2PathChange: function(filefield, value, eOpts) {
        var empId= Ext.ComponentQuery.query('#txtEmployeeId')[0].getValue();//Math.random().toString(36).substr(2, 9);


        var submissionNoValue='\\Uploads\\EmpNomineeSign2Img\\';    //ImagePathName
        var myFormPanel= Ext.ComponentQuery.query("#frmNomineeSignature2Upload")[0];
        var folderpath='../uploads/EmpNomineeSign2Img/';

        myFormPanel.getForm().submit({
            url: '../Handlers/Common/PHOTOUploader.ashx',
            params:{submissionNo:submissionNoValue,employeeId:empId},
            waitMsg: 'Please wait',
            success: function(form,action) {

                var imgsrc=folderpath+action.result.msg;
                console.log("src1",imgsrc);

                //Ext.ComponentQuery.query("#txtNomineeSignature2Path")[0].setValue(imgsrc);
                   var res = imgsrc.split("/");

        var dirtyName=res[res.length-1];
        var res1= dirtyName.split(" ");
        var name=res1[res1.length-1];
        //console.log(name);
                Ext.ComponentQuery.query("#txtNomineeSignature2Path")[0].setValue(name);
                Ext.ComponentQuery.query("#txtNomineeSignature2Path")[0].imgsrc=imgsrc;

                Ext.ComponentQuery.query("#imgNomineeSignature2")[0].setSrc("");
                Ext.ComponentQuery.query("#imgNomineeSignature2")[0].setSrc(imgsrc);

                var picCutter=Ext.create('MyApp.view.PictureCutter');
                picCutter.submissionNo=submissionNoValue;
                picCutter.empId=empId;
                picCutter.imgName=action.result.msg;
                picCutter.imgFolderPath=folderpath;
                picCutter.imgPathControlId="#txtNomineeSignature2Path";
                picCutter.imgControlId="#imgNomineeSignature2";
                picCutter.show();
                $('.cropbox').attr('src',imgsrc);
                $('.preview').attr('src',imgsrc);
                Ext.ComponentQuery.query('#ImgToSend')[0].setValue(imgsrc);
        console.log("src2",imgsrc);
            },
            failure: function(form,action) {
            }
        });
        /*
        var submissionNoValue=Math.random().toString(36).substr(2, 9);

        var myFormPanel= Ext.ComponentQuery.query("#frmNomineeSignature2Upload")[0];

        myFormPanel.getForm().submit({
            url: '../Handlers/Common/PHOTOUploader.ashx',
            params:{submissionNo:submissionNoValue},
            waitMsg: 'Please wait',
            success: function(form,action) {
                // console.log(action);
                // console.log(form.result);
                // console.log(action.result);
                        //Ext.getCmp('sespicid').setValue(action.result.msg);

                Ext.ComponentQuery.query("#txtNomineeSignature2Path")[0].setValue(action.result.msg);
                Ext.ComponentQuery.query("#imgNomineeSignature2")[0].setSrc('../uploads/'+submissionNoValue+"/"+action.result.msg);

                var picCutter=Ext.create('MyApp.view.PictureCutter');
                picCutter.submissionNo=submissionNoValue;

                picCutter.imgPathControlId="#txtNomineeSignature2Path";
                picCutter.imgControlId="#imgNomineeSignature2";
                picCutter.show();
                $('.cropbox').attr('src','../uploads/'+submissionNoValue+"/"+action.result.msg);
                $('.preview').attr('src','../uploads/'+submissionNoValue+"/"+action.result.msg);
                Ext.ComponentQuery.query('#ImgToSend')[0].setValue(action.result.msg);

            },
            failure: function(form,action) {
            }
        });
        */
    },

    onBtnInsertClick: function(button, e, eOpts) {
         // emp save works done
        var p_EmpId = Ext.ComponentQuery.query('#txtEmployeeId')[0];
        var p_EmpName=Ext.ComponentQuery.query('#txtEmployeeName')[0];

        var p_Dob =Ext.ComponentQuery.query('#txtDobAD')[0];
        //var p_Dob =Ext.ComponentQuery.query('#txtDobBS')[0];

        var p_Gender=Ext.ComponentQuery.query('#ddlGender')[0];
        var p_Married =Ext.ComponentQuery.query('#ddlMaritalStatus')[0];
        var p_CitizenshipNo =Ext.ComponentQuery.query('#txtIdentityNo')[0];

        var p_EmployeeType =Ext.ComponentQuery.query('#ddlEmployeeType')[0];
        var p_PostCode =Ext.ComponentQuery.query('#ddlPost')[0];

        //var p_JoinDate =Ext.ComponentQuery.query('#txtJoinDateBS')[0];
        var p_JoinDate =Ext.ComponentQuery.query('#txtJoinDateAD')[0];


        var p_OfficeCode =Ext.ComponentQuery.query('#ddlOfficeCode')[0];
        var p_DeptCode =Ext.ComponentQuery.query('#ddlDepartment')[0];
        var p_ActiveFlag =Ext.ComponentQuery.query('#chkActive')[0];

        var p_TemporaryAddress =Ext.ComponentQuery.query('#txtTempAddress')[0];
        var p_TemporaryDistrictCode =Ext.ComponentQuery.query('#ddlTempDistrict')[0];
        var p_TemporaryContactPhone =Ext.ComponentQuery.query('#txtTempPhone')[0];
        var p_PermanentAddress = Ext.ComponentQuery.query('#txtPermAddress')[0];
        var p_PermanentDistrictCode = Ext.ComponentQuery.query('#ddlPermDistrict')[0];
        var p_PermanentContactPhone =Ext.ComponentQuery.query('#txtPermPhone')[0];
        var p_EmailId =Ext.ComponentQuery.query('#txtEmailAddress')[0];


        var p_ReligionCode=Ext.ComponentQuery.query('#txtEmailAddress')[0]; //??
        var p_CountryCode =Ext.ComponentQuery.query('#ddlNationality')[0];
        var p_SpouseName = Ext.ComponentQuery.query('#txtSpousesName')[0];
        var p_SpouseOccupation = Ext.ComponentQuery.query('#ddlSpousesOccupation')[0];
        var p_Identification = Ext.ComponentQuery.query('#txtIdentityNo')[0];

        var p_FatherName =Ext.ComponentQuery.query('#txtFathersName')[0];
        var p_MotherName =Ext.ComponentQuery.query('#txtMothersName')[0];
        var p_FatherOccupation =Ext.ComponentQuery.query('#ddlFathersOccupation')[0];
        var p_MotherOccupation =Ext.ComponentQuery.query('#ddlMothersOccupation')[0];
        var p_GrandfatherName =Ext.ComponentQuery.query('#txtGrandFathersName')[0];
        var p_NoOfSon =Ext.ComponentQuery.query('#txtNoOfSon')[0];
        var p_NoOfDaughter =Ext.ComponentQuery.query('#txtNoOfDaughter')[0];

        var p_NomineeName =Ext.ComponentQuery.query('#txtNomineeName')[0];
        var p_NomineeAddress =Ext.ComponentQuery.query('#txtNomineeAddress')[0];
        var p_NomineeDistrict =Ext.ComponentQuery.query('#ddlNomineeDistrict')[0];
        var p_Relation =Ext.ComponentQuery.query('#txtNomineeRelation')[0];

        var p_LevelSno =Ext.ComponentQuery.query('#txtLevelSno')[0];
        var p_Grade =Ext.ComponentQuery.query('#txtGrade')[0];
        var p_GradeValue =Ext.ComponentQuery.query('#txtGradeValue')[0];
        var p_FatherInlawName =Ext.ComponentQuery.query('#txtFatherInLawsName')[0];
        var p_PfAccountNo=Ext.ComponentQuery.query('#txtFatherInLawsName')[0];//??
        var p_InvestmentFundId=Ext.ComponentQuery.query('#txtFatherInLawsName')[0];//??
        var p_CurrentOfficeJoinDate =Ext.ComponentQuery.query('#txtCurrentOfficeJoinDateAD')[0];
        //var p_CurrentOfficeJoinDate =Ext.ComponentQuery.query('#txtCurrentOfficeJoinDateBS')[0];
        var p_CitIdNo =Ext.ComponentQuery.query('#txtCitFund')[0];
        var p_IdentityCardNo =Ext.ComponentQuery.query('#txtIdentityNo')[0];
        var p_DesignationCode =Ext.ComponentQuery.query('#ddlDesignation')[0];
        var p_ProvisionDate =Ext.ComponentQuery.query('#txtProbationDateAD')[0];
        //var p_ProvisionDate =Ext.ComponentQuery.query('#txtProbationDateBS')[0];
        //Ext.ComponentQuery.query('#txtProbationDateAD')[0];
        var p_PermanentDate =Ext.ComponentQuery.query('#txtPermanentDateAD')[0];
        //var p_PermanentDate =Ext.ComponentQuery.query('#txtPermanentDateBS')[0];


        //var p_QuarterYN= ??
        //var p_PfDate==??
        var p_InchargeYN = Ext.ComponentQuery.query('#chkBranchIncharge')[0];


        var p_ImagePath =Ext.ComponentQuery.query('#txtEmpImgPath')[0];
        var p_Signature1 =Ext.ComponentQuery.query('#txtEmpSignature1Path')[0];
        var p_Signature2 =Ext.ComponentQuery.query('#txtEmpSignature2Path')[0];
        var p_NomineeImage =Ext.ComponentQuery.query('#txtNomineeImagePath')[0];
        var p_NomineeSignature1 =Ext.ComponentQuery.query('#txtNomineeSignature1Path')[0];
        var p_NomineeSignature2 =Ext.ComponentQuery.query('#txtNomineeSignature2Path')[0];


        //var p_EmployeeCode=??
        // var p_IdDocumentNo=??

        var p_IdIssueDistrictCode =Ext.ComponentQuery.query('#ddlIssueDistrict')[0];
        var p_IdDocumentType =Ext.ComponentQuery.query('#ddlIdentifcationType')[0];

        var p_NomineeIdIssue_Dist_Code = Ext.ComponentQuery.query('#ddlNomineeIssueDistrict')[0];
        var p_NomineeIdDocument_No =Ext.ComponentQuery.query('#txtNomineeIdentityNo')[0];
        var p_NomineeIdDocument_Type =Ext.ComponentQuery.query('#ddlNomineeIdentityType')[0];
        var p_CasteCode =  Ext.ComponentQuery.query('#ddlCasteCode')[0];
        var p_SalaryAccountNo =Ext.ComponentQuery.query('#txtSalaryAccountNo')[0];
        var p_HlpreAccountHead_Code =Ext.ComponentQuery.query('#txtHlpreAccountHeadCode')[0];
        var p_SalaryAdvanceAccount_Head =Ext.ComponentQuery.query('#txtSalaryAccountHeadCode')[0];

        var p_ClientNo= Ext.ComponentQuery.query('#txtMemberCode')[0];
        var p_ProvidentFund=Ext.ComponentQuery.query('#txtCitFund')[0];
        var p_HousingLoanAmt =Ext.ComponentQuery.query('#txtHousingLoadAmount')[0];
        //------------------------------

        var objemployee ={
        EmpId : p_EmpId.getValue(),
        EmpName : p_EmpName.getValue(),
        Dob : '09-APR-2015',
        Gender : p_Gender.getValue(),
        Married : p_Married.getValue(),
        CitizenshipNo : p_CitizenshipNo.getValue(),
        EmployeeType : p_EmployeeType.getValue(),
        PostCode : p_PostCode.getValue(),
        JoinDate : '09-APR-2015',
        OfficeCode : p_OfficeCode.getValue(),
        DeptCode : p_DeptCode.getValue(),
        ActiveFlag : p_ActiveFlag.getValue()===true?"Y":"N",


        TemporaryAddress : p_TemporaryAddress.getValue(),
        TemporaryDistrictCode : p_TemporaryDistrictCode.getValue(),
        TemporaryContactPhone : p_TemporaryContactPhone.getValue(),
        PermanentAddress : p_PermanentAddress.getValue(),
        PermanentDistrictCode : p_PermanentDistrictCode.getValue(),
        PermanentContactPhone : p_PermanentContactPhone.getValue(),
        EmailId : p_EmailId.getValue(),

        ReligionCode : p_ReligionCode.getValue(),
        CountryCode : p_CountryCode.getValue(),
        SpouseName : p_SpouseName.getValue(),
        SpouseOccupation : p_SpouseOccupation.getValue(),
        Identification : p_Identification.getValue(),
        FatherName : p_FatherName.getValue(),
        MotherName : p_MotherName.getValue(),
        FatherOccupation : p_FatherOccupation.getValue(),
        MotherOccupation : p_MotherOccupation.getValue(),
        GrandfatherName : p_GrandfatherName.getValue(),
        NoOfSon : p_NoOfSon.getValue(),
        NoOfDaughter : p_NoOfDaughter.getValue(),
        NomineeName : p_NomineeName.getValue(),
        NomineeAddress : p_NomineeAddress.getValue(),
        NomineeDistrict : p_NomineeDistrict.getValue(),


        Relation : p_Relation.getValue(),
        LevelSno : p_LevelSno.getValue(),
        Grade : p_Grade.getValue(),
        GradeValue : p_GradeValue.getValue(),
        FatherInlawName : p_FatherInlawName.getValue(),
        PfAccountNo : p_PfAccountNo.getValue(),
        InvestmentFundId : p_InvestmentFundId.getValue(),
        CurrentOfficeJoinDate : '09-APR-2015',
        CitIdNo : p_CitIdNo.getValue(),
        IdentityCardNo : p_IdentityCardNo.getValue(),
        DesignationCode : p_DesignationCode.getValue(),
        ProvisionDate : '09-APR-2015',
        PermanentDate : '09-APR-2015',
        QuarterYN : 'Y',
        PfDate : '09-APR-2015',
        InchargeYN : p_InchargeYN.getValue(),


        ImagePath : p_ImagePath.imgsrc,
        Signature1 : p_Signature1.imgsrc,
        Signature2 : p_Signature2.imgsrc,
        NomineeImage : p_NomineeImage.imgsrc,
        NomineeSignature1 : p_NomineeSignature1.imgsrc,
        NomineeSignature2 : p_NomineeSignature2.imgsrc,


        EmployeeCode : 1,
        IdDocumentNo : 1,

        IdIssueDistrictCode : p_IdIssueDistrictCode.getValue(),
        IdDocumentType : p_IdDocumentType.getValue(),
        NomineeIdIssueDistrictCode : p_NomineeIdIssue_Dist_Code.getValue(),
        NomineeIdDocumentNo : p_NomineeIdDocument_No.getValue(),
        NomineeIdDocumentType : p_NomineeIdDocument_Type.getValue(),
        CasteCode : p_CasteCode.getValue(),
        SalaryAccountNo : p_SalaryAccountNo.getValue(),
        HlpreAccountHeadCode : p_HlpreAccountHead_Code.getValue(),
        SalaryAdvanceAccount_Head : p_SalaryAdvanceAccount_Head.getValue(),
        ClientNo : p_ClientNo.getValue(),
        ProvidentFund : p_ProvidentFund.getValue(),
        HousingLoanAmt : p_HousingLoanAmt.getValue(),
        CreatedBy : getCurrentUser(),
        Action  :  "I"
        };

        /*

        var objemployee ={
        EmpId : p_EmpId.getValue(),
        EmpName : p_EmpName.getValue(),
        Dob : p_Dob.getValue(),
        Gender : p_Gender.getValue(),
        Married : p_Married.getValue(),
        CitizenshipNo : p_CitizenshipNo.getValue(),
        EmployeeType : p_EmployeeType.getValue(),
        PostCode : p_PostCode.getValue(),
        JoinDate : p_JoinDate.getValue(),
        OfficeCode : p_OfficeCode.getValue(),
        DeptCode : p_DeptCode.getValue(),
        ActiveFlag : p_ActiveFlag.getValue(),


        TemporaryAddress : p_TemporaryAddress.getValue(),
        TemporaryDistrictCode : p_TemporaryDistrictCode.getValue(),
        TemporaryContactPhone : p_TemporaryContactPhone.getValue(),
        PermanentAddress : p_PermanentAddress.getValue(),
        PermanentDistrictCode : p_PermanentDistrictCode.getValue(),
        PermanentContactPhone : p_PermanentContactPhone.getValue(),
        EmailId : p_EmailId.getValue(),

        ReligionCode : p_ReligionCode.getValue(),
        CountryCode : p_CountryCode.getValue(),
        SpouseName : p_SpouseName.getValue(),
        SpouseOccupation : p_SpouseOccupation.getValue(),
        Identification : p_Identification.getValue(),
        FatherName : p_FatherName.getValue(),
        MotherName : p_MotherName.getValue(),
        FatherOccupation : p_FatherOccupation.getValue(),
        MotherOccupation : p_MotherOccupation.getValue(),
        GrandfatherName : p_GrandfatherName.getValue(),
        NoOfSon : p_NoOfSon.getValue(),
        NoOfDaughter : p_NoOfDaughter.getValue(),
        NomineeName : p_NomineeName.getValue(),
        NomineeAddress : p_NomineeAddress.getValue(),
        NomineeDistrict : p_NomineeDistrict.getValue(),


        Relation : p_Relation.getValue(),
        LevelSno : p_LevelSno.getValue(),
        Grade : p_Grade.getValue(),
        GradeValue : p_GradeValue.getValue(),
        FatherInlawName : p_FatherInlawName.getValue(),
        PfAccountNo : p_PfAccountNo.getValue(),
        InvestmentFundId : p_InvestmentFundId.getValue(),
        CurrentOfficeJoin_Date : p_CurrentOfficeJoin_Date.getValue(),
        CitIdNo : p_CitIdNo.getValue(),
        IdentityCardNo : p_IdentityCardNo.getValue(),
        DesignationCode : p_DesignationCode.getValue(),
        ProvisionDate : p_ProvisionDate.getValue(),
        PermanentDate : p_PermanentDate.getValue(),
        QuarterYN : p_QuarterYN.getValue(),
        PfDate : p_PfDate.getValue(),
        InchargeYN : p_InchargeYN.getValue(),


        ImagePath : p_ImagePath.imgsrc,
        Signature1 : p_Signature1.imgsrc,
        Signature2 : p_Signature2.imgsrc,
        NomineeImage : p_NomineeImage.imgsrc,
        NomineeSignature1 : p_NomineeSignature1.imgsrc,
        NomineeSignature2 : p_NomineeSignature2.imgsrc,


        EmployeeCode : p_EmployeeCode.getValue(),
        IdDocumentNo : p_IdDocumentNo.getValue(),

        IdIssueDistrict_Code : p_IdIssueDistrict_Code.getValue(),
        IdDocumentType : p_IdDocumentType.getValue(),
        NomineeIdIssue_Dist_Code : p_NomineeIdIssue_Dist_Code.getValue(),
        NomineeIdDocument_No : p_NomineeIdDocument_No.getValue(),
        NomineeIdDocument_Type : p_NomineeIdDocument_Type.getValue(),
        CasteCode : p_CasteCode.getValue(),
        SalaryAccountNo : p_SalaryAccountNo.getValue(),
        HlpreAccountHead_Code : p_HlpreAccountHead_Code.getValue(),
        SalaryAdvanceAccount_Head : p_SalaryAdvanceAccount_Head.getValue(),
        ClientNo : p_ClientNo.getValue(),
        ProvidentFund : p_ProvidentFund.getValue(),
        HousingLoanAmt : p_HousingLoanAmt.getValue(),
        CreatedBy : getCurrentUser(),
        Action  :  "I"
        };
        */
        var waitSave = watiMsg('Please wait ...');
        Ext.Ajax.request({
             url:'../Handlers/Supervisor/EmployeeHandler.ashx',
             params:{method:'Save',employee:JSON.stringify(objemployee)},
             success: function ( result, request ) {
                    waitSave.hide();
                    var obj = Ext.decode(result.responseText);
                    if(obj.success === 'true'){
                        msg('SUCCESS',obj.message,function(){
                        //var grd = Ext.ComponentQuery.query('#grdAaa')[0];
                        //var record = grd.getSelectionModel().getSelection()[0];
                        //record.set('Action','U');
                        });
                    }
                    else{msg('FAILURE',obj.message);


                    }
             },
             failure: function(form, action) {
        waitSave.hide();
        var out=Ext.decode(response.responseText);
        msg('FAILURE',out.message);     }
        });

        /*
        var p_EmpId = Ext.ComponentQuery.query('#txtEmployeeId')[0];
        var p_EmpName=Ext.ComponentQuery.query('#txtEmployeeName')[0];
        var p_Dob =Ext.ComponentQuery.query('#txtEmployeeId')[0];
        //Ext.ComponentQuery.query('#txtDobAD')[0];
        //Ext.ComponentQuery.query('#txtDisplayNo')[0];
        var p_Married =Ext.ComponentQuery.query('#ddlMaritalStatus')[0];
        var p_JoinDate =Ext.ComponentQuery.query('#txtJoinDateBS')[0];
        //Ext.ComponentQuery.query('#txtJoinDateAD')[0];
        var p_ActiveFlag =Ext.ComponentQuery.query('#chkActive')[0];
        var p_Gender=Ext.ComponentQuery.query('#ddlGender')[0];
        var p_JoinDate =Ext.ComponentQuery.query('#txtCurrentOfficeJoinDateBS')[0];
        //Ext.ComponentQuery.query('#txtCurrentOfficeJoinDateAD')[0];
        var p_CasteCode =  Ext.ComponentQuery.query('#ddlCasteCode')[0];
        var p_CountryCode =Ext.ComponentQuery.query('#ddlNationality')[0];
        var p_OfficeCode =Ext.ComponentQuery.query('#ddlOfficeCode')[0];
        var p_EmployeeType =Ext.ComponentQuery.query('#ddlEmployeeType')[0];

        var p_PostCode =Ext.ComponentQuery.query('#ddlPost')[0];
        var p_DesignationCode =Ext.ComponentQuery.query('#ddlDesignation')[0];
        var p_ImagePath =Ext.ComponentQuery.query('#txtEmpImgPath')[0];
        var p_DeptCode =Ext.ComponentQuery.query('#ddlDepartment')[0];
        var p_Grade =Ext.ComponentQuery.query('#txtGrade')[0];
        var p_GradeValue =Ext.ComponentQuery.query('#txtGradeValue')[0];
        var p_LevelSno =Ext.ComponentQuery.query('#txtLevelSno')[0];
        //Ext.ComponentQuery.query('#txtOfficeIdNo')[0];
        var p_FatherInlawName =Ext.ComponentQuery.query('#txtFatherInLawsName')[0];
        var p_ProvisionDate =Ext.ComponentQuery.query('#txtProbationDateBS')[0];
        //Ext.ComponentQuery.query('#txtProbationDateAD')[0];
        var p_GrandfatherName =Ext.ComponentQuery.query('#txtGrandFathersName')[0];
        var p_PermanentDate =Ext.ComponentQuery.query('#txtPermanentDateBS')[0];
        //Ext.ComponentQuery.query('#txtPermanentDateAD')[0];
        var p_NoOfSon =Ext.ComponentQuery.query('#txtNoOfSon')[0];
        var p_NoOfDaughter =Ext.ComponentQuery.query('#txtNoOfDaughter')[0];
        var p_FatherName =Ext.ComponentQuery.query('#txtFathersName')[0];
        var p_FatherOccupation =Ext.ComponentQuery.query('#txtFathersOccupation')[0];
        var p_EmailId =Ext.ComponentQuery.query('#txtEmailAddress')[0];
        var p_MotherName =Ext.ComponentQuery.query('#txtMothersName')[0];
        var p_MotherOccupation =Ext.ComponentQuery.query('#txtMothersOccupation')[0];
        var p_InchargeYN = Ext.ComponentQuery.query('#chkBranchIncharge')[0];
        var p_Identification =Ext.ComponentQuery.query('#txtIdentification')[0];
        var p_SpouseName = Ext.ComponentQuery.query('#txtSpousesName')[0];
        var p_SpouseOccupation = Ext.ComponentQuery.query('#txtSpousesOccupation')[0];
        var p_IdDocumentType =Ext.ComponentQuery.query('#ddlIdentifcationType')[0];
        var p_IdentityCardNo =Ext.ComponentQuery.query('#txtIdentityNo')[0];
        var p_IdIssueDistrict_Code =Ext.ComponentQuery.query('#ddlIssueDistrict')[0];
        var p_TemporaryAddress =Ext.ComponentQuery.query('#txtTempAddress')[0];
        var p_TemporaryDistrictCode =Ext.ComponentQuery.query('#ddlTempDistrict')[0];
        var p_TemporaryContactPhone =Ext.ComponentQuery.query('#txtTempPhone')[0];
        var p_PermanentAddress = Ext.ComponentQuery.query('#txtPermAddress')[0];
        var p_PermanentDistrictCode = Ext.ComponentQuery.query('#ddlPermDistrict')[0];
        var p_PermanentContactPhone =Ext.ComponentQuery.query('#txtPermPhone')[0];
        var p_Signature1 =Ext.ComponentQuery.query('#txtEmpSignature1Path')[0];
        //Ext.ComponentQuery.query('#imgEmpSignature1')[0];
        var p_Signature2 =Ext.ComponentQuery.query('#txtEmpSignature2Path')[0];
        //Ext.ComponentQuery.query('#imgEmpSignature2')[0];
        var p_NomineeName =Ext.ComponentQuery.query('#txtNomineeName')[0];
        var p_Relation =Ext.ComponentQuery.query('#txtNomineeRelation')[0];
        var p_NomineeAddress =Ext.ComponentQuery.query('#txtNomineeAddress')[0];
        var p_NomineeDistrict =Ext.ComponentQuery.query('#ddlNomineeDistrict')[0];
        var p_NomineeImage =Ext.ComponentQuery.query('#txtNomineeImagePath')[0];
        //Ext.ComponentQuery.query('#imgNominee')[0];
        var p_NomineeIdIssue_Dist_Code = Ext.ComponentQuery.query('#ddlNomineeIssueDistrict')[0];
        var p_NomineeIdDocument_Type =Ext.ComponentQuery.query('#ddlNomineeIdentityType')[0];
        var p_NomineeIdDocument_No =Ext.ComponentQuery.query('#txtNomineeIdentityNo')[0];
        //Ext.ComponentQuery.query('#imgNomineeSignature1')[0];
        var p_NomineeSignature1 =Ext.ComponentQuery.query('#txtNomineeSignature1Path')[0];
        //Ext.ComponentQuery.query('#imgNomineeSignature2')[0];
        var p_NomineeSignature2 =Ext.ComponentQuery.query('#txtNomineeSignature2Path')[0];
        var p_SalaryAccountNo =Ext.ComponentQuery.query('#txtSalaryAccountNo')[0];
        //Ext.ComponentQuery.query('#txtMemberName')[0];
        var p_HlpreAccountHead_Code =Ext.ComponentQuery.query('#txtHlpreAccountHeadCode')[0];
        //Ext.ComponentQuery.query('#txtHlpreAccountHeadDesc')[0];
        var p_SalaryAdvanceAccount_Head =Ext.ComponentQuery.query('#txtSalaryAccountHeadCode')[0];
        //Ext.ComponentQuery.query('#txtSalaryAccountHeadDesc')[0];
        //Ext.ComponentQuery.query('#txtMemberCode')[0];
        //Ext.ComponentQuery.query('#txtMemberCode')[0];
        var p_CitIdNo =Ext.ComponentQuery.query('#txtCitFund')[0];
        var p_HousingLoanAmt =Ext.ComponentQuery.query('#txtHousingLoadAmount')[0];

        var objemployee ={
                        EmpId : p_EmpId.getValue(),
        EmpName : p_EmpName.getValue(),
        Dob : p_Dob.getValue(),
        Gender : p_Gender.getValue(),
        Married : p_Married.getValue(),
        CitizenshipNo : p_CitizenshipNo.getValue(),
        EmployeeType : p_EmployeeType.getValue(),
        PostCode : p_PostCode.getValue(),
        JoinDate : p_JoinDate.getValue(),
        OfficeCode : p_OfficeCode.getValue(),
        DeptCode : p_DeptCode.getValue(),
        ActiveFlag : p_ActiveFlag.getValue(),


        TemporaryAddress : p_TemporaryAddress.getValue(),
        TemporaryDistrictCode : p_TemporaryDistrictCode.getValue(),
        TemporaryContactPhone : p_TemporaryContactPhone.getValue(),
        PermanentAddress : p_PermanentAddress.getValue(),
        PermanentDistrictCode : p_PermanentDistrictCode.getValue(),
        PermanentContactPhone : p_PermanentContactPhone.getValue(),
        EmailId : p_EmailId.getValue(),

        ReligionCode : p_ReligionCode.getValue(),
        CountryCode : p_CountryCode.getValue(),
        SpouseName : p_SpouseName.getValue(),
        SpouseOccupation : p_SpouseOccupation.getValue(),
        Identification : p_Identification.getValue(),
        FatherName : p_FatherName.getValue(),
        MotherName : p_MotherName.getValue(),
        FatherOccupation : p_FatherOccupation.getValue(),
        MotherOccupation : p_MotherOccupation.getValue(),
        GrandfatherName : p_GrandfatherName.getValue(),
        NoOfSon : p_NoOfSon.getValue(),
        NoOfDaughter : p_NoOfDaughter.getValue(),
        NomineeName : p_NomineeName.getValue(),
        NomineeAddress : p_NomineeAddress.getValue(),
        NomineeDistrict : p_NomineeDistrict.getValue(),
        Relation : p_Relation.getValue(),
        LevelSno : p_LevelSno.getValue(),
        Grade : p_Grade.getValue(),
        GradeValue : p_GradeValue.getValue(),
        FatherInlawName : p_FatherInlawName.getValue(),
        PfAccountNo : p_PfAccountNo.getValue(),
        InvestmentFundId : p_InvestmentFundId.getValue(),
        CurrentOfficeJoin_Date : p_CurrentOfficeJoin_Date.getValue(),
        CitIdNo : p_CitIdNo.getValue(),
        IdentityCardNo : p_IdentityCardNo.getValue(),
        DesignationCode : p_DesignationCode.getValue(),
        ProvisionDate : p_ProvisionDate.getValue(),
        PermanentDate : p_PermanentDate.getValue(),
        QuarterYN : p_QuarterYN.getValue(),
        PfDate : p_PfDate.getValue(),
        InchargeYN : p_InchargeYN.getValue(),

        ImagePath : p_ImagePath.imgsrc,
        Signature1 : p_Signature1.imgsrc,
        Signature2 : p_Signature2.imgsrc,
        NomineeImage : p_NomineeImage.imgsrc,
        NomineeSignature1 : p_NomineeSignature1.imgsrc,
        NomineeSignature2 : p_NomineeSignature2.imgsrc,

        EmployeeCode : p_EmployeeCode.getValue(),
        IdDocumentNo : p_IdDocumentNo.getValue(),
        IdIssueDistrict_Code : p_IdIssueDistrict_Code.getValue(),
        IdDocumentType : p_IdDocumentType.getValue(),
        NomineeIdIssue_Dist_Code : p_NomineeIdIssue_Dist_Code.getValue(),
        NomineeIdDocument_No : p_NomineeIdDocument_No.getValue(),
        NomineeIdDocument_Type : p_NomineeIdDocument_Type.getValue(),
        CasteCode : p_CasteCode.getValue(),
        SalaryAccountNo : p_SalaryAccountNo.getValue(),
        HlpreAccountHead_Code : p_HlpreAccountHead_Code.getValue(),
        SalaryAdvanceAccount_Head : p_SalaryAdvanceAccount_Head.getValue(),
        ClientNo : p_ClientNo.getValue(),
        ProvidentFund : p_ProvidentFund.getValue(),
        HousingLoanAmt : p_HousingLoanAmt.getValue(),
        CreatedBy : p_User1.getValue(),
        Action  :  "I",
        ImagePathName : p_ImagePath.getValue(),
        Signature1Name : p_Signature1.getValue(),
        Signature2Name : p_Signature2.getValue(),
        NomineeImageName : p_NomineeImage.getValue(),
        NomineeSignature1Name : p_NomineeSignature1.getValue(),
        NomineeSignature2Name : p_NomineeSignature2.getValue()
        };

        console.log("emp",objemployee);
        var waitSave = watiMsg('Please wait ...');
        Ext.Ajax.request({
             url:'../Handlers/Supervisor/EmployeeHandler.ashx',
             params:{method:'Save',employee:JSON.stringify(objemployee)},
             success: function ( result, request ) {
                    waitSave.hide();
                    var obj = Ext.decode(result.responseText);
                    if(obj.success === 'true'){
                        msg('SUCCESS',out.message,function(){
                        //var grd = Ext.ComponentQuery.query('#grdAaa')[0];
                        //var record = grd.getSelectionModel().getSelection()[0];
                        //record.set('Action','U');
                        });
                    }
                    else{msg('FAILURE',out.message);


                    }
             },
             failure: function(form, action) {
                    waitSave.hide();
                    var out=Ext.decode(response.responseText);
                    msg('FAILURE',out.message);
             }
        });

        */

    },

    onBtnUpdateClick: function(button, e, eOpts) {
         // emp save works done
        var p_EmpId = Ext.ComponentQuery.query('#txtEmployeeId')[0];
        var p_EmpName=Ext.ComponentQuery.query('#txtEmployeeName')[0];

        var p_Dob =Ext.ComponentQuery.query('#txtDobAD')[0];
        //var p_Dob =Ext.ComponentQuery.query('#txtDobBS')[0];

        var p_Gender=Ext.ComponentQuery.query('#ddlGender')[0];
        var p_Married =Ext.ComponentQuery.query('#ddlMaritalStatus')[0];
        var p_CitizenshipNo =Ext.ComponentQuery.query('#txtIdentityNo')[0];

        var p_EmployeeType =Ext.ComponentQuery.query('#ddlEmployeeType')[0];
        var p_PostCode =Ext.ComponentQuery.query('#ddlPost')[0];

        //var p_JoinDate =Ext.ComponentQuery.query('#txtJoinDateBS')[0];
        var p_JoinDate =Ext.ComponentQuery.query('#txtJoinDateAD')[0];


        var p_OfficeCode =Ext.ComponentQuery.query('#ddlOfficeCode')[0];
        var p_DeptCode =Ext.ComponentQuery.query('#ddlDepartment')[0];
        var p_ActiveFlag =Ext.ComponentQuery.query('#chkActive')[0];

        var p_TemporaryAddress =Ext.ComponentQuery.query('#txtTempAddress')[0];
        var p_TemporaryDistrictCode =Ext.ComponentQuery.query('#ddlTempDistrict')[0];
        var p_TemporaryContactPhone =Ext.ComponentQuery.query('#txtTempPhone')[0];
        var p_PermanentAddress = Ext.ComponentQuery.query('#txtPermAddress')[0];
        var p_PermanentDistrictCode = Ext.ComponentQuery.query('#ddlPermDistrict')[0];
        var p_PermanentContactPhone =Ext.ComponentQuery.query('#txtPermPhone')[0];
        var p_EmailId =Ext.ComponentQuery.query('#txtEmailAddress')[0];


        var p_ReligionCode=Ext.ComponentQuery.query('#txtEmailAddress')[0]; //??
        var p_CountryCode =Ext.ComponentQuery.query('#ddlNationality')[0];
        var p_SpouseName = Ext.ComponentQuery.query('#txtSpousesName')[0];
        var p_SpouseOccupation = Ext.ComponentQuery.query('#ddlSpousesOccupation')[0];
        var p_Identification = Ext.ComponentQuery.query('#txtIdentityNo')[0];

        var p_FatherName =Ext.ComponentQuery.query('#txtFathersName')[0];
        var p_MotherName =Ext.ComponentQuery.query('#txtMothersName')[0];
        var p_FatherOccupation =Ext.ComponentQuery.query('#ddlFathersOccupation')[0];
        var p_MotherOccupation =Ext.ComponentQuery.query('#ddlMothersOccupation')[0];
        var p_GrandfatherName =Ext.ComponentQuery.query('#txtGrandFathersName')[0];
        var p_NoOfSon =Ext.ComponentQuery.query('#txtNoOfSon')[0];
        var p_NoOfDaughter =Ext.ComponentQuery.query('#txtNoOfDaughter')[0];

        var p_NomineeName =Ext.ComponentQuery.query('#txtNomineeName')[0];
        var p_NomineeAddress =Ext.ComponentQuery.query('#txtNomineeAddress')[0];
        var p_NomineeDistrict =Ext.ComponentQuery.query('#ddlNomineeDistrict')[0];
        var p_Relation =Ext.ComponentQuery.query('#txtNomineeRelation')[0];

        var p_LevelSno =Ext.ComponentQuery.query('#txtLevelSno')[0];
        var p_Grade =Ext.ComponentQuery.query('#txtGrade')[0];
        var p_GradeValue =Ext.ComponentQuery.query('#txtGradeValue')[0];
        var p_FatherInlawName =Ext.ComponentQuery.query('#txtFatherInLawsName')[0];
        var p_PfAccountNo=Ext.ComponentQuery.query('#txtFatherInLawsName')[0];//??
        var p_InvestmentFundId=Ext.ComponentQuery.query('#txtFatherInLawsName')[0];//??
        var p_CurrentOfficeJoinDate =Ext.ComponentQuery.query('#txtCurrentOfficeJoinDateAD')[0];
        //var p_CurrentOfficeJoinDate =Ext.ComponentQuery.query('#txtCurrentOfficeJoinDateBS')[0];
        var p_CitIdNo =Ext.ComponentQuery.query('#txtCitFund')[0];
        var p_IdentityCardNo =Ext.ComponentQuery.query('#txtIdentityNo')[0];
        var p_DesignationCode =Ext.ComponentQuery.query('#ddlDesignation')[0];
        var p_ProvisionDate =Ext.ComponentQuery.query('#txtProbationDateAD')[0];
        //var p_ProvisionDate =Ext.ComponentQuery.query('#txtProbationDateBS')[0];
        //Ext.ComponentQuery.query('#txtProbationDateAD')[0];
        var p_PermanentDate =Ext.ComponentQuery.query('#txtPermanentDateAD')[0];
        //var p_PermanentDate =Ext.ComponentQuery.query('#txtPermanentDateBS')[0];


        //var p_QuarterYN= ??
        //var p_PfDate==??
        var p_InchargeYN = Ext.ComponentQuery.query('#chkBranchIncharge')[0];


        var p_ImagePath =Ext.ComponentQuery.query('#txtEmpImgPath')[0];
        var p_Signature1 =Ext.ComponentQuery.query('#txtEmpSignature1Path')[0];
        var p_Signature2 =Ext.ComponentQuery.query('#txtEmpSignature2Path')[0];
        var p_NomineeImage =Ext.ComponentQuery.query('#txtNomineeImagePath')[0];
        var p_NomineeSignature1 =Ext.ComponentQuery.query('#txtNomineeSignature1Path')[0];
        var p_NomineeSignature2 =Ext.ComponentQuery.query('#txtNomineeSignature2Path')[0];


        //var p_EmployeeCode=??
        // var p_IdDocumentNo=??

        var p_IdIssueDistrictCode =Ext.ComponentQuery.query('#ddlIssueDistrict')[0];
        var p_IdDocumentType =Ext.ComponentQuery.query('#ddlIdentifcationType')[0];

        var p_NomineeIdIssue_Dist_Code = Ext.ComponentQuery.query('#ddlNomineeIssueDistrict')[0];
        var p_NomineeIdDocument_No =Ext.ComponentQuery.query('#txtNomineeIdentityNo')[0];
        var p_NomineeIdDocument_Type =Ext.ComponentQuery.query('#ddlNomineeIdentityType')[0];
        var p_CasteCode =  Ext.ComponentQuery.query('#ddlCasteCode')[0];
        var p_SalaryAccountNo =Ext.ComponentQuery.query('#txtSalaryAccountNo')[0];
        var p_HlpreAccountHead_Code =Ext.ComponentQuery.query('#txtHlpreAccountHeadCode')[0];
        var p_SalaryAdvanceAccount_Head =Ext.ComponentQuery.query('#txtSalaryAccountHeadCode')[0];

        var p_ClientNo= Ext.ComponentQuery.query('#txtMemberCode')[0];
        var p_ProvidentFund=Ext.ComponentQuery.query('#txtCitFund')[0];
        var p_HousingLoanAmt =Ext.ComponentQuery.query('#txtHousingLoadAmount')[0];
        //------------------------------

        var objemployee ={
        EmpId : p_EmpId.getValue(),
        EmpName : p_EmpName.getValue(),
        Dob : '09-APR-2015',
        Gender : p_Gender.getValue(),
        Married : p_Married.getValue(),
        CitizenshipNo : p_CitizenshipNo.getValue(),
        EmployeeType : p_EmployeeType.getValue(),
        PostCode : p_PostCode.getValue(),
        JoinDate : '09-APR-2015',
        OfficeCode : p_OfficeCode.getValue(),
        DeptCode : p_DeptCode.getValue(),
        ActiveFlag : p_ActiveFlag.getValue()===true?"Y":"N",


        TemporaryAddress : p_TemporaryAddress.getValue(),
        TemporaryDistrictCode : p_TemporaryDistrictCode.getValue(),
        TemporaryContactPhone : p_TemporaryContactPhone.getValue(),
        PermanentAddress : p_PermanentAddress.getValue(),
        PermanentDistrictCode : p_PermanentDistrictCode.getValue(),
        PermanentContactPhone : p_PermanentContactPhone.getValue(),
        EmailId : p_EmailId.getValue(),

        ReligionCode : p_ReligionCode.getValue(),
        CountryCode : p_CountryCode.getValue(),
        SpouseName : p_SpouseName.getValue(),
        SpouseOccupation : p_SpouseOccupation.getValue(),
        Identification : p_Identification.getValue(),
        FatherName : p_FatherName.getValue(),
        MotherName : p_MotherName.getValue(),
        FatherOccupation : p_FatherOccupation.getValue(),
        MotherOccupation : p_MotherOccupation.getValue(),
        GrandfatherName : p_GrandfatherName.getValue(),
        NoOfSon : p_NoOfSon.getValue(),
        NoOfDaughter : p_NoOfDaughter.getValue(),
        NomineeName : p_NomineeName.getValue(),
        NomineeAddress : p_NomineeAddress.getValue(),
        NomineeDistrict : p_NomineeDistrict.getValue(),


        Relation : p_Relation.getValue(),
        LevelSno : p_LevelSno.getValue(),
        Grade : p_Grade.getValue(),
        GradeValue : p_GradeValue.getValue(),
        FatherInlawName : p_FatherInlawName.getValue(),
        PfAccountNo : p_PfAccountNo.getValue(),
        InvestmentFundId : p_InvestmentFundId.getValue(),
        CurrentOfficeJoinDate : '09-APR-2015',
        CitIdNo : p_CitIdNo.getValue(),
        IdentityCardNo : p_IdentityCardNo.getValue(),
        DesignationCode : p_DesignationCode.getValue(),
        ProvisionDate : '09-APR-2015',
        PermanentDate : '09-APR-2015',
        QuarterYN : 'Y',
        PfDate : '09-APR-2015',
        InchargeYN : p_InchargeYN.getValue(),


        ImagePath : p_ImagePath.imgsrc,
        Signature1 : p_Signature1.imgsrc,
        Signature2 : p_Signature2.imgsrc,
        NomineeImage : p_NomineeImage.imgsrc,
        NomineeSignature1 : p_NomineeSignature1.imgsrc,
        NomineeSignature2 : p_NomineeSignature2.imgsrc,


        EmployeeCode : 1,
        IdDocumentNo : 1,

        IdIssueDistrictCode : p_IdIssueDistrictCode.getValue(),
        IdDocumentType : p_IdDocumentType.getValue(),
        NomineeIdIssueDistrictCode : p_NomineeIdIssue_Dist_Code.getValue(),
        NomineeIdDocumentNo : p_NomineeIdDocument_No.getValue(),
        NomineeIdDocumentType : p_NomineeIdDocument_Type.getValue(),
        CasteCode : p_CasteCode.getValue(),
        SalaryAccountNo : p_SalaryAccountNo.getValue(),
        HlpreAccountHeadCode : p_HlpreAccountHead_Code.getValue(),
        SalaryAdvanceAccount_Head : p_SalaryAdvanceAccount_Head.getValue(),
        ClientNo : p_ClientNo.getValue(),
        ProvidentFund : p_ProvidentFund.getValue(),
        HousingLoanAmt : p_HousingLoanAmt.getValue(),
        CreatedBy : getCurrentUser(),
        Action  :  "U"
        };

        /*

        var objemployee ={
        EmpId : p_EmpId.getValue(),
        EmpName : p_EmpName.getValue(),
        Dob : p_Dob.getValue(),
        Gender : p_Gender.getValue(),
        Married : p_Married.getValue(),
        CitizenshipNo : p_CitizenshipNo.getValue(),
        EmployeeType : p_EmployeeType.getValue(),
        PostCode : p_PostCode.getValue(),
        JoinDate : p_JoinDate.getValue(),
        OfficeCode : p_OfficeCode.getValue(),
        DeptCode : p_DeptCode.getValue(),
        ActiveFlag : p_ActiveFlag.getValue(),


        TemporaryAddress : p_TemporaryAddress.getValue(),
        TemporaryDistrictCode : p_TemporaryDistrictCode.getValue(),
        TemporaryContactPhone : p_TemporaryContactPhone.getValue(),
        PermanentAddress : p_PermanentAddress.getValue(),
        PermanentDistrictCode : p_PermanentDistrictCode.getValue(),
        PermanentContactPhone : p_PermanentContactPhone.getValue(),
        EmailId : p_EmailId.getValue(),

        ReligionCode : p_ReligionCode.getValue(),
        CountryCode : p_CountryCode.getValue(),
        SpouseName : p_SpouseName.getValue(),
        SpouseOccupation : p_SpouseOccupation.getValue(),
        Identification : p_Identification.getValue(),
        FatherName : p_FatherName.getValue(),
        MotherName : p_MotherName.getValue(),
        FatherOccupation : p_FatherOccupation.getValue(),
        MotherOccupation : p_MotherOccupation.getValue(),
        GrandfatherName : p_GrandfatherName.getValue(),
        NoOfSon : p_NoOfSon.getValue(),
        NoOfDaughter : p_NoOfDaughter.getValue(),
        NomineeName : p_NomineeName.getValue(),
        NomineeAddress : p_NomineeAddress.getValue(),
        NomineeDistrict : p_NomineeDistrict.getValue(),


        Relation : p_Relation.getValue(),
        LevelSno : p_LevelSno.getValue(),
        Grade : p_Grade.getValue(),
        GradeValue : p_GradeValue.getValue(),
        FatherInlawName : p_FatherInlawName.getValue(),
        PfAccountNo : p_PfAccountNo.getValue(),
        InvestmentFundId : p_InvestmentFundId.getValue(),
        CurrentOfficeJoin_Date : p_CurrentOfficeJoin_Date.getValue(),
        CitIdNo : p_CitIdNo.getValue(),
        IdentityCardNo : p_IdentityCardNo.getValue(),
        DesignationCode : p_DesignationCode.getValue(),
        ProvisionDate : p_ProvisionDate.getValue(),
        PermanentDate : p_PermanentDate.getValue(),
        QuarterYN : p_QuarterYN.getValue(),
        PfDate : p_PfDate.getValue(),
        InchargeYN : p_InchargeYN.getValue(),


        ImagePath : p_ImagePath.imgsrc,
        Signature1 : p_Signature1.imgsrc,
        Signature2 : p_Signature2.imgsrc,
        NomineeImage : p_NomineeImage.imgsrc,
        NomineeSignature1 : p_NomineeSignature1.imgsrc,
        NomineeSignature2 : p_NomineeSignature2.imgsrc,


        EmployeeCode : p_EmployeeCode.getValue(),
        IdDocumentNo : p_IdDocumentNo.getValue(),

        IdIssueDistrict_Code : p_IdIssueDistrict_Code.getValue(),
        IdDocumentType : p_IdDocumentType.getValue(),
        NomineeIdIssue_Dist_Code : p_NomineeIdIssue_Dist_Code.getValue(),
        NomineeIdDocument_No : p_NomineeIdDocument_No.getValue(),
        NomineeIdDocument_Type : p_NomineeIdDocument_Type.getValue(),
        CasteCode : p_CasteCode.getValue(),
        SalaryAccountNo : p_SalaryAccountNo.getValue(),
        HlpreAccountHead_Code : p_HlpreAccountHead_Code.getValue(),
        SalaryAdvanceAccount_Head : p_SalaryAdvanceAccount_Head.getValue(),
        ClientNo : p_ClientNo.getValue(),
        ProvidentFund : p_ProvidentFund.getValue(),
        HousingLoanAmt : p_HousingLoanAmt.getValue(),
        CreatedBy : getCurrentUser(),
        Action  :  "I"
        };
        */
        var waitSave = watiMsg('Please wait ...');
        Ext.Ajax.request({
             url:'../Handlers/Supervisor/EmployeeHandler.ashx',
             params:{method:'Save',employee:JSON.stringify(objemployee)},
             success: function ( result, request ) {
                    waitSave.hide();
                    var obj = Ext.decode(result.responseText);
                    if(obj.success === 'true'){
                        msg('SUCCESS',obj.message,function(){
                        //var grd = Ext.ComponentQuery.query('#grdAaa')[0];
                        //var record = grd.getSelectionModel().getSelection()[0];
                        //record.set('Action','U');
                        });
                    }
                    else{msg('FAILURE',obj.message);


                    }
             },
             failure: function(form, action) {
        waitSave.hide();
        var out=Ext.decode(response.responseText);
        msg('FAILURE',out.message);     }
        });

        /*
        var p_EmpId = Ext.ComponentQuery.query('#txtEmployeeId')[0];
        var p_EmpName=Ext.ComponentQuery.query('#txtEmployeeName')[0];
        var p_Dob =Ext.ComponentQuery.query('#txtEmployeeId')[0];
        //Ext.ComponentQuery.query('#txtDobAD')[0];
        //Ext.ComponentQuery.query('#txtDisplayNo')[0];
        var p_Married =Ext.ComponentQuery.query('#ddlMaritalStatus')[0];
        var p_JoinDate =Ext.ComponentQuery.query('#txtJoinDateBS')[0];
        //Ext.ComponentQuery.query('#txtJoinDateAD')[0];
        var p_ActiveFlag =Ext.ComponentQuery.query('#chkActive')[0];
        var p_Gender=Ext.ComponentQuery.query('#ddlGender')[0];
        var p_JoinDate =Ext.ComponentQuery.query('#txtCurrentOfficeJoinDateBS')[0];
        //Ext.ComponentQuery.query('#txtCurrentOfficeJoinDateAD')[0];
        var p_CasteCode =  Ext.ComponentQuery.query('#ddlCasteCode')[0];
        var p_CountryCode =Ext.ComponentQuery.query('#ddlNationality')[0];
        var p_OfficeCode =Ext.ComponentQuery.query('#ddlOfficeCode')[0];
        var p_EmployeeType =Ext.ComponentQuery.query('#ddlEmployeeType')[0];

        var p_PostCode =Ext.ComponentQuery.query('#ddlPost')[0];
        var p_DesignationCode =Ext.ComponentQuery.query('#ddlDesignation')[0];
        var p_ImagePath =Ext.ComponentQuery.query('#txtEmpImgPath')[0];
        var p_DeptCode =Ext.ComponentQuery.query('#ddlDepartment')[0];
        var p_Grade =Ext.ComponentQuery.query('#txtGrade')[0];
        var p_GradeValue =Ext.ComponentQuery.query('#txtGradeValue')[0];
        var p_LevelSno =Ext.ComponentQuery.query('#txtLevelSno')[0];
        //Ext.ComponentQuery.query('#txtOfficeIdNo')[0];
        var p_FatherInlawName =Ext.ComponentQuery.query('#txtFatherInLawsName')[0];
        var p_ProvisionDate =Ext.ComponentQuery.query('#txtProbationDateBS')[0];
        //Ext.ComponentQuery.query('#txtProbationDateAD')[0];
        var p_GrandfatherName =Ext.ComponentQuery.query('#txtGrandFathersName')[0];
        var p_PermanentDate =Ext.ComponentQuery.query('#txtPermanentDateBS')[0];
        //Ext.ComponentQuery.query('#txtPermanentDateAD')[0];
        var p_NoOfSon =Ext.ComponentQuery.query('#txtNoOfSon')[0];
        var p_NoOfDaughter =Ext.ComponentQuery.query('#txtNoOfDaughter')[0];
        var p_FatherName =Ext.ComponentQuery.query('#txtFathersName')[0];
        var p_FatherOccupation =Ext.ComponentQuery.query('#txtFathersOccupation')[0];
        var p_EmailId =Ext.ComponentQuery.query('#txtEmailAddress')[0];
        var p_MotherName =Ext.ComponentQuery.query('#txtMothersName')[0];
        var p_MotherOccupation =Ext.ComponentQuery.query('#txtMothersOccupation')[0];
        var p_InchargeYN = Ext.ComponentQuery.query('#chkBranchIncharge')[0];
        var p_Identification =Ext.ComponentQuery.query('#txtIdentification')[0];
        var p_SpouseName = Ext.ComponentQuery.query('#txtSpousesName')[0];
        var p_SpouseOccupation = Ext.ComponentQuery.query('#txtSpousesOccupation')[0];
        var p_IdDocumentType =Ext.ComponentQuery.query('#ddlIdentifcationType')[0];
        var p_IdentityCardNo =Ext.ComponentQuery.query('#txtIdentityNo')[0];
        var p_IdIssueDistrict_Code =Ext.ComponentQuery.query('#ddlIssueDistrict')[0];
        var p_TemporaryAddress =Ext.ComponentQuery.query('#txtTempAddress')[0];
        var p_TemporaryDistrictCode =Ext.ComponentQuery.query('#ddlTempDistrict')[0];
        var p_TemporaryContactPhone =Ext.ComponentQuery.query('#txtTempPhone')[0];
        var p_PermanentAddress = Ext.ComponentQuery.query('#txtPermAddress')[0];
        var p_PermanentDistrictCode = Ext.ComponentQuery.query('#ddlPermDistrict')[0];
        var p_PermanentContactPhone =Ext.ComponentQuery.query('#txtPermPhone')[0];
        var p_Signature1 =Ext.ComponentQuery.query('#txtEmpSignature1Path')[0];
        //Ext.ComponentQuery.query('#imgEmpSignature1')[0];
        var p_Signature2 =Ext.ComponentQuery.query('#txtEmpSignature2Path')[0];
        //Ext.ComponentQuery.query('#imgEmpSignature2')[0];
        var p_NomineeName =Ext.ComponentQuery.query('#txtNomineeName')[0];
        var p_Relation =Ext.ComponentQuery.query('#txtNomineeRelation')[0];
        var p_NomineeAddress =Ext.ComponentQuery.query('#txtNomineeAddress')[0];
        var p_NomineeDistrict =Ext.ComponentQuery.query('#ddlNomineeDistrict')[0];
        var p_NomineeImage =Ext.ComponentQuery.query('#txtNomineeImagePath')[0];
        //Ext.ComponentQuery.query('#imgNominee')[0];
        var p_NomineeIdIssue_Dist_Code = Ext.ComponentQuery.query('#ddlNomineeIssueDistrict')[0];
        var p_NomineeIdDocument_Type =Ext.ComponentQuery.query('#ddlNomineeIdentityType')[0];
        var p_NomineeIdDocument_No =Ext.ComponentQuery.query('#txtNomineeIdentityNo')[0];
        //Ext.ComponentQuery.query('#imgNomineeSignature1')[0];
        var p_NomineeSignature1 =Ext.ComponentQuery.query('#txtNomineeSignature1Path')[0];
        //Ext.ComponentQuery.query('#imgNomineeSignature2')[0];
        var p_NomineeSignature2 =Ext.ComponentQuery.query('#txtNomineeSignature2Path')[0];
        var p_SalaryAccountNo =Ext.ComponentQuery.query('#txtSalaryAccountNo')[0];
        //Ext.ComponentQuery.query('#txtMemberName')[0];
        var p_HlpreAccountHead_Code =Ext.ComponentQuery.query('#txtHlpreAccountHeadCode')[0];
        //Ext.ComponentQuery.query('#txtHlpreAccountHeadDesc')[0];
        var p_SalaryAdvanceAccount_Head =Ext.ComponentQuery.query('#txtSalaryAccountHeadCode')[0];
        //Ext.ComponentQuery.query('#txtSalaryAccountHeadDesc')[0];
        //Ext.ComponentQuery.query('#txtMemberCode')[0];
        //Ext.ComponentQuery.query('#txtMemberCode')[0];
        var p_CitIdNo =Ext.ComponentQuery.query('#txtCitFund')[0];
        var p_HousingLoanAmt =Ext.ComponentQuery.query('#txtHousingLoadAmount')[0];

        var objemployee ={
                        EmpId : p_EmpId.getValue(),
        EmpName : p_EmpName.getValue(),
        Dob : p_Dob.getValue(),
        Gender : p_Gender.getValue(),
        Married : p_Married.getValue(),
        CitizenshipNo : p_CitizenshipNo.getValue(),
        EmployeeType : p_EmployeeType.getValue(),
        PostCode : p_PostCode.getValue(),
        JoinDate : p_JoinDate.getValue(),
        OfficeCode : p_OfficeCode.getValue(),
        DeptCode : p_DeptCode.getValue(),
        ActiveFlag : p_ActiveFlag.getValue(),


        TemporaryAddress : p_TemporaryAddress.getValue(),
        TemporaryDistrictCode : p_TemporaryDistrictCode.getValue(),
        TemporaryContactPhone : p_TemporaryContactPhone.getValue(),
        PermanentAddress : p_PermanentAddress.getValue(),
        PermanentDistrictCode : p_PermanentDistrictCode.getValue(),
        PermanentContactPhone : p_PermanentContactPhone.getValue(),
        EmailId : p_EmailId.getValue(),

        ReligionCode : p_ReligionCode.getValue(),
        CountryCode : p_CountryCode.getValue(),
        SpouseName : p_SpouseName.getValue(),
        SpouseOccupation : p_SpouseOccupation.getValue(),
        Identification : p_Identification.getValue(),
        FatherName : p_FatherName.getValue(),
        MotherName : p_MotherName.getValue(),
        FatherOccupation : p_FatherOccupation.getValue(),
        MotherOccupation : p_MotherOccupation.getValue(),
        GrandfatherName : p_GrandfatherName.getValue(),
        NoOfSon : p_NoOfSon.getValue(),
        NoOfDaughter : p_NoOfDaughter.getValue(),
        NomineeName : p_NomineeName.getValue(),
        NomineeAddress : p_NomineeAddress.getValue(),
        NomineeDistrict : p_NomineeDistrict.getValue(),
        Relation : p_Relation.getValue(),
        LevelSno : p_LevelSno.getValue(),
        Grade : p_Grade.getValue(),
        GradeValue : p_GradeValue.getValue(),
        FatherInlawName : p_FatherInlawName.getValue(),
        PfAccountNo : p_PfAccountNo.getValue(),
        InvestmentFundId : p_InvestmentFundId.getValue(),
        CurrentOfficeJoin_Date : p_CurrentOfficeJoin_Date.getValue(),
        CitIdNo : p_CitIdNo.getValue(),
        IdentityCardNo : p_IdentityCardNo.getValue(),
        DesignationCode : p_DesignationCode.getValue(),
        ProvisionDate : p_ProvisionDate.getValue(),
        PermanentDate : p_PermanentDate.getValue(),
        QuarterYN : p_QuarterYN.getValue(),
        PfDate : p_PfDate.getValue(),
        InchargeYN : p_InchargeYN.getValue(),

        ImagePath : p_ImagePath.imgsrc,
        Signature1 : p_Signature1.imgsrc,
        Signature2 : p_Signature2.imgsrc,
        NomineeImage : p_NomineeImage.imgsrc,
        NomineeSignature1 : p_NomineeSignature1.imgsrc,
        NomineeSignature2 : p_NomineeSignature2.imgsrc,

        EmployeeCode : p_EmployeeCode.getValue(),
        IdDocumentNo : p_IdDocumentNo.getValue(),
        IdIssueDistrict_Code : p_IdIssueDistrict_Code.getValue(),
        IdDocumentType : p_IdDocumentType.getValue(),
        NomineeIdIssue_Dist_Code : p_NomineeIdIssue_Dist_Code.getValue(),
        NomineeIdDocument_No : p_NomineeIdDocument_No.getValue(),
        NomineeIdDocument_Type : p_NomineeIdDocument_Type.getValue(),
        CasteCode : p_CasteCode.getValue(),
        SalaryAccountNo : p_SalaryAccountNo.getValue(),
        HlpreAccountHead_Code : p_HlpreAccountHead_Code.getValue(),
        SalaryAdvanceAccount_Head : p_SalaryAdvanceAccount_Head.getValue(),
        ClientNo : p_ClientNo.getValue(),
        ProvidentFund : p_ProvidentFund.getValue(),
        HousingLoanAmt : p_HousingLoanAmt.getValue(),
        CreatedBy : p_User1.getValue(),
        Action  :  "I",
        ImagePathName : p_ImagePath.getValue(),
        Signature1Name : p_Signature1.getValue(),
        Signature2Name : p_Signature2.getValue(),
        NomineeImageName : p_NomineeImage.getValue(),
        NomineeSignature1Name : p_NomineeSignature1.getValue(),
        NomineeSignature2Name : p_NomineeSignature2.getValue()
        };

        console.log("emp",objemployee);
        var waitSave = watiMsg('Please wait ...');
        Ext.Ajax.request({
             url:'../Handlers/Supervisor/EmployeeHandler.ashx',
             params:{method:'Save',employee:JSON.stringify(objemployee)},
             success: function ( result, request ) {
                    waitSave.hide();
                    var obj = Ext.decode(result.responseText);
                    if(obj.success === 'true'){
                        msg('SUCCESS',out.message,function(){
                        //var grd = Ext.ComponentQuery.query('#grdAaa')[0];
                        //var record = grd.getSelectionModel().getSelection()[0];
                        //record.set('Action','U');
                        });
                    }
                    else{msg('FAILURE',out.message);


                    }
             },
             failure: function(form, action) {
                    waitSave.hide();
                    var out=Ext.decode(response.responseText);
                    msg('FAILURE',out.message);
             }
        });

        */

    },

    onButtonClick: function(button, e, eOpts) {
        var v={
            EmpId:Ext.ComponentQuery.query("#txtSrchEmpId")[0].getValue(),
            //OfficeCode:Ext.ComponentQuery.query("#ddlSrchOffCode")[0].getValue(),
            //PostCode:Ext.ComponentQuery.query("ddlSrchPostCode")[0].getValue(),
        //EmpName:Ext.ComponentQuery.query("#txtSrchEmpName")[0].getValue(),
           // Gender:Ext.ComponentQuery.query("ddlSrchGender")[0].getValue()
        };

         Ext.Ajax.request({
        					url: '../Handlers/Supervisor/EmployeeHandler.ashx',
        					params:{method:'Search',employee:JSON.stringify(v)},
        					success: function(response){

        						var out=Ext.decode(response.responseText);
        						console.log(out);

        						if(out.success==="true")
        						{

        							console.log('out.root',out.root);

                                    var store=Ext.getStore('EmployeeSearchStore');
                                    store.removeAll();
                                    store.add(out.root);

        						}
        						else
        						{
        							msg("FAILURE",out.message);
        						}
        					},
        					failure: function ( result, request ) {

        						var out=Ext.decode(response.responseText);
        						msg("FAILURE",out.message);
        					}

        });
    },

    onToolFormClearClick: function(tool, e, eOpts) {

        Ext.ComponentQuery.query('#frmEmployeeInformation')[0].getForm().reset();


        Ext.ComponentQuery.query("#txtEmpImgPath")[0].imgsrc=null;
        Ext.ComponentQuery.query('#imgEmployee')[0].setSrc("");

        Ext.ComponentQuery.query("#txtEmpSignature1Path")[0].imgsrc=null;
        Ext.ComponentQuery.query('#imgEmpSignature1')[0].setSrc("");


        Ext.ComponentQuery.query("#txtEmpSignature2Path")[0].imgsrc=null;
        Ext.ComponentQuery.query('#imgEmpSignature2')[0].setSrc("");

        Ext.ComponentQuery.query("#txtNomineeImagePath")[0].imgsrc=null;
        Ext.ComponentQuery.query('#imgNominee')[0].setSrc("");

        Ext.ComponentQuery.query("#txtNomineeSignature1Path")[0].imgsrc=null;
        Ext.ComponentQuery.query('#imgNomineeSignature1')[0].setSrc("");

        Ext.ComponentQuery.query("#txtNomineeSignature2Path")[0].imgsrc=null;
        Ext.ComponentQuery.query('#imgNomineeSignature2')[0].setSrc("");

        Ext.getStore("EmployeeSearchStore").removeAll();

        Ext.getStore('EmployeeDesignationStore').removeAll();

    }

});