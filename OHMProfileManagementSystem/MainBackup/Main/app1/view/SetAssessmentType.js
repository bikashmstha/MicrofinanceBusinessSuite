/*
 * File: app/view/SetAssessmentType.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.SetAssessmentType', {
    extend: 'Ext.panel.Panel',

    frame: true,
    height: 790,
    itemId: 'pnlSetAssessmentType',
    width: 860,
    layout: {
        align: 'stretch',
        type: 'vbox'
    },
    title: 'Set Assessment Type',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'label',
                    margin: '20 0 10 0',
                    style: 'font-size:20px;',
                    text: 'Selection of return form D-01 or D-03.'
                },
                {
                    xtype: 'label',
                    margins: '10 5 10 0',
                    style: 'font-size:14px;\r\nfont-weight:bold;',
                    text: 'Rule of selection for D-01 or D-03 for Proprietary Business in the Fiscal Year : 2068.069'
                },
                {
                    xtype: 'label',
                    margins: '0 0 3 0',
                    style: 'font-size:14px;',
                    text: 'Rule 1 : .If Turnover is greater than 20,00,000 and your income is greater than 200000 form to be filled is D-03.'
                },
                {
                    xtype: 'label',
                    style: 'font-size:14px;',
                    text: '  Rule 2  : Otherwise fill D0-1.  '
                },
                {
                    xtype: 'label',
                    margins: '20 0 10 0',
                    style: 'font-size:14px;',
                    text: 'Click on Assessment Type you want to file (read carefully the instruction above): '
                },
                {
                    xtype: 'label',
                    hidden: true,
                    itemId: 'lblD01Ast',
                    style: 'color:red;\r\ntext-decoration:underline;\r\ncursor:pointer;',
                    text: 'D-01',
                    listeners: {
                        render: {
                            fn: me.onLblD01AstRender,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'label',
                    margins: '5 0 0 0 ',
                    itemId: 'lblD03Ast',
                    style: 'color:red;\r\ntext-decoration:underline;\r\ncursor:pointer;',
                    text: 'D-03',
                    listeners: {
                        render: {
                            fn: me.onLblD03AstRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onLblD01AstRender: function(component, eOpts) {
        var c = component;

        c.getEl().on('click', function(){ this.fireEvent('click', c); }, c);
    },

    onLblD03AstRender: function(component, eOpts) {
        var c = component;

        c.getEl().on('click', function(){ this.fireEvent('click', c); }, c);
    }

});