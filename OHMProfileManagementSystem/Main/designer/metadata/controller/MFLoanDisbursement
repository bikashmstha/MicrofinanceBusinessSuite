{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "MFLoanDisbursement",
        "stores": [
            "CenterShortStore",
            "MFLoanEditMemberCodeStore",
            "LoanHeadingPopupStore",
            "LoanPurposePopupStore",
            "ContraAccountStore",
            "AdjustToSavingStore",
            "InstallmentTypeRefShortStore",
            "ReferenceShortStore",
            "InterestRateRefShortStore",
            "InterestCalcMethodStore",
            "LoanStatusStore",
            "MFLoanNoSearchStore",
            "MFLoanDisbursementSearchStore",
            "FundingAgencyStore"
        ]
    },
    "configAlternates": {
        "designer|userClassName": "string",
        "stores": "typedarray"
    },
    "name": "MyController1",
    "designerId": "51719d31-82dc-45c4-b150-e9300383af1d",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtMemberCode",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField181",
                "fn": "onTxtMemberCodeAfterRender",
                "implHandler": [
                    " component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SelectMemberMFPopup',{",
                    "",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });",
                    ""
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onTxtMemberCodeAfterRender",
            "designerId": "9f55b0c4-6a7a-4370-aaaf-a4c23a5a3a17"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtLoanHeadingCode",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField197",
                "fn": "onTxtLoanHeadingCodeAfterRender",
                "implHandler": [
                    "  component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SelectLoanHeadingPopup',{",
                    "",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });",
                    ""
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onTxtLoanHeadingCodeAfterRender",
            "designerId": "0aaa775a-cde3-4204-bac5-18f09814546d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtLoanPurposeCode",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField199",
                "fn": "onTxtLoanPurposeCodeAfterRender",
                "implHandler": [
                    "",
                    "  component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SelectLoanPurposePopup',{",
                    "",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });",
                    ""
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onTxtLoanPurposeCodeAfterRender",
            "designerId": "0e9b059b-49d0-4bc6-9d18-5ea3c9cfec55"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#ddlAdjustSaving",
                "designer|params": [
                    "combo",
                    "records",
                    "eOpts"
                ],
                "designer|targetType": "MyComboBox89",
                "fn": "onDdlAdjustSavingSelect",
                "implHandler": [
                    "//console.log(records);",
                    "Ext.ComponentQuery.query('#ddlContraAcc')[0].setValue(records[0].data.AacountCode);",
                    "Ext.ComponentQuery.query('#ddlContraAcc')[0].AccountNo= records[0].data.AccountNo;"
                ],
                "name": "select",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onDdlAdjustSavingSelect",
            "designerId": "68b8b4d6-1151-4858-a2d5-05427f0df35a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnDisburseLoan",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton31",
                "fn": "onBtnDisburseLoanClick",
                "implHandler": [
                    "var objLD={",
                    "    LoanDate:Ext.ComponentQuery.query('#txtLoanDateAD')[0].getValue(), \t\t\t\t\t\t",
                    "LoanMaturityDate:Ext.ComponentQuery.query('#txtMaturityDateAD')[0].getValue(), \t\t\t\t",
                    "LoanProductCode:Ext.ComponentQuery.query('#txtLoanHeadingCode')[0].getValue(), \t\t\t\t",
                    "ClientNo:Ext.ComponentQuery.query('#txtMemberCode')[0].ClientNo, \t\t\t\t\t\t",
                    "LoanPurposeCode:Ext.ComponentQuery.query('#txtLoanPurposeCode')[0].getValue(), \t\t\t\t",
                    "ApprovedLoanAmount:Ext.ComponentQuery.query('#txtAppLoanAmt')[0].getValue(), \t\t\t",
                    "TotalLoanAmount:Ext.ComponentQuery.query('#txtTotalLoanTaken')[0].getValue(), \t\t\t\t",
                    "LoanPeriodType:Ext.ComponentQuery.query('#ddlLoanPeriodYM')[0].getValue(), \t\t\t\t",
                    "LoanPeriod:Ext.ComponentQuery.query('#txtLoanPeriod')[0].getValue(), \t\t\t\t\t",
                    "GraceDays:Ext.ComponentQuery.query('#txtGraceDays')[0].getValue(), \t\t\t\t\t",
                    "EmployeeId:Ext.ComponentQuery.query('#txtFieldAssistantCode')[0].getValue(), \t\t\t\t\t",
                    "InterestRate:Ext.ComponentQuery.query('#ddlInterestRate')[0].getValue(), \t\t\t\t\t",
                    "InterestCalcMethod:Ext.ComponentQuery.query('#ddlInterestCalcMethod')[0].getValue(), \t\t\t",
                    "LoanCloseDate:'',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t",
                    "LoanStatus:Ext.ComponentQuery.query('#ddlLoanStatus')[0].getValue(), \t\t\t\t\t",
                    "Rating:'',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t\t\t",
                    "InstallmentAmount:Ext.ComponentQuery.query('#txtInstallmentAmt')[0].getValue(), \t\t\t",
                    "RefAccountNo:'',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t\t",
                    "InstallmentPeriodType:Ext.ComponentQuery.query('#ddlInstallmentFrequency')[0].getValue(),\t\t\t",
                    "InstallmentPeriod:Ext.ComponentQuery.query('#txtInstallmentFrequency')[0].getValue(), \t\t\t",
                    "PrincipalArrear:'0',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t",
                    "PrincipalAmount:'0',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t",
                    "YearNo:Ext.ComponentQuery.query('#txtLoanYear')[0].getValue(), \t\t\t\t\t\t",
                    "WithdrawalNo:'',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t\t",
                    "ChkAdjustSaving:Ext.ComponentQuery.query('#chkAdjustSaving')[0].getValue()?'Y':'N',\t\t\t\t",
                    "SavingAccountNo:Ext.ComponentQuery.query('#ddlContraAcc')[0].AccountNo, \t\t\t\t",
                    "InsurancePolicyNo:Ext.ComponentQuery.query('#txtPolicyNo')[0].getValue(), \t\t\t",
                    "TranOfficeCode:getOfficeCode(), \t\t\t\t",
                    "FixedPrincipalAmount:Ext.ComponentQuery.query('#txtFixedPrincipleAmt')[0].getValue(),\t\t\t",
                    "FirstInstallDate:Ext.ComponentQuery.query('#txt1stInstallDateAD')[0].getValue(), \t\t\t\t",
                    "ClientCenter:'C',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t\t",
                    "FixedInterestAmount:Ext.ComponentQuery.query('#txtFixedInterestAmt')[0].getValue(), \t\t\t",
                    "ContraAccount:Ext.ComponentQuery.query('#ddlContraAcc')[0].getValue(), \t\t\t\t",
                    "Deduction1Code:'',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t",
                    "Deduction1Desc:'Deduction1',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t",
                    "DeductionAmount1:'',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t",
                    "Deduction2Code:'',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t",
                    "Deduction2Desc:'Deduction2',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t",
                    "DeductionAmount2:'',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t",
                    "Deduction3Code:'',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t",
                    "Deduction3Desc:'Deduction3',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t",
                    "DeductionAmount3:'',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t",
                    "Deduction4Code:'',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t",
                    "Deduction4Desc:'Deduction4',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t",
                    "DeductionAmount4:'',//Ext.ComponentQuery.query('#')[0].getValue(), \t\t\t\t",
                    "NoOfInstallment:Ext.ComponentQuery.query('#txtNoOfInstallment')[0].getValue(), \t\t\t\t",
                    "FundingAgencyCode:Ext.ComponentQuery.query('#ddlFundingAgency')[0].getValue(), \t\t\t",
                    "User1:getCurrentUser(), ",
                    "InsertUpdate:'I', ",
                    "OutFiscalYear:getFiscalYear(),",
                    "OutLoanNo:'', ",
                    "OutLoanDno:'' ",
                    "};",
                    "",
                    "",
                    " var waitSave = watiMsg('Saving. Please wait ...');",
                    "Ext.Ajax.request({",
                    "     url:'../Handlers/Finance/Transaction/LoanTransaction/MfLoanDisbursementHandler.ashx',",
                    "     params:{method:'Save',mfLoanDisbursement:JSON.stringify(objLD)},",
                    "     success: function ( result, request ) {",
                    "waitSave.hide();",
                    "          var out = Ext.decode(result.responseText);",
                    "\t\t\t\tif(out.success==='true'){",
                    "\t\t\t\t\tmsg('SUCCESS',out.message);",
                    "\t\t\t\t\t\t}",
                    "",
                    "\t\t\t\telse{msg('FAILURE',out.message);",
                    "",
                    "",
                    "          }",
                    "     },",
                    "     failure: function(form, action) {",
                    "waitSave.hide();var out=Ext.decode(response.responseText);msg('FAILURE',out.message);     }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onBtnDisburseLoanClick",
            "designerId": "de67a015-d71b-4d71-a4f5-d20be4b139d9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnDelete",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton58",
                "fn": "onBtnDeleteClick",
                "implHandler": [
                    "var objLD={",
                    "LoanDate:Ext.ComponentQuery.query('#txtLoanDateAD')[0].getValue(),",
                    "LoanMaturityDate:Ext.ComponentQuery.query('#txtMaturityDateAD')[0].getValue(),",
                    "LoanProductCode:Ext.ComponentQuery.query('#txtLoanHeadingCode')[0].getValue(),",
                    "ClientNo:Ext.ComponentQuery.query('#grdMFLoanDisbursement')[0].ClientNo,",
                    "LoanPurposeCode:Ext.ComponentQuery.query('#txtLoanPurposeCode')[0].getValue(),",
                    "ApprovedLoanAmount:Ext.ComponentQuery.query('#txtAppLoanAmt')[0].getValue(),",
                    "TotalLoanAmount:Ext.ComponentQuery.query('#txtTotalLoanTaken')[0].getValue(),",
                    "LoanPeriodType:Ext.ComponentQuery.query('#ddlLoanPeriodYM')[0].getValue(),",
                    "LoanPeriod:Ext.ComponentQuery.query('#txtLoanPeriod')[0].getValue(),",
                    "GraceDays:Ext.ComponentQuery.query('#txtGraceDays')[0].getValue(),",
                    "EmployeeId:Ext.ComponentQuery.query('#txtFieldAssistantCode')[0].getValue(),",
                    "InterestRate:Ext.ComponentQuery.query('#ddlInterestRate')[0].getValue(),",
                    "InterestCalcMethod:Ext.ComponentQuery.query('#ddlInterestCalcMethod')[0].getValue(),",
                    "LoanCloseDate:'',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "LoanStatus:Ext.ComponentQuery.query('#ddlLoanStatus')[0].getValue(),",
                    "Rating:'',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "InstallmentAmount:Ext.ComponentQuery.query('#txtInstallmentAmt')[0].getValue(),",
                    "RefAccountNo:'',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "InstallmentPeriodType:Ext.ComponentQuery.query('#ddlInstallmentFrequency')[0].getValue(),",
                    "InstallmentPeriod:Ext.ComponentQuery.query('#txtInstallmentFrequency')[0].getValue(),",
                    "PrincipalArrear:'0',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "PrincipalAmount:'0',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "YearNo:Ext.ComponentQuery.query('#txtLoanYear')[0].getValue(),",
                    "WithdrawalNo:'',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "ChkAdjustSaving:Ext.ComponentQuery.query('#chkAdjustSaving')[0].getValue()?'Y':'N',",
                    "SavingAccountNo:Ext.ComponentQuery.query('#ddlContraAcc')[0].AccountNo,",
                    "InsurancePolicyNo:Ext.ComponentQuery.query('#txtPolicyNo')[0].getValue(),",
                    "TranOfficeCode:getOfficeCode(),",
                    "FixedPrincipalAmount:Ext.ComponentQuery.query('#txtFixedPrincipleAmt')[0].getValue(),",
                    "FirstInstallDate:Ext.ComponentQuery.query('#txt1stInstallDateAD')[0].getValue(),",
                    "ClientCenter:'C',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "FixedInterestAmount:Ext.ComponentQuery.query('#txtFixedInterestAmt')[0].getValue(),",
                    "ContraAccount:Ext.ComponentQuery.query('#ddlContraAcc')[0].getValue(),",
                    "Deduction1Code:'',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "Deduction1Desc:'Deduction1',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "DeductionAmount1:'',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "Deduction2Code:'',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "Deduction2Desc:'Deduction2',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "DeductionAmount2:'',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "Deduction3Code:'',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "Deduction3Desc:'Deduction3',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "DeductionAmount3:'',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "Deduction4Code:'',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "Deduction4Desc:'Deduction4',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "DeductionAmount4:'',//Ext.ComponentQuery.query('#')[0].getValue(),",
                    "NoOfInstallment:Ext.ComponentQuery.query('#txtNoOfInstallment')[0].getValue(),",
                    "FundingAgencyCode:Ext.ComponentQuery.query('#ddlFundingAgency')[0].getValue(),",
                    "User1:getCurrentUser(),",
                    "InsertUpdate:'D',",
                    "OutFiscalYear:getFiscalYear(),",
                    "OutLoanNo:Ext.ComponentQuery.query('#grdMFLoanDisbursement')[0].LoanNo,",
                    "OutLoanDno:Ext.ComponentQuery.query('#txtLoanNo')[0].getValue()",
                    "};",
                    "",
                    "",
                    " var waitSave = watiMsg('Saving. Please wait ...');",
                    "Ext.Ajax.request({",
                    "     url:'../Handlers/Finance/Transaction/LoanTransaction/MfLoanDisbursementHandler.ashx',",
                    "     params:{method:'Save',mfLoanDisbursement:JSON.stringify(objLD)},",
                    "     success: function ( result, request ) {",
                    "waitSave.hide();",
                    "          var out = Ext.decode(result.responseText);",
                    "\t\t\t\tif(out.success==='true'){",
                    "\t\t\t\t\tmsg('SUCCESS',out.message);",
                    "\t\t\t\t\t\t}",
                    "",
                    "\t\t\t\telse{msg('FAILURE',out.message);",
                    "",
                    "",
                    "          }",
                    "     },",
                    "     failure: function(form, action) {",
                    "waitSave.hide();var out=Ext.decode(response.responseText);msg('FAILURE',out.message);     }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onBtnDeleteClick",
            "designerId": "56754c3b-7207-4bae-a954-335d9f8514fe"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtSearchLoanNo",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyTextField221",
                "fn": "onTxtSearchLoanNoAfterRender",
                "implHandler": [
                    "component.getEl().on('dblclick', function(){",
                    "     var winPopup = Ext.create('MyApp.view.SelectMFLoanNoPopup',{",
                    "",
                    "        });",
                    "",
                    "        winPopup.extraParam={param:null};",
                    "        winPopup.show();",
                    "  });",
                    ""
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onTxtSearchLoanNoAfterRender",
            "designerId": "5ed5194a-748c-4675-8372-3879937262a8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnSearch",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton32",
                "fn": "onBtnSearchClick",
                "implHandler": [
                    "var waitSave = watiMsg('Loading Data. Please wait ...');",
                    "Ext.Ajax.request({",
                    "    url:'../Handlers/Finance/Transaction/LoanTransaction/MfLoanDetailHandler.ashx',",
                    "    params:{method:'GetMfLoanDetail',offCode:getOfficeCode(),",
                    "            clientName:null,//Ext.ComponentQuery.query('#txtMemberName')[0].getValue(),",
                    "            loanNo : Ext.ComponentQuery.query('#txtSearchLoanNo')[0].getValue(),",
                    "            loanDateFrom :Ext.ComponentQuery.query('#txtOpenDateFromBS')[0].getValue(),",
                    "            loanDateTo :Ext.ComponentQuery.query('#txtOpenDateToBS')[0].getValue()",
                    "           },",
                    "    success: function ( result, request ) {",
                    "",
                    "        var obj = Ext.decode(result.responseText);",
                    "        if(obj.success === 'true'){",
                    "            //console.log(\"Resu\",obj.root);",
                    "            var store =Ext.getStore('MFLoanDisbursementSearchStore');",
                    "            store.removeAll();",
                    "            store.add(obj.root);",
                    "",
                    "",
                    "        }else{msg('FAILURE','Could Not Load Data');}",
                    "        waitSave.hide();",
                    "    },",
                    "    failure: function(form, action) {",
                    "        msg(\"FAILURE\",\"Could Not Load Data\"); ",
                    "        waitSave.hide();",
                    "    }",
                    "    ",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onBtnSearchClick",
            "designerId": "6ca85d1e-3ab7-4624-ac29-30da35a47b35"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#frmMFLoanDisbursement",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MyForm12",
                "fn": "onFrmMFLoanDisbursementAfterRender",
                "implHandler": [
                    "Ext.ComponentQuery.query('#txtLoanDateAD')[0].setValue(getMisDateAD());",
                    "Ext.ComponentQuery.query('#txtLoanDateBS')[0].setValue(getMisDateBS());",
                    "Ext.ComponentQuery.query('#txtOpenDateFromBS')[0].setValue(getMisDateBS());",
                    "Ext.ComponentQuery.query('#txtOpenDateToBS')[0].setValue(getMisDateBS());",
                    "",
                    "//GET FOR CENTER CODE",
                    "Ext.Ajax.request({",
                    "    url:'../Handlers/Finance/Maintenance/CenterHandler.ashx',",
                    "    params:{method:'GetTransferCenterList',offCode:getOfficeCode(),centerName:null,oldCenterCode:null",
                    "           },",
                    "    success: function ( result, request ) {",
                    "",
                    "        var obj = Ext.decode(result.responseText);",
                    "        if(obj.success === 'true'){",
                    "            //console.log(\"Resu\",obj.root);",
                    "            var store =Ext.getStore('CenterShortStore');",
                    "            store.removeAll();",
                    "            store.add(obj.root);",
                    "",
                    "",
                    "        }else{msg('FAILURE','Could Not Load Data');}",
                    "    },",
                    "    failure: function(form, action) {",
                    "        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "});",
                    "",
                    "//get for contra account",
                    "Ext.Ajax.request({",
                    "                    url:'../Handlers/Finance/Maintenance/AccountHeadEntryHandler.ashx',",
                    "                    params:{method:'GetContraAccount',offCode:getOfficeCode(), accountDesc:null",
                    "        },",
                    "                    success: function ( result, request ) {",
                    "",
                    "                        var obj = Ext.decode(result.responseText);",
                    "                        if(obj.success === 'true'){",
                    "                            //console.log(\"Resu\",obj.root);",
                    "                            var store =Ext.getStore('ContraAccountStore');",
                    "                            store.removeAll();",
                    "                            store.add(obj.root);",
                    "                            Ext.ComponentQuery.query('#ddlContraAcc')[0].select('100000021000002');",
                    "",
                    "",
                    "",
                    "                        }else{msg('FAILURE','Could Not Load Data');}",
                    "                    },",
                    "                    failure: function(form, action) {",
                    "                        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "                });",
                    "",
                    "",
                    "//get for installment type",
                    "",
                    "Ext.Ajax.request({",
                    "                    url:'../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',",
                    "                    params:{method:'GetReferenceDetailListShort',referenceCode:'INSTALLMENT_PERIOD_TYPE'",
                    "        },",
                    "                    success: function ( result, request ) {",
                    "",
                    "                        var obj = Ext.decode(result.responseText);",
                    "                        if(obj.success === 'true'){",
                    "                            //console.log(\"Resu\",obj.root);",
                    "                            var store =Ext.getStore('InstallmentTypeRefShortStore');",
                    "                            store.removeAll();",
                    "                            store.add(obj.root);",
                    "",
                    "",
                    "",
                    "                        }else{msg('FAILURE','Could Not Load Data');}",
                    "                    },",
                    "                    failure: function(form, action) {",
                    "                        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "                });",
                    "//GET FOR LOAN PERIOD TYPE",
                    "Ext.Ajax.request({",
                    "                    url:'../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',",
                    "                    params:{method:'GetReferenceDetailListShort',referenceCode:'LOAN_PERIOD_TYPE'",
                    "        },",
                    "                    success: function ( result, request ) {",
                    "",
                    "                        var obj = Ext.decode(result.responseText);",
                    "                        if(obj.success === 'true'){",
                    "                           // console.log(\"Resu\",obj.root);",
                    "                            var store =Ext.getStore('ReferenceShortStore');",
                    "                            store.removeAll();",
                    "                            store.add(obj.root);",
                    "",
                    "",
                    "",
                    "                        }else{msg('FAILURE','Could Not Load Data');}",
                    "                    },",
                    "                    failure: function(form, action) {",
                    "                        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "                });",
                    "",
                    "//get for interest rate",
                    "Ext.Ajax.request({",
                    "                    url:'../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',",
                    "                    params:{method:'GetReferenceDetailListShort',referenceCode:'MF_INTEREST_RATE'",
                    "        },",
                    "                    success: function ( result, request ) {",
                    "",
                    "                        var obj = Ext.decode(result.responseText);",
                    "                        if(obj.success === 'true'){",
                    "                            //console.log(\"Resu\",obj.root);",
                    "                            var store =Ext.getStore('InterestRateRefShortStore');",
                    "                            store.removeAll();",
                    "                            store.add(obj.root);",
                    "",
                    "",
                    "",
                    "                        }else{msg('FAILURE','Could Not Load Data');}",
                    "                    },",
                    "                    failure: function(form, action) {",
                    "                        msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "                });",
                    "//GET FOR Interest calc Method",
                    "",
                    "        Ext.Ajax.request({",
                    "                            url:'../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',",
                    "                            params:{method:'GetReferenceDetailListShort',referenceCode:'LOAN_INTEREST_CALC_METHOD'",
                    "                },",
                    "                            success: function ( result, request ) {",
                    "",
                    "                                var obj = Ext.decode(result.responseText);",
                    "                                if(obj.success === 'true'){",
                    "                                   // console.log(\"Resu\",obj.root);",
                    "                                    var store =Ext.getStore('InterestCalcMethodStore');",
                    "                                    store.removeAll();",
                    "                                    store.add(obj.root);",
                    "",
                    "",
                    "",
                    "                                }else{msg('FAILURE','Could Not Load Data');}",
                    "                            },",
                    "                            failure: function(form, action) {",
                    "                                msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "            });",
                    "",
                    "",
                    "            //GET FOR Loan Status",
                    "        Ext.Ajax.request({",
                    "                            url:'../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',",
                    "                            params:{method:'GetReferenceDetailListShort',referenceCode:'LOAN_STATUS'",
                    "                },",
                    "                            success: function ( result, request ) {",
                    "",
                    "                                var obj = Ext.decode(result.responseText);",
                    "                                if(obj.success === 'true'){",
                    "                                    //console.log(\"Resu\",obj.root);",
                    "                                    var store =Ext.getStore('LoanStatusStore');",
                    "                                    store.removeAll();",
                    "                                    store.add(obj.root);",
                    "",
                    "",
                    "",
                    "                                }else{msg('FAILURE','Could Not Load Data');}",
                    "                            },",
                    "                            failure: function(form, action) {",
                    "                                msg(\"FAILURE\",\"Could Not Load Data\");    }",
                    "            });",
                    "//get for funding agency",
                    "",
                    "var fundingAgencyStore=Ext.getStore('FundingAgencyStore');",
                    "        getFundingAgencies(function(data){",
                    "            fundingAgencyStore.removeAll();",
                    "            fundingAgencyStore.add(data.root);",
                    "        });"
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view"
            },
            "name": "onFrmMFLoanDisbursementAfterRender",
            "designerId": "7eeef919-ee25-4d32-a322-d499477e1d84"
        }
    ]
}