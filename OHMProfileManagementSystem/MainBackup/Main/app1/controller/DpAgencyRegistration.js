/*
 * File: app/controller/DpAgencyRegistration.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.DpAgencyRegistration', {
    extend: 'Ext.app.Controller',

    stores: [
        'AgencyList',
        'DLike',
        'DOfficerAgency',
        'DRefOfficerTranList',
        'AgencyType'
    ],
    views: [
        'DpAgencyRegistration'
    ],

    onCntLTNARDisplayAfterRender: function(component, eOpts) {
        //var dpfMsg = Ext.ComponentQuery.query("#dpfDARMsg")[0];

        //dpfMsg.setValue("Login Successful");

        var me = this;

        me.OfficerSession();

    },

    onGrdDDListAfterRender: function(component, eOpts) {
        var store = Ext.getStore('AgencyList');
        store.load();
    },

    onGrdDDListItemClick: function(dataview, record, item, index, e, eOpts) {
        var hdnDDid = Ext.ComponentQuery.query("#hdnDDid")[0];
        hdnDDid.setValue(index);

        var hdnDDdcode = Ext.ComponentQuery.query("#hdnDDdcode")[0];
        var hdnDDname = Ext.ComponentQuery.query("#hdnDDname")[0];

        hdnDDdcode.setValue(record.data.dcode);
        hdnDDname.setValue(record.data.username);
    },

    onBtnDDStatusClick: function(button, e, eOpts) {
        var grid = Ext.ComponentQuery.query("#grdDDList")[0];
        var selected = grid.getSelectionModel().getSelection()[0];
        var me = this;

        if(selected===undefined)
        {
            msg("WARNING","Please select the user to change status");
            return false;
        }

        var hdnDDid = Ext.ComponentQuery.query("#hdnDDid")[0];
        var id = hdnDDid.getValue();

        me.getController('MyApp.controller.WndDDLStatus').init();

        me.getController('MyApp.controller.WndDDLStatus').showStatus();

        me.getController('MyApp.controller.WndDDLStatus').WndSession(id);

        var hdnDDdcode = Ext.ComponentQuery.query("#hdnDDdcode")[0];
        var hdnDDname = Ext.ComponentQuery.query("#hdnDDname")[0];

        hdnDDid.setValue("");
        hdnDDdcode.setValue("");
        hdnDDname.setValue("");
    },

    onBtnDDResetPwdClick: function(button, e, eOpts) {
        var me = this;

        var grid = Ext.ComponentQuery.query("#grdDDList")[0];
        var selected = grid.getSelectionModel().getSelection()[0];

        if(selected===undefined)
        {
            msg("WARNING","Please select the user to reset password");
            return false;
        }

        var hdnDDdcode = Ext.ComponentQuery.query("#hdnDDdcode")[0];
        var hdnDDname = Ext.ComponentQuery.query("#hdnDDname")[0];
        var hdnDDlogUser = Ext.ComponentQuery.query("#hdnDDlogUser")[0];

        if(hdnDDdcode.getValue()==="")
        {
            msg("WARNING","The selected user does not have user login");
            return false;
        }

        var diplomaticUserInfo={
            d_username:hdnDDname.getValue(),
            d_password:hdnDDname.getValue(),
            d_code:hdnDDdcode.getValue(),
            modified_by:hdnDDlogUser.getValue()
        };

        Ext.Ajax.request({
            url:"../Handlers/DiplomaticRefund/DiplomaticUserHandler.ashx?method=ChangePassword",
            params:{diplomaticUser:JSON.stringify(diplomaticUserInfo)},
            success: function ( result, request ){

                var obj = Ext.decode(result.responseText);

                var data = obj.root;

                var store = Ext.getStore('AgencyList');
                store.load();

                if(obj.success==="true")
                {
                    msg("SUCCESS",obj.message);

                }
                else if(obj.success==="false")
                {
                    msg("FAILURE",obj.message);
                }

            },

            failure: function ( result, request ){

                msg("FAILURE","Error in Fetching Data !!!");
                return;
            }

        });

    },

    onTDSListTranNoTabClick: function(button, e, eOpts) {
        //var hdnTranListcode = Ext.ComponentQuery.query("#hdnARcode")[0];
        //var hdnTranListuser = Ext.ComponentQuery.query("#hdnARuser")[0];

        //var me = this;

        //me.getController('MyApp.controller.DpRefTransactionList').viewTranList(hdnTranListcode.getValue(),hdnTranListuser.getValue());
        var me = this;

        me.OfficerSession();
    },

    onBtnAVCreateUserLogClick: function(button, e, eOpts) {
        var me = this;

        //var hdnUser = Ext.ComponentQuery.query("#hdnGrdAgUser")[0].getValue();
        //console.log("agency view user",hdnUser);

        //me.getController('MyApp.controller.DpCreateUserLogin').init();
        //me.getController('MyApp.controller.DpCreateUserLogin').Show(hdnUser);

        var window = Ext.create('MyApp.view.DpCreateUserLogin');
        //window.close();
        window.modal = true;
        window.show(undefined,function()
        {        
            var hdnUser = Ext.ComponentQuery.query("#hdnGrdAgUser")[0].getValue();

            me.getController('MyApp.controller.DpCreateUserLogin').init();
            me.getController('MyApp.controller.DpCreateUserLogin').Show(hdnUser);
        });

    },

    onBtnARAgRegClick: function(button, e, eOpts) {
        var me = this;

        var window = Ext.create('MyApp.view.WndAgencyView');
        //window.close();
        window.modal = true;
        window.show(undefined,function()
        {
            var hdnUser = Ext.ComponentQuery.query("#hdnGrdAgUser")[0];
            console.log("hdnUser",hdnUser.getValue());

            me.getController('MyApp.controller.AgencyWindow').init();
            me.getController('MyApp.controller.AgencyWindow').action("I","0","","",hdnUser.getValue());
        }
        );

    },

    onGrdAVAgencyListAfterRender: function(component, eOpts) {
        /*var objParam = Ext.ComponentQuery.query('#pnlDAgencyView')[0].extraParam;
        console.log("param",objParam);
        var user = objParam.params.user;
        console.log("user",user);
        var hdnUser = Ext.ComponentQuery.query("#hdnGrdAgUser")[0];
        hdnUser.setValue(user);*/

        var store = Ext.getStore('AgencyList');
        store.load();
    },

    onGrdAVAgencyListItemClick: function(dataview, record, item, index, e, eOpts) {
        var me = this;

        var hdnGrdAgId = Ext.ComponentQuery.query("#hdnGrdAgId")[0].getValue();
        var hdnGrdStatus = Ext.ComponentQuery.query("#hdnGrdStatus")[0].getValue();
        var hdnGrdCrDate = Ext.ComponentQuery.query("#hdnGrdCrDate")[0].getValue();

        if(hdnGrdAgId!=="")
        {
            me.getController('MyApp.controller.AgencyWindow').init();
            me.getController('MyApp.controller.AgencyWindow').action("E",hdnGrdAgId,hdnGrdStatus,hdnGrdCrDate);
        }

    },

    Dump: function() {
        var hdnuser = Ext.ComponentQuery.query("#hdnARuser")[0];

        hdnuser.setValue('');
    },

    OfficerSession: function() {
        var hdnuser = Ext.ComponentQuery.query("#hdnARuser")[0];
        var hdncode = Ext.ComponentQuery.query("#hdnARcode")[0];

        var me=this;
        Ext.Ajax.request({
            url:"../Handlers/Security/UserHandler.ashx?method=GetUserFromSession",
            success: function ( result, request ) {          
                var obj = Ext.decode(result.responseText);

                hdnuser.setValue(obj.root.Obj.UserID);
                hdncode.setValue(obj.root.Obj.OfficeUser.OfficeCode);

                var hdnDDlogUser = Ext.ComponentQuery.query("#hdnDDlogUser")[0];
                hdnDDlogUser.setValue(hdnuser.getValue());

                var hdnUser = Ext.ComponentQuery.query("#hdnGrdAgUser")[0];
                hdnUser.setValue(hdnuser.getValue());

                var hdnTranListcode = Ext.ComponentQuery.query("#hdnARcode")[0];
                hdnTranListcode.setValue(hdncode.getValue());
                var hdnTranListuser = Ext.ComponentQuery.query("#hdnARuser")[0];
                hdnTranListuser.setValue(hdnuser.getValue());

                me.getController('MyApp.controller.DpRefTransactionList').init();
                me.getController('MyApp.controller.DpRefTransactionList').viewTranList(hdncode.getValue(),hdnuser.getValue());

            },
            failure: function ( result, request ) {
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });



        /*



        hdnuser.setValue(username);
        hdncode.setValue(code);
        console.log("off session",hdncode.getValue());

        */
    },

    viewAgency: function(user) {
        Ext.getCmp('cntALARDisplay').removeAll();

        var DAgency = Ext.create('MyApp.view.DAgencyView');
        var pnlToRender = Ext.getCmp('cntALARDisplay');

        pnlToRender.add(DAgency);

        var hdnUser = Ext.ComponentQuery.query("#hdnGrdAgUser")[0];
        hdnUser.setValue(user);
    },

    init: function(application) {
        this.control({
            "#cntLTNARDisplay": {
                afterrender: this.onCntLTNARDisplayAfterRender
            },
            "#grdDDList": {
                afterrender: this.onGrdDDListAfterRender,
                itemclick: this.onGrdDDListItemClick
            },
            "#btnDDStatus": {
                click: this.onBtnDDStatusClick
            },
            "#btnDDResetPwd": {
                click: this.onBtnDDResetPwdClick
            },
            "#TDSListTranNoTab": {
                click: this.onTDSListTranNoTabClick
            },
            "#btnAVCreateUserLog": {
                click: this.onBtnAVCreateUserLogClick
            },
            "#btnARAgReg": {
                click: this.onBtnARAgRegClick
            },
            "#grdAVAgencyList": {
                afterrender: this.onGrdAVAgencyListAfterRender,
                itemclick: this.onGrdAVAgencyListItemClick
            }
        });
    }

});
