/*
 * File: app/controller/ModuleMachine.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.ModuleMachine', {
    extend: 'Ext.app.Controller',

    stores: [
        'Module',
        'Application',
        'ModuleMachine',
        'Office'
    ],

    onModulemachGrdApplicationItemClick: function(dataview, record, item, index, e, eOpts) {
        var me=this;
        var appid = Ext.ComponentQuery.query('#modulemachGrdApplication')[0].getSelectionModel().getSelection()[0];
        Ext.getStore('Module').load({params:{appId:appid.data.ApplicationID}});
        Ext.getStore('ModuleMachine').loadData([],false);
        //Ext.getStore('Office').loadData([],false);
        var strOffice = Ext.getStore("Office");
        strOffice.load();
        me.clearControl();

        //Ext.ComponentQuery.query('#modulemachGrdModuleMachineInfo')[0].getView().refresh();




    },

    onModulemachGrdModuleItemClick: function(dataview, record, item, index, e, eOpts) {
        var appid = Ext.ComponentQuery.query('#modulemachGrdApplication')[0].getSelectionModel().getSelection()[0];
        var modid = Ext.ComponentQuery.query('#modulemachGrdModule')[0].getSelectionModel().getSelection()[0];

        console.log(appid+','+modid);

        Ext.getStore('ModuleMachine').load({params:{appId:appid.data.ApplicationID,modId:modid.data.ModuleID}});
        Ext.getStore('ModuleMachine').loadData([],false);
        var strOffice = Ext.getStore("Office");
        strOffice.load();
        //Ext.ComponentQuery.query('#modulemachGrdModuleMachineInfo')[0].getView().refresh();

        //Ext.getStore('Office').load();

    },

    onBtnAddModuleMachineClick: function(button, e, eOpts) {
        var me=this;
        /*
        var form = button.up('form').getForm();

        if(!form.isValid())
        {
        //msg("WARNING","Please Fill the required fields !!!");    
        return;
    }
    */

    if (me.validateAddMM() === false)
    return false;

    var mmStore= Ext.ComponentQuery.query('#modulemachGrdModuleMachineInfo')[0].getStore();
    var modid = Ext.ComponentQuery.query('#modulemachGrdModule')[0].getSelectionModel().getSelection()[0].data.ModuleID;
    var appid = Ext.ComponentQuery.query('#modulemachGrdApplication')[0].getSelectionModel().getSelection()[0].data.ApplicationID;

    var cboOffice =  Ext.ComponentQuery.query('#modulemachcboOffice')[0].getValue();
    var txtMacAddress = Ext.ComponentQuery.query("#txtMacAddress")[0].getValue();
    var txtIpAddress =  Ext.ComponentQuery.query("#txtIpAddress")[0].getValue();
    var txtFromDate =  Ext.ComponentQuery.query("#txtFromDate")[0].getValue();
    var txtToDate = Ext.ComponentQuery.query("#txtToDate")[0].getValue();
    var action='';

    if( Ext.ComponentQuery.query('#modulemachGrdModuleMachineInfo')[0].getSelectionModel().getCount()>0)
    {

        action=Ext.ComponentQuery.query('#modulemachGrdModuleMachineInfo')[0].getSelectionModel().getSelection()[0].data.Action=="A"?"A":"E" ;

    }
    else
    {
        action='A';
    }


    var rec={ApplicationID:appid,ModuleID:modid,MacAddress:txtMacAddress,FromDate:txtFromDate,ToDate:txtToDate,OfficeCode:cboOffice,IpAddress:txtIpAddress,Action:action};


    if( Ext.ComponentQuery.query('#modulemachGrdModuleMachineInfo')[0].getSelectionModel().getCount()>0)
    {
        Ext.ComponentQuery.query('#modulemachGrdModuleMachineInfo')[0].getSelectionModel().getSelection()[0].data=rec; 

        Ext.ComponentQuery.query('#modulemachcboOffice')[0].setValue("");
        Ext.ComponentQuery.query("#txtMacAddress")[0].setValue("");
        Ext.ComponentQuery.query("#txtIpAddress")[0].setValue("");
        Ext.ComponentQuery.query("#txtFromDate")[0].setValue("");
        Ext.ComponentQuery.query("#txtToDate")[0].setValue("");

        Ext.ComponentQuery.query("#txtMacAddress")[0].clearInvalid();
        Ext.ComponentQuery.query("#txtIpAddress")[0].clearInvalid();
        Ext.ComponentQuery.query("#txtFromDate")[0].clearInvalid();

    }
    else
    {
        mmStore.add(rec);

        Ext.ComponentQuery.query('#modulemachcboOffice')[0].setValue("");
        Ext.ComponentQuery.query("#txtMacAddress")[0].setValue("");
        Ext.ComponentQuery.query("#txtIpAddress")[0].setValue("");
        Ext.ComponentQuery.query("#txtFromDate")[0].setValue("");
        Ext.ComponentQuery.query("#txtToDate")[0].setValue("");

        Ext.ComponentQuery.query("#txtMacAddress")[0].clearInvalid();
        Ext.ComponentQuery.query("#txtIpAddress")[0].clearInvalid();
        Ext.ComponentQuery.query("#txtFromDate")[0].clearInvalid();

    }
    Ext.ComponentQuery.query('#modulemachGrdModuleMachineInfo')[0].bindStore(mmStore); 




    },

    onModulemachGrdModuleMachineInfoItemClick: function(dataview, record, item, index, e, eOpts) {
        /*
        var combo= Ext.ComponentQuery.query('#modulemachcboOffice')[0];
        if(combo)
        {    
        combo.setValue(record.data.OfficeNameEnglish);
        }

        Ext.ComponentQuery.query("#txtMacAddress")[0].setValue(record.data.MacAddress);
        Ext.ComponentQuery.query("#txtIpAddress")[0].setValue(record.data.IpAddress);
        Ext.ComponentQuery.query("#txtFromDate")[0].setValue(record.data.FromDate);
        Ext.ComponentQuery.query("#txtToDate")[0].setValue(record.data.ToDate);

        */
    },

    onBtnMMSubmitClick: function(button, e, eOpts) {
        var me=this;

        if(me.validateSubmit() === false)
        return false ;
        /*
        var form = button.up('form').getForm();

        if(!form.isValid())
        {
        //msg("WARNING","Please Fill the required fields !!!");    
        return;
    }
    */
    var mmStore= Ext.ComponentQuery.query('#modulemachGrdModuleMachineInfo')[0].getStore();

    mmStore.filter(function(item){
        return (item.get("Action")== 'A' || item.get("Action")== 'E');
    });

    var postData=me.getJson(mmStore);

    Ext.Ajax.request({
        url: '../Handlers/Security/ModuleMachineHandler.ashx?method=SaveModuleMachine',
        params: {moduleMachine:JSON.stringify(postData)},
        success: function ( result, request ) {


            me.msg('SUCCESS','Data Saved Successfully'); 
            Ext.getStore('ModuleMachine').loadData([],false);
            Ext.getStore('Module').loadData([],false);
            // Ext.getStore('ModuleMachine').removeAll();
            // Ext.getStore('Module').removeAll();
            Ext.ComponentQuery.query('#modulemachcboOffice')[0].setValue("");
            Ext.ComponentQuery.query("#txtMacAddress")[0].setValue("");
            Ext.ComponentQuery.query("#txtIpAddress")[0].setValue("");
            Ext.ComponentQuery.query("#txtFromDate")[0].setValue("");
            Ext.ComponentQuery.query("#txtToDate")[0].setValue("");
            Ext.ComponentQuery.query("#txtMacAddress")[0].clearInvalid();
            Ext.ComponentQuery.query("#txtIpAddress")[0].clearInvalid();
            Ext.ComponentQuery.query("#txtFromDate")[0].clearInvalid();
            Ext.ComponentQuery.query('#modulemachGrdModuleMachineInfo')[0].getSelectionModel().deselectAll();
            Ext.ComponentQuery.query('#modulemachGrdModule')[0].getSelectionModel().deselectAll();
            Ext.ComponentQuery.query('#modulemachGrdApplication')[0].getSelectionModel().deselectAll();

        },
        failure: function ( result, request ) {

            me.msg('FAILURE','Operation Failed');      
        }

    });
    },

    onBtnMMCancelClick: function(button, e, eOpts) {
        Ext.ComponentQuery.query('#modulemachcboOffice')[0].setValue("");
        Ext.ComponentQuery.query("#txtMacAddress")[0].setValue("");
        Ext.ComponentQuery.query("#txtIpAddress")[0].setValue("");
        Ext.ComponentQuery.query("#txtFromDate")[0].setValue("");
        Ext.ComponentQuery.query("#txtToDate")[0].setValue("");


        Ext.ComponentQuery.query("#txtMacAddress")[0].clearInvalid();

        Ext.ComponentQuery.query("#txtIpAddress")[0].clearInvalid();

        Ext.ComponentQuery.query("#txtFromDate")[0].clearInvalid();


        Ext.ComponentQuery.query('#modulemachGrdModuleMachineInfo')[0].getSelectionModel().deselectAll();
        Ext.ComponentQuery.query('#modulemachGrdModule')[0].getSelectionModel().deselectAll();
        Ext.ComponentQuery.query('#modulemachGrdApplication')[0].getSelectionModel().deselectAll();
        Ext.getStore('ModuleMachine').loadData([],false);
        Ext.getStore('Module').loadData([],false);

    },

    onModuleMachineBeforeRender: function(component, eOpts) {
        var strOffice = Ext.getStore("Office");
        strOffice.load();

        var strApplication = Ext.getStore("Application");
        strApplication.load();

        var strModuleMachine =  Ext.getStore('ModuleMachine');
        strModuleMachine.load();

        var strModule =    Ext.getStore('Module');
        strModule.load();
    },

    onModuleMachineAfterRender: function(component, eOpts) {

    },

    msg: function(title,message) {

        var rqdIcon = Ext.MessageBox.INFO;

        if(title == "FAILURE")
        rqdIcon = Ext.Msg.ERROR;
        else if(title == "WARNING")
        rqdIcon = Ext.Msg.WARNING;

        Ext.Msg.show({
            title: title,
            msg: message ,
            buttons: Ext.MessageBox.OK,
            icon: rqdIcon
        });
    },

    getJson: function(store) {
        var myItems = store.getRange();
        var myJson = [];

        for (var i in myItems)
        {
            myJson.push(myItems[i].data);
        }

        return myJson;
    },

    validateAddMM: function(store) {
        var me=this;
        var grdApp =  Ext.ComponentQuery.query('#modulemachGrdApplication')[0];

        var grdmodules = Ext.ComponentQuery.query('#modulemachGrdModule')[0];

        var combos= Ext.ComponentQuery.query('#modulemachcboOffice')[0].getValue();
        var txtMac = Ext.ComponentQuery.query("#txtMacAddress")[0].getValue();
        var txtip = Ext.ComponentQuery.query("#txtIpAddress")[0].getValue();
        var txtFdate  =Ext.ComponentQuery.query("#txtFromDate")[0].getValue();
        //var txtTDate = Ext.ComponentQuery.query("#txtToDate")[0].getValue();

        var count = 0;
        var errorMsg = "";


        if(grdApp.getSelectionModel().getSelection().length < 1)
        {

            count++;
            errorMsg = count + ") Please Select Application first !!!";


        }

        if(grdmodules.getSelectionModel().getSelection().length < 1)
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") Please Select Module !!!";


        }

        if(combos === null)
        {
            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") Please Select Office !!!";

        }

        if(txtMac === "")
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") Please Enter Mac Address!!!";

        }

        if(txtip === "")
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") Please Enter IP Address!!!";

        }

        if(txtFdate ==="")
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") Please Enter From Date!!!";

        }
        /*
        if(txtTDate ==="")
        {

        count++;
        errorMsg = errorMsg +'<br/>'+  count + ") Please Enter To Date!!!";

        }
        */

        if(count >0)
        {
            me.msg("WARNING",errorMsg);
            return false;
        }

    },

    clearControl: function() {
        Ext.getStore('ModuleMachine').loadData([],false);
        Ext.getStore('Module').loadData([],false);
        Ext.getStore('Office').loadData([],false);
        Ext.ComponentQuery.query('#modulemachcboOffice')[0].setValue("");
        Ext.ComponentQuery.query("#txtMacAddress")[0].setValue("");
        Ext.ComponentQuery.query("#txtMacAddress")[0].clearInvalid();
        Ext.ComponentQuery.query("#txtIpAddress")[0].setValue("");
        Ext.ComponentQuery.query("#txtIpAddress")[0].clearInvalid();
        Ext.ComponentQuery.query("#txtFromDate")[0].setValue("");
        Ext.ComponentQuery.query("#txtFromDate")[0].clearInvalid();
        Ext.ComponentQuery.query("#txtToDate")[0].setValue("");
        //Ext.ComponentQuery.query('#modulemachGrdModuleMachineInfo')[0].getSelectionModel().deselectAll();
        //Ext.ComponentQuery.query('#modulemachGrdModule')[0].getSelectionModel().deselectAll();

        //Ext.getStore('Office').load();
        //.clearInvalid();
    },

    validateSubmit: function() {
        var me=this;
        var grdApp =  Ext.ComponentQuery.query('#modulemachGrdApplication')[0];

        var grdmodules = Ext.ComponentQuery.query('#modulemachGrdModule')[0];

        var count = 0;
        var errorMsg = "";


        if(grdApp.getSelectionModel().getSelection().length < 1)
        {

            count++;
            errorMsg = count + ") Please Select Application first !!!";


        }

        if(grdmodules.getSelectionModel().getSelection().length < 1)
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") Please Select Module !!!";


        }
        if(count >0)
        {
            me.msg("WARNING",errorMsg);
            return false;
        }

    },

    init: function(application) {
        this.control({
            "#modulemachGrdApplication": {
                itemclick: this.onModulemachGrdApplicationItemClick
            },
            "#modulemachGrdModule": {
                itemclick: this.onModulemachGrdModuleItemClick
            },
            "#btnAddModuleMachine": {
                click: this.onBtnAddModuleMachineClick
            },
            "#modulemachGrdModuleMachineInfo": {
                itemclick: this.onModulemachGrdModuleMachineInfoItemClick
            },
            "#btnMMSubmit": {
                click: this.onBtnMMSubmitClick
            },
            "#btnMMCancel": {
                click: this.onBtnMMCancelClick
            },
            "#ModuleMachine": {
                beforerender: this.onModuleMachineBeforeRender,
                afterrender: this.onModuleMachineAfterRender
            }
        });
    }

});
