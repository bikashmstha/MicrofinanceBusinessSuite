/*
 * File: app/controller/LoanSavingTransfer.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.LoanSavingTransfer', {
    extend: 'Ext.app.Controller',

    stores: [
        'CenterShortStore',
        'MemberShortStore',
        'LoanProductCodeStore',
        'LoanNoStore',
        'CenterShort1Store',
        'LoanPurposePopupStore',
        'SavingTypeStore',
        'ProductTypeStore',
        'LoanHeadingPopupStore'
    ],

    onTxtFromCenterCodeAfterRender: function(component, eOpts) {
        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectTransferCenterPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });

    },

    onTxtFromCenterCodeChange: function(field, newValue, oldValue, eOpts) {
        Ext.ComponentQuery.query('#txtFromMemberCode')[0].reset();
        Ext.ComponentQuery.query('#txtFromMemberDesc')[0].reset();
        Ext.ComponentQuery.query('#ddlFromLoanType')[0].reset();
        Ext.ComponentQuery.query('#txtFromLoanNo')[0].reset();
        Ext.ComponentQuery.query('#txtFromLoanNoDesc')[0].reset();
        Ext.ComponentQuery.query('#txtFromLoanDateBS')[0].reset();
        Ext.ComponentQuery.query('#txtFromLoanDateAD')[0].reset();
    },

    onTxtFromMemberCodeAfterRender: function(component, eOpts) {

        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectTransferMemberPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });

    },

    onTxtFromMemberCodeChange: function(field, newValue, oldValue, eOpts) {
        Ext.ComponentQuery.query('#ddlFromLoanType')[0].reset();
        Ext.ComponentQuery.query('#txtFromLoanNo')[0].reset();
        Ext.ComponentQuery.query('#txtFromLoanNoDesc')[0].reset();
        Ext.ComponentQuery.query('#txtFromLoanDateBS')[0].reset();
        Ext.ComponentQuery.query('#txtFromLoanDateAD')[0].reset();
    },

    onDdlFromLoanTypeAfterRender: function(component, eOpts) {
        Ext.Ajax.request({
            url:'../Handlers/Finance/Transaction/EditTransaction/LoanTransferProductHandler.ashx',
            params:{method:'GetLoanTransferProduct', ProductName:null
                   },
            success: function ( result, request ) {

                var obj = Ext.decode(result.responseText);
                if(obj.success === 'true'){
                    //console.log("Resu",obj.root);
                    var store =Ext.getStore('LoanProductCodeStore');
                    store.removeAll();
                    store.add(obj.root);


                }else{msg('FAILURE','Could Not Load Data');}
            },
            failure: function(form, action) {
                msg("FAILURE","Could Not Load Data");    }
        });

    },

    onDdlFromLoanTypeChange: function(field, newValue, oldValue, eOpts) {
        Ext.ComponentQuery.query('#txtFromLoanNo')[0].reset();
        Ext.ComponentQuery.query('#txtFromLoanNoDesc')[0].reset();
        Ext.ComponentQuery.query('#txtFromLoanDateBS')[0].reset();
        Ext.ComponentQuery.query('#txtFromLoanDateAD')[0].reset();
    },

    onTxtFromLoanNoAfterRender: function(component, eOpts) {

        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectLoanPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });

    },

    onTxtToCenterCodeAfterRender: function(component, eOpts) {
        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectTransferToCenterPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });

    },

    onTxtToCenterCodeChange: function(field, newValue, oldValue, eOpts) {
        Ext.ComponentQuery.query('#txtToMemberCode')[0].reset();
        Ext.ComponentQuery.query('#txtToMemberDesc')[0].reset();
        Ext.ComponentQuery.query('#ddlToLoanType')[0].reset();
        Ext.ComponentQuery.query('#txtToLoanPurposeCode')[0].reset();
        Ext.ComponentQuery.query('#txtToLoanPurposeDesc')[0].reset();
        Ext.ComponentQuery.query('#txtToLoanDateBS')[0].reset();
        Ext.ComponentQuery.query('#txtToLoanDateAD')[0].reset();
    },

    onTxtToMemberCodeChange: function(field, newValue, oldValue, eOpts) {
        Ext.ComponentQuery.query('#ddlToLoanType')[0].reset();
        Ext.ComponentQuery.query('#txtToLoanPurposeCode')[0].reset();
        Ext.ComponentQuery.query('#txtToLoanPurposeDesc')[0].reset();
        Ext.ComponentQuery.query('#txtToLoanDateBS')[0].reset();
        Ext.ComponentQuery.query('#txtToLoanDateAD')[0].reset();
    },

    onDdlToLoanTypeAfterRender: function(component, eOpts) {
        Ext.Ajax.request({
            url:'../Handlers/Finance/Transaction/EditTransaction/LoanTransferProductHandler.ashx',
            params:{method:'GetLoanTransferProduct', ProductName:null
                   },
            success: function ( result, request ) {

                var obj = Ext.decode(result.responseText);
                if(obj.success === 'true'){
                    //console.log("Resu",obj.root);
                    var store =Ext.getStore('LoanProductCodeStore');
                    store.removeAll();
                    store.add(obj.root);


                }else{msg('FAILURE','Could Not Load Data');}
            },
            failure: function(form, action) {
                msg("FAILURE","Could Not Load Data");    }
        });

    },

    onDdlToLoanTypeChange: function(field, newValue, oldValue, eOpts) {
        Ext.ComponentQuery.query('#txtToLoanPurposeCode')[0].reset();
        Ext.ComponentQuery.query('#txtToLoanPurposeDesc')[0].reset();
        Ext.ComponentQuery.query('#txtToLoanDateBS')[0].reset();
        Ext.ComponentQuery.query('#txtToLoanDateAD')[0].reset();
    },

    onTxtToLoanPurposeCodeAfterRender: function(component, eOpts) {

        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectTransferLoanPurposePopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });

    },

    onTxtSavingFromCenterCodeAfterRender: function(component, eOpts) {
        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectSavingTransferCenterPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });

    },

    onTxtSavingFromCenterCodeChange: function(field, newValue, oldValue, eOpts) {
        Ext.ComponentQuery.query('#txtSavingFromMemberCode')[0].reset();
        Ext.ComponentQuery.query('#txtSavingFromMemberDesc')[0].reset();
        Ext.ComponentQuery.query('#txtFromSavingTypeCode')[0].reset();
        Ext.ComponentQuery.query('#txtFromSavingTypeDesc')[0].reset();
        Ext.ComponentQuery.query('#txtFromAccNo')[0].reset();
        Ext.ComponentQuery.query('#txtFromOpenDateBS')[0].reset();
        Ext.ComponentQuery.query('#txtFromOpenDateAD')[0].reset();
    },

    onTxtSavingFromMemberCodeAfterRender: function(component, eOpts) {

        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectSavingTransferMemberPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });

    },

    onTxtSavingFromMemberCodeChange: function(field, newValue, oldValue, eOpts) {
        Ext.ComponentQuery.query('#txtFromSavingTypeCode')[0].reset();
        Ext.ComponentQuery.query('#txtFromSavingTypeDesc')[0].reset();
        Ext.ComponentQuery.query('#txtFromAccNo')[0].reset();
        Ext.ComponentQuery.query('#txtFromOpenDateBS')[0].reset();
        Ext.ComponentQuery.query('#txtFromOpenDateAD')[0].reset();
    },

    onTxtFromSavingTypeCodeAfterRender: function(component, eOpts) {

        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectSavingTypeTransferPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });

    },

    onTxtSavingToCenterCodeAfterRender: function(component, eOpts) {

        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectSavingTransferCenterToPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });

    },

    onTxtSavingToCenterCodeChange: function(field, newValue, oldValue, eOpts) {
        Ext.ComponentQuery.query('#txtSavingToMemberCode')[0].reset();
        Ext.ComponentQuery.query('#txtSavingToMemberDesc')[0].reset();
        Ext.ComponentQuery.query('#txtSavingTypeToCode')[0].reset();
        Ext.ComponentQuery.query('#txtSavingTypeToDesc')[0].reset();
    },

    onTxtSavingToMemberCodeAfterRender: function(component, eOpts) {

        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectSavingTransferMemberToPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });

    },

    onTxtSavingToMemberCodeChange: function(field, newValue, oldValue, eOpts) {
        Ext.ComponentQuery.query('#txtSavingTypeToCode')[0].reset();
        Ext.ComponentQuery.query('#txtSavingTypeToDesc')[0].reset();
    },

    onTxtSavingTypeToCodeAfterRender: function(component, eOpts) {

        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectLoanProductsPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });

    },

    onBtnSavingTransferClick: function(button, e, eOpts) {
        var obj={
        FromCenterCode: Ext.ComponentQuery.query('#txtSavingFromCenterCode')[0].getValue(),
        FromClientNo: Ext.ComponentQuery.query('#txtSavingFromMemberCode')[0].ClientNo,
        FromSavingProduct: Ext.ComponentQuery.query('#txtFromSavingTypeCode')[0].getValue(),
        FromAccountNo: Ext.ComponentQuery.query('#txtFromAccNo')[0].getValue(),
        FromAccountDate: Ext.ComponentQuery.query('#txtFromOpenDateAD')[0].getValue(),
        ToCenterCode: Ext.ComponentQuery.query('#txtSavingToCenterCode')[0].getValue(),
        ToClientNo: Ext.ComponentQuery.query('#txtSavingToMemberCode')[0].ClientNo,
        ToSavingProduct: Ext.ComponentQuery.query('#txtSavingTypeToCode')[0].getValue(),
        ModifiedOn: getMisDateAD(),
        ModifiedBy: getCurrentUser(),
        TranOfficeCode:getOfficeCode()
        };

         var waitSave = watiMsg('Saving. Please wait ...');
        Ext.Ajax.request({
             url:'../Handlers/Finance/Transaction/EditTransaction/TransferSavingAccountHandler.ashx',
             params:{method:'SaveTransferSavingAccount',transferSavingAccount:JSON.stringify(obj)},
             success: function ( result, request ) {
        waitSave.hide();
                  var out = Ext.decode(result.responseText);
        				if(out.success==='true'){
        					msg('SUCCESS',out.message);

        						}

        				else{msg('FAILURE',out.message);


                  }
             },
             failure: function(form, action) {
        waitSave.hide();var out=Ext.decode(response.responseText);msg('FAILURE',out.message);     }
        });
    },

    onTxtToMemberCodeAfterRender: function(component, eOpts) {

        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectTransferToMemberPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });

    },

    onBtnLoanTransferClick: function(button, e, eOpts) {
        var obj={
        FromCenterCode: Ext.ComponentQuery.query('#txtFromCenterCode')[0].getValue(),
        FromClientNo:  Ext.ComponentQuery.query('#txtFromMemberCode')[0].ClientNo,
        FromLoanProduct: Ext.ComponentQuery.query('#ddlFromLoanType')[0].getValue(),
        FromLoanNo: Ext.ComponentQuery.query('#txtFromLoanNo')[0].getValue(),
        ToCenterCode: Ext.ComponentQuery.query('#txtToCenterCode')[0].getValue(),
        ToClientNo: Ext.ComponentQuery.query('#txtToMemberCode')[0].ClientNo,
        ToLoanProduct: Ext.ComponentQuery.query('#ddlToLoanType')[0].getValue(),
        ToLoanPurpose_Code: Ext.ComponentQuery.query('#txtToLoanPurposeCode')[0].getValue(),
        ModifiedOn: getMisDateAD(),
        ModifiedBy: getCurrentUser(),
        TranOfficeCode: getOfficeCode(),
        OutToLoan_No:null,

        };
        var waitSave = watiMsg('Saving. Please wait ...');
        Ext.Ajax.request({
             url:'../Handlers/Finance/Transaction/EditTransaction/TransferLoanAccountHandler.ashx',
             params:{method:'SaveTransferLoanAccount',transferLoanAccount:JSON.stringify(obj)},
             success: function ( result, request ) {
        waitSave.hide();
                  var out = Ext.decode(result.responseText);
        				if(out.success==='true'){
        					msg('SUCCESS',out.message);
        						}

        				else{msg('FAILURE',out.message);


                  }
             },
             failure: function(form, action) {
        waitSave.hide();var out=Ext.decode(response.responseText);msg('FAILURE',out.message);     }
        });
    },

    init: function(application) {
        this.control({
            "#txtFromCenterCode": {
                afterrender: this.onTxtFromCenterCodeAfterRender,
                change: this.onTxtFromCenterCodeChange
            },
            "#txtFromMemberCode": {
                afterrender: this.onTxtFromMemberCodeAfterRender,
                change: this.onTxtFromMemberCodeChange
            },
            "#ddlFromLoanType": {
                afterrender: this.onDdlFromLoanTypeAfterRender,
                change: this.onDdlFromLoanTypeChange
            },
            "#txtFromLoanNo": {
                afterrender: this.onTxtFromLoanNoAfterRender
            },
            "#txtToCenterCode": {
                afterrender: this.onTxtToCenterCodeAfterRender,
                change: this.onTxtToCenterCodeChange
            },
            "#txtToMemberCode": {
                change: this.onTxtToMemberCodeChange,
                afterrender: this.onTxtToMemberCodeAfterRender
            },
            "#ddlToLoanType": {
                afterrender: this.onDdlToLoanTypeAfterRender,
                change: this.onDdlToLoanTypeChange
            },
            "#txtToLoanPurposeCode": {
                afterrender: this.onTxtToLoanPurposeCodeAfterRender
            },
            "#txtSavingFromCenterCode": {
                afterrender: this.onTxtSavingFromCenterCodeAfterRender,
                change: this.onTxtSavingFromCenterCodeChange
            },
            "#txtSavingFromMemberCode": {
                afterrender: this.onTxtSavingFromMemberCodeAfterRender,
                change: this.onTxtSavingFromMemberCodeChange
            },
            "#txtFromSavingTypeCode": {
                afterrender: this.onTxtFromSavingTypeCodeAfterRender
            },
            "#txtSavingToCenterCode": {
                afterrender: this.onTxtSavingToCenterCodeAfterRender,
                change: this.onTxtSavingToCenterCodeChange
            },
            "#txtSavingToMemberCode": {
                afterrender: this.onTxtSavingToMemberCodeAfterRender,
                change: this.onTxtSavingToMemberCodeChange
            },
            "#txtSavingTypeToCode": {
                afterrender: this.onTxtSavingTypeToCodeAfterRender
            },
            "#btnSavingTransfer": {
                click: this.onBtnSavingTransferClick
            },
            "#btnLoanTransfer": {
                click: this.onBtnLoanTransferClick
            }
        });
    }

});
