/*
 * File: app/controller/MELoanDisbursement.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.MELoanDisbursement', {
    extend: 'Ext.app.Controller',

    stores: [
        'CenterCodeStore',
        'InterestCalcMethodStore',
        'MeLoanDisMemberCodeStore',
        'FundingAgencyStore',
        'LoanStatusStore',
        'LoanPeriodTypeStore',
        'InstallmentPeriodTypeStore',
        'CollateralTypeStore',
        'CollateralDetailsStore',
        'ContraAccountStore',
        'LoanHeadingStore'
    ],

    onBtnDisburseLoanClick: function(button, e, eOpts) {
        var loanDate =Ext.ComponentQuery.query('#txtDateBS')[0].getValue();
        //var loanMaturityDate =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        //var loanProductCode =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        //var clientNo =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        //var loanPurposeCode =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        //var approveLoanAmount =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        var totalLoanAmount =Ext.ComponentQuery.query('#txtAppLoanAmt')[0].getValue();
        var loanPeriodType =Ext.ComponentQuery.query('#ddlPeriodType')[0].getValue();
        var loanPeriod='';
        var graceDays =Ext.ComponentQuery.query('#txtGraceDays')[0].getValue();
        //var employeeId =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        var interestRate =Ext.ComponentQuery.query('#txtInterestRate')[0].getValue();
        var interestCalcMethod =Ext.ComponentQuery.query('#txtInterestCalcMethod')[0].getValue();
        //var loanCaseDate =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        //var loanStatus =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        //var rating =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        var installmentAmount =Ext.ComponentQuery.query('#txtInstallmentAmt')[0].getValue();
        //var refAccountNo =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        var installmentPeriodType =Ext.ComponentQuery.query('#txtInstallmentType')[0].getValue();
        var installmentPeriod =Ext.ComponentQuery.query('#txtInstallmentPeriod')[0].getValue();
        //var principalarrear =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        //var principalAmount =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        //var yearNo =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        //var withdrawlNo =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        //var chkAdjustSaving =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();



        var insurancePolicyNo =Ext.ComponentQuery.query('#txtPolicyNo')[0].getValue();
        //var tranOfficeCode =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        //var fixedPrincipalAmount =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        var countraAccount =Ext.ComponentQuery.query('#txtContraAccount')[0].getValue();
        var deduction1Code =Ext.ComponentQuery.query('#txtDeduction1')[0].getValue();
        //var deduction1Desc =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        //var deductionAmount1 =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        var deduction2Code =Ext.ComponentQuery.query('#txtDeduction2')[0].getValue();
        //var deduction2Desc =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        //var deductionAmount2 =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        var deduction3Code =Ext.ComponentQuery.query('#txtDeduction3')[0].getValue();
        //var deduction3Desc =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        //var deductionAmount3 =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        var deduction4Code =Ext.ComponentQuery.query('#txtDeduction4')[0].getValue();
        //var deduction4Desc =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        //var deductionAmount4 =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();


        //var noOfInstallment =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        var fundingAgencyCode =Ext.ComponentQuery.query('#txtFundingAgency')[0].getValue();
        //var user =Ext.ComponentQuery.query('#ddlCenter')[0].getValue();
        //var action ='I';


         var meLoanDisbursement={
                         LoanDate:loanDate,
                         LoanMaturity_Date:loanMaturityDate,
                         LoanProduct_Code:loanProductCode,
                         ClientNo :clientNo,
                         LoanPurpose_Code:loanPurposeCode,
                         ApprovedLoan_Amount:approveLoanAmount,
                         TotalLoan_Amount:totalLoanAmount ,
                         LoanPeriod_Type:loanPeriodType,
                         LoanPeriod:loanPeriod,
                         GraceDays :graceDays ,
                         EmployeeId:employeeId ,
                         InterestRate:interestRate,
                         InterestCalc_Method:interestCalcMethod,
                         LoanClose_Date:loanCaseDate,
                         LoanStatus:loanStatus,
                         Rating :rating,
                         InstallmentAmount:installmentAmount ,
                         RefAccount_No:refAccountNo ,
                         InstallmentPeriod_Type:installmentPeriodType,
                         InstallmentPeriod:installmentPeriod,
                         PrincipalArrear:principalarrear,
                         PrincipalAmount :principalAmount,
                         YearNo:yearNo  ,
                         WithdrawalNo:withdrawlNo,


                         ChkAdjust_Saving:chkAdjustSaving,
                         SavingAccount_No:'' ,
                         InsurancePolicy_No :insurancePolicyNo,
                         TranOffice_Code:tranOfficeCode ,
                         FixedPrincipal_Amount:fixedPrincipalAmount,
                         Deduction1Code:deduction1Code  ,
                         Deduction1Desc:deduction1Desc ,
                         DeductionAmount1:deductionAmount1 ,
                         Deduction2Code :deduction2Code,
                         Deduction2Desc:deduction2Desc  ,
                         DeductionAmount2:deductionAmount2,
                         Deduction3Code :deduction3Code,
                         Deduction3Desc:deduction3Desc,
                         DeductionAmount3:deductionAmount3,
                         Deduction4Code :deduction4Code,
                         Deduction4Desc:deduction4Desc,
                         DeductionAmount4:deductionAmount4,
                         NoOf_Installment:noOfInstallment ,
                         FundingAgency_Code :fundingAgencyCode ,
                         User:user,
                         Action:action

         };


        var wMsg='';
                if(action.getValue()==='I')
                    {
                        wMsg='Inserting....';
                    }
                else
                    {
                        wMsg='Updting....';
                    }
                var waitSave = watiMsg(wMsg);

                Ext.Ajax.request({
                            url: '../Handlers/Finance/Transaction/LoanTransaction/MeLoanDisbursementHandler.ashx',
                            params: {
                                method:'Save',
                                meLoanDisbursement:JSON.stringify(meLoanDisbursement)
                            },
                            success: function(response){
                            waitSave.hide();
                            var out=Ext.decode(response.responseText);
                            console.log(out);

                            if(out.success==="true")
                                {
                                    var message=out.root;
                                    if(message.OutResultCode==="SUCCESS")
                                        {
                                            msg("SUCCESS",message.OutResultMessage,function(){
                                                var grd = Ext.ComponentQuery.query('#grdABBSCharge')[0];

                                                var record = grd.getSelectionModel().getSelection()[0];
                                                record.set('Action','U');

                                            });



                                        }
                                    else
                                        {
                                          msg("FAILURE",message.OutResultMessage);
                                        }
                                }
                                else
                                    {
                                        msg("FAILURE",out.message);
                                    }
                            },
                            failure: function ( result, request ) {
                                waitSave.hide();
                                var out=Ext.decode(response.responseText);
                                msg("FAILURE",out.message);
                            }

                        });










    },

    init: function(application) {
        this.control({
            "#btnDisburseLoan": {
                click: this.onBtnDisburseLoanClick
            }
        });
    }

});
