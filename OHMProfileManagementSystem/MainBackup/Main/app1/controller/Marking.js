/*
 * File: app/controller/Marking.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.Marking', {
    extend: 'Ext.app.Controller',

    stores: [
        'AccountType',
        'MarkCodes',
        'TPMarking'
    ],

    onTxtMarking_PanNoKeypress: function(textfield, e, eOpts) {
        //this.MarkingTaxpayerInfo();

        /*
        if(e.keyCode === 13)
        {

        var pan = Ext.ComponentQuery.query('#txtMarking_PanNo')[0].getValue();
        var acctType = Ext.ComponentQuery.query('#ddlMarkingActType')[0].getValue();

        Ext.Ajax.request({
        url: '../Handlers/Registration/Taxpayer/TaxpayerHandler.ashx',
        params: {
        method:'GetTaxPayer',pan:pan,
        acctType:acctType,
        id: 1
        },
        success: function(response){
        var obj =Ext.decode( response.responseText);
        var taxpayer=obj.root.Taxpayer;
        var address=taxpayer.BusinessAddress.Address;
        var office=taxpayer.Office;

        if(taxpayer.AcctStatus!='A')
        {
        msg('INFO', 'PAN IS NOT ACTIVE');
        return;
        }

        Ext.ComponentQuery.query('#txtMarking_PanNo')[0].setValue(pan);
        //Ext.ComponentQuery.query('#txtMarking_PanNo')[0].setReadOnly(true);
        Ext.ComponentQuery.query('#ddlMarkingActType')[0].setValue(acctType);
        // Ext.ComponentQuery.query('#txtEst_Ret_AccType')[0].setReadOnly(true);
        //Ext.ComponentQuery.query('#hdnEst_Ret_Office_Code')[0].setValue(office.OfficeCode);
        Ext.ComponentQuery.query('#Marking_IROName')[0].setValue(office.OfficeNameNepali);
        Ext.ComponentQuery.query('#txtMarking_Name')[0].setValue(taxpayer.Name);
        Ext.ComponentQuery.query('#txtMarking_Name')[0].setReadOnly(true);
        Ext.ComponentQuery.query('#txtMarking_HouseNo')[0].setValue(address.HouseNo);
        Ext.ComponentQuery.query('#txtMarking_HouseNo')[0].setReadOnly(true);
        Ext.ComponentQuery.query('#txtMarking_WardNo')[0].setValue(address.WardNo);
        Ext.ComponentQuery.query('#txtMarking_WardNo')[0].setReadOnly(true);
        Ext.ComponentQuery.query('#txtMarking_ToleName')[0].setValue(address.StreetName);
        Ext.ComponentQuery.query('#txtMarking_ToleName')[0].setReadOnly(true);

        if(address.LocationType=='MM')
        {
            Ext.ComponentQuery.query('#rdl_Marking_Metro_Mun')[0].setValue(true);
        }
        else if(address.LocationType=='SM')
        {
            Ext.ComponentQuery.query('#rdl_Marking_Sub_Metro_Mun')[0].setValue(true);
        }
        else if(address.LocationType=='MN')
        {
            Ext.ComponentQuery.query('#rdl_Marking_Mun')[0].setValue(true);
        }
        else if(address.LocationType=='VD')
        {
            Ext.ComponentQuery.query('#rdl_Marking_VDC')[0].setValue(true);
        }

        Ext.ComponentQuery.query('#txtMarking_VDCName')[0].setValue(address.VdcTown);
        Ext.ComponentQuery.query('#txtMarking_VDCName')[0].setReadOnly(true);
        Ext.ComponentQuery.query('#txtMarking_DistrictName')[0].setValue(address.DistrictNameNep);
        Ext.ComponentQuery.query('#txtMarking_DistrictName')[0].setReadOnly(true);
        Ext.ComponentQuery.query('#txtMarking_Phone')[0].setValue(address.Phone);
        Ext.ComponentQuery.query('#txtMarking_Phone')[0].setReadOnly(true);
        //Ext.ComponentQuery.query('#txtMarking_Mobile')[0].setValue(true);
        Ext.ComponentQuery.query('#txtMarking_Email')[0].setValue(address.Email);
        Ext.ComponentQuery.query('#txtMarking_Email')[0].setReadOnly(true);
        if(taxpayer.AcctStatus==='A')
        Ext.ComponentQuery.query('#txtMarking_TpOfficeType')[0].setValue('सक्रिय');


    }
    });    


}
*/

    },

    onDdlMarkingActTypeChange: function(field, newValue, oldValue, eOpts) {
        Ext.getStore('TPMarking').loadData([],false);
        Ext.getStore('MarkCodes').loadData([],false);
        this.MarkingTaxpayerInfo();



    },

    onBtnMarking_CancelClick: function(button, e, eOpts) {
        var me = this;
        this.ClearControl();
    },

    onBtnMarking_SaveClick: function(button, e, eOpts) {
        var me = this;
        var frmMarking = Ext.ComponentQuery.query('#frm_Marking')[0].getForm();

        /*
        if(!frmMarking.isValid())
        {
        msg("WARNING","Please Fill the required fields !!!");   
        return;

        }
        else
        {
        this.SaveMarking("I"); 
        }
        */
        this.SaveMarking("I"); 
    },

    onBtnMarking_EditClick: function(button, e, eOpts) {
        var hdnMarking_Action = Ext.ComponentQuery.query('#hdnMarking_Action')[0];
        var lblMarkingAction = Ext.ComponentQuery.query('#lblMarkingAction')[0];
        var txtMarkingEndDate = Ext.ComponentQuery.query('#txtMarkingEndDate')[0];
        var ddlMarkingActType = Ext.ComponentQuery.query('#ddlMarkingActType')[0];

        hdnMarking_Action.setValue("E");
        lblMarkingAction.setValue(" Updating ...कृपया खाताको किसिम,  स्था . ले . नं .,मार्ककोड , शुरुमिति भर्नुहोस्!!!");
        txtMarkingEndDate.setDisabled(false);

        ddlMarkingActType.focus();

    },

    onTxtMarkingStDateKeypress: function(textfield, e, eOpts) {
        var me = this;
        var count = 0;
        var errorMsg = "";
        var loadMsg = "";



        //me.ClearControl();

        Ext.getStore('TPMarking').loadData([],false);
        Ext.getStore('MarkCodes').loadData([],false);

        if(e.keyCode === 13 || e.keyCode === 9)
        {

            var txtMarking_PanNo = Ext.ComponentQuery.query('#txtMarking_PanNo')[0].getValue();
            var ddlMarkingActType = Ext.ComponentQuery.query('#ddlMarkingActType')[0].getValue();
            var ddlMarkingMarkCode = Ext.ComponentQuery.query('#ddlMarkingMarkCode')[0].getValue(); 
            var txtMarkingStDate = Ext.ComponentQuery.query('#txtMarkingStDate')[0].getValue();

            if(txtMarking_PanNo === "")
            {

                count++;
                errorMsg = errorMsg + '<br/>'+ count + ") कृपया स्था . ले . नं . भर्नुहोस्!!!";

            }

            if(txtMarkingStDate === "")
            {

                count++;
                errorMsg = errorMsg + '<br/>'+ count + ") कृपया शुरुमिति भर्नुहोस्!!!";

            }


            if(ddlMarkingActType === "" || ddlMarkingActType === null)
            {

                count++;
                errorMsg = errorMsg +'<br/>'+ count + ") खाताको किसिम  भर्नुहोस्!!!";

            }

            if(ddlMarkingMarkCode === "" || ddlMarkingMarkCode === null )
            {

                count++;
                errorMsg = errorMsg +'<br/>'+ count + ") मार्ककोड छान्नुहोस्!!! ";

            }

            if(count >0)
            {
                msg("WARNING",errorMsg);
                return false;
            }


            var wait = watiMsg('loading ...');

            Ext.Ajax.request({
                url: '../Handlers/Registration/Taxpayer/TaxpayerHandler.ashx',
                params: {
                    method:'GetTaxPayer',pan:txtMarking_PanNo,
                    acctType:ddlMarkingActType,
                    id: 1
                },
                success: function(response){
                    var obj =Ext.decode( response.responseText);
                    //console.log(obj);

                    var taxpayer=obj.root.Taxpayer;
                    var address=taxpayer.BusinessAddress.Address;
                    var office=taxpayer.Office;

                    if(taxpayer.AcctStatus!='A')
                    {
                        msg('INFO', 'PAN IS NOT ACTIVE');
                        return;
                    }

                    Ext.ComponentQuery.query('#txtMarking_PanNo')[0].setValue(txtMarking_PanNo);
                    //Ext.ComponentQuery.query('#txtMarking_PanNo')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#ddlMarkingActType')[0].setValue(ddlMarkingActType);
                    // Ext.ComponentQuery.query('#txtEst_Ret_AccType')[0].setReadOnly(true);
                    //Ext.ComponentQuery.query('#hdnEst_Ret_Office_Code')[0].setValue(office.OfficeCode);
                    Ext.ComponentQuery.query('#Marking_IROName')[0].setValue(office.OfficeNameNepali);
                    Ext.ComponentQuery.query('#txtMarking_Name')[0].setValue(taxpayer.Name);
                    Ext.ComponentQuery.query('#txtMarking_Name')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtMarking_HouseNo')[0].setValue(address.HouseNo);
                    Ext.ComponentQuery.query('#txtMarking_HouseNo')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtMarking_WardNo')[0].setValue(address.WardNo);
                    Ext.ComponentQuery.query('#txtMarking_WardNo')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtMarking_ToleName')[0].setValue(address.StreetName);
                    Ext.ComponentQuery.query('#txtMarking_ToleName')[0].setReadOnly(true);

                    if(address.LocationType=='MM')
                    {
                        Ext.ComponentQuery.query('#rdl_Marking_Metro_Mun')[0].setValue(true);
                    }
                    else if(address.LocationType=='SM')
                    {
                        Ext.ComponentQuery.query('#rdl_Marking_Sub_Metro_Mun')[0].setValue(true);
                    }
                    else if(address.LocationType=='MN')
                    {
                        Ext.ComponentQuery.query('#rdl_Marking_Mun')[0].setValue(true);
                    }
                    else if(address.LocationType=='VD')
                    {
                        Ext.ComponentQuery.query('#rdl_Marking_VDC')[0].setValue(true);
                    }

                    Ext.ComponentQuery.query('#txtMarking_VDCName')[0].setValue(address.VdcTown);
                    Ext.ComponentQuery.query('#txtMarking_VDCName')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtMarking_DistrictName')[0].setValue(address.DistrictNameNep);
                    Ext.ComponentQuery.query('#txtMarking_DistrictName')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtMarking_Phone')[0].setValue(address.Telephone);
                    Ext.ComponentQuery.query('#txtMarking_Phone')[0].setReadOnly(true);
                    //Ext.ComponentQuery.query('#txtMarking_Mobile')[0].setValue(true);
                    Ext.ComponentQuery.query('#txtMarking_Email')[0].setValue(address.Email);
                    Ext.ComponentQuery.query('#txtMarking_Email')[0].setReadOnly(true);
                    if(taxpayer.AcctStatus==='A')
                    Ext.ComponentQuery.query('#txtMarking_TpOfficeType')[0].setValue('सक्रिय');


                }
            });    

            Ext.Ajax.request({
                url:"../Handlers/Registration/Marking/TPMarkingHandler.ashx?method=GetTPMarking",
                params:{pan:txtMarking_PanNo,actType:ddlMarkingActType,markCode:ddlMarkingMarkCode,stDate:txtMarkingStDate},
                success: function ( result, request ) 
                {            

                    wait.hide();            
                    var obj = Ext.decode(result.responseText);            

                    if(obj.success === "false")
                    {   
                        msg("WARNING",obj.message);
                        return;
                    }
                    var txtMarkingEndDate = Ext.ComponentQuery.query('#txtMarkingEndDate')[0];
                    var txtMarkReason = Ext.ComponentQuery.query('#txtMarkReason')[0];
                    var hdnMarkingTranNo = Ext.ComponentQuery.query('#hdnMarkingTranNo')[0];
                    // var action = Ext.ComponentQuery.query('#hdnMarking_Action')[0];

                    var data = obj.root; 

                    txtMarkingEndDate.setValue(data.EndDate);
                    txtMarkReason.setValue(data.MarkReason);
                    hdnMarkingTranNo.setValue(data.TranNo);
                    var btnMarking_Save = Ext.ComponentQuery.query("#btnMarking_Save")[0];
                    var btnMarking_submit = Ext.ComponentQuery.query("#btnMarking_submit")[0];

                    if(obj.message === "F" || data.RStatus === "F") 
                    {

                        btnMarking_Save.setDisabled(true);
                        btnMarking_submit.setDisabled(true);
                        msg("WARNING","This Record is already Finalized !!!");
                        return;                
                    }
                    else if(obj.message === "D" || data.RStatus === "D") 
                    {

                        btnMarking_Save.setDisabled(true);
                        btnMarking_submit.setDisabled(true);
                        msg("WARNING","This Record is already Deleted !!!");
                        return;                
                    }


                },
                failure: function ( result, request ) {

                    wait.hide();


                    msg("FAILURE","Error in Fetching Data !!!");
                }
            });





        }

    },

    onBtnMarking_ShowMarkClick: function(button, e, eOpts) {
        var me = this;
        var count = 0;
        var errorMsg = "";
        var loadMsg = "";

        Ext.getStore('TPMarking').loadData([],false);
        Ext.getStore('MarkCodes').loadData([],false);

        var txtMarking_PanNo = Ext.ComponentQuery.query('#txtMarking_PanNo')[0].getValue();
        var ddlMarkingActType = Ext.ComponentQuery.query('#ddlMarkingActType')[0].getValue();
        if(txtMarking_PanNo === "")
        {

            count++;
            errorMsg = errorMsg + '<br/>'+ count + ") कृपया स्था . ले . नं . भर्नुहोस्!!!";

        }

        if(ddlMarkingActType === "" || ddlMarkingActType === null)
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") खाताको किसिम  भर्नुहोस्!!!";

        }
        if(count >0)
        {
            msg("WARNING",errorMsg);
            return false;
        }


        var wait = watiMsg('loading ...');  

        Ext.Ajax.request({
            url:"../Handlers/Registration/Marking/TPMarkingHandler.ashx?method=GetTPMarkingInfoWithPanAccType",
            params:{pan:txtMarking_PanNo,actType:ddlMarkingActType},
            success: function ( result, request ) 
            {            

                wait.hide();            
                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }

                var data = obj.root; 
                var strMarking  =  Ext.getStore('TPMarking');
                strMarking.add(obj.root); 
                var grd = Ext.ComponentQuery.query('#grdMarking')[0];
                grd.bindStore(strMarking);
                //console.log("store loaded " ,grd.getStore());

            },
            failure: function ( result, request ) {

                wait.hide();


                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    onBtnMarking_submitClick: function(button, e, eOpts) {
        var me = this;
        var count = 0;
        var errorMsg = "";
        var loadMsg = "";
        var frmMarking = Ext.ComponentQuery.query('#frm_Marking')[0].getForm();

        var txtMarking_PanNo = Ext.ComponentQuery.query('#txtMarking_PanNo')[0].getValue();
        var ddlMarkingActType = Ext.ComponentQuery.query('#ddlMarkingActType')[0].getValue();
        var ddlMarkingMarkCode = Ext.ComponentQuery.query('#ddlMarkingMarkCode')[0].getValue(); 
        var txtMarkingStDate = Ext.ComponentQuery.query('#txtMarkingStDate')[0].getValue();
        var txtMarkingEndDate = Ext.ComponentQuery.query('#txtMarkingEndDate')[0].getValue();
        var action = Ext.ComponentQuery.query('#hdnMarking_Action')[0].getValue();

        if(txtMarking_PanNo === "")
        {

            count++;
            errorMsg = errorMsg + '<br/>'+ count + ") कृपया स्था . ले . नं . भर्नुहोस्!!!";

        }

        if(txtMarkingStDate === "")
        {

            count++;
            errorMsg = errorMsg + '<br/>'+ count + ") कृपया शुरुमिति भर्नुहोस्!!!";

        }


        if(ddlMarkingActType === "" || ddlMarkingActType === null)
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") खाताको किसिम  भर्नुहोस्!!!";

        }

        if(ddlMarkingMarkCode === "" || ddlMarkingMarkCode === null )
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") मार्ककोड छान्नुहोस्!!! ";

        }

        if(count >0)
        {
            msg("WARNING",errorMsg);
            return false;
        }












        if(action == "E" && txtMarking_PanNo  === "" && ddlMarkingActType === "" &&ddlMarkingMarkCode === "" && txtMarkingStDate)
        {
            msg("WARNING","Please Enter PAN,ACC Type,Mark Code,Marking Statart Date !!!");
            return;
        }
        /*
        if(!frmMarking.isValid())
        {
        msg("WARNING","Please Fill the required fields !!!");   
        return;

        }
        */

        Ext.Msg.confirm('Confirm Action', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
            if(btn == 'yes'){

                me.SaveMarking("F"); 
                return true;
            }
        }, this);




    },

    SaveMarking: function(rStatus) {
        var me = this;
        var count = 0;
        var errorMsg = "";
        var loadMsg = "";
        var txtMarking_PanNo = Ext.ComponentQuery.query('#txtMarking_PanNo')[0].getValue();//
        var ddlMarkingActType = Ext.ComponentQuery.query('#ddlMarkingActType')[0].getValue();//
        var ddlMarkingMarkCode = Ext.ComponentQuery.query('#ddlMarkingMarkCode')[0].getValue(); //
        var txtMarkingStDate = Ext.ComponentQuery.query('#txtMarkingStDate')[0].getValue();//
        var txtMarkingEndDate = Ext.ComponentQuery.query('#txtMarkingEndDate')[0].getValue();
        var txtMarkReason = Ext.ComponentQuery.query('#txtMarkReason')[0].getValue();
        var tranNo = Ext.ComponentQuery.query('#hdnMarkingTranNo')[0].getValue();
        var action = Ext.ComponentQuery.query('#hdnMarking_Action')[0].getValue();



        if(txtMarking_PanNo === "")
        {

            count++;
            errorMsg = errorMsg + '<br/>'+ count + ") कृपया स्था . ले . नं . भर्नुहोस्!!!";

        }

        if(txtMarkingStDate === "")
        {

            count++;
            errorMsg = errorMsg + '<br/>'+ count + ") कृपया शुरुमिति भर्नुहोस्!!!";

        }


        if(ddlMarkingActType === "" || ddlMarkingActType === null)
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") खाताको किसिम  भर्नुहोस्!!!";

        }

        if(ddlMarkingMarkCode === "" || ddlMarkingMarkCode === null )
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") मार्ककोड छान्नुहोस्!!! ";

        }

        if(count >0)
        {
            msg("WARNING",errorMsg);
            return false;
        }





        if(action == "E")
        {
            loadMsg = "Updating ...";
        }
        else
        {
            loadMsg = "Saving ...";    
        }

        var marking = "";
        marking = { 
            TPIN:txtMarking_PanNo,
            AcctType:ddlMarkingActType,
            MarkCode:ddlMarkingMarkCode,
            StartDate:txtMarkingStDate,
            EndDate:txtMarkingEndDate,
            MarkReason:txtMarkReason,
            UserID:"",
            TranNo:tranNo !== ""?tranNo:null,
            RStatus:rStatus,
            Action:action!== ""?action:""
        };


        var waitSave = watiMsg('Saving ...');

        //------------------------------------------------------
        // NB: Posting Data to Server
        //------------------------------------------------------
        Ext.Ajax.request({
            url:"../Handlers/Registration/Marking/TPMarkingHandler.ashx?method=SaveTPMarking",
            params:{tPMarking:JSON.stringify(marking)},
            success: function ( result, request ){
                waitSave.hide();
                var obj = Ext.decode(result.responseText);

                if(obj.success == "false" && obj.message === "ErrorDuplicate data !")
                {
                    msg("WARNING","Taxpayer is Already Marked !!!");
                    return;
                }

                msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);

                if(obj.success === "false") return;
                me.ClearControl();



            },

            failure: function ( result, request ){

                waitSave.hide();

                msg("FAILURE","Error in Fetching Data !!!");
                return;
            }

        });


    },

    ClearControl: function() {
        Ext.ComponentQuery.query('#txtMarking_PanNo')[0].setValue("");
        Ext.ComponentQuery.query('#txtMarking_PanNo')[0].clearInvalid();
        Ext.ComponentQuery.query('#ddlMarkingActType')[0].setValue("");
        Ext.ComponentQuery.query('#ddlMarkingActType')[0].clearInvalid();
        Ext.ComponentQuery.query('#ddlMarkingMarkCode')[0].setValue("");
        Ext.ComponentQuery.query('#ddlMarkingMarkCode')[0].clearInvalid();
        Ext.ComponentQuery.query('#txtMarkingStDate')[0].setValue("");
        Ext.ComponentQuery.query('#txtMarkingStDate')[0].clearInvalid();
        Ext.ComponentQuery.query('#txtMarkingEndDate')[0].setValue("");
        Ext.ComponentQuery.query('#txtMarkReason')[0].setValue("");
        Ext.ComponentQuery.query('#hdnMarkingTranNo')[0].setValue();
        Ext.ComponentQuery.query('#hdnMarking_Action')[0].getValue();
        //Ext.getStore('MarkCodes').loadData([],false);
        Ext.getStore('TPMarking').loadData([],false);
        Ext.ComponentQuery.query('#hdnMarking_Action')[0].setValue("");
        Ext.ComponentQuery.query('#lblMarkingAction')[0].setValue("");

        // Taxpaye Info clear 

        Ext.ComponentQuery.query('#Marking_IROName')[0].setValue("");
        Ext.ComponentQuery.query('#txtMarking_Name')[0].setValue("");
        Ext.ComponentQuery.query('#txtMarking_HouseNo')[0].setValue("");
        Ext.ComponentQuery.query('#txtMarking_WardNo')[0].setValue("");
        Ext.ComponentQuery.query('#txtMarking_ToleName')[0].setValue("");
        Ext.ComponentQuery.query('#rdl_Marking_Metro_Mun')[0].setValue(false);
        Ext.ComponentQuery.query('#rdl_Marking_Sub_Metro_Mun')[0].setValue(false);
        Ext.ComponentQuery.query('#rdl_Marking_Mun')[0].setValue(false);
        Ext.ComponentQuery.query('#rdl_Marking_VDC')[0].setValue(false);
        Ext.ComponentQuery.query('#txtMarking_VDCName')[0].setValue("");
        Ext.ComponentQuery.query('#txtMarking_DistrictName')[0].setValue("");
        Ext.ComponentQuery.query('#txtMarking_Phone')[0].setValue("");
        Ext.ComponentQuery.query('#txtMarking_Mobile')[0].setValue("");
        Ext.ComponentQuery.query('#txtMarking_Email')[0].setValue("");
        Ext.ComponentQuery.query('#txtMarking_TpOfficeType')[0].setValue("");

        var btnMarking_Save = Ext.ComponentQuery.query("#btnMarking_Save")[0];
        var btnMarking_submit = Ext.ComponentQuery.query("#btnMarking_submit")[0];
        btnMarking_Save.setDisabled(false);
        btnMarking_submit.setDisabled(false);


    },

    MarkingTaxpayerInfo: function() {
        //var offCode = Ext.ComponentQuery.query('#ForeignTaxCreditClaimLoginOffice')[0].getValue();


        var pan = Ext.ComponentQuery.query('#txtMarking_PanNo')[0].getValue();
        var acctType = Ext.ComponentQuery.query('#ddlMarkingActType')[0].getValue();
        LoadTaxpayerInfoWithValidPan(pan,acctType,function(data){
            var taxpayer = data.root.Taxpayer;
            var address = taxpayer.BusinessAddress.Address;
            var office = taxpayer.Office;

            if(taxpayer.AcctStatus === "D")
            {
                msg("WARNING","PAN is Deactivated !!!");
                return;
            }
            /*
            if(offCode != office.OfficeCode)
            {
            msg("WARNING","PAN is not Registered in this office !!!");

            return;
            }
            */

            Ext.ComponentQuery.query('#txtMarking_PanNo')[0].setValue(pan);
            //Ext.ComponentQuery.query('#txtMarking_PanNo')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#ddlMarkingActType')[0].setValue(acctType);
            // Ext.ComponentQuery.query('#txtEst_Ret_AccType')[0].setReadOnly(true);
            //Ext.ComponentQuery.query('#hdnEst_Ret_Office_Code')[0].setValue(office.OfficeCode);
            Ext.ComponentQuery.query('#Marking_IROName')[0].setValue(office.OfficeNameNepali);
            Ext.ComponentQuery.query('#txtMarking_Name')[0].setValue(taxpayer.Name);
            Ext.ComponentQuery.query('#txtMarking_Name')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtMarking_HouseNo')[0].setValue(address.HouseNo);
            Ext.ComponentQuery.query('#txtMarking_HouseNo')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtMarking_WardNo')[0].setValue(address.WardNo);
            Ext.ComponentQuery.query('#txtMarking_WardNo')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtMarking_ToleName')[0].setValue(address.StreetName);
            Ext.ComponentQuery.query('#txtMarking_ToleName')[0].setReadOnly(true);

            if(address.LocationType=='MM')
            {
                Ext.ComponentQuery.query('#rdl_Marking_Metro_Mun')[0].setValue(true);
            }
            else if(address.LocationType=='SM')
            {
                Ext.ComponentQuery.query('#rdl_Marking_Sub_Metro_Mun')[0].setValue(true);
            }
            else if(address.LocationType=='MN')
            {
                Ext.ComponentQuery.query('#rdl_Marking_Mun')[0].setValue(true);
            }
            else if(address.LocationType=='VD')
            {
                Ext.ComponentQuery.query('#rdl_Marking_VDC')[0].setValue(true);
            }

            Ext.ComponentQuery.query('#txtMarking_VDCName')[0].setValue(address.VdcTown);
            Ext.ComponentQuery.query('#txtMarking_VDCName')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtMarking_DistrictName')[0].setValue(address.DistrictNameNep);
            Ext.ComponentQuery.query('#txtMarking_DistrictName')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtMarking_Phone')[0].setValue(address.Telephone);
            Ext.ComponentQuery.query('#txtMarking_Phone')[0].setReadOnly(true);
            //Ext.ComponentQuery.query('#txtMarking_Mobile')[0].setValue(true);
            Ext.ComponentQuery.query('#txtMarking_Email')[0].setValue(address.Email);
            Ext.ComponentQuery.query('#txtMarking_Email')[0].setReadOnly(true);
            if(taxpayer.AcctStatus==='A')
            Ext.ComponentQuery.query('#txtMarking_TpOfficeType')[0].setValue('सक्रिय');

        });


        Ext.Ajax.request({
            url: '../Handlers/Registration/Marking/MarkCodeHandler.ashx',
            params: {
                method:'GetMarkCodes',acctType:acctType,
                id: 1
            },
            success: function(response){
                var obj =Ext.decode( response.responseText);
                Ext.getStore('MarkCodes').loadData([],false);
                Ext.getStore('MarkCodes').add(obj.root);

            }
        });

    },

    init: function(application) {
        this.control({
            "#txtMarking_PanNo": {
                keypress: this.onTxtMarking_PanNoKeypress
            },
            "#ddlMarkingActType": {
                change: this.onDdlMarkingActTypeChange
            },
            "#btnMarking_Cancel": {
                click: this.onBtnMarking_CancelClick
            },
            "#btnMarking_Save": {
                click: this.onBtnMarking_SaveClick
            },
            "#btnMarking_Edit": {
                click: this.onBtnMarking_EditClick
            },
            "#txtMarkingStDate": {
                keypress: this.onTxtMarkingStDateKeypress
            },
            "#btnMarking_ShowMark": {
                click: this.onBtnMarking_ShowMarkClick
            },
            "#btnMarking_submit": {
                click: this.onBtnMarking_submitClick
            }
        });
    }

});
