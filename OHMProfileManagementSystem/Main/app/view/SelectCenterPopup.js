/*
 * File: app/view/SelectCenterPopup.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.SelectCenterPopup', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.form.field.Text',
        'Ext.button.Button',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Column',
        'Ext.selection.RowModel'
    ],

    height: 500,
    itemId: 'SelectCenterPopup',
    width: 900,
    title: 'Select Centers',
    maximizable: true,
    minimizable: true,
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'container',
                    layout: {
                        type: 'table',
                        columns: 2
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            itemId: 'txtSearchCenter',
                            fieldLabel: 'Search'
                        },
                        {
                            xtype: 'button',
                            itemId: 'btnSearchCenter',
                            text: 'Search',
                            listeners: {
                                click: {
                                    fn: me.onBtnSearchCenterClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'gridpanel',
                            colspan: 2,
                            itemId: 'grdSearchCenter',
                            width: 700,
                            title: '',
                            store: 'CenterCodeStore',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    width: 89,
                                    dataIndex: 'CenterCode',
                                    text: 'Center Code'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 242,
                                    dataIndex: 'CenterName',
                                    text: 'Center Name'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 93,
                                    dataIndex: 'EmployeeId',
                                    text: 'Employee Id'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 233,
                                    dataIndex: 'EmployeeName',
                                    text: 'Employee Name'
                                }
                            ],
                            selModel: Ext.create('Ext.selection.RowModel', {
                                listeners: {
                                    beforeselect: {
                                        fn: me.onRowModelBeforeSelect,
                                        scope: me
                                    }
                                }
                            })
                        }
                    ]
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onSelectCenterPopupAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onBtnSearchCenterClick: function(button, e, eOpts) {
        var waitSave = watiMsg('Loading Data. Please wait ...');
        Ext.Ajax.request({
            url:'../Handlers/Finance/Maintenance/CenterHandler.ashx',
            params:{method:'GetCenterListLov', offCode:getOfficeCode(), centerName:Ext.ComponentQuery.query('#txtSearchCenter')[0].getValue()
                   },
            success: function ( result, request ) {

                var obj = Ext.decode(result.responseText);
                if(obj.success === 'true'){
                    //console.log("Resu",obj.root);
                    var store =Ext.getStore('CenterCodeStore');
                    store.removeAll();
                    store.add(obj.root);
                    waitSave.hide();

                }else{msg('FAILURE','Could Not Load Data');waitSave.hide();}
            },
            failure: function(form, action) {
                msg("FAILURE","Could Not Load Data"); waitSave.hide();   }
        });
    },

    onRowModelBeforeSelect: function(rowmodel, record, index, eOpts) {
        Ext.MessageBox.confirm('Select', 'Are you sure ?', function(btn){

           if(btn === 'yes'){


               Ext.ComponentQuery.query('#txtCenterCode')[0].setValue(record.data.CenterCode);
               Ext.ComponentQuery.query('#txtCenterDesc')[0].setValue(record.data.CenterName);
               Ext.ComponentQuery.query('#txtEmpId')[0].setValue(record.data.EmployeeId);
               Ext.ComponentQuery.query('#txtEmpDesc')[0].setValue(record.data.EmployeeName);



           }

           else
           {

           }
            var v=Ext.ComponentQuery.query('#SelectCenterPopup')[0];

            v.close();
        });





    },

    onSelectCenterPopupAfterRender: function(component, eOpts) {
        Ext.Ajax.request({
            url:'../Handlers/Finance/Maintenance/CenterHandler.ashx',
            params:{method:'GetCenterListLov', offCode:getOfficeCode(), centerName:null
                   },
            success: function ( result, request ) {

                var obj = Ext.decode(result.responseText);
                if(obj.success === 'true'){
                    //console.log("Resu",obj.root);
                    var store =Ext.getStore('CenterCodeStore');
                    store.removeAll();
                    store.add(obj.root);


                }else{msg('FAILURE','Could Not Load Data');}
            },
            failure: function(form, action) {
                msg("FAILURE","Could Not Load Data");    }
        });

    }

});