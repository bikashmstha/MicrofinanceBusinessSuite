/*
 * File: app/controller/TDSAuthorizeUpdate.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.TDSAuthorizeUpdate', {
    extend: 'Ext.app.Controller',

    models: [
        'TDSUpdateFields',
        'TDSUpdateVouchFields'
    ],
    stores: [
        'TDSUpdateFields',
        'TDSUpdateVouchFields'
    ],
    views: [
        'TDSAuthorizeUpdate'
    ],

    onBtnAUTDSAddClick: function(button, e, eOpts) {
        var btnAdd = Ext.ComponentQuery.query("#btnAUTDSAdd")[0];
        var grid = Ext.ComponentQuery.query('#grdAUTDSUpdateFields')[0];

        var item = Ext.getStore('TDSUpdateFields').data.items;

        for(var j=0;j<item.length;j++)
        {
            var rec = item[j].data;
            if(rec.FieldName===""&&rec.OldValue===null&&rec.NewValue===null&&rec.Comment==="")
            {
                msg("WARINING","Null values are not allowed");
                return false;
            }
        }

        //var hdnMsg = Ext.ComponentQuery.query("#hdnDSMsg")[0];
        //var message = hdnMsg.getValue();

        /*if(message!=="")
        {
        msg("WARNING",message);
        return false;
        }*/

        var row={FieldName:'',
                OldValue:null,
                NewValue:null,
                Comment:''
            };

        grid.store.add(row);
        console.log("after grid add");
        var col = grid.headerCt.getHeaderAtIndex(0);
        var rows = grid.store.data.items;
        var record = rows[rows.length-1];
        grid.getPlugin('roweditAUTDSUpdateFields').startEdit(record, col);
    },

    onBtnAUTDSAddVouchClick: function(button, e, eOpts) {
        var btnAdd = Ext.ComponentQuery.query("#btnAUTDSAddVouch")[0];
        var grid = Ext.ComponentQuery.query('#grdAUTDSUpdateVouchFields')[0];

        var item = Ext.getStore('TDSUpdateVouchFields').data.items;

        for(var j=0;j<item.length;j++)
        {
            var rec = item[j].data;
            if(rec.FieldName===""&&rec.OldValue===null&&rec.NewValue===null&&rec.Comment==="")
            {
                msg("WARINING","Null values are not allowed");
                return false;
            }
        }

        //var hdnMsg = Ext.ComponentQuery.query("#hdnDSMsg")[0];
        //var message = hdnMsg.getValue();

        /*if(message!=="")
        {
        msg("WARNING",message);
        return false;
        }*/

        var row={FieldName:'',
                OldValue:null,
                NewValue:null,
                Comment:''
            };

        grid.store.add(row);
        console.log("after grid add");
        var col = grid.headerCt.getHeaderAtIndex(0);
        var rows = grid.store.data.items;
        var record = rows[rows.length-1];
        grid.getPlugin('roweditAUTDSUpdateVouchFields').startEdit(record, col);
    },

    onBtnAUTDSSubmitClick: function(button, e, eOpts) {

    },

    onBtnAUTDSSaveClick: function(button, e, eOpts) {
        var me = this;

        var hdnAUTDSAction = Ext.ComponentQuery.query("#hdnAUTDSAction")[0].setValue("I");

        me.SaveEdit("I");
    },

    ShowAuthoUpdate: function() {
        Ext.getCmp('cntOMTDS').removeAll();

        var pnlDynamic = Ext.create('MyApp.view.TDSAuthorizeUpdate');

        var pnlToRender = Ext.ComponentQuery.query("#cntOMTDS")[0];

        pnlToRender.add(pnlDynamic);
    },

    Clear: function() {
        var txtAUTDSOffice = Ext.ComponentQuery.query("#txtAUTDSOffice")[0];
        var txtAUTDSReqNo = Ext.ComponentQuery.query("#txtAUTDSReqNo")[0];
        var txtAUTDSReqDate = Ext.ComponentQuery.query("#txtAUTDSReqDate")[0];
        var txtAUTDSReqBy = Ext.ComponentQuery.query("#txtAUTDSReqBy")[0];
        var txtAUTDSTranNo = Ext.ComponentQuery.query("#txtAUTDSTranNo")[0];
        var txtArAUTDSReason = Ext.ComponentQuery.query("#txtArAUTDSReason")[0];
        var txtAUTDSAuthoNo = Ext.ComponentQuery.query("#txtAUTDSAuthoNo")[0];
        var txtAUTDSAuthoDate = Ext.ComponentQuery.query("#txtAUTDSAuthoDate")[0];
        var txtAUTDSAuthoBy = Ext.ComponentQuery.query("#txtAUTDSAuthoBy")[0];
        var txtAUTDSUpDate = Ext.ComponentQuery.query("#txtAUTDSUpDate")[0];
        var txtAUTDSUpBy = Ext.ComponentQuery.query("#txtAUTDSUpBy")[0];

        var tranStore = Ext.getStore('TDSUpdateFields');
        var vouchStore = Ext.getStore('TDSUpdateVouchFields');

        txtAUTDSOffice.setValue('');
        txtAUTDSReqNo.setValue('');
        txtAUTDSReqDate.setValue('');
        txtAUTDSReqBy.setValue('');
        txtAUTDSTranNo.setValue('');
        txtArAUTDSReason.setValue('');
        txtAUTDSAuthoNo.setValue('');
        txtAUTDSAuthoDate.setValue('');
        txtAUTDSAuthoBy.setValue('');  
        txtAUTDSUpDate.setValue(''); 
        txtAUTDSUpBy.setValue('');   

        txtArAUTDSReason.clearInvalid();
        txtAUTDSReqNo.clearInvalid();

        tranStore.loadData([],false);
        vouchStore.loadData([],false);
    },

    SaveEdit: function(value) {
        var me = this;
        var Office = Ext.ComponentQuery.query("#txtAUTDSOffice")[0].getValue();
        var ReqNo = Ext.ComponentQuery.query("#txtAUTDSReqNo")[0].getValue();
        var ReqDate = Ext.ComponentQuery.query("#txtAUTDSReqDate")[0].getValue();
        var ReqBy = Ext.ComponentQuery.query("#txtAUTDSReqBy")[0].getValue();
        var TranNo = Ext.ComponentQuery.query("#txtAUTDSTranNo")[0].getValue();
        var Reason = Ext.ComponentQuery.query("#txtArAUTDSReason")[0].getValue();
        var AuthoNo = Ext.ComponentQuery.query("#txtAUTDSAuthoNo")[0].getValue();
        var AuthoDate = Ext.ComponentQuery.query("#txtAUTDSAuthoDate")[0].getValue();
        var AuthoBy = Ext.ComponentQuery.query("#txtAUTDSAuthoBy")[0].getValue();
        var UpDate = Ext.ComponentQuery.query("#txtAUTDSUpDate")[0].getValue();
        var UpBy = Ext.ComponentQuery.query("#txtAUTDSUpBy")[0].getValue();
        var hdnAction = Ext.ComponentQuery.query("#hdnAUTDSAction")[0].getValue();

        var Form = Ext.ComponentQuery.query("#frmAUTDSForm")[0].getForm();

        if(!Form.isValid())
        {
            msg("WARNING","Please Enter Required Fields!!");
            return false;
        }

        var Update = [];
        //var VouchUpdate = [];

        //var str = Ext.getStore('TDSUpdateFields');
        var grdTrans = Ext.ComponentQuery.query("#grdAUTDSUpdateFields")[0];
        var itm = grdTrans.store.data.items;//Ext.getStore('DTranList').data.items;

        console.log("itm",itm.length);

        if(itm.length!==0)
        {
            for(var i=0;i<itm.length;i++)
            {
                Update.push(itm[i].data);
            }
        }
        //var str = Ext.getStore('TDSUpdateFields');
        var grdVouch = Ext.ComponentQuery.query("#grdAUTDSUpdateVouchFields")[0];
        var item = grdVouch.store.data.items;//Ext.getStore('DTranList').data.items;

        console.log("itm",item.length);

        if(item.length!==0)
        {
            for(var j=0;j<item.length;j++)
            {
                Update.push(item[j].data);
            }
        }

        var params ={
            ReqOffCode:Office,
            ReqNo:ReqNo!==""?totMaAmt:null,
            ReqDate:ReqDate,
            RequestedBy:ReqBy,
            TransactionNo:TranNo,
            ReasonForUp:Reason,
            AuthNo:AuthoNo,
            AuthDate:AuthoDate,
            AuthBy:AuthoBy,
            UpdatedDate:UpDate,
            UpdateStatus:value,
            UpdatedBy:UpBy,
            Action:hdnAction,
            AuthFields:Update
        };

        var waitSave = watiMsg("Loading...");
        Ext.Ajax.request({
            url:"../Handlers/TDS/AuthorizeUpdateHandler.ashx?method=SaveAuthUp",
            params: {authUpdate:JSON.stringify(params)},
            success: function ( result, request ){

                waitSave.hide();

                var obj = Ext.decode(result.responseText);
                var data = obj.root;

                if(obj.success === "true")
                {
                    msg("SUCCESS",obj.message);
                    me.Clear();
                }
                else if(obj.success === "false") 
                {
                    msg("FAILURE",obj.message);
                    return;
                }

            },

            failure: function ( result, request ){

                return;
            }

        });
    },

    init: function(application) {
        this.control({
            "#btnAUTDSAdd": {
                click: this.onBtnAUTDSAddClick
            },
            "#btnAUTDSAddVouch": {
                click: this.onBtnAUTDSAddVouchClick
            },
            "#btnAUTDSSubmit": {
                click: this.onBtnAUTDSSubmitClick
            },
            "#btnAUTDSSave": {
                click: this.onBtnAUTDSSaveClick
            }
        });
    }

});
