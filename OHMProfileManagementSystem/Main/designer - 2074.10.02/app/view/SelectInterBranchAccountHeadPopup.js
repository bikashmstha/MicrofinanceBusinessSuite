/*
 * File: app/view/SelectInterBranchAccountHeadPopup.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.SelectInterBranchAccountHeadPopup', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.Text',
        'Ext.button.Button',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Column',
        'Ext.selection.RowModel',
        'Ext.toolbar.Paging'
    ],

    height: 500,
    itemId: 'SelectInterBranchAccountHeadPopup',
    width: 700,
    autoScroll: true,
    title: 'Select Inter Branch Account Head',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    bodyPadding: 10,
                    title: '',
                    items: [
                        {
                            xtype: 'container',
                            layout: 'table',
                            items: [
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtSearchInterBranchAccountHead',
                                    fieldLabel: 'Search'
                                },
                                {
                                    xtype: 'button',
                                    colspan: 2,
                                    itemId: 'btnSearchInterBranchAccountHead',
                                    margin: '0 0 0 5',
                                    text: 'Search',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnSearchInterBranchAccountHeadClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            itemId: 'grdSearchInterBranchAccountHead',
                            title: '',
                            store: 'AccountHeadSearchStore',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    width: 153,
                                    dataIndex: 'AccountCode',
                                    text: 'Account Code'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'AccountNo',
                                    text: 'AccountNo'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 422,
                                    dataIndex: 'AccountDesc',
                                    text: 'Account Description'
                                }
                            ],
                            selModel: Ext.create('Ext.selection.RowModel', {
                                listeners: {
                                    beforeselect: {
                                        fn: me.onRowModelBeforeSelect,
                                        scope: me
                                    }
                                }
                            })
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'pagingtoolbar',
                            dock: 'bottom',
                            itemId: 'pgsliderInterBranchAccountHead',
                            width: 360,
                            displayInfo: true
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onBtnSearchInterBranchAccountHeadClick: function(button, e, eOpts) {
        var accountHeadDesc=Ext.ComponentQuery.query('#txtSearchInterBranchAccountHead')[0];
        //console.log('districtCode',districtCode);
        Ext.Ajax.request({
            url: '../Handlers/Finance/Maintenance/AccountHeadEntryHandler.ashx',
            params: {
                method:'SearchAccountHead',
               // districtCode:districtCode.getValue(),
                accountHeadDesc: accountHeadDesc.getValue()
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

                                console.log('resp',response);



              if(obj.success === "true")
                        {

                            var store=Ext.getStore('AccountHeadSearchStore');
                            store.removeAll();
                            store.add(obj.root);

                        }
                        else
                        {

                            msg("FAILURE",obj.message);
                        }






            }
        });
    },

    onRowModelBeforeSelect: function(rowmodel, record, index, eOpts) {
        Ext.MessageBox.confirm('Select', 'Are you sure ?', function(btn){

           if(btn === 'yes'){
               console.log('record',record);

               Ext.ComponentQuery.query('#txtInterBranchAccountHeadCode')[0].setValue(record.data.AccountCode);
               Ext.ComponentQuery.query('#txtInterBranchAccountHeadName')[0].setValue(record.data.AccountDesc);


              // return true;
           }
           else
           {

           }
            var v=Ext.ComponentQuery.query('#SelectInterBranchAccountHeadPopup')[0];

            v.close();
        });

    }

});