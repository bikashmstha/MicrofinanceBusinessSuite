/*
 * File: app/view/TDSListWithholdee.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.TDSListWithholdee', {
    extend: 'Ext.panel.Panel',

    frame: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'container',
                    margin: '20 0 0 0',
                    items: [
                        {
                            xtype: 'gridpanel',
                            height: 340,
                            id: 'grdLWTDSList',
                            itemId: 'grdLWTDSList',
                            autoScroll: true,
                            store: 'TDSWithLogList',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    align: 'center',
                                    dataIndex: 'Pan',
                                    text: 'Pan'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 400,
                                    dataIndex: 'WithholdeeName',
                                    text: 'Withholdee Name'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 300,
                                    dataIndex: 'MailID',
                                    text: 'Email Address',
                                    editor: {
                                        xtype: 'textfield',
                                        id: 'txtLWTDSEmail',
                                        itemId: 'txtLWTDSEmail'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    align: 'center',
                                    dataIndex: 'CreatedDate',
                                    text: 'Created On'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    align: 'center',
                                    dataIndex: 'Status',
                                    text: 'Status',
                                    editor: {
                                        xtype: 'combobox',
                                        id: 'cboLWTDSStatus',
                                        itemId: 'cboLWTDSStatus',
                                        displayField: 'status',
                                        queryMode: 'local',
                                        store: 'TDSRegStatus',
                                        valueField: 'id'
                                    }
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 300,
                                    align: 'center',
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e) {
                                                var grid = Ext.ComponentQuery.query("#grdLWTDSList")[0];
                                                var store = Ext.getStore('TDSWithLogList');
                                                var data = grid.store.getAt(rowIndex).data;

                                                var param = {
                                                    Pan:data.Pan,
                                                    PinCode:data.PinCode,
                                                    Pass:data.PinCode,
                                                    CreatedDate:data.CreatedDate,
                                                    CreatedBy:data.CreatedBy,
                                                    MailID:data.MailID,
                                                    Status:data.Status,
                                                    RecStatus:"R"
                                                };

                                                Ext.Ajax.request({
                                                    url:"../Handlers/TDS/ChangeCreateWithholdeeHandler.ashx?method=CreateWithhold",
                                                    params:{objWith:JSON.stringify(param)},
                                                    success: function ( result, request ){

                                                        //waitSave.hide();

                                                        var obj = Ext.decode(result.responseText);
                                                        //var data = obj.root;

                                                        if(obj.success === "true")
                                                        {
                                                            msg("SUCCESS",obj.message);
                                                        }
                                                        else if(obj.success === "false") 
                                                        {
                                                            msg("FAILURE",obj.message);
                                                            return;
                                                        }

                                                    },

                                                    failure: function ( result, request ){

                                                        return;
                                                    }

                                                });
                                            },
                                            altText: 'Reset Password',
                                            icon: '../ITS/resources/images/icons/edit_remove.png',
                                            tooltip: 'Reset Password'
                                        }
                                    ]
                                }
                            ],
                            plugins: [
                                Ext.create('Ext.grid.plugin.RowEditing', {
                                    pluginId: 'roweditTDSLWplugin',
                                    listeners: {
                                        edit: {
                                            fn: me.onGridroweditingpluginEdit,
                                            scope: me
                                        },
                                        canceledit: {
                                            fn: me.onGridroweditingpluginCanceledit,
                                            scope: me
                                        }
                                    }
                                })
                            ]
                        }
                    ]
                },
                {
                    xtype: 'hiddenfield',
                    id: 'hdnTDSLWPass',
                    itemId: 'hdnTDSLWPass',
                    fieldLabel: 'Label'
                },
                {
                    xtype: 'hiddenfield',
                    id: 'hdnTDSLWPinCode',
                    itemId: 'hdnTDSLWPinCode',
                    fieldLabel: 'Label'
                },
                {
                    xtype: 'hiddenfield',
                    id: 'hdnTDSLWCreatedBy',
                    itemId: 'hdnTDSLWCreatedBy',
                    fieldLabel: 'Label'
                }
            ]
        });

        me.callParent(arguments);
    },

    onGridroweditingpluginEdit: function(editor, e, eOpts) {
        //var grid = Ext.ComponentQuery.query("#grdLWTDSList")[0];
        //var store = Ext.getStore('TDSWithLogList');
        //var len = store.length;
        //var data = grid.store.getAt().data;
        //var email = Ext.ComponentQuery.query("#txtLWTDSEmail")[0];
        var Pass = Ext.ComponentQuery.query("#hdnTDSLWPass")[0];
        var CreatedBy = Ext.ComponentQuery.query("#hdnTDSLWCreatedBy")[0];
        var status = Ext.ComponentQuery.query("#cboLWTDSStatus")[0];
        var PinCode = Ext.ComponentQuery.query("#hdnTDSLWPinCode")[0];

        if(status.getValue()==="")
        {
            msg("WARNING","Enter status");
            return false;
        }

        var param = {
            Pan:editor.newValues.Pan,
            PinCode:PinCode.getValue(),
            Pass:Pass.getValue(),
            CreatedDate:editor.newValues.CreatedDate,
            CreatedBy:CreatedBy.getValue(),
            MailID:editor.newValues.MailID,
            Status:editor.newValues.Status,
            RecStatus:"E"
        };

        console.log("param");
        Ext.Ajax.request({
            url:"../Handlers/TDS/ChangeCreateWithholdeeHandler.ashx?method=CreateWithhold",
            params:{objWith:JSON.stringify(param)},
            success: function ( result, request ){

                //waitSave.hide();

                var obj = Ext.decode(result.responseText);
                //var data = obj.root;

                /*if(obj.success === "true")
                {
                msg("SUCCESS",obj.message);
                }*/
                if(obj.success === "false") 
                {
                    msg("FAILURE",obj.message);
                    return;
                }

            },

            failure: function ( result, request ){

                return;
            }

        });
    },

    onGridroweditingpluginCanceledit: function(editor, e, eOpts) {

    }

});