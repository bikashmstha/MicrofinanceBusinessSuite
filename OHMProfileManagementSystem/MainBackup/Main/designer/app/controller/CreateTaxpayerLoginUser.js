/*
 * File: app/controller/CreateTaxpayerLoginUser.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.CreateTaxpayerLoginUser', {
    extend: 'Ext.app.Controller',

    onBtnTaxpayerLoginResetClick: function(button, e, eOpts) {
        this.ClaerControl();
    },

    onFrmCreateTaxpayerLoginUserAfterRender: function(component, eOpts) {
        var offCode = Ext.get('offCode').dom.innerHTML;
        Ext.ComponentQuery.query('#hdnCreateTaxpayerLoginOffice')[0].setValue(offCode);
    },

    onTxtTaxpayerLoginPanBlur: function(component, e, eOpts) {

        var pan = Ext.ComponentQuery.query('#txtTaxpayerLoginPan')[0].getValue();
        var offCode = Ext.ComponentQuery.query('#hdnCreateTaxpayerLoginOffice')[0].getValue();

        LoadTaxpayerInfoWithValidPan(pan,'10',function(data){
            var taxpayer=data.root.Taxpayer;
            var address=taxpayer.BusinessAddress.Address;
            var office=taxpayer.Office;
            if(taxpayer.AcctStatus === "D")
            {
                msg("WARNING","PAN is Deactivated !!!");
                return;
            }
            if(offCode != office.OfficeCode)
            {
                msg("WARNING","PAN is not Registered in this office !!!");

                return;
            }
        });
    },

    onBtnTaxpayerLoginRegisterClick: function(button, e, eOpts) {
        this.SaveCreateTaxpayerLoginUser();
    },

    SaveCreateTaxpayerLoginUser: function() {
        var me = this;
        var count = 0;
        var errorMsg = "";
        var loadMsg = "";

        var txtTaxpayerLoginPan = Ext.ComponentQuery.query("#txtTaxpayerLoginPan")[0].getValue();
        var txtTaxpayerLoginUserName = Ext.ComponentQuery.query("#txtTaxpayerLoginUserName")[0].getValue();

        var txtTaxpayerLoginEmail = Ext.ComponentQuery.query("#txtTaxpayerLoginEmail")[0].getValue();
        var txtTaxpayerLoginPhoneNo = Ext.ComponentQuery.query("#txtTaxpayerLoginPhoneNo")[0].getValue();
        var hdnCreateTaxpayerLoginOffice = Ext.ComponentQuery.query('#hdnCreateTaxpayerLoginOffice')[0].getValue();
        var action = Ext.ComponentQuery.query('#hdnTaxpayerLoginAction')[0].getValue();

        if(txtTaxpayerLoginPan === "")
        {

            count++;
            errorMsg = errorMsg + '<br/>'+ count + ") कृपया स्था . ले . नं . भर्नुहोस्!!!";

        }

        if(txtTaxpayerLoginUserName === "")
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया प्रयोगकर्ताको नाम भर्नुहोस्!!!";

        }
        /*
        if(txtTaxpayerLoginPassWord === "" )
        {

        count++;
        errorMsg = errorMsg +'<br/>'+ count + ") कृपया पासवर्ड भर्नुहोस्!!! ";

        }

        if(txtTaxpayerLoginReTypePassword === "" )
        {

        count++;
        errorMsg = errorMsg +'<br/>'+ count + ") कृपया पुन: पासवर्ड भर्नुहोस्!!! ";

        }


        if(txtTaxpayerLoginPassWord !== txtTaxpayerLoginReTypePassword)
        {

        count++;
        errorMsg = errorMsg +'<br/>'+ count + ") कृपया पासवर्ड र पुन: पासवर्ड मिलेन!!! ";

        }
        */


        if(count >0)
        {
            msg("WARNING",errorMsg);
            return false;
        }



        if(action == "E")
        {
            loadMsg = "Updating ...";
        }
        else
        {
            loadMsg = "Saving ...";
        }



        var DCTBTaxPayerLogin = "";

        DCTBTaxPayerLogin = {
            Pan:txtTaxpayerLoginPan,
            LoginName:txtTaxpayerLoginUserName,
            LoginPass:txtTaxpayerLoginUserName,
            CreatedBy:'',
            CreatedDate:'',
            EmailID:txtTaxpayerLoginEmail,
            PhoneNo:txtTaxpayerLoginPhoneNo,
            Status:'A',
            TranDate:'',
            OffCode:hdnCreateTaxpayerLoginOffice !== ""?hdnCreateTaxpayerLoginOffice:null,
            Action:action !== ""?action:""

        };

        var waitSave = watiMsg(loadMsg);

        //console.log();

        //------------------------------------------------------
        // NB: Posting Data to Server
        //------------------------------------------------------

        Ext.Ajax.request({
            url:"../Handlers/E-SystemServices/Taxpayer/DCTBTaxPayerLoginHandlers.ashx?method=SaveDCTBTaxPayerLogin",
            params:{dCTBTaxPayerLogins:JSON.stringify(DCTBTaxPayerLogin)},
            success: function ( result, request ) {

                waitSave.hide();

                var obj = Ext.decode(result.responseText);
                var dctbForeignTax=obj.root;

                if(obj.success == "false" && obj.message === "ErrorDuplicate data !")
                {
                    msg("WARNING","User Name For this PAN already Exists !!!");
                    return;
                }

                msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);


                if(obj.success === "false") return;
                me.ClaerControl();




            },
            failure: function ( result, request ) {

                waitSave.hide();

                var errMsg = "Error in " + loadMsg;

                msg("FAILURE",errMsg);
                return;
            }

        });

    },

    ClaerControl: function() {
        var txtTaxpayerLoginPan = Ext.ComponentQuery.query("#txtTaxpayerLoginPan")[0];
        var txtTaxpayerLoginUserName  = Ext.ComponentQuery.query("#txtTaxpayerLoginUserName")[0];
        //var txtTaxpayerLoginPassWord = Ext.ComponentQuery.query("#txtTaxpayerLoginPassWord")[0];
        //var txtTaxpayerLoginReTypePassword = Ext.ComponentQuery.query("#txtTaxpayerLoginReTypePassword")[0];
        var txtTaxpayerLoginEmail = Ext.ComponentQuery.query("#txtTaxpayerLoginEmail")[0];
        var txtTaxpayerLoginPhoneNo = Ext.ComponentQuery.query("#txtTaxpayerLoginPhoneNo")[0];

        txtTaxpayerLoginPan.setValue("");
        txtTaxpayerLoginPan.clearInvalid();

        txtTaxpayerLoginUserName.setValue("");
        txtTaxpayerLoginUserName.clearInvalid();

        //txtTaxpayerLoginPassWord.setValue("");
        //txtTaxpayerLoginPassWord.clearInvalid();

        //txtTaxpayerLoginReTypePassword.setValue("");
        //txtTaxpayerLoginReTypePassword.clearInvalid();

        txtTaxpayerLoginEmail.setValue("");
        txtTaxpayerLoginEmail.clearInvalid();


        txtTaxpayerLoginPhoneNo.setValue("");



    },

    init: function(application) {
        this.control({
            "#btnTaxpayerLoginReset": {
                click: this.onBtnTaxpayerLoginResetClick
            },
            "#frmCreateTaxpayerLoginUser": {
                afterrender: this.onFrmCreateTaxpayerLoginUserAfterRender
            },
            "#txtTaxpayerLoginPan": {
                blur: this.onTxtTaxpayerLoginPanBlur
            },
            "#btnTaxpayerLoginRegister": {
                click: this.onBtnTaxpayerLoginRegisterClick
            }
        });
    }

});
