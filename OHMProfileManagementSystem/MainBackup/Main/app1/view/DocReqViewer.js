/*
 * File: app/view/DocReqViewer.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.DocReqViewer', {
    extend: 'Ext.panel.Panel',

    frame: true,
    itemId: 'DocReqViewer',
    title: 'Document Request Viewer',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    height: 400,
                    itemId: 'frmDocReqViewer',
                    maxHeight: 400,
                    minHeight: 400,
                    bodyPadding: 10,
                    title: '',
                    items: [
                        {
                            xtype: 'gridpanel',
                            height: 380,
                            itemId: 'grdDOcReqViewer',
                            autoScroll: true,
                            title: '',
                            store: 'strDocReqViewer',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'REQUEST_ID',
                                    text: 'REQUEST_ID'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'REQUEST_DATE',
                                    text: 'REQUEST_DATE'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'REQUEST_TYPE',
                                    text: 'REQUEST_TYPE'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'DOC_ID',
                                    text: 'Document ID'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'DOC_SUBJECT',
                                    text: 'Document Subject'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'REQ_OFFCODE',
                                    text: 'Request Office'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'REQUEST_BY',
                                    text: 'Request By'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'REQBY_FROM_DATE',
                                    text: 'REQBY_FROM_DATE'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'ENTRY_BY',
                                    text: 'ENTRY_BY'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'ENTRY_DATE',
                                    text: 'ENTRY_DATE'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'TRAN_NO',
                                    text: 'TRAN_NO'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'R_STATUS',
                                    text: 'R_STATUS'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'KEYWORD',
                                    text: 'KEYWORD'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'ID',
                                    text: 'ID'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'REQUEST_FOR',
                                    text: 'REQUEST_FOR'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    itemId: 'Grant',
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {


                                                var me=this;


                                                /*
                                                var offCode=Ext.get('offCode').dom.innerHTML;
                                                var grdDOcReqViewer=Ext.ComponentQuery.query('#grdDOcReqViewer')[0];
                                                var strDocReqViewer=Ext.getStore('strDocReqViewer');
                                                strDocReqViewer.removeAll();
                                                strDocReqAssignment.loadData([],false);
                                                */




                                                var grd=Ext.ComponentQuery.query('#grdDOcReqViewer')[0];
                                                var selectionT=grd.getSelectionModel().getSelection()[0];
                                                console.log("ppp",selectionT);
                                                if(!selectionT)
                                                {
                                                    msg("WARNING","Select");
                                                    return;
                                                }
                                                var selectedIndxT= grd.getStore().indexOf(selectionT);

                                                var utStore =grd.getStore();
                                                console.log("store",utStore);

                                                var REQUEST_TYPE=utStore.getAt(selectedIndxT).data.REQUEST_TYPE;
                                                var DOC_ID=utStore.getAt(selectedIndxT).data.DOC_ID;
                                                var REQ_OFFCODE=utStore.getAt(selectedIndxT).data.REQ_OFFCODE;
                                                var ENTRY_BY=utStore.getAt(selectedIndxT).data.ENTRY_BY;
                                                var R_STATUS=utStore.getAt(selectedIndxT).data.R_STATUS;
                                                var REQUEST_ID=utStore.getAt(selectedIndxT).data.REQUEST_ID;
                                                var REQBY_FROM_DATE=utStore.getAt(selectedIndxT).data.REQBY_FROM_DATE;



                                                console.log("REQUEST_TYPE",REQUEST_TYPE);
                                                //var Doc_ID=utStore.getAt(selectedIndxT).data.DOC_ID; 


                                                var DocAccessControll="";

                                                DocAccessControll=
                                                {
                                                    DOC_ID:DOC_ID,
                                                    ACCESS_ID:null,
                                                    OFFCODE:REQ_OFFCODE,
                                                    USER_ID:ENTRY_BY,
                                                    U_FROM_DATE:REQBY_FROM_DATE,
                                                    APPLICATION_ID:'',
                                                    ROLE_ID:'',
                                                    FROM_DATE:'',
                                                    TO_DATE:'',
                                                    ENTRY_BY:'',
                                                    ENTRY_DATE:'',
                                                    TRAN_NO:'1',
                                                    R_STATUS:R_STATUS,
                                                    REQUEST_ID:REQUEST_ID,
                                                    REQUEST_TYPE:REQUEST_TYPE


                                                };



                                                var watiMsg=waitMsg('Loading ...');

                                                Ext.Ajax.request
                                                ({

                                                    url:'../Handlers/DocumentManagement/DocAccessControllHandler.ashx?method=SaveDocAccessControll',
                                                    params:{docAccessControll:JSON.stringify(DocAccessControll)},



                                                    success:function(result,request){
                                                        var obj=Ext.decode(result.responseText);


                                                        msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);



                                                    },
                                                    failure:function(result, request){
                                                        msg('ERROR OCURRED !!!', 'Error');                 
                                                    }



                                                });





                                            },
                                            icon: '../ITS/resources/images/icons/eye.png'
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});