/*
 * File: app/controller/ChangeOffice.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.ChangeOffice', {
    extend: 'Ext.app.Controller',

    models: [
        'AcctType',
        'OfficeFromTo'
    ],
    stores: [
        'Office',
        'AcctType',
        'OfficeFromTo'
    ],
    views: [
        'ChangeOffice'
    ],

    onPnlChangeOfficeAfterRender: function(component, eOpts) {
        var strOffice = Ext.getStore('Office');
        strOffice.load();
    },

    onTxtPanNoChangeKeypress: function(textfield, e, eOpts) {
        if(e.keyCode === 13)
        {
            var strAcctType = Ext.getStore('AcctType');
            var strOfficeFromTo = Ext.getStore('OfficeFromTo');
            var isValid = false;
            var txtPanNoChange = Ext.ComponentQuery.query("#txtPanNoChange")[0];
            var txtNameChange = Ext.ComponentQuery.query("#txtNameChange")[0];
            var txtAddressChange = Ext.ComponentQuery.query("#txtAddressChange")[0];
            var txtPhoneChange = Ext.ComponentQuery.query("#txtPhoneChange")[0];
            var waitSave = "";

            if(txtPanNoChange.getValue() === "")
            {
                return;
            }


            isValid = ValidatePan(txtPanNoChange.getValue());

            if(isValid === false)
            {
                msg('WARNING', 'Please enter valid PAN !!!');
                return;
            }
            else
            {

                waitSave = Ext.MessageBox.wait('Loading ...');

                strOfficeFromTo.loadData([],false);

                LoadTaxpayerInfoWithValidPan(txtPanNoChange.getValue(),null,function(data){

                    var rec = data.root.Taxpayer;
                    var addr = rec.BusinessAddress.Address;

                    if(rec.AcctStatus === "D")
                    {
                        msg("WARNING","PAN is Deactivated !!!");
                        return;
                    }

                    var address = addr.PoBox+" , "+addr.StreetName;

                    txtNameChange.setValue(rec.Name);
                    txtAddressChange.setValue(address);
                    txtPhoneChange.setValue(rec.Phone);

                });

                //Retrieve AccType using valid PanNo

                strAcctType.load({
                    params:{panNo:txtPanNoChange.getValue()}
                });
            }

            /* if(OffCode != office.OfficeCode)
            {
            msg("WARNING","PAN is not Registered is this office !!!");

            return;
            }*/ 

        }
    },

    onBtnChCancelClick: function(button, e, eOpts) {
        this.clear();
    },

    onTxtPanNoChangeKeydown: function(textfield, e, eOpts) {
        /*var me=this;
        var txtPanNoChange = Ext.ComponentQuery.query("#txtPanNoChange")[0];
        var txtNameChange = Ext.ComponentQuery.query('#txtNameChange')[0];
        var txtAddressChange = Ext.ComponentQuery.query('#txtAddressChange')[0];

        var oldVal = txtPanNoChange.getValue();
        var Name = txtNameChange.getValue();
        var Address = txtAddressChange.getValue();

        if(Name!==""||Address!=="")
        {
        Ext.Msg.confirm('Confirm Action', 'Do you want to change the value?', function(btn) {
        if(btn == 'yes')
        {
        return true;

        }
        else if(btn == 'no')
        {
        txtPanNoChange.setValue(oldVal);
        }

        }, this);
        }*/
    },

    onGrdAccTypeItemClick: function(dataview, record, item, index, e, eOpts) {
        var strAcctType = Ext.getStore('AcctType');
        var storeOffFromTo = Ext.getStore('OfficeFromTo');
        var txtPanNoCh = Ext.ComponentQuery.query("#txtPanNoChange")[0];
        var waitSave = "";
        var account = record.data.AccType;
        var pan = txtPanNoCh.getValue();
        var hdnAccType = Ext.ComponentQuery.query('#hdnAccType')[0];

        //Retrieve office date info using valid PanNo and AccType
        /*var postData={'panNo':PanNo,'AccType':accType};

        console.log(postData);

        storeOffFromTo.load(
        {params: {panNoAccType:JSON.stringify(postData)}
        });*/

        hdnAccType.setValue(account);

        var data = {panNo:pan,
            AccType:account};

        storeOffFromTo.load(
        {params: {panNoAccType:JSON.stringify(data)}
    });

    },

    onTxtAddressChangeKeyup: function(textfield, e, eOpts) {
        //getUnicode(e,textfield);
    },

    onBtnChSubmitClick: function(button, e, eOpts) {

        //var form1 = Ext.ComponentQuery.query('#frmPanDesc')[0];
        //var form2 = Ext.ComponentQuery.query('#frmFields')[0];
        var form = button.up('form').getForm();
        var grid = Ext.ComponentQuery.query('#grdAccType')[0];
        var selected = grid.getSelectionModel().getSelection()[0];

        var store = Ext.getStore('OfficeFromTo');
        var txtFromDate = Ext.ComponentQuery.query('#txtChFromDate')[0];
        var cboOffice = Ext.ComponentQuery.query('#cboChOffice')[0];
        var txtPanNo = Ext.ComponentQuery.query('#txtPanNoChange')[0];
        var AccType = Ext.ComponentQuery.query('#hdnAccType')[0];

        var Fromdate= txtFromDate.getValue();
        var OffCode = cboOffice.getValue();
        var Panno = txtPanNo.getValue();
        var Acctype = AccType.getValue();
        var PostData = "";
        var oCode ="";
        var OldCode ="";
        var OldCodeCc ="";
        /*var findOffCode = store.findBy(
        function(record, id){
        if(record.get('OfficeCode')==OffCode&&
        record.get("ToDate")==="")
        {
        return true;
        }
        });

        if(ChOfficeCo!=-1)
        {

        alert("The office currently exists");
        return false;
        }
        OfficeCode:oldOffcode,
        */
        if(Panno==="")
        {
            msg("WARNING","Please enter PAN No.");
            return false;
        }

        if(!form.isValid())
        {
            msg("WARNING","Please Fill the required fields !!!");

            return;
        }


        if(selected===undefined)
        {
            msg("WARNING","Please Select Application");
            return;
        }

        var FindCode = store.findBy(
        function(record, id){
            for(i=0;i<record.get('OfficeCode');i++)
            {  
                if(record.get("ToDate")==="")
                {
                    //return true;
                    OldCodeCc = record.get('OfficeCode');

                }
                else if(record.get("ToDate")!=="")
                {
                    return false;
                    // OldCodeCc = record.get('OfficeCode');
                }
            }
            for(i=0;i<record.get('OfficeCode');i++)
            {  
                if(record.get('OfficeCode')==OffCode)
                {
                    OldCode=OldCodeCc; 
                    oCode=OffCode;
                }    
                else if(record.get('OfficeCode')!=OffCode)
                {
                    OldCode=OldCodeCc;
                    oCode=OffCode;
                }
            }    
        });


        PostData={
            FromDate:Fromdate,
            panNo:Panno,
            AccType:Acctype,
            OfficeCode:OldCode,
            NewOfficeCode:oCode
        };

        Ext.Ajax.request({
            url:'../Handlers/Common/ChangeOfficeHandler.ashx?method=SaveEdit',
            params: {toDateCodePanAcc:JSON.stringify(PostData)},
            success: function ( result, request ) {

                msg("Success","Successfully Saved");


                var data = {panNo:Panno,
                    AccType:Acctype};

                store.load(
                {params: {panNoAccType:JSON.stringify(data)}

            });

            cboOffice.setValue("");
            cboOffice.clearInvalid();
        },
        failure: function ( result, request ) {

            msg("FAILURE","Error Occurred");
        }
    }); 


    },

    onTxtPanNoChangeBlur: function(field, eOpts) {
        var strAcctType = Ext.getStore('AcctType');
        var strOfficeFromTo = Ext.getStore('OfficeFromTo');
        var isValid = false;
        var txtPanNoChange = Ext.ComponentQuery.query("#txtPanNoChange")[0];
        var txtNameChange = Ext.ComponentQuery.query("#txtNameChange")[0];
        var txtAddressChange = Ext.ComponentQuery.query("#txtAddressChange")[0];
        var txtPhoneChange = Ext.ComponentQuery.query("#txtPhoneChange")[0];
        var waitSave = "";

        if(txtPanNoChange.getValue() === "")
        {
            return;
        }


        isValid = ValidatePan(txtPanNoChange.getValue());

        if(isValid === false)
        {
            msg('WARNING', 'Please enter valid PAN !!!');
            return;
        }
        else
        {

            waitSave = Ext.MessageBox.wait('Loading ...');

            strOfficeFromTo.loadData([],false);

            LoadTaxpayerInfoWithValidPan(txtPanNoChange.getValue(),null,function(data){

                var rec = data.root.Taxpayer;
                var addr = rec.BusinessAddress.Address;

                if(rec.AcctStatus === "D")
                {
                    msg("WARNING","PAN is Deactivated !!!");
                    return;
                }

                var address = addr.PoBox+" , "+addr.StreetName;

                txtNameChange.setValue(rec.Name);
                txtAddressChange.setValue(address);
                txtPhoneChange.setValue(rec.Phone);

            });

            //Retrieve AccType using valid PanNo

            strAcctType.load({
                params:{panNo:txtPanNoChange.getValue()}
            });
        }

        /* if(OffCode != office.OfficeCode)
        {
        msg("WARNING","PAN is not Registered is this office !!!");

        return;
        }*/

    },

    clear: function() {
        var txtPanNoChange = Ext.ComponentQuery.query("#txtPanNoChange")[0];
        var txtNameChange = Ext.ComponentQuery.query("#txtNameChange")[0];
        var txtAddressChange = Ext.ComponentQuery.query("#txtAddressChange")[0];
        var txtPhoneChange = Ext.ComponentQuery.query("#txtPhoneChange")[0];
        var btnRnSubmit = Ext.ComponentQuery.query('#btnRnSubmit')[0];
        var cboChOffice = Ext.ComponentQuery.query('#cboChOffice')[0];
        var txtChFromDate = Ext.ComponentQuery.query('#txtChFromDate')[0];

        var strAcctType = Ext.getStore('AcctType');
        var strOfficeFromTo = Ext.getStore('OfficeFromTo');

        txtChFromDate.setValue("");
        txtPanNoChange.setValue("");
        txtNameChange.setValue("");
        txtAddressChange.setValue("");
        txtPhoneChange.setValue("");
        cboChOffice.setValue("");

        txtPanNoChange.clearInvalid();
        txtNameChange.clearInvalid();
        txtAddressChange.clearInvalid();
        txtPhoneChange.clearInvalid();
        cboChOffice.clearInvalid();

        strAcctType.loadData([],false);
        strOfficeFromTo.loadData([],false);


    },

    msg: function() {
        var rqdIcon = Ext.MessageBox.INFO;

        if(title == "FAILURE")
        rqdIcon = Ext.Msg.ERROR;
        else if(title == "WARNING")
        rqdIcon = Ext.Msg.WARNING;


        Ext.Msg.show({
            title: title,
            msg: message ,
            buttons: Ext.MessageBox.OK,
            icon: rqdIcon
        });
    },

    init: function(application) {
        this.control({
            "#pnlChangeOffice": {
                afterrender: this.onPnlChangeOfficeAfterRender
            },
            "#txtPanNoChange": {
                keypress: this.onTxtPanNoChangeKeypress,
                keydown: this.onTxtPanNoChangeKeydown,
                blur: this.onTxtPanNoChangeBlur
            },
            "#btnChCancel": {
                click: this.onBtnChCancelClick
            },
            "#grdAccType": {
                itemclick: this.onGrdAccTypeItemClick
            },
            "#txtAddressChange": {
                keyup: this.onTxtAddressChangeKeyup
            },
            "#btnChSubmit": {
                click: this.onBtnChSubmitClick
            }
        });
    }

});
