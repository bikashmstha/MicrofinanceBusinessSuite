/*
 * File: app/view/MFSavingAccountClose.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MFSavingAccountClose', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.form.Label',
        'Ext.Img',
        'Ext.button.Button',
        'Ext.form.FieldSet',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Action'
    ],

    frame: true,
    title: 'MF Saving Account Closure',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    itemId: 'frmSavingAccountClosure',
                    autoScroll: true,
                    bodyPadding: 10,
                    layout: {
                        type: 'table',
                        columns: 3
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtAccountCloseDateBS',
                            fieldLabel: 'AC Close Date (B.S)',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtAccountCloseDateAD',
                            margin: '0 0 0 5',
                            fieldLabel: 'AC Close Date (A.D)',
                            labelWidth: 135,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'combobox',
                            colspan: 3,
                            itemId: 'ddlSavingProduct',
                            fieldLabel: 'Saving Product',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            displayField: 'ProductName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'SavingProductShortStore',
                            valueField: 'ProductCode'
                        },
                        {
                            xtype: 'combobox',
                            colspan: 3,
                            itemId: 'ddlCenter',
                            fieldLabel: 'Center',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            displayField: 'CenterName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'CenterCodeStore',
                            valueField: 'CenterCode',
                            listeners: {
                                select: {
                                    fn: me.onDdlCenterSelect,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            colspan: 3,
                            itemId: 'txtSavingAccountNumber',
                            fieldLabel: 'Saving Account Number',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            size: 64,
                            listeners: {
                                afterrender: {
                                    fn: me.onTxtSavingAccountNumberAfterRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            colspan: 3,
                            itemId: 'txtMemberName',
                            fieldLabel: 'Member Name',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 64
                        },
                        {
                            xtype: 'combobox',
                            colspan: 3,
                            itemId: 'ddlEmpName',
                            fieldLabel: 'Emp Name',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            displayField: 'EmpName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'EmployeeSearchShortStore',
                            valueField: 'EmpId'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtAccOpenDateBS',
                            fieldLabel: 'AC Open Date (B.S)',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtAccOpenDateAD',
                            margin: '0 0 0 5',
                            fieldLabel: 'AC Open Date (A.D)',
                            labelWidth: 135,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtCurrentBal',
                            fieldLabel: 'Current Bal.',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtUnpostInterest',
                            margin: '0 0 0 5',
                            fieldLabel: 'Unpost Interest',
                            labelWidth: 135,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtReceivedInterest',
                            fieldLabel: 'Recieved Interest',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtTotalBalance',
                            margin: '0 0 0 5',
                            fieldLabel: 'Total Balance',
                            labelWidth: 135,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtAmtAtMaturity',
                            fieldLabel: 'Amt At Mautrity',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtTaxAmount',
                            margin: '0 0 0 5',
                            fieldLabel: 'Tax Amount',
                            labelWidth: 135,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtMideTermIntRatio',
                            fieldLabel: 'Mid term Int Ratio',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtMidTermIntAmount',
                            margin: '0 0 0 5',
                            fieldLabel: 'Mid Term Int Amount',
                            labelWidth: 135,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtPayeeName',
                            fieldLabel: 'Payee Name',
                            labelWidth: 140,
                            size: 64
                        },
                        {
                            xtype: 'combobox',
                            itemId: 'ddlMidTermClosingType',
                            margin: '0 0 0 5',
                            fieldLabel: 'Mid Term Closing Type',
                            labelWidth: 135,
                            emptyText: '---SELECT---',
                            size: 25,
                            displayField: 'RefDtlName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'ReferenceShortStore',
                            valueField: 'RefDtlCode'
                        },
                        {
                            xtype: 'combobox',
                            colspan: 2,
                            itemId: 'ddlContraAccount',
                            fieldLabel: 'Contra Account',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            size: 64,
                            displayField: 'AccountDesc',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'ContraAccountSearchShortStore',
                            valueField: 'AccountCode'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtClosingCharge',
                            margin: '0 0 0 5',
                            fieldLabel: 'Closing Charge',
                            labelWidth: 135,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'combobox',
                            colspan: 3,
                            itemId: 'ddlReasonToClose',
                            fieldLabel: 'Reason To Close',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            size: 64,
                            displayField: 'ReasonDesc',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'SavingAccountCloseReasonStore',
                            valueField: 'ReasonCode'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtChequeNo',
                            fieldLabel: 'Cheque No.',
                            labelWidth: 140
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtOtherIncome',
                            margin: '0 0 0 5',
                            fieldLabel: 'Other Income',
                            labelWidth: 135,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtPaidAmount',
                            fieldLabel: 'Paid Amount ',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtOtherIncomeVoucher',
                            margin: '0 0 0 5',
                            fieldLabel: 'Other Income Voucher',
                            labelWidth: 135,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 3,
                            itemId: 'txtRemarks',
                            fieldLabel: 'Remarks',
                            labelWidth: 140,
                            size: 64
                        },
                        {
                            xtype: 'container',
                            colspan: 3,
                            width: 751,
                            layout: {
                                type: 'table',
                                columns: 1,
                                tdAttrs: {
                                    align: 'center'
                                }
                            },
                            items: [
                                {
                                    xtype: 'label',
                                    text: 'Member Photo:'
                                },
                                {
                                    xtype: 'image',
                                    height: 201,
                                    itemId: 'imgMember',
                                    width: 201
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            colspan: 3,
                            height: 25,
                            layout: {
                                type: 'hbox',
                                align: 'stretch',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'btnCloseAccount',
                                    text: 'Close Account',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnCloseAccountClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            colspan: 3,
                            title: 'Search',
                            layout: {
                                type: 'table',
                                columns: 3
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtSearchAccountCloseDateFromBS',
                                    fieldLabel: 'Account Close Date From (B.S)',
                                    labelWidth: 175
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtSearchAccountCloseDateToBS',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Account Close Date To(B.S)',
                                    labelWidth: 175
                                },
                                {
                                    xtype: 'combobox',
                                    colspan: 2,
                                    itemId: 'ddlSearchSavingAccountNumber',
                                    fieldLabel: 'Saving Account Number',
                                    labelWidth: 175,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    size: 40,
                                    displayField: 'SavingAccountNo',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'SavingAccountNumberSearchStore',
                                    valueField: 'SavingAccountNo',
                                    listeners: {
                                        select: {
                                            fn: me.onDdlSearchSavingAccountNumberSelect,
                                            scope: me
                                        },
                                        focus: {
                                            fn: me.onDdlSearchSavingAccountNumberFocus,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtSearchMemberName',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Member Name',
                                    labelWidth: 175,
                                    size: 50
                                },
                                {
                                    xtype: 'container',
                                    colspan: 3,
                                    height: 25,
                                    layout: {
                                        type: 'hbox',
                                        align: 'stretch',
                                        pack: 'center'
                                    },
                                    items: [
                                        {
                                            xtype: 'button',
                                            itemId: 'btnSearch',
                                            text: 'Search',
                                            listeners: {
                                                click: {
                                                    fn: me.onBtnSearchClick,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            colspan: 3,
                            itemId: 'grdSearchSavingAccount',
                            width: 1230,
                            store: 'SavingAccountSearchStore',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'WithdrawalNo',
                                    text: 'Withdrawl No'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 119,
                                    dataIndex: 'SavingAccountNo',
                                    text: 'Saving Account No'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 146,
                                    dataIndex: 'WithdrawDate',
                                    text: 'Withdraw Date'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 318,
                                    dataIndex: 'ClientName',
                                    text: 'Client Name'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'WithdrawAmount',
                                    text: 'Withdraw Amount'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'UnpostInterest',
                                    text: 'Unpost Interest'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'ClosingCharge',
                                    text: 'Closing Charge'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 110,
                                    dataIndex: 'WithdrawDateBs',
                                    text: 'Account Close Date'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'VoucherNo',
                                    text: 'Voucher No'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                Ext.ComponentQuery.query('#grdSearchSavingAccount')[0].getSelectionModel().select(rowIndex);
                                                //get reference of store
                                                var store = Ext.getStore('SavingAccountSearchStore');

                                                //get selected row using rowindex
                                                var row = store.getAt(rowIndex).data;


                                                // set values
                                                console.log('row',row);


                                                Ext.ComponentQuery.query('#txtAccountCloseDateBS')[0].setValue(row.WithdrawDateBs);
                                                Ext.ComponentQuery.query('#txtAccountCloseDateAD')[0].setValue(row.WithdrawDate);
                                                Ext.ComponentQuery.query('#ddlSavingProduct')[0].setValue(row.ProductCode);
                                                Ext.ComponentQuery.query('#ddlCenter')[0].setValue(row.CenterCode);
                                                Ext.ComponentQuery.query('#txtSavingAccountNumber')[0].setValue(row.SavingAccountNo);
                                                Ext.ComponentQuery.query('#txtMemberName')[0].setValue(row.ClientName);

                                                var centerObj={
                                                    InstituteCode:Ext.get('offCode').dom.innerHTML,
                                                    CenterCode:row.CenterCode

                                                };
                                                Ext.Ajax.request({
                                                    url: '../Handlers/Finance/Maintenance/CenterLovHandler.ashx',
                                                    params: {
                                                        method:'Search',
                                                        centerlov:JSON.stringify(centerObj)

                                                    },
                                                    success: function(response){


                                                        var obj = Ext.decode(response.responseText);



                                                        if(obj.success === "true")
                                                        {
                                                            Ext.ComponentQuery.query('#ddlEmpName')[0].setValue(obj.root.EmployeeName);
                                                        }
                                                        else
                                                        {
                                                            msg("FAILURE",obj.message);
                                                        }
                                                    }
                                                });


                                                /*var eng_Date= row.AccountOpenDate;

                                                Ext.Ajax.request({
                                                url: '../Handlers/Common/DateHandler.ashx',
                                                params:{method:'GetNepDate',engDate:eng_Date},
                                                success: function(response){

                                                var out=Ext.decode(response.responseText);
                                                //console.log(out);

                                                if(out.success==="true")
                                                {

                                                    //console.log('out',out);
                                                    Ext.ComponentQuery.query('#txtAccOpenDateBS')[0].setValue(out.message);
                                                }
                                                else
                                                {

                                                }
                                            },
                                            failure: function ( result, request ) {

                                                var out=Ext.decode(response.responseText);
                                                msg("FAILURE",out.message);
                                            }

                                        });*/


                                        Ext.ComponentQuery.query('#txtAccOpenDateAD')[0].setValue(row.AccountOpenDate);
                                        Ext.ComponentQuery.query('#txtCurrentBal')[0].setValue(row.CurrentBalance);
                                        Ext.ComponentQuery.query('#txtUnpostInterest')[0].setValue(row.UnpostInterest);
                                        Ext.ComponentQuery.query('#txtReceivedInterest')[0].setValue(row.ReceivedInterestAmount);
                                        Ext.ComponentQuery.query('#txtTotalBalance')[0].setValue(row.TotalBal);

                                        //Ext.ComponentQuery.query('#txtAmtAtMaturity')[0].setValue(row.RowID);

                                        Ext.ComponentQuery.query('#txtTaxAmount')[0].setValue(row.TaxAmount);
                                        Ext.ComponentQuery.query('#txtMideTermIntRatio')[0].setValue(row.MidTermIntRate);
                                        Ext.ComponentQuery.query('#txtMidTermIntAmount')[0].setValue(row.MidTermBalance);
                                        Ext.ComponentQuery.query('#txtPayeeName')[0].setValue(row.PayeeName);

                                        //Ext.ComponentQuery.query('#ddlMidTermClosingType')[0].setValue(row.RowID);

                                        Ext.ComponentQuery.query('#ddlContraAccount')[0].setValue(row.ContraAccount);
                                        Ext.ComponentQuery.query('#txtClosingCharge')[0].setValue(row.ClosingCharge);
                                        Ext.ComponentQuery.query('#ddlReasonToClose')[0].setValue(row.ReasonForClosing);
                                        Ext.ComponentQuery.query('#txtChequeNo')[0].setValue(row.ChequeNo);
                                        Ext.ComponentQuery.query('#txtOtherIncome')[0].setValue(row.OtherIncomeExpAmount);

                                        //Ext.ComponentQuery.query('#txtPaidAmount')[0].setValue(row.RowID);

                                        Ext.ComponentQuery.query('#txtOtherIncomeVoucher')[0].setValue(row.OtherIncomeExpVoucherNo);
                                        Ext.ComponentQuery.query('#txtRemarks')[0].setValue(row.Remarks);


                                            },
                                            icon: '../ITS/resources/images/icons/Modify.png'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            itemId: 'hdnAccountNumber',
                            fieldLabel: 'Label'
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFrmSavingAccountClosureAfterRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onDdlCenterSelect: function(combo, records, eOpts) {

        Ext.ComponentQuery.query('#ddlEmpName')[0].setValue(records[0].data.EmployeeId);



    },

    onTxtSavingAccountNumberAfterRender: function(component, eOpts) {
        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectSavingAccountNumberPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });
    },

    onBtnCloseAccountClick: function(button, e, eOpts) {

        var savingAccountObj={
        	 AccountNo:Ext.ComponentQuery.query('#hdnAccountNumber')[0].getValue() ,
        	 WithdrawDate:Ext.ComponentQuery.query('#txtAccountCloseDateAD')[0].getValue() ,
        	 WithdrawAmount:Ext.ComponentQuery.query('#txtPaidAmount')[0].getValue() ,
        	 ChequeNo:Ext.ComponentQuery.query('#txtChequeNo')[0].getValue() ,
        	 PayeeName:Ext.ComponentQuery.query('#txtPayeeName')[0].getValue() ,
        	 ContraAccount:Ext.ComponentQuery.query('#ddlContraAccount')[0].getValue() ,
        	 Remarks:Ext.ComponentQuery.query('#txtRemarks')[0].getValue() ,
        	 ClosingCharge:Ext.ComponentQuery.query('#txtClosingCharge')[0].getValue() ,
        	 WithdrawType:'AC' ,
        	 ReasonForClosing:Ext.ComponentQuery.query('#ddlReasonToClose')[0].getValue() ,
        	 TranOfficeCode:Ext.get('offCode').dom.innerHTML ,
        	 CurrentBalance:Ext.ComponentQuery.query('#txtCurrentBal')[0].getValue() ,
        	 TaxOnUnpostInterest:Ext.ComponentQuery.query('#txtTaxAmount')[0].getValue(),
        	 UnpostInterest:Ext.ComponentQuery.query('#txtUnpostInterest')[0].getValue() ,
        	 PenaltyAmount:null,
        	 ReceivedInterest:Ext.ComponentQuery.query('#txtReceivedInterest')[0].getValue() ,
        	 MidTermClosing:null ,
        	 MidTermBalance:Ext.ComponentQuery.query('#txtMidTermIntAmount')[0].getValue() ,
        	 MidTermInterest:Ext.ComponentQuery.query('#txtMideTermIntRatio')[0].getValue() ,
        	 MidTermTaxableAmount:null ,
        	 TdsDifference:null,
        	 OtherIncomeAmount:Ext.ComponentQuery.query('#txtOtherIncome')[0].getValue(),
        	 WaivedAmount:null,
        	 PrematuredIntRatio:Ext.ComponentQuery.query('#txtMideTermIntRatio')[0].getValue() ,
        	 MidTermClosingType:Ext.ComponentQuery.query('#ddlMidTermClosingType')[0].getValue(),
        	 OutFiscalYear:'' ,
        	 OutWithdrawalNo:null,


        };

        var waitSave = watiMsg("Closing Saving Account .Please wait ...");
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/SavingTransaction/SavingAccountClosureHandler.ashx',
            params: {
                method:'Save',
                savingAccountClosure:JSON.stringify(savingAccountObj)
            },
            success: function ( response, request ) {
                         waitSave.hide();
                            var out=Ext.decode(response.responseText);
                            console.log(out);

                            if(out.success==="true")
                                {
                                   msg("SUCCESS",out.message);
                              }
                                else
                                    {
                                        msg("FAILURE",out.message);
                                    }
                            },
                            failure: function ( result, request ) {
                                waitSave.hide();
                                var out=Ext.decode(response.responseText);
                                msg("FAILURE",out.message);
                            }



                });
    },

    onDdlSearchSavingAccountNumberSelect: function(combo, records, eOpts) {
        Ext.ComponentQuery.query('#txtSearchMemberName')[0].setValue(records[0].data.ClientName);

    },

    onDdlSearchSavingAccountNumberFocus: function(component, e, eOpts) {
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/SavingTransaction/ClientSavingAccountHandler.ashx',
            params: {
                method:'GetMemberAccountOpen',
                offCode:getOfficeCode(),
                memberName:null
            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('SavingAccountNumberSearchStore');
                    store.removeAll();
                    store.add(obj.root);


                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });
    },

    onBtnSearchClick: function(button, e, eOpts) {
         var accountcloseDateFromBS=Ext.ComponentQuery.query('#txtSearchAccountCloseDateFromBS')[0].getValue();
         var accountCloseDateToBS=Ext.ComponentQuery.query('#txtSearchAccountCloseDateToBS')[0].getValue();
         var savingAccountNo=Ext.ComponentQuery.query('#ddlSearchSavingAccountNumber')[0].getValue();
        var memberName=Ext.ComponentQuery.query('#txtSearchMemberName')[0].getValue();


        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/SavingTransaction/AccountCloseDetailHandler.ashx',
            params: {
                method:'GetAccountCloseDetail',
                offCode:getOfficeCode(),
                savingAccountNo:savingAccountNo,
                clientName:memberName,


            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

                                console.log('resp',response);



              if(obj.success === "true")
                        {

                            var store=Ext.getStore('SavingAccountSearchStore');
                            store.removeAll();
                            store.add(obj.root);

                        }
                        else
                        {

                            msg("FAILURE",obj.message);
                        }






            }
        });
    },

    onFrmSavingAccountClosureAfterRender: function(component, eOpts) {
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/SavingTransaction/ProductForAccountCloseHandler.ashx',
            params: {
                method:'GetProductForAccountClose',
                productName:null,

            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('SavingProductShortStore');
                    store.removeAll();
                    store.add(obj.root);

                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });


        var centerObj={
            InstituteCode:Ext.get('offCode').dom.innerHTML,
            CenterCode:null

        };
        Ext.Ajax.request({
            url: '../Handlers/Finance/Maintenance/CenterLovHandler.ashx',
            params: {
                method:'Search',
                centerlov:JSON.stringify(centerObj)

            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('CenterCodeStore');
                    store.removeAll();
                    store.add(obj.root);



                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });

        Ext.Ajax.request({
            url: '../Handlers/Supervisor/EmployeeHandler.ashx',
            params: {
                method:'GetFieldAssistants',
                officeCode:Ext.get('offCode').dom.innerHTML,
                empName:null,

            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('EmployeeSearchShortStore');
                    store.removeAll();
                    store.add(obj.root);


                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });

        Ext.Ajax.request({
            url: '../Handlers/Finance/Maintenance/AccountHeadEntryHandler.ashx',
            params: {
                method:'GetContraAccount',
                offCode:Ext.get('offCode').dom.innerHTML,
                accountDesc:null,

            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('ContraAccountSearchShortStore');
                    store.removeAll();
                    store.add(obj.root);
                    Ext.ComponentQuery.query('#ddlContraAccount')[0].select('100000021000002');




                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });

        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/MemberTransaction/DropOutReasonHandler.ashx',
            params: {
                method:'GetCDReason',
                reasonDesc:null
            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('SavingAccountCloseReasonStore');
                    store.removeAll();
                    store.add(obj.root);


                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });


        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/SavingTransaction/ClientSavingAccountHandler.ashx',
            params: {
                method:'GetMemberAccountOpen',
                offCode:getOfficeCode(),
                memberName:null
            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('SavingAccountNumberSearchStore');
                    store.removeAll();
                    store.add(obj.root);


                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });


        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',
                referenceCode:'MID_TERM_CLOSING_TYPE',

            },
            success: function(response){


                var obj = Ext.decode(response.responseText);



                if(obj.success === "true")
                {

                    var store=Ext.getStore('ReferenceShortStore');
                    store.removeAll();
                    store.add(obj.root);


                }
                else
                {
                    msg("FAILURE",obj.message);
                }
            }
        });



        Ext.ComponentQuery.query('#txtAccountCloseDateBS')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtAccountCloseDateAD')[0].setValue(getMisDateAD());
        Ext.ComponentQuery.query('#txtSearchAccountCloseDateFromBS')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtSearchAccountCloseDateToBS')[0].setValue(getMisDateBS());

    }

});