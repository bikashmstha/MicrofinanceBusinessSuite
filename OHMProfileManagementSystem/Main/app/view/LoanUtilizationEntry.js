/*
 * File: app/view/LoanUtilizationEntry.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.LoanUtilizationEntry', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Action',
        'Ext.grid.plugin.RowEditing',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    frame: true,
    title: 'Loan Utilization Entry',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    id: 'frmLoanUtilizationEntry',
                    itemId: 'frmLoanUtilizationEntry',
                    bodyPadding: 10,
                    title: '',
                    items: [
                        {
                            xtype: 'container',
                            layout: {
                                type: 'table',
                                columns: 3
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    colspan: 1,
                                    itemId: 'txtCenterCode',
                                    width: 295,
                                    fieldLabel: 'Center Code',
                                    labelWidth: 120,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    size: 64,
                                    listeners: {
                                        afterrender: {
                                            fn: me.onTxtCenterCodeAfterRender,
                                            scope: me
                                        },
                                        change: {
                                            fn: me.onTxtCenterCodeChange,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 1,
                                    itemId: 'txtCenterDesc',
                                    fieldLabel: 'Center Code',
                                    hideLabel: true,
                                    labelWidth: 120,
                                    fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                                    size: 64
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtFirstCollectionDateBS',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'First Collection Date(B.S.)',
                                    labelWidth: 140,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtEmployeeCode',
                                    fieldLabel: 'Employee Code',
                                    labelWidth: 120,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 1,
                                    itemId: 'txtEmployeeDesc',
                                    margin: '0 0 0 5',
                                    fieldLabel: '',
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                                    size: 40
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtFirstCollectionDateAD',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'First Collection Date(A.D.)',
                                    labelWidth: 142,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'textfield',
                                    colspan: 2,
                                    itemId: 'txtInstallmentInterval',
                                    fieldLabel: 'Installment Interval',
                                    labelWidth: 120,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                                },
                                {
                                    xtype: 'combobox',
                                    itemId: 'ddlCenterType',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Center Type',
                                    labelWidth: 140,
                                    emptyText: '--- SELECT ---',
                                    displayField: 'RefDtlName',
                                    forceSelection: true,
                                    queryMode: 'local',
                                    store: 'ReferenceShortStore',
                                    valueField: 'RefDtlCode'
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            itemId: 'grdLoanUtilization',
                            title: '',
                            store: 'LoanUtilizationStore',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'CenterCode',
                                    text: 'CenterCode',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtCenter'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'LoanDno',
                                    text: 'LoanDno',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtLoanDno'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'LoanNo',
                                    text: 'Loan No',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtLoanNo',
                                        listeners: {
                                            blur: {
                                                fn: me.onTxtLoanNoBlur,
                                                scope: me
                                            }
                                        }
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'ClientName',
                                    text: 'Member Name',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtMemberName'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'LoanPurpose_Desc',
                                    text: 'Loan Purpose',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtLoanPurpose'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'DisburseDate',
                                    text: 'Disburse Date',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtDisbursementDate'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'TotalLoan_Amount',
                                    text: 'Loan Amount',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtLoanAmount'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'InspectionDate',
                                    text: 'Inspection Date',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtInspectionDate'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'FieldRemarks',
                                    text: 'FieldRemarks',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtFieldRemarks'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'UtilizationPc',
                                    text: 'Utilization %',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtUtilizationPc'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'ManagerInspection_Date',
                                    text: 'Manager Inspection Date',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtManagerInspectionDate'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'ManagerUtilization_Pc',
                                    text: 'Manager Utilization %',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtManagerUtilizationPc'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'Remarks',
                                    text: 'Remarks',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtRemarks'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'Action',
                                    text: 'Action',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtAction'
                                    }
                                },
                                {
                                    xtype: 'actioncolumn',
                                    itemId: 'colDelLoanUtilizationEntry',
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {

                                            },
                                            iconCls: '../ITS/resources/images/icons/cancel.png'
                                        }
                                    ]
                                }
                            ],
                            plugins: [
                                Ext.create('Ext.grid.plugin.RowEditing', {
                                    listeners: {
                                        validateedit: {
                                            fn: me.onRowEditingValidateedit,
                                            scope: me
                                        },
                                        canceledit: {
                                            fn: me.onRowEditingCanceledit,
                                            scope: me
                                        }
                                    }
                                })
                            ],
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'top',
                                    items: [
                                        {
                                            xtype: 'button',
                                            itemId: 'btnAddLoanUtilization',
                                            text: 'Add Loan Utilization',
                                            listeners: {
                                                click: {
                                                    fn: me.onBtnAddLoanUtilizationClick,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFrmLoanUtilizationEntryAfterRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onTxtCenterCodeAfterRender: function(component, eOpts) {
        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SelectLoanUtilizationCenterPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });
    },

    onTxtCenterCodeChange: function(field, newValue, oldValue, eOpts) {
        var store=Ext.getStore('LoanUtilizationStore');
        store.removeAll();

        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/LoanTransaction/LnUtilizationDetailHandler.ashx',
            params: {
                method:'GetLnUtilizationDetail',CenterCode:field.getValue()
            },
            success: function(response){

            var data=Ext.decode(response.responseText);
            store.removeAll();
            store.add(data.root);


        }
        });
    },

    onTxtLoanNoBlur: function(component, e, eOpts) {
        //var store=Ext.getStore('AccountCategoryStore');
        //store.removeAll();
        var centerCode=Ext.ComponentQuery.query('#txtCenterCode')[0];
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/LoanTransaction/LnUtilizationLoanHandler.ashx',
            params: {
                method:'GetLnUtilizationLoan',CenterCode:centerCode.getValue(),ClientName:null
            },
            success: function(response){

            var data=Ext.decode(response.responseText);

                Ext.ComponentQuery.query('#txtMemberName')[0].setValue(data.clientName);
                Ext.ComponentQuery.query('#txtLoanPurpose')[0].setValue(data.LoanPurpose);
                Ext.ComponentQuery.query('#txtDisbursementDate')[0].setValue(data.DisbursementDate);
                Ext.ComponentQuery.query('#txtLoanAmount')[0].setValue(data.LoanAmount);


        }
        });
    },

    onRowEditingValidateedit: function(editor, e, eOpts) {
        var errMsg='';
        var fiscalYear=getFiscalYear();
        var centerCode=Ext.ComponentQuery.query('#txtCenter')[0];
        var loanNo=Ext.ComponentQuery.query('#txtLoanNo')[0];
        var inspectionDate=Ext.ComponentQuery.query('#txtInspectionDate')[0];

        var utilizatioPC=Ext.ComponentQuery.query('#txtUtilizationPc')[0];
        var managerUtilizationPc=Ext.ComponentQuery.query('#txtCategoryDesc')[0];
        var remarks=Ext.ComponentQuery.query('#txtRemarks')[0];

        var managerInspectionDate=Ext.ComponentQuery.query('#txtManagerInspectionDate')[0];
        var fieldRemarks=Ext.ComponentQuery.query('#txtFieldRemarks')[0];


        var action=Ext.ComponentQuery.query('#txtAction')[0];

        /*
        (":p_FISCAL_YEAR", loanUtilizationEntry.FiscalYear, OracleDbType.Varchar2, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_CENTER_CODE", loanUtilizationEntry.CenterCode, OracleDbType.Varchar2, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_LOAN_NO", loanUtilizationEntry.LoanNo, OracleDbType.Varchar2, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_INSPECTION_DATE", loanUtilizationEntry.InspectionDate, OracleDbType.Varchar2, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_UTILIZATION_PC", loanUtilizationEntry.UtilizationPc, OracleDbType.Double, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_MANAGER_UTILIZATION_PC", loanUtilizationEntry.ManagerUtilization_Pc, OracleDbType.Double, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_REMARKS", loanUtilizationEntry.Remarks, OracleDbType.Varchar2, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_MANAGER_INSPECTION_DATE", loanUtilizationEntry.ManagerInspection_Date, OracleDbType.Varchar2, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_FIELD_REMARKS", loanUtilizationEntry.FieldRemarks, OracleDbType.Varchar2, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_action", loanUtilizationEntry.Action, OracleDbType.Varchar2, ParameterDirection.Input));
                        */
        var loanUtilization={FiscalYear:fiscalYear,
                 CenterCode:centerCode.getValue(),
                 LoanNo:loanNo.getValue(),
                             InspectionDate:inspectionDate.getValue(),
                             UtilizatioPC:utilizatioPC.getValue(),
                             ManagerUtilizationPc:managerUtilizationPc.getValue(),
                             Remarks:remarks.getValue(),
                             managerInspectionDate:managerInspectionDate.getValue(),
                             FieldRemarks:fieldRemarks.getValue(),
                 Action:action.getValue()};



        var wMsg='';
        if(action.getValue()==='I')
            {
                wMsg='Inserting....';
            }
        else
            {
                wMsg='Updating....';
            }
        var waitSave = watiMsg(wMsg);

        Ext.Ajax.request({
                    url: '../Handlers/Finance/Transaction/LoanTransaction/LoanUtilizationEntryHandler.ashx',
                    params: {
                        method:'Save',
                        loanUtilizationEntry:JSON.stringify(loanUtilization)
                    },
                    success: function(response){
                    waitSave.hide();
                    var out=Ext.decode(response.responseText);
                    console.log(out);

                    if(out.success==="true")
                        {
                            var message=out.root;
                            if(message.OutResultCode==="SUCCESS")
                                {
                                    msg("SUCCESS",message.OutResultMessage,function(){
                                        var grd = Ext.ComponentQuery.query('#grdLoanUtilization')[0];

                                        var record = grd.getSelectionModel().getSelection()[0];
                                        record.set('Action','U');

                                    });



                                }
                            else
                                {
                                  msg("FAILURE",message.OutResultMessage);
                                }
                        }
                        else
                            {
                                msg("FAILURE",out.message);
                            }
                    },
                    failure: function ( result, request ) {
                        waitSave.hide();
                        var out=Ext.decode(response.responseText);
                        msg("FAILURE",out.message);
                    }

                });

    },

    onRowEditingCanceledit: function(editor, e, eOpts) {

    },

    onBtnAddLoanUtilizationClick: function(button, e, eOpts) {
        var store =Ext.getStore('LoanUtilizationStore');
        var rec={CenterCode:Ext.ComponentQuery.query('#txtCenterCode')[0].getValue(),
                 Action:'I'};
        store.add(rec);

    },

    onFrmLoanUtilizationEntryAfterRender: function(component, eOpts) {
        var referenceShortStore=Ext.getStore('ReferenceShortStore');
        referenceShortStore.removeAll();

        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/References/MsRefrenceCodeDetailsHandler.ashx',
            params: {
                method:'GetReferenceDetailListShort',referenceCode:'DAY_DATE'
            },
            success: function(response){

            var data=Ext.decode(response.responseText);
            referenceShortStore.removeAll();
            referenceShortStore.add(data.root);


        }
        });
    }

});