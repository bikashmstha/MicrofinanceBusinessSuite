/*
 * File: app/controller/ReviewAppealApplication.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.ReviewAppealApplication', {
    extend: 'Ext.app.Controller',

    stores: [
        'AppealLocationStore',
        'FiscalYear',
        'ReviewAppealAA',
        'ReviewAppealCP'
    ],

    onPnlReviewAppealApplicationAfterRender: function(component, eOpts) {
        var me =this;
        var offCode= Ext.get('offCode').dom.innerHTML;
        var txtOffCode = Ext.ComponentQuery.query("#txtOffCodeRAPA")[0];
        //txtOffCode.setValue(offCode);
        var objParam = Ext.ComponentQuery.query('#pnlReviewAppealApplication')[0].extraParam;

        if (!objParam)
        {
            txtOffCode.setValue(offCode);
            //me.LoadUserOffice();
            me.ReadOnlyShowHideControls("");
            me.ReadOnlyControls("p");
            me.ClearControls("p");

            return;
        }

        else if(objParam.params.from === "MV")
        {
            me.LoadReviewAppeaWithTranNo();
            me.ReadOnlyShowHideControls("t");
            //ConvertFieldsToReadOnly('pnlReviewAppealApplication');
        }

        else if(objParam.params.from === "AU"  )
        {

            if(objParam.params.auAction === "A")
            {

                me.LoadPostedReviewAppealApplication();

            }
            else if(objParam.params.auAction === "E" || objParam.params.auAction === "V")
            {
                if( objParam.params.auAction === "V")
                {
                    me.ReadOnlyShowHideControls("t");
                }
                me.LoadReviewAppealApplicationAU();

            }
            me.ReadOnlyShowHideControls("au");
        }
    },

    onTxtPanRAPAKeypress: function(textfield, e, eOpts) {
        /*var txtName = Ext.ComponentQuery.query("#txtTaxPayerNameRAPA")[0];


        if(e.keyCode === 13)
        {
        this.LoadTaxPayerInfo();
        }*/
        /*else if(txtName === "")
        {   

        Ext.Msg.confirm('Confirm','के तपाई अर्को स्था.ले.नं. हाल्न चाहनु हुन्छ?', function(btn) {
        if(btn == 'yes'){

        this.LoadTaxPayerInfo();
        return true;
        }
        }, this);

        }
        */
    },

    onBtnSaveRAPAClick: function(button, e, eOpts) {
        var me=this;
        //var action = Ext.ComponentQuery.query('#hdnActionRAPA')[0];
        //var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPA')[0];
        //var txtOffCode=Ext.ComponentQuery.query('#txtOffCodeRAPA')[0];
        var txtPan=Ext.ComponentQuery.query('#txtPanRAPA')[0];
        var txtRevApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPA')[0];
        var cboApplCourtType=Ext.ComponentQuery.query('#cboAppealCourtTypeRAPA')[0];
        var cboFiscalYr=Ext.ComponentQuery.query('#cboFiscalYrRAPA')[0];

        //var revAppNo = txtrevAppNo.getValue();
        //var offCode = txtOffCode.getValue();
        var revApplDate = txtRevApplDate.getValue();
        var pan = txtPan.getValue();
        var applCourtType = cboApplCourtType.getValue();
        var fiscalYr = cboFiscalYr.getValue();

        var errMsg="";
        var errCount=0;

        if(!pan)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया स्था.ले.नं. हाल्नुहोस् !<br/>";
            txtPan.focus();
        }
        if(!revApplDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदनमा गएको मिति हाल्नुहोस् !<br/>";
            txtRevApplDate.focus();
        }

        if(!applCourtType)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदन गरेको स्थान छाल्नुहोस् !<br/>";
            cboApplCourtType.focus();
        }
        if(!fiscalYr)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया आय वर्ष छाल्नुहोस् !<br/>";
            cboFiscalYr.focus();
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }
        var objParam = Ext.ComponentQuery.query('#pnlReviewAppealApplication')[0].extraParam;
        //console.log(objParam);
        if(!objParam)
        {
            me.SaveReviewAppealApplication("I");
            me.ClearControls("");
            me.ReadOnlyControls("p");
        }
        else if(objParam.params.from === "AU")
        {
            me.SaveReviewAppealApplicationAU("I","E");
            me.ReadOnlyShowHideControls("au");
        }

    },

    onBtnEditRAPAClick: function(button, e, eOpts) {
        var me=this;
        me.ReadOnlyControls("d");
        me.ClearControls("e");
        var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPA')[0];
        var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPA')[0];
        var lblActionRAPA = Ext.ComponentQuery.query('#lblActionRAPA')[0];

        var btnSave = Ext.ComponentQuery.query('#btnSaveRAPA')[0];
        var btnEdit = Ext.ComponentQuery.query('#btnEditRAPA')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteRAPA')[0];

        btnSave.enable(true); 
        btnEdit.disable(true); 
        btnDelete.disable(true); 

        hdnAction.setValue("E");
        lblActionRAPA.setValue("Updating ...............");
        lblActionRAPA.setVisible(true);
        msg('WARNING',"पुनरावेदन नं हाल्नुहोस् !");
        txtrevAppNo.enable(true);
        txtrevAppNo.focus(true);



    },

    onBtnDeleteRAPAClick: function(button, e, eOpts) {
        var me=this;
        me.ReadOnlyControls("d");
        me.ClearControls("e");

        var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPA')[0];
        var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPA')[0];
        var lblActionRAPA = Ext.ComponentQuery.query('#lblActionRAPA')[0];
        var btnSave = Ext.ComponentQuery.query('#btnSaveRAPA')[0];
        var btnEdit = Ext.ComponentQuery.query('#btnEditRAPA')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteRAPA')[0];

        btnSave.disable(true); 
        btnEdit.disable(true); 
        btnDelete.disable(true);

        hdnAction.setValue("D");
        //console.log(action.lastValue);
        lblActionRAPA.setValue("Deleting ...............");
        lblActionRAPA.setVisible(true);
        msg('WARNING',"पुनरावेदन नं हाल्नुहोस् !");
        txtrevAppNo.enable(true);
        txtrevAppNo.focus(true);

    },

    onBtnSubmitRAPAClick: function(button, e, eOpts) {
        var me = this;

        var action = Ext.ComponentQuery.query('#hdnActionRAPA')[0];
        var txtPan=Ext.ComponentQuery.query('#txtPanRAPA')[0];
        var txtRevApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPA')[0];
        var cboApplCourtType=Ext.ComponentQuery.query('#cboAppealCourtTypeRAPA')[0];
        var cboFiscalYr=Ext.ComponentQuery.query('#cboFiscalYrRAPA')[0];

        var revApplDate = txtRevApplDate.getValue();
        var pan = txtPan.getValue();
        var applCourtType = cboApplCourtType.getValue();
        var fiscalYr = cboFiscalYr.getValue();

        var errMsg="";
        var errCount=0;

        if(!pan)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया स्था.ले.नं. हाल्नुहोस् !<br/>";
            txtPan.focus();
        }
        if(!revApplDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदनमा गएको मिति हाल्नुहोस् !<br/>";
            txtRevApplDate.focus();
        }

        if(!applCourtType)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया पुनरावेदन गरेको स्थान छाल्नुहोस् !<br/>";
            cboApplCourtType.focus();
        }
        if(!fiscalYr)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया आय वर्ष छाल्नुहोस् !<br/>";
            cboFiscalYr.focus();
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }
        var objParam = Ext.ComponentQuery.query('#pnlReviewAppealApplication')[0].extraParam;
        //console.log(objParam);
        if(!objParam)
        {
            if(action.lastValue === "D")
            {  
                Ext.Msg.confirm('Confirm', 'के तपाई साचै नै डाटा DELETE गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.SaveReviewAppealApplication("D");
                        me.ClearControls("");
                        me.ReadOnlyControls("p");
                        return true;
                    }
                }, this);


            }
            else
            {
                Ext.Msg.confirm('Confirm', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.SaveReviewAppealApplication("F");
                        me.ClearControls("");
                        me.ReadOnlyControls("p");

                        return true;
                    }
                }, this);


            }
        }
        else if(objParam.params.from === "AU")
        {


            if(action.lastValue === "D")
            {  
                Ext.Msg.confirm('Confirm', 'के तपाई साचै नै डाटा DELETE गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.SaveReviewAppealApplicationAU("D","D");
                        return true;
                    }
                }, this);


            }
            else
            {
                Ext.Msg.confirm('Confirm', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.SaveReviewAppealApplicationAU("F","E");
                        me.ClearControls("au");
                        me.ReadOnlyShowHideControls("au");
                        return true;
                    }
                }, this);


            }
        }
    },

    onBtnCancelRAPAClick: function(button, e, eOpts) {
        var me=this;
        me.ClearControls("");
        me.ReadOnlyControls("p");

    },

    onTxtRevAppealNoRAPAKeypress: function(textfield, e, eOpts) {
        /*var me=this;
        var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPA')[0];
        if(e.keyCode === 13)
        {
        if(hdnAction.lastValue === "E")
        {
        me.ReadOnlyControls("e");
        }
        me.LoadReviewAppealApplication();
        }
        */
    },

    onTxtPanRAPABlur: function(component, e, eOpts) {
        this.LoadTaxPayerInfo();

        /*var txtPan = Ext.ComponentQuery.query("#txtPanRAPA")[0];
        var pan=txtPan.getValue();

        //console.log(pan.length);

        var panLength=pan.length;

        var maxLen=txtPan.maxLength;

        if(panLength<maxLen || panLength>maxLen)
        {
            msg("WARNING","कृपया स्था.ले.नं. नौ अंकको हाल्नुहोस् !");
            return;
        }
        else
        {
            this.LoadTaxPayerInfo();
        }*/

    },

    onTxtRevAppealDateRAPABlur: function(component, e, eOpts) {
        return validateFutureDate(field.getValue(),"Y",function(){field.focus();});
    },

    onTxtCaseRefDateRAPABlur: function(component, e, eOpts) {
        return validateFutureDate(field.getValue(),"Y",function(){field.focus();});
    },

    onTxtChargePenaltyChDateRAPABlur: function(component, e, eOpts) {
        return validateFutureDate(field.getValue(),"Y",function(){field.focus();});
    },

    onTxtRevAppealNoRAPABlur: function(component, e, eOpts) {
        var me=this;
        var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPA')[0];
        if(field.value === "")
        {
            msg('WARNING',"पुनरावेदन नं हाल्नुहोस् !"); 
            return;
        }
        else
        {
            if(hdnAction.lastValue === "E")
            {
                me.ReadOnlyControls("e");
            }
            me.LoadReviewAppealApplication();
        }

    },

    onTxtAmendedChDateRAPABlur: function(component, e, eOpts) {
        return validateFutureDate(field.getValue(),"Y",function(){field.focus();});
    },

    onBtnBackRAPAClick: function(button, e, eOpts) {
        var param=Ext.ComponentQuery.query('#pnlReviewAppealApplication')[0].extraParam;
        var tNo=param.tranNo;
        var idxM=param.indexM;
        var idxT=param.indexT;

        uiConfig = {menuLink:'ModuleVerification',pageTitle:'Module Verification'};
        DynamicUI(uiConfig,null,{tranNo:tNo,indexM:idxM,indexT:idxT });
    },

    onTxtAppealAmountRAPABlur: function(component, e, eOpts) {
        var chkAS = Ext.ComponentQuery.query('#chkAmndAsmnt')[0];
        var chkC = Ext.ComponentQuery.query('#chkCharge')[0];
        var chkAC = Ext.ComponentQuery.query('#chkAmndCharge')[0];

        var offCode = Ext.ComponentQuery.query('#txtOffCodeRAPA')[0].getValue();
        var pan = Ext.ComponentQuery.query('#txtPanRAPA')[0].getValue();
        var fiscalYear = Ext.ComponentQuery.query('#cboFiscalYrRAPA')[0].getValue();

        var txtSKCNo = Ext.ComponentQuery.query('#txtSansodhitKarChargeNoRAPA')[0];
        var assessmentNo = txtSKCNo.getValue();
        var txtChargeNo = Ext.ComponentQuery.query('#txtChargePenaltyChNoRAPA')[0];
        var chargeNo = txtChargeNo.getValue();

        if(!((chkAS.checked) || (chkC.checked) || (chkAC.checked)))
        {
            msg("WARNING"," कृपया पुनरावलोकन वा पुनरावेदन गएको बिषय छान्नुहोस् !");
            return false;
        }

        if(chkAS.checked === true)
        {

            Ext.Ajax.request({
                url:"../Handlers/IncomeTax/ReviewAppeal/ReviewAppealApplicationHandler.ashx?method=GetAaInfoWithAANoForRevAppeal",
                params: {offCode:offCode,pan:pan,acctType:'10',fiscalYear:fiscalYear,assessmentNo:assessmentNo},
                success: function ( result, request ) {            


                    var obj = Ext.decode(result.responseText);  
                    //  console.log("total",obj.total);

                    var data=obj.root;
                    console.log('data',data);

                    var additionalTax=data.AdditionalTax;
                    var sCharge=data.SpecialCharge;
                    var sChargeSa=data.SpecialChargeSa;

                    var totalSCharge=Number(sCharge)+Number(sChargeSa);

                    var txtAppealAmount = Ext.ComponentQuery.query('#txtAppealAmountRAPA')[0];
                    var appealAmount = txtAppealAmount.getValue();
                    var amount=Number(appealAmount);


                    if(amount > additionalTax && amount > totalSCharge)
                    {
                        msg("WARNING","कृपया पुनरावलोकन वा पुनरावेदनमा गएको विवादित रकम कर निर्धारण रकम भन्दा बढी नहाल्नुहोस् !");
                        return false;
                    }
                },
                failure: function ( result, request ) {


                    msg("FAILURE","Error in Fetching Data !!!");
                    return;
                }   

            });
        }
        else if(chkC.checked === true)
        {

            Ext.Ajax.request({
                url:"../Handlers/IncomeTax/ReviewAppeal/ReviewAppealApplicationHandler.ashx?method=GetChargePenaltyWithCHNoForRevAppeal",
                method:'POST',
                params: {pan:pan,acctType:'10',fiscalYear:fiscalYear,offCode:offCode,chargeNo:chargeNo},
                success: function ( result, request ) {            


                    var obj = Ext.decode(result.responseText);  
                    //  console.log("total",obj.total);

                    var data=obj.root;
                    console.log('data',data);

                    var tChAmount=data.TotalAmount;

                    var txtAppealAmount = Ext.ComponentQuery.query('#txtAppealAmountRAPA')[0];
                    var appealAmount = txtAppealAmount.getValue();
                    var amount=Number(appealAmount);


                    if(amount > tChAmount)
                    {
                        msg("WARNING","कृपया पुनरावलोकन वा पुनरावेदनमा गएको विवादित रकम शुल्क रकम भन्दा बढी नहाल्नुहोस् !");
                        return false;
                    }
                },
                failure: function ( result, request ) {


                    msg("FAILURE","Error in Fetching Data !!!");
                    return;
                }   
            });

        }
    },

    onTxtDisputeDescRAPAKeypress: function(textfield, e, eOpts) {
        return unicodeKeyPress(textfield,e,eOpts);
    },

    onTxtDisputeDescRAPAKeyup: function(textfield, e, eOpts) {
        return unicodeKeyUp(textfield,e,eOpts);
    },

    onTxtDisputeDescRAPAChange: function(field, newValue, oldValue, eOpts) {
        return unicodeChange(field, newValue, oldValue, eOpts);

    },

    onTxtDisputeDescRAPAFocus: function(component, e, eOpts) {
        return unicodeFocus(field,eOpts);
    },

    SaveReviewAppealApplication: function(rStatus) {
        var offCode=Ext.ComponentQuery.query('#txtOffCodeRAPA')[0].getValue();
        var revApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPA')[0].getValue();
        var pan=Ext.ComponentQuery.query('#txtPanRAPA')[0].getValue();
        var applCourtType=Ext.ComponentQuery.query('#cboAppealCourtTypeRAPA')[0].getValue();
        var asmntNo=Ext.ComponentQuery.query('#txtAssessmentNoRAPA')[0].getValue();
        var disputeDesc=Ext.ComponentQuery.query('#txtDisputeDescRAPA')[0].getValue();
        var sansodhitKarCNo=Ext.ComponentQuery.query('#txtSansodhitKarChargeNoRAPA')[0].getValue();
        var chargePenaltyChNo=Ext.ComponentQuery.query('#txtChargePenaltyChNoRAPA')[0].getValue();
        var chargePenaltyChDate=Ext.ComponentQuery.query('#txtChargePenaltyChDateRAPA')[0].getValue();
        var chargePenaltyChSNo=Ext.ComponentQuery.query('#txtChargePenaltyChSNoRAPA')[0].getValue();
        var amndChNo=Ext.ComponentQuery.query('#txtAmendedChNoRAPA')[0].getValue();
        var amndChDate=Ext.ComponentQuery.query('#txtAmendedChDateRAPA')[0].getValue();
        var applAmount=Ext.ComponentQuery.query('#txtAppealAmountRAPA')[0].getValue();
        var caseRefNo=Ext.ComponentQuery.query('#txtCaseRefNoRAPA')[0].getValue();
        var caseRefDate=Ext.ComponentQuery.query('#txtCaseRefDateRAPA')[0].getValue();
        var fiscalYr=Ext.ComponentQuery.query('#cboFiscalYrRAPA')[0].getValue();
        var acctType="10";
        var tranDate="";
        var userName="";
        var officerCode="";


        var action = Ext.ComponentQuery.query('#hdnActionRAPA')[0].getValue();
        var tranNo = Ext.ComponentQuery.query('#hdnTranNoRAPA')[0].getValue() === ""?null:Ext.ComponentQuery.query('#hdnTranNoRAPA')[0].getValue();
        var revAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPA')[0].getValue() === "" ?0:Ext.ComponentQuery.query('#txtRevAppealNoRAPA')[0].getValue();

        /*var loadMsg="";

        if(action == "E")
        {
        loadMsg = "Updating ...";
        }
        else
        {
        loadMsg = "Saving ...";
        }*/

        var RAPA={
            'OffCode':offCode,
            'RevAppNo':revAppNo,
            'Pan':pan,
            'AcctType':acctType,
            'RevAppDate':revApplDate,
            'FiscalYear':fiscalYr,
            'AppealCourtType':applCourtType,
            'DisputeDescription':disputeDesc,
            'AppealCaseRefNo':caseRefNo,
            'AppealCaseRefDate':caseRefDate,
            'AssessmentNo':sansodhitKarCNo,
            'ChargePenaltyChargeNo':chargePenaltyChNo,
            'ChargePenaltyChargeSn':chargePenaltyChSNo,
            'ChargePenaltyChargeDate':chargePenaltyChDate,
            'AmendedChargeDate':amndChDate,
            'AmendedChargeNo':amndChNo,
            'AppealAmount':applAmount,
            'OfficerCode':officerCode,
            'TranDate':tranDate,
            'UserName':userName,
            'TranNo':tranNo,
            'Rstatus':rStatus,
            'Action':action

        };
        //console.log(RAPA);
        //var waitSave = watiMsg(loadMsg);
        Ext.Ajax.request({
            method: 'POST',
            url: '../Handlers/IncomeTax/ReviewAppeal/ReviewAppealApplicationHandler.ashx',
            params: {method:'SaveReviewAppealApplication', reviewAppealApplication : JSON.stringify(RAPA) },
            success: function( result, request ){

                // waitSave.hide();

                // var jsonMsg=Ext.decode(result.responseText);
                // msg(jsonMsg.success=="true"?"SUCCESS":"FAILURE",jsonMsg.message);
                var obj = Ext.decode(result.responseText);

                //  console.log('obj',obj.message);  
                var mmsg = obj.message;

                //console.log("mms",mmsg);

                var len=mmsg.length;

                if(revAppNo === 0)
                {
                    revAppNo= mmsg.substr(len-10,10);
                    // console.log("revAppNo",revAppNo);  
                }


                if(obj.success === "false")
                {

                    msg("FAILURE",obj.message);
                    return;
                }


                if(rStatus === "F")
                {
                    msg('INFO','पुनरावेदन गएको डाटा सफलतापुर्वक Submit भयो ।<br>कृपया पुनरावेदन नं. टिप्नुहोस्:<B STYLE="COLOR:RED">' + revAppNo + '<\B>');
                    return;

                }
                else
                {
                    if(action === "")
                    {
                        msg('INFO','पुनरावेदन गएको डाटा सफलतापुर्वक Save भयो।<br>कृपया पुनरावेदन नं. टिप्नुहोस्:<B STYLE="COLOR:RED">' + revAppNo + '<\B>');
                        return;
                    }
                    else
                    {
                        msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);
                    }
                }

            },
            failure: function ( result, request ) {

                // waitSave.hide();

                var obj = Ext.decode(result.responseText);

                msg("FAILURE",obj.message);
                return;
            }


        });
    },

    ClearControls: function(txt) {
        var offCode=Ext.ComponentQuery.query('#txtOffCodeRAPA')[0];
        var revApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPA')[0];
        var pan=Ext.ComponentQuery.query('#txtPanRAPA')[0];
        var applCourtType=Ext.ComponentQuery.query('#cboAppealCourtTypeRAPA')[0];
        var asmntNo=Ext.ComponentQuery.query('#txtAssessmentNoRAPA')[0];
        var disputeDesc=Ext.ComponentQuery.query('#txtDisputeDescRAPA')[0];
        var sansodhitKarCNo=Ext.ComponentQuery.query('#txtSansodhitKarChargeNoRAPA')[0];
        var chargePenaltyChNo=Ext.ComponentQuery.query('#txtChargePenaltyChNoRAPA')[0];
        var chargePenaltyChDate=Ext.ComponentQuery.query('#txtChargePenaltyChDateRAPA')[0];
        var chargePenaltyChSNo=Ext.ComponentQuery.query('#txtChargePenaltyChSNoRAPA')[0];
        var amndChNo=Ext.ComponentQuery.query('#txtAmendedChNoRAPA')[0];
        var amndChDate=Ext.ComponentQuery.query('#txtAmendedChDateRAPA')[0];
        var applAmount=Ext.ComponentQuery.query('#txtAppealAmountRAPA')[0];
        var caseRefNo=Ext.ComponentQuery.query('#txtCaseRefNoRAPA')[0];
        var caseRefDate=Ext.ComponentQuery.query('#txtCaseRefDateRAPA')[0];
        var fiscalYr=Ext.ComponentQuery.query('#cboFiscalYrRAPA')[0];
        var revAppNo=Ext.ComponentQuery.query('#txtRevAppealNoRAPA')[0];
        var lblAction=Ext.ComponentQuery.query('#lblActionRAPA')[0];

        var txtName=Ext.ComponentQuery.query('#txtTaxPayerNameRAPA')[0];
        var txtAddress=Ext.ComponentQuery.query('#txtTaxPayerAddressRAPA')[0];
        var txtHouseNo = Ext.ComponentQuery.query("#txtHouseNoRAPA")[0];
        var txtWardNo = Ext.ComponentQuery.query("#txtWardNoRAPA")[0];
        var txtvdcStreetName = Ext.ComponentQuery.query("#txtVdcTownStreetNameRAPA")[0];
        var txtLocationType = Ext.ComponentQuery.query("#txtLocationTypeRAPA")[0];
        var txtDistrictName = Ext.ComponentQuery.query("#txtDistrictNameRAPA")[0];
        var txtPhoneNo = Ext.ComponentQuery.query("#txtPhoneNoRAPA")[0];
        var chkMM = Ext.ComponentQuery.query('#chkMMRAPA')[0];
        var chkSM = Ext.ComponentQuery.query('#chkSMRAPA')[0];
        var chkMN = Ext.ComponentQuery.query('#chkMNRAPA')[0];
        var chkVD = Ext.ComponentQuery.query('#chkVDRAPA')[0];

        var chkAS = Ext.ComponentQuery.query('#chkAmndAsmnt')[0];
        var chkC = Ext.ComponentQuery.query('#chkCharge')[0];
        var chkAC = Ext.ComponentQuery.query('#chkAmndCharge')[0];
        var pnl1 = Ext.ComponentQuery.query('#pnl1RAPA')[0];
        var pnl2 = Ext.ComponentQuery.query('#pnl2RAPA')[0];
        var pnl3 = Ext.ComponentQuery.query('#pnl3RAPA')[0];

        var btnSave = Ext.ComponentQuery.query('#btnSaveRAPA')[0];
        var btnEdit = Ext.ComponentQuery.query('#btnEditRAPA')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteRAPA')[0];

        if(txt === "e")
        {
            // offCode.reset();
            revApplDate.reset();
            // pan.reset();
            applCourtType.reset();
            asmntNo.reset();
            disputeDesc.reset();
            sansodhitKarCNo.reset();
            chargePenaltyChNo.reset();
            chargePenaltyChDate.reset();
            chargePenaltyChSNo.reset();
            amndChNo.reset();
            amndChDate.reset();
            applAmount.reset();
            caseRefNo.reset();
            caseRefDate.reset();
            fiscalYr.reset();
            revAppNo.reset();
            chkAS.setValue(false);
            chkC.setValue(false);
            chkAC.setValue(false);
            pnl1.enable(true);
            pnl2.enable(true);
            pnl3.enable(true);
            txtName.reset();
            txtAddress.reset();
            txtHouseNo.reset();
            txtWardNo.reset();
            txtvdcStreetName.reset();
            txtLocationType.reset();
            txtDistrictName.reset();
            txtPhoneNo.reset();
            chkMM.setValue(false);
            chkSM.setValue(false);
            chkMN.setValue(false);
            chkVD.setValue(false);
        }
        else if(txt === "p")
        {
            // pan.reset();
            revApplDate.reset();
            applCourtType.reset();
            asmntNo.reset();
            disputeDesc.reset();
            sansodhitKarCNo.reset();
            chargePenaltyChNo.reset();
            chargePenaltyChDate.reset();
            chargePenaltyChSNo.reset();
            amndChNo.reset();
            amndChDate.reset();
            applAmount.reset();
            caseRefNo.reset();
            caseRefDate.reset();
            fiscalYr.reset();
            revAppNo.reset();
            revAppNo.disable(true);
            lblAction.setValue("");
            lblAction.setVisible(false);
            chkAS.setValue(false);
            chkC.setValue(false);
            chkAC.setValue(false);
            pnl1.disable(true);
            pnl2.disable(true);
            pnl3.disable(true);
            txtName.reset();
            txtAddress.reset();
            txtHouseNo.reset();
            txtWardNo.reset();
            txtvdcStreetName.reset();
            txtLocationType.reset();
            txtDistrictName.reset();
            txtPhoneNo.reset();
            chkMM.setValue(false);
            chkSM.setValue(false);
            chkMN.setValue(false);
            chkVD.setValue(false);
            btnSave.enable(true); 
            btnEdit.enable(true); 
            btnDelete.enable(true); 

        }
        else if(txt === "N")
        {
            pan.reset();
            revApplDate.reset();
            applCourtType.reset();
            asmntNo.reset();
            disputeDesc.reset();
            sansodhitKarCNo.reset();
            chargePenaltyChNo.reset();
            chargePenaltyChDate.reset();
            chargePenaltyChSNo.reset();
            amndChNo.reset();
            amndChDate.reset();
            applAmount.reset();
            caseRefNo.reset();
            caseRefDate.reset();
            fiscalYr.reset();
            lblAction.setValue("");
            lblAction.setVisible(false);
            chkAS.setValue(false);
            chkC.setValue(false);
            chkAC.setValue(false);
            pnl1.disable(true);
            pnl2.disable(true);
            pnl3.disable(true);
            txtName.reset();
            txtAddress.reset();
            txtHouseNo.reset();
            txtWardNo.reset();
            txtvdcStreetName.reset();
            txtLocationType.reset();
            txtDistrictName.reset();
            txtPhoneNo.reset();
            chkMM.setValue(false);
            chkSM.setValue(false);
            chkMN.setValue(false);
            chkVD.setValue(false);
            btnSave.enable(true); 
            btnEdit.enable(true); 
            btnDelete.enable(true); 

        }
        else if(txt === "au")
        {
            revAppNo.reset();
            pan.reset();
            revApplDate.reset();
            applCourtType.reset();
            asmntNo.reset();
            disputeDesc.reset();
            sansodhitKarCNo.reset();
            chargePenaltyChNo.reset();
            chargePenaltyChDate.reset();
            chargePenaltyChSNo.reset();
            amndChNo.reset();
            amndChDate.reset();
            applAmount.reset();
            caseRefNo.reset();
            caseRefDate.reset();
            fiscalYr.reset();
            lblAction.setValue("");
            lblAction.setVisible(false);
            chkAS.setValue(false);
            chkC.setValue(false);
            chkAC.setValue(false);
            pnl1.disable(true);
            pnl2.disable(true);
            pnl3.disable(true);
            txtName.reset();
            txtAddress.reset();
            txtHouseNo.reset();
            txtWardNo.reset();
            txtvdcStreetName.reset();
            txtLocationType.reset();
            txtDistrictName.reset();
            txtPhoneNo.reset();
            chkMM.setValue(false);
            chkSM.setValue(false);
            chkMN.setValue(false);
            chkVD.setValue(false);
        }
        else
        {
            pan.reset();
            revApplDate.reset();
            applCourtType.reset();
            asmntNo.reset();
            disputeDesc.reset();
            sansodhitKarCNo.reset();
            chargePenaltyChNo.reset();
            chargePenaltyChDate.reset();
            chargePenaltyChSNo.reset();
            amndChNo.reset();
            amndChDate.reset();
            applAmount.reset();
            caseRefNo.reset();
            caseRefDate.reset();
            fiscalYr.reset();
            revAppNo.reset();
            revAppNo.disable(true);
            lblAction.setValue("");
            lblAction.setVisible(false);
            chkAS.setValue(false);
            chkC.setValue(false);
            chkAC.setValue(false);
            pnl1.disable(true);
            pnl2.disable(true);
            pnl3.disable(true);
            txtName.reset();
            txtAddress.reset();
            txtHouseNo.reset();
            txtWardNo.reset();
            txtvdcStreetName.reset();
            txtLocationType.reset();
            txtDistrictName.reset();
            txtPhoneNo.reset();
            chkMM.setValue(false);
            chkSM.setValue(false);
            chkMN.setValue(false);
            chkVD.setValue(false);
            btnSave.enable(true); 
            btnEdit.enable(true); 
            btnDelete.enable(true); 

        }
    },

    LoadTaxPayerInfo: function() {
        var me=this;
        var txtPan = Ext.ComponentQuery.query("#txtPanRAPA")[0].getValue();
        var txtName = Ext.ComponentQuery.query("#txtTaxPayerNameRAPA")[0];
        var txtAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRAPA")[0];

        var txtHouseNo = Ext.ComponentQuery.query("#txtHouseNoRAPA")[0];
        var txtWardNo = Ext.ComponentQuery.query("#txtWardNoRAPA")[0];
        var txtvdcStreetName = Ext.ComponentQuery.query("#txtVdcTownStreetNameRAPA")[0];
        var txtLocationType = Ext.ComponentQuery.query("#txtLocationTypeRAPA")[0];
        var txtDistrictName = Ext.ComponentQuery.query("#txtDistrictNameRAPA")[0];
        var txtPhoneNo = Ext.ComponentQuery.query("#txtPhoneNoRAPA")[0];
        var txtOffCode=Ext.ComponentQuery.query('#txtOffCodeRAPA')[0].getValue();

        var acctType="10";

        if(txtPan === "")
        {
            msg("WARNING","कृपया स्था.ले.नं. हाल्नुहोस्!");
            return;
        }

        var flag=true;
        flag =LoadTaxpayerInfoWithValidPan(txtPan,acctType,function(data){

            var taxpayer=data.root.Taxpayer;

            var offCode=taxpayer.Office.OfficeCode;
            if(offCode != txtOffCode)
            {

                msg("WARNING","Pan is not registered in this office !!!");
                return false;
            }
            var bAddress =taxpayer.BusinessAddress.Address;
            var iAddress=taxpayer.IndividualAddress.Address;

            txtName.setValue(taxpayer.Name);
            txtPhoneNo.setValue(bAddress.Telephone);
            txtHouseNo.setValue(bAddress.HouseNo);
            txtWardNo.setValue(bAddress.WardNo);                 
            var sn= bAddress.StreetName;
            var vt=bAddress.VdcTown;
            var svn=sn + "/" + vt;
            txtvdcStreetName.setValue(svn);
            txtLocationType.setValue(bAddress.LocationType);
            txtDistrictName.setValue(bAddress.DistrictNameNep);

            /*
            var rec = data.root;
            txtName.setValue(rec.Name);
            txtAddress.setValue(rec.Address);
            var strAddress=rec.Address;
            alert(strAddress);
            var arrlength=strAddress.split("_,_");
            var j=0;
            for(j=0;j<arrlength.length;j++)
            {
            var hn=arrlength[0];
            var wn=arrlength[1];
            var sn=arrlength[2];
            var vt=arrlength[3];
            var lt=arrlength[4];
            var pn=arrlength[5];
            var dn=arrlength[9];

            var svn=sn + "/" + vt;
            txtPhoneNo.setValue(pn);
            txtHouseNo.setValue(hn);
            txtWardNo.setValue(wn);
            txtvdcStreetName.setValue(svn);
            txtLocationType.setValue(lt);
            txtDistrictName.setValue(dn);
            }*/

            var chkMM = Ext.ComponentQuery.query('#chkMMRAPA')[0];
            var chkSM = Ext.ComponentQuery.query('#chkSMRAPA')[0];
            var chkMN = Ext.ComponentQuery.query('#chkMNRAPA')[0];
            var chkVD = Ext.ComponentQuery.query('#chkVDRAPA')[0];


            if(txtLocationType.getValue() === "MM")
            {
                chkMM.setValue(true);
                chkSM.setValue(false);
                chkMN.setValue(false);
                chkVD.setValue(false);
            }
            else if(txtLocationType.getValue() === "SM")
            {
                chkMM.setValue(false);
                chkSM.setValue(true);
                chkMN.setValue(false);
                chkVD.setValue(false);
            }

            else if(txtLocationType.getValue() === "MN")
            {
                chkMM.setValue(false);
                chkSM.setValue(false);
                chkMN.setValue(true);
                chkVD.setValue(false);
            }
            else if(txtLocationType.getValue() === "VD")
            {
                chkMM.setValue(false);
                chkSM.setValue(false);
                chkMN.setValue(false);
                chkVD.setValue(true);
            }
            else
            {
                chkMM.setValue(false);
                chkSM.setValue(false);
                chkMN.setValue(false);
                chkVD.setValue(false);
            }
            me.ReadOnlyControls("");

        });

        if(flag === false)
        { 
            me.ReadOnlyControls("p");
            me.ClearControls("p");
        }
    },

    LoadReviewAppealApplication: function() {
        var me = this;
        var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPA')[0];
        var txtPan = Ext.ComponentQuery.query("#txtPanRAPA")[0];
        var txtName = Ext.ComponentQuery.query("#txtTaxPayerNameRAPA")[0];
        var txtAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRAPA")[0];

        var txtHouseNo = Ext.ComponentQuery.query("#txtHouseNoRAPA")[0];
        var txtWardNo = Ext.ComponentQuery.query("#txtWardNoRAPA")[0];
        var txtvdcStreetName = Ext.ComponentQuery.query("#txtVdcTownStreetNameRAPA")[0];
        var txtLocationType = Ext.ComponentQuery.query("#txtLocationTypeRAPA")[0];
        var txtDistrictName = Ext.ComponentQuery.query("#txtDistrictNameRAPA")[0];
        var txtPhoneNo = Ext.ComponentQuery.query("#txtPhoneNoRAPA")[0];

        var revApplNo=txtrevAppNo.getValue();
        if( txtrevAppNo === "")
        {
            return;
        }

        //var wait = watiMsg('loading ...');

        Ext.Ajax.request({
            url:"../Handlers/IncomeTax/ReviewAppeal/ReviewAppealApplicationHandler.ashx?method=GetReviewAppealApplication",
            params:{revAppealNo:revApplNo},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                /* if(obj.success === "false")
                {   
                msg("WARNING",obj.message);
                return;
                }*/
                if(obj.message === "F")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("d");
                    msg("WARNING","पुनरावेदनमा गएको डाटा पहिला नै FINALIZED भइसक्यो !");
                    return;
                }
                if(obj.message === "D")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("d");
                    msg("WARNING","पुनरावेदनमा गएको डाटा पहिला नै DELETED भइसक्यो !");
                    return;
                }
                if(obj.message === "V")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("d");
                    msg("WARNING","पुनरावेदनमा गएको डाटा पहिला नै VERIFIED भइसक्यो !");
                    return;
                }
                if(obj.message === "")
                {
                    me.ReadOnlyControls("e");
                }

                var txtOffCode=Ext.ComponentQuery.query('#txtOffCodeRAPA')[0];
                var txtRevApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPA')[0];
                var pan=Ext.ComponentQuery.query('#txtPanRAPA')[0];
                var cboApplCourtType=Ext.ComponentQuery.query('#cboAppealCourtTypeRAPA')[0];
                var txtAsmntNo=Ext.ComponentQuery.query('#txtAssessmentNoRAPA')[0];
                var txtDisputeDesc=Ext.ComponentQuery.query('#txtDisputeDescRAPA')[0];
                var txtSansodhitKarCNo=Ext.ComponentQuery.query('#txtSansodhitKarChargeNoRAPA')[0];
                var txtChargePenaltyChNo=Ext.ComponentQuery.query('#txtChargePenaltyChNoRAPA')[0];
                var txtChargePenaltyChDate=Ext.ComponentQuery.query('#txtChargePenaltyChDateRAPA')[0];
                var txtChargePenaltyChSNo=Ext.ComponentQuery.query('#txtChargePenaltyChSNoRAPA')[0];
                var txtAmndChNo=Ext.ComponentQuery.query('#txtAmendedChNoRAPA')[0];
                var txtAmndChDate=Ext.ComponentQuery.query('#txtAmendedChDateRAPA')[0];
                var txtApplAmount=Ext.ComponentQuery.query('#txtAppealAmountRAPA')[0];
                var txtCaseRefNo=Ext.ComponentQuery.query('#txtCaseRefNoRAPA')[0];
                var txtCaseRefDate=Ext.ComponentQuery.query('#txtCaseRefDateRAPA')[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPA')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnTranNoRAPA')[0];
                var cbofiscalYr=Ext.ComponentQuery.query('#cboFiscalYrRAPA')[0];

                var data = obj.root; 

                if(data === "")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("d");
                    msg("WARNING","यो पुनरावेदन नं. EXISTS छैन !");
                    return;
                }
                var taxpayer=data.TaxPayer;
                var bAddress =taxpayer.BusinessAddress.Address;

                txtPan.setValue(data.Pan);
                txtName.setValue(taxpayer.Name);
                txtPhoneNo.setValue(bAddress.Telephone);
                txtHouseNo.setValue(bAddress.HouseNo);
                txtWardNo.setValue(bAddress.WardNo);                 
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var svn=sn + "/" + vt;
                txtvdcStreetName.setValue(svn);
                txtLocationType.setValue(bAddress.LocationType);
                txtDistrictName.setValue(bAddress.DistrictNameNep);
                /* txtPan.setValue(data.Pan);
                txtName.setValue(data.Name);

                var strAddress=data.Address;
                var arrlength=strAddress.split("_,_");
                var j=0;
                for(j=0;j<arrlength.length;j++)
                {
                var hn=arrlength[0];
                var wn=arrlength[1];
                var sn=arrlength[2];
                var vt=arrlength[3];
                var lt=arrlength[4];
                var pn=arrlength[5];
                var dn=arrlength[9];

                var svn=sn + "/" + vt;
                txtPhoneNo.setValue(pn);
                txtHouseNo.setValue(hn);
                txtWardNo.setValue(wn);
                txtvdcStreetName.setValue(svn);
                txtLocationType.setValue(lt);
                txtDistrictName.setValue(dn);

                }*/
                txtOffCode.setValue(data.OffCode);
                txtRevApplDate.setValue(data.RevAppDate);
                cboApplCourtType.setValue(data.AppealCourtType);
                txtAsmntNo.setValue(data.AssessmentNo);
                txtDisputeDesc.setValue(data.DisputeDescription);
                txtSansodhitKarCNo.setValue(data.AssessmentNo);
                txtChargePenaltyChNo.setValue(data.ChargePenaltyChargeNo);
                txtChargePenaltyChDate.setValue(data.ChargePenaltyChargeDate);
                txtChargePenaltyChSNo.setValue(data.ChargePenaltyChargeSn);
                txtAmndChNo.setValue(data.AmendedChargeNo);
                txtAmndChDate.setValue(data.AmendedChargeDate);
                txtApplAmount.setValue(data.AppealAmount);
                txtCaseRefNo.setValue(data.AppealCaseRefNo);
                txtCaseRefDate.setValue(data.AppealCaseRefDate);
                cbofiscalYr.setValue(data.FiscalYear);

                var chkMM = Ext.ComponentQuery.query('#chkMMRAPA')[0];
                var chkSM = Ext.ComponentQuery.query('#chkSMRAPA')[0];
                var chkMN = Ext.ComponentQuery.query('#chkMNRAPA')[0];
                var chkVD = Ext.ComponentQuery.query('#chkVDRAPA')[0];


                if(txtLocationType.getValue() === "MM")
                {
                    chkMM.setValue(true);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }
                else if(txtLocationType.getValue() === "SM")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(true);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }

                else if(txtLocationType.getValue() === "MN")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(true);
                    chkVD.setValue(false);
                }
                else if(txtLocationType.getValue() === "VD")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(true);
                }
                else
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }



                var chkAS = Ext.ComponentQuery.query('#chkAmndAsmnt')[0];
                var chkC = Ext.ComponentQuery.query('#chkCharge')[0];
                var chkAC = Ext.ComponentQuery.query('#chkAmndCharge')[0];
                var pnl1 = Ext.ComponentQuery.query('#pnl1RAPA')[0];
                var pnl2 = Ext.ComponentQuery.query('#pnl2RAPA')[0];
                var pnl3 = Ext.ComponentQuery.query('#pnl3RAPA')[0];


                if(txtChargePenaltyChNo.getValue() !== "" || txtChargePenaltyChDate.getValue() !== "" || txtChargePenaltyChSNo.getValue() !== "")
                {
                    chkAS.setValue(false);
                    chkC.setValue(true);
                    chkAC.setValue(false);
                    pnl1.disable(true);
                    pnl2.enable(true);
                    pnl3.disable(true);

                }
                else if(txtAmndChNo.getValue() !== "" || txtAmndChDate.getValue() !== "")
                {
                    chkAS.setValue(false);
                    chkC.setValue(false);
                    chkAC.setValue(true);
                    pnl1.disable(true);
                    pnl2.disable(true);
                    pnl3.enable(true);
                    pnl3.enable(true);
                }

                else if(txtSansodhitKarCNo.getValue() !== "")
                {
                    chkAS.setValue(true);
                    chkC.setValue(false);
                    chkAC.setValue(false);
                    pnl1.enable(true);
                    pnl2.disable(true);
                    pnl3.disable(true);
                }

                else
                {
                    chkAS.setValue(false);
                    chkC.setValue(false);
                    chkAC.setValue(false);
                    pnl1.enable(true);
                    pnl2.enable(true);
                    pnl3.enable(true);
                }


                hdnTranNo.setValue(data.TranNo);

                if(hdnAction.getValue() !== "D")
                {
                    hdnAction.setValue(data.Action);
                }

                var win1 = Ext.getCmp('ReviewAppealAAWindow');
                var win2 = Ext.getCmp('ReviewAppealCPWindow');
                if(chkAS.checked === true)
                {
                    win1.close();
                }
                else if(chkC.checked === true)
                {
                    win2.close();
                } 

            },
            failure: function ( result, request ) {

                // wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    ReadOnlyControls: function(val) {
        var txtPan = Ext.ComponentQuery.query("#txtPanRAPA")[0];
        var txtName = Ext.ComponentQuery.query("#txtTaxPayerNameRAPA")[0];
        var txtAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRAPA")[0];

        var txtOffCode=Ext.ComponentQuery.query('#txtOffCodeRAPA')[0];
        var txtRevApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPA')[0];
        var fiscalYr=Ext.ComponentQuery.query('#cboFiscalYrRAPA')[0];
        var txtRevAppealNo=Ext.ComponentQuery.query('#txtRevAppealNoRAPA')[0];
        var lblAction=Ext.ComponentQuery.query('#lblActionRAPA')[0];

        var cboApplCourtType=Ext.ComponentQuery.query('#cboAppealCourtTypeRAPA')[0];
        var txtAsmntNo=Ext.ComponentQuery.query('#txtAssessmentNoRAPA')[0];
        var txtDisputeDesc=Ext.ComponentQuery.query('#txtDisputeDescRAPA')[0];
        var txtSansodhitKarCNo=Ext.ComponentQuery.query('#txtSansodhitKarChargeNoRAPA')[0];
        var txtChargePenaltyChNo=Ext.ComponentQuery.query('#txtChargePenaltyChNoRAPA')[0];
        var txtChargePenaltyChDate=Ext.ComponentQuery.query('#txtChargePenaltyChDateRAPA')[0];
        var txtChargePenaltyChSNo=Ext.ComponentQuery.query('#txtChargePenaltyChSNoRAPA')[0];
        var txtAmndChNo=Ext.ComponentQuery.query('#txtAmendedChNoRAPA')[0];
        var txtAmndChDate=Ext.ComponentQuery.query('#txtAmendedChDateRAPA')[0];
        var txtApplAmount=Ext.ComponentQuery.query('#txtAppealAmountRAPA')[0];
        var txtCaseRefNo=Ext.ComponentQuery.query('#txtCaseRefNoRAPA')[0];
        var txtCaseRefDate=Ext.ComponentQuery.query('#txtCaseRefDateRAPA')[0];

        var chkAS = Ext.ComponentQuery.query('#chkAmndAsmnt')[0];
        var chkC = Ext.ComponentQuery.query('#chkCharge')[0];
        var chkAC = Ext.ComponentQuery.query('#chkAmndCharge')[0];

        if(val === "e")
        {
            txtPan.setReadOnly(true);
            txtName.setReadOnly(true);
            txtAddress.setReadOnly(true);
            txtRevApplDate.setReadOnly(false);
            fiscalYr.setReadOnly(false);
            txtRevAppealNo.setVisible(true);
            // lblAction.setVisible(true);
            cboApplCourtType.setReadOnly(false);
            txtAsmntNo.setReadOnly(false);
            txtDisputeDesc.setReadOnly(false);
            txtSansodhitKarCNo.setReadOnly(false);
            txtChargePenaltyChNo.setReadOnly(false);
            txtChargePenaltyChDate.setReadOnly(false);
            txtChargePenaltyChSNo.setReadOnly(false);
            txtAmndChNo.setReadOnly(false);
            txtAmndChDate.setReadOnly(false);
            txtApplAmount.setReadOnly(false);
            txtCaseRefNo.setReadOnly(false);
            txtCaseRefDate.setReadOnly(false);
            chkAS.setReadOnly(false);
            chkC.setReadOnly(false);
            chkAC.setReadOnly(false);


        }
        else if(val === "d")
        {
            txtPan.setReadOnly(true);
            txtName.setReadOnly(true);
            txtAddress.setReadOnly(true);
            txtRevApplDate.setReadOnly(true);
            fiscalYr.setReadOnly(true);
            txtRevAppealNo.setVisible(true);
            // lblAction.setVisible(true);
            cboApplCourtType.setReadOnly(true);
            txtAsmntNo.setReadOnly(true);
            txtDisputeDesc.setReadOnly(true);
            txtSansodhitKarCNo.setReadOnly(true);
            txtChargePenaltyChNo.setReadOnly(true);
            txtChargePenaltyChDate.setReadOnly(true);
            txtChargePenaltyChSNo.setReadOnly(true);
            txtAmndChNo.setReadOnly(true);
            txtAmndChDate.setReadOnly(true);
            txtApplAmount.setReadOnly(true);
            txtCaseRefNo.setReadOnly(true);
            txtCaseRefDate.setReadOnly(true);
            chkAS.setReadOnly(true);
            chkC.setReadOnly(true);
            chkAC.setReadOnly(true);


        }
        else if(val === "p")
        {
            txtPan.setReadOnly(false);
            txtName.setReadOnly(true);
            txtAddress.setReadOnly(true);
            txtRevApplDate.setReadOnly(true);
            fiscalYr.setReadOnly(true);
            txtRevAppealNo.setVisible(false);
            lblAction.setVisible(false);
            cboApplCourtType.setReadOnly(true);
            txtAsmntNo.setReadOnly(true);
            txtDisputeDesc.setReadOnly(true);
            txtSansodhitKarCNo.setReadOnly(true);
            txtChargePenaltyChNo.setReadOnly(true);
            txtChargePenaltyChDate.setReadOnly(true);
            txtChargePenaltyChSNo.setReadOnly(true);
            txtAmndChNo.setReadOnly(true);
            txtAmndChDate.setReadOnly(true);
            txtApplAmount.setReadOnly(true);
            txtCaseRefNo.setReadOnly(true);
            txtCaseRefDate.setReadOnly(true);
            chkAS.setReadOnly(true);
            chkC.setReadOnly(true);
            chkAC.setReadOnly(true);


        }

        else
        {
            txtPan.setReadOnly(false);
            txtName.setReadOnly(true);
            txtAddress.setReadOnly(true);
            txtRevApplDate.setReadOnly(false);
            fiscalYr.setReadOnly(false);
            txtRevAppealNo.setVisible(false);
            lblAction.setVisible(false);
            cboApplCourtType.setReadOnly(false);
            txtAsmntNo.setReadOnly(false);
            txtDisputeDesc.setReadOnly(false);
            txtSansodhitKarCNo.setReadOnly(false);
            txtChargePenaltyChNo.setReadOnly(false);
            txtChargePenaltyChDate.setReadOnly(false);
            txtChargePenaltyChSNo.setReadOnly(false);
            txtAmndChNo.setReadOnly(false);
            txtAmndChDate.setReadOnly(false);
            txtApplAmount.setReadOnly(false);
            txtCaseRefNo.setReadOnly(false);
            txtCaseRefDate.setReadOnly(false);
            chkAS.setReadOnly(false);
            chkC.setReadOnly(false);
            chkAC.setReadOnly(false);

        }
    },

    LoadUserOffice: function() {
        var txtOffCode=Ext.ComponentQuery.query("#txtOffCodeRAPA")[0];

        Ext.Ajax.request({
            url:"../Handlers/Security/OfficeUserHandler.ashx?method=GetUserOffice",
            params:{},
            success: function ( result, request ) {            


                var obj = Ext.decode(result.responseText);  
                // console.log(obj.root.OfficeCode);
                var data=obj.root;
                var offCode=data.OfficeCode;

                txtOffCode.setValue(offCode);

            },
            failure: function ( result, request ) {


                msg("FAILURE","Error in Fetching Data !!!");
            }
        });
    },

    ReadOnlyShowHideControls: function(txt) {
        var txtPan = Ext.ComponentQuery.query("#txtPanRAPA")[0];
        var txtName = Ext.ComponentQuery.query("#txtTaxPayerNameRAPA")[0];
        var txtAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRAPA")[0];

        var txtOffCode=Ext.ComponentQuery.query('#txtOffCodeRAPA')[0];
        var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPA')[0];
        var txtRevApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPA')[0];
        var fiscalYr=Ext.ComponentQuery.query('#cboFiscalYrRAPA')[0];
        var txtRevAppealNo=Ext.ComponentQuery.query('#txtRevAppealNoRAPA')[0];
        var lblAction=Ext.ComponentQuery.query('#lblActionRAPA')[0];

        var cboApplCourtType=Ext.ComponentQuery.query('#cboAppealCourtTypeRAPA')[0];
        var txtAsmntNo=Ext.ComponentQuery.query('#txtAssessmentNoRAPA')[0];
        var txtDisputeDesc=Ext.ComponentQuery.query('#txtDisputeDescRAPA')[0];
        var txtSansodhitKarCNo=Ext.ComponentQuery.query('#txtSansodhitKarChargeNoRAPA')[0];
        var txtChargePenaltyChNo=Ext.ComponentQuery.query('#txtChargePenaltyChNoRAPA')[0];
        var txtChargePenaltyChDate=Ext.ComponentQuery.query('#txtChargePenaltyChDateRAPA')[0];
        var txtChargePenaltyChSNo=Ext.ComponentQuery.query('#txtChargePenaltyChSNoRAPA')[0];
        var txtAmndChNo=Ext.ComponentQuery.query('#txtAmendedChNoRAPA')[0];
        var txtAmndChDate=Ext.ComponentQuery.query('#txtAmendedChDateRAPA')[0];
        var txtApplAmount=Ext.ComponentQuery.query('#txtAppealAmountRAPA')[0];
        var txtCaseRefNo=Ext.ComponentQuery.query('#txtCaseRefNoRAPA')[0];
        var txtCaseRefDate=Ext.ComponentQuery.query('#txtCaseRefDateRAPA')[0];

        var chkAS = Ext.ComponentQuery.query('#chkAmndAsmnt')[0];
        var chkC = Ext.ComponentQuery.query('#chkCharge')[0];
        var chkAC = Ext.ComponentQuery.query('#chkAmndCharge')[0];


        var fCntAppl = Ext.ComponentQuery.query("#fCntRAPA")[0];
        var fCntBack = Ext.ComponentQuery.query("#fCntBackRAPA")[0];

        var btnEdit = Ext.ComponentQuery.query('#btnEditRAPA')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteRAPA')[0];
        var btnCancel = Ext.ComponentQuery.query('#btnCancelRAPA')[0];


        //var form=(Ext.ComponentQuery.query('#frmTaxPayerInfo')[0]).getForm();
        //var fields = form.getFields();

        if(txt === "t")
        {
            txtPan.setReadOnly(true);
            txtName.setReadOnly(true);
            txtAddress.setReadOnly(true);

            //Convert All Fields To Read Only\r",

            // Ext.each(fields.items, function (f) {
            //     f.inputEl.dom.disabled = true;
            // });
            //End Converting Fields To Read Only\r",

            txtRevApplDate.setReadOnly(true);
            fiscalYr.setReadOnly(true);
            lblAction.setVisible(false);
            txtRevAppealNo.setVisible(true);
            txtRevAppealNo.setReadOnly(true);
            cboApplCourtType.setReadOnly(true);
            txtAsmntNo.setReadOnly(true);
            txtDisputeDesc.setReadOnly(true);
            txtSansodhitKarCNo.setReadOnly(true);
            txtChargePenaltyChNo.setReadOnly(true);
            txtChargePenaltyChDate.setReadOnly(true);
            txtChargePenaltyChSNo.setReadOnly(true);
            txtAmndChNo.setReadOnly(true);
            txtAmndChDate.setReadOnly(true);
            txtApplAmount.setReadOnly(true);
            txtCaseRefNo.setReadOnly(true);
            txtCaseRefDate.setReadOnly(true);
            chkAS.setReadOnly(true);
            chkC.setReadOnly(true);
            chkAC.setReadOnly(true);
            fCntAppl.setVisible(false);
            //fCntBack.setVisible(true);
        }
        else if(txt === "au")
        {
            txtrevAppNo.setVisible(true);
            btnEdit.disable(true);
            btnDelete.disable(true);
            btnCancel.disable(true);
        }
        else
        {
            txtPan.setReadOnly(false);
            txtName.setReadOnly(true);
            txtAddress.setReadOnly(true);
            // Ext.each(fields.items, function (f) {
            //    f.inputEl.dom.disabled = false;
            // });
            txtRevApplDate.setReadOnly(false);
            fiscalYr.setReadOnly(false);
            txtRevAppealNo.setVisible(false);
            lblAction.setVisible(false);
            cboApplCourtType.setReadOnly(false);
            txtAsmntNo.setReadOnly(false);
            txtDisputeDesc.setReadOnly(false);
            txtSansodhitKarCNo.setReadOnly(false);
            txtChargePenaltyChNo.setReadOnly(false);
            txtChargePenaltyChDate.setReadOnly(false);
            txtChargePenaltyChSNo.setReadOnly(false);
            txtAmndChNo.setReadOnly(false);
            txtAmndChDate.setReadOnly(false);
            txtApplAmount.setReadOnly(false);
            txtCaseRefNo.setReadOnly(false);
            txtCaseRefDate.setReadOnly(false);
            chkAS.setReadOnly(false);
            chkC.setReadOnly(false);
            chkAC.setReadOnly(false);
            fCntAppl.setVisible(true);
            // fCntBack.setVisible(false);
            btnEdit.enable(true);
            btnDelete.enable(true);
            btnCancel.enable(true);
            txtrevAppNo.setVisible(false);

        }
    },

    LoadReviewAppeaWithTranNo: function() {

        var objParam = Ext.ComponentQuery.query('#pnlReviewAppealApplication')[0].extraParam;
        //console.log(objParam);
        var tranNo=objParam.params.tranNo;
        //alert(tranNo);

        Ext.Ajax.request({
            url:"../Handlers/IncomeTax/ReviewAppeal/ReviewAppealApplicationHandler.ashx?method=GetReviewAppealApplicationWithTranNo",
            params:{tranNo:tranNo},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }

                var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPA')[0];
                var txtPan = Ext.ComponentQuery.query("#txtPanRAPA")[0];
                var txtName = Ext.ComponentQuery.query("#txtTaxPayerNameRAPA")[0];
                var txtAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRAPA")[0];
                var txtHouseNo = Ext.ComponentQuery.query("#txtHouseNoRAPA")[0];
                var txtWardNo = Ext.ComponentQuery.query("#txtWardNoRAPA")[0];
                var txtvdcStreetName = Ext.ComponentQuery.query("#txtVdcTownStreetNameRAPA")[0];
                var txtLocationType = Ext.ComponentQuery.query("#txtLocationTypeRAPA")[0];
                var txtDistrictName = Ext.ComponentQuery.query("#txtDistrictNameRAPA")[0];
                var txtPhoneNo = Ext.ComponentQuery.query("#txtPhoneNoRAPA")[0];

                var txtOffCode=Ext.ComponentQuery.query('#txtOffCodeRAPA')[0];
                var txtRevApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPA')[0];
                var pan=Ext.ComponentQuery.query('#txtPanRAPA')[0];
                var cboApplCourtType=Ext.ComponentQuery.query('#cboAppealCourtTypeRAPA')[0];
                var txtAsmntNo=Ext.ComponentQuery.query('#txtAssessmentNoRAPA')[0];
                var txtDisputeDesc=Ext.ComponentQuery.query('#txtDisputeDescRAPA')[0];
                var txtSansodhitKarCNo=Ext.ComponentQuery.query('#txtSansodhitKarChargeNoRAPA')[0];
                var txtChargePenaltyChNo=Ext.ComponentQuery.query('#txtChargePenaltyChNoRAPA')[0];
                var txtChargePenaltyChDate=Ext.ComponentQuery.query('#txtChargePenaltyChDateRAPA')[0];
                var txtChargePenaltyChSNo=Ext.ComponentQuery.query('#txtChargePenaltyChSNoRAPA')[0];
                var txtAmndChNo=Ext.ComponentQuery.query('#txtAmendedChNoRAPA')[0];
                var txtAmndChDate=Ext.ComponentQuery.query('#txtAmendedChDateRAPA')[0];
                var txtApplAmount=Ext.ComponentQuery.query('#txtAppealAmountRAPA')[0];
                var txtCaseRefNo=Ext.ComponentQuery.query('#txtCaseRefNoRAPA')[0];
                var txtCaseRefDate=Ext.ComponentQuery.query('#txtCaseRefDateRAPA')[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPA')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnTranNoRAPA')[0];
                var cbofiscalYr=Ext.ComponentQuery.query('#cboFiscalYrRAPA')[0];

                var data = obj.root; 

                if(data === "")
                {
                    msg("WARNING","यो पुनरावेदन नं. भेटाऊन सकेन !");
                    return;
                }
                var taxpayer=data.TaxPayer;
                var bAddress =taxpayer.BusinessAddress.Address;
                txtrevAppNo.setValue(data.RevAppNo);
                txtPan.setValue(data.Pan);
                txtName.setValue(taxpayer.Name);
                txtPhoneNo.setValue(bAddress.Telephone);
                txtHouseNo.setValue(bAddress.HouseNo);
                txtWardNo.setValue(bAddress.WardNo);                 
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var svn=sn + "/" + vt;
                txtvdcStreetName.setValue(svn);
                txtLocationType.setValue(bAddress.LocationType);
                txtDistrictName.setValue(bAddress.DistrictNameNep);

                txtOffCode.setValue(data.OffCode);
                txtRevApplDate.setValue(data.RevAppDate);
                cboApplCourtType.setValue(data.AppealCourtType);
                txtAsmntNo.setValue(data.AssessmentNo);
                txtDisputeDesc.setValue(data.DisputeDescription);
                txtSansodhitKarCNo.setValue(data.AssessmentNo);
                txtChargePenaltyChNo.setValue(data.ChargePenaltyChargeNo);
                txtChargePenaltyChDate.setValue(data.ChargePenaltyChargeDate);
                txtChargePenaltyChSNo.setValue(data.ChargePenaltyChargeSn);
                txtAmndChNo.setValue(data.AmendedChargeNo);
                txtAmndChDate.setValue(data.AmendedChargeDate);
                txtApplAmount.setValue(data.AppealAmount);
                txtCaseRefNo.setValue(data.AppealCaseRefNo);
                txtCaseRefDate.setValue(data.AppealCaseRefDate);
                cbofiscalYr.setValue(data.FiscalYear);

                var chkMM = Ext.ComponentQuery.query('#chkMMRAPA')[0];
                var chkSM = Ext.ComponentQuery.query('#chkSMRAPA')[0];
                var chkMN = Ext.ComponentQuery.query('#chkMNRAPA')[0];
                var chkVD = Ext.ComponentQuery.query('#chkVDRAPA')[0];


                if(txtLocationType.getValue() === "MM")
                {
                    chkMM.setValue(true);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }
                else if(txtLocationType.getValue() === "SM")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(true);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }

                else if(txtLocationType.getValue() === "MN")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(true);
                    chkVD.setValue(false);
                }
                else if(txtLocationType.getValue() === "VD")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(true);
                }
                else
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }



                var chkAS = Ext.ComponentQuery.query('#chkAmndAsmnt')[0];
                var chkC = Ext.ComponentQuery.query('#chkCharge')[0];
                var chkAC = Ext.ComponentQuery.query('#chkAmndCharge')[0];
                var pnl1 = Ext.ComponentQuery.query('#pnl1RAPA')[0];
                var pnl2 = Ext.ComponentQuery.query('#pnl2RAPA')[0];
                var pnl3 = Ext.ComponentQuery.query('#pnl3RAPA')[0];


                if(txtChargePenaltyChNo.getValue() !== "" || txtChargePenaltyChDate.getValue() !== "" || txtChargePenaltyChSNo.getValue() !== "")
                {
                    chkAS.setValue(false);
                    chkC.setValue(true);
                    chkAC.setValue(false);
                    pnl1.disable(true);
                    pnl2.enable(true);
                    pnl3.disable(true);

                }
                else if(txtAmndChNo.getValue() !== "" || txtAmndChDate.getValue() !== "")
                {
                    chkAS.setValue(false);
                    chkC.setValue(false);
                    chkAC.setValue(true);
                    pnl1.disable(true);
                    pnl2.disable(true);
                    pnl3.enable(true);
                    pnl3.enable(true);
                }

                else if(txtSansodhitKarCNo.getValue() !== "")
                {
                    chkAS.setValue(true);
                    chkC.setValue(false);
                    chkAC.setValue(false);
                    pnl1.enable(true);
                    pnl2.disable(true);
                    pnl3.disable(true);
                }

                else
                {
                    chkAS.setValue(false);
                    chkC.setValue(false);
                    chkAC.setValue(false);
                    pnl1.enable(true);
                    pnl2.enable(true);
                    pnl3.enable(true);
                }

                var win1 = Ext.getCmp('ReviewAppealAAWindow');
                var win2 = Ext.getCmp('ReviewAppealCPWindow');
                if(chkAS.checked === true)
                {
                    win1.close();
                }
                else if(chkC.checked === true)
                {
                    win2.close();
                } 

                hdnTranNo.setValue(data.TranNo);

                if(hdnAction.getValue() !== "D")
                {
                    hdnAction.setValue(data.Action);
                }

            },
            failure: function ( result, request ) {

                // wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    LoadPostedReviewAppealApplication: function() {
        var me = this; 
        var objParam = Ext.ComponentQuery.query('#pnlReviewAppealApplication')[0].extraParam;
        //console.log(objParam);

        var offCodeAU = objParam.params.offCode;
        var requestNo = objParam.params.requestNo;
        var revAppealNo = objParam.params.pks[0].data.Value;


        //var wait = waitMsg('loading ...');

        Ext.Ajax.request({
            url:"../Handlers/IncomeTax/ReviewAppeal/ReviewAppealApplicationHandler.ashx?method=GetPostedReviewAppealApplication",
            params:{offCodeAU:offCodeAU,requestNo:requestNo,revAppealNo:revAppealNo},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                /* if(obj.success === "false")
                {   
                msg("WARNING",obj.message);
                return;
                }*/
                if(obj.message === "F")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("d");
                    msg("WARNING","पुनरावेदनमा गएको डाटा पहिला नै FINALIZED भइसक्यो !");
                    return;
                }
                if(obj.message === "D")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("d");
                    msg("WARNING","पुनरावेदनमा गएको डाटा पहिला नै DELETED भइसक्यो !");
                    return;
                }
                if(obj.message === "V")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("d");
                    msg("WARNING","पुनरावेदनमा गएको डाटा पहिला नै VERIFIED भइसक्यो !");
                    return;
                }
                if(obj.message === "")
                {
                    me.ReadOnlyControls("e");
                }
                var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPA')[0];
                var txtPan = Ext.ComponentQuery.query("#txtPanRAPA")[0];
                var txtName = Ext.ComponentQuery.query("#txtTaxPayerNameRAPA")[0];
                var txtAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRAPA")[0];

                var txtHouseNo = Ext.ComponentQuery.query("#txtHouseNoRAPA")[0];
                var txtWardNo = Ext.ComponentQuery.query("#txtWardNoRAPA")[0];
                var txtvdcStreetName = Ext.ComponentQuery.query("#txtVdcTownStreetNameRAPA")[0];
                var txtLocationType = Ext.ComponentQuery.query("#txtLocationTypeRAPA")[0];
                var txtDistrictName = Ext.ComponentQuery.query("#txtDistrictNameRAPA")[0];
                var txtPhoneNo = Ext.ComponentQuery.query("#txtPhoneNoRAPA")[0];

                var txtOffCode=Ext.ComponentQuery.query('#txtOffCodeRAPA')[0];
                var txtRevApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPA')[0];
                var pan=Ext.ComponentQuery.query('#txtPanRAPA')[0];
                var cboApplCourtType=Ext.ComponentQuery.query('#cboAppealCourtTypeRAPA')[0];
                var txtAsmntNo=Ext.ComponentQuery.query('#txtAssessmentNoRAPA')[0];
                var txtDisputeDesc=Ext.ComponentQuery.query('#txtDisputeDescRAPA')[0];
                var txtSansodhitKarCNo=Ext.ComponentQuery.query('#txtSansodhitKarChargeNoRAPA')[0];
                var txtChargePenaltyChNo=Ext.ComponentQuery.query('#txtChargePenaltyChNoRAPA')[0];
                var txtChargePenaltyChDate=Ext.ComponentQuery.query('#txtChargePenaltyChDateRAPA')[0];
                var txtChargePenaltyChSNo=Ext.ComponentQuery.query('#txtChargePenaltyChSNoRAPA')[0];
                var txtAmndChNo=Ext.ComponentQuery.query('#txtAmendedChNoRAPA')[0];
                var txtAmndChDate=Ext.ComponentQuery.query('#txtAmendedChDateRAPA')[0];
                var txtApplAmount=Ext.ComponentQuery.query('#txtAppealAmountRAPA')[0];
                var txtCaseRefNo=Ext.ComponentQuery.query('#txtCaseRefNoRAPA')[0];
                var txtCaseRefDate=Ext.ComponentQuery.query('#txtCaseRefDateRAPA')[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPA')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnTranNoRAPA')[0];
                var cbofiscalYr=Ext.ComponentQuery.query('#cboFiscalYrRAPA')[0];

                var data = obj.root; 

                if(data === "")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("d");
                    msg("WARNING","यो पुनरावेदन नं. EXISTS छैन !");
                    return;
                }
                var taxpayer=data.TaxPayer;
                var bAddress =taxpayer.BusinessAddress.Address;

                txtPan.setValue(data.Pan);
                txtName.setValue(taxpayer.Name);
                txtPhoneNo.setValue(bAddress.Telephone);
                txtHouseNo.setValue(bAddress.HouseNo);
                txtWardNo.setValue(bAddress.WardNo);                 
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var svn=sn + "/" + vt;
                txtvdcStreetName.setValue(svn);
                txtLocationType.setValue(bAddress.LocationType);
                txtDistrictName.setValue(bAddress.DistrictNameNep);

                txtOffCode.setValue(data.OffCode);
                txtrevAppNo.setValue(data.RevAppNo);
                txtRevApplDate.setValue(data.RevAppDate);
                //alert(data.FiscalYear);
                cbofiscalYr.setValue(data.FiscalYear);
                cboApplCourtType.setValue(data.AppealCourtType);
                txtAsmntNo.setValue(data.AssessmentNo);
                txtDisputeDesc.setValue(data.DisputeDescription);
                txtSansodhitKarCNo.setValue(data.AssessmentNo);
                txtChargePenaltyChNo.setValue(data.ChargePenaltyChargeNo);
                txtChargePenaltyChDate.setValue(data.ChargePenaltyChargeDate);
                txtChargePenaltyChSNo.setValue(data.ChargePenaltyChargeSn);
                txtAmndChNo.setValue(data.AmendedChargeNo);
                txtAmndChDate.setValue(data.AmendedChargeDate);
                txtApplAmount.setValue(data.AppealAmount);
                txtCaseRefNo.setValue(data.AppealCaseRefNo);
                txtCaseRefDate.setValue(data.AppealCaseRefDate);

                var chkMM = Ext.ComponentQuery.query('#chkMMRAPA')[0];
                var chkSM = Ext.ComponentQuery.query('#chkSMRAPA')[0];
                var chkMN = Ext.ComponentQuery.query('#chkMNRAPA')[0];
                var chkVD = Ext.ComponentQuery.query('#chkVDRAPA')[0];


                if(txtLocationType.getValue() === "MM")
                {
                    chkMM.setValue(true);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }
                else if(txtLocationType.getValue() === "SM")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(true);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }

                else if(txtLocationType.getValue() === "MN")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(true);
                    chkVD.setValue(false);
                }
                else if(txtLocationType.getValue() === "VD")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(true);
                }
                else
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }



                var chkAS = Ext.ComponentQuery.query('#chkAmndAsmnt')[0];
                var chkC = Ext.ComponentQuery.query('#chkCharge')[0];
                var chkAC = Ext.ComponentQuery.query('#chkAmndCharge')[0];
                var pnl1 = Ext.ComponentQuery.query('#pnl1RAPA')[0];
                var pnl2 = Ext.ComponentQuery.query('#pnl2RAPA')[0];
                var pnl3 = Ext.ComponentQuery.query('#pnl3RAPA')[0];


                if(txtChargePenaltyChNo.getValue() !== "" || txtChargePenaltyChDate.getValue() !== "" || txtChargePenaltyChSNo.getValue() !== "")
                {
                    chkAS.setValue(false);
                    chkC.setValue(true);
                    chkAC.setValue(false);
                    pnl1.disable(true);
                    pnl2.enable(true);
                    pnl3.disable(true);

                }
                else if(txtAmndChNo.getValue() !== "" || txtAmndChDate.getValue() !== "")
                {
                    chkAS.setValue(false);
                    chkC.setValue(false);
                    chkAC.setValue(true);
                    pnl1.disable(true);
                    pnl2.disable(true);
                    pnl3.enable(true);
                    pnl3.enable(true);
                }

                else if(txtSansodhitKarCNo.getValue() !== "")
                {
                    chkAS.setValue(true);
                    chkC.setValue(false);
                    chkAC.setValue(false);
                    pnl1.enable(true);
                    pnl2.disable(true);
                    pnl3.disable(true);
                }

                else
                {
                    chkAS.setValue(false);
                    chkC.setValue(false);
                    chkAC.setValue(false);
                    pnl1.enable(true);
                    pnl2.enable(true);
                    pnl3.enable(true);
                }

                var win1 = Ext.getCmp('ReviewAppealAAWindow');
                var win2 = Ext.getCmp('ReviewAppealCPWindow');
                if(chkAS.checked === true)
                {
                    win1.close();
                }
                else if(chkC.checked === true)
                {
                    win2.close();
                } 

                hdnTranNo.setValue(data.TranNo);

                if(hdnAction.getValue() !== "D")
                {
                    hdnAction.setValue(data.Action);
                }

            },
            failure: function ( result, request ) {

                // wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    LoadReviewAppealApplicationAU: function() {
        var me = this;
        var objParam = Ext.ComponentQuery.query('#pnlReviewAppealApplication')[0].extraParam;
        //console.log(objParam);

        var offCodeAU = objParam.params.offCode;
        var requestNo = objParam.params.requestNo;


        //var wait = waitMsg('loading ...');

        Ext.Ajax.request({
            url:"../Handlers/IncomeTax/ReviewAppeal/ReviewAppealApplicationHandler.ashx?method=GetReviewAppealApplicationAU",
            params:{offCodeAU:offCodeAU,requestNo:requestNo},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                /* if(obj.success === "false")
                {   
                msg("WARNING",obj.message);
                return;
                }*/
                if(obj.message === "F")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("d");
                    msg("WARNING","पुनरावेदनमा गएको डाटा पहिला नै FINALIZED भइसक्यो !");
                    return;
                }
                if(obj.message === "D")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("d");
                    msg("WARNING","पुनरावेदनमा गएको डाटा पहिला नै DELETED भइसक्यो !");
                    return;
                }
                if(obj.message === "V")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("d");
                    msg("WARNING","पुनरावेदनमा गएको डाटा पहिला नै VERIFIED भइसक्यो !");
                    return;
                }
                if(obj.message === "")
                {
                    me.ReadOnlyControls("e");
                }
                var txtrevAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPA')[0];
                var txtPan = Ext.ComponentQuery.query("#txtPanRAPA")[0];
                var txtName = Ext.ComponentQuery.query("#txtTaxPayerNameRAPA")[0];
                var txtAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRAPA")[0];

                var txtHouseNo = Ext.ComponentQuery.query("#txtHouseNoRAPA")[0];
                var txtWardNo = Ext.ComponentQuery.query("#txtWardNoRAPA")[0];
                var txtvdcStreetName = Ext.ComponentQuery.query("#txtVdcTownStreetNameRAPA")[0];
                var txtLocationType = Ext.ComponentQuery.query("#txtLocationTypeRAPA")[0];
                var txtDistrictName = Ext.ComponentQuery.query("#txtDistrictNameRAPA")[0];
                var txtPhoneNo = Ext.ComponentQuery.query("#txtPhoneNoRAPA")[0];

                var txtOffCode=Ext.ComponentQuery.query('#txtOffCodeRAPA')[0];
                var txtRevApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPA')[0];
                var pan=Ext.ComponentQuery.query('#txtPanRAPA')[0];
                var cboApplCourtType=Ext.ComponentQuery.query('#cboAppealCourtTypeRAPA')[0];
                var txtAsmntNo=Ext.ComponentQuery.query('#txtAssessmentNoRAPA')[0];
                var txtDisputeDesc=Ext.ComponentQuery.query('#txtDisputeDescRAPA')[0];
                var txtSansodhitKarCNo=Ext.ComponentQuery.query('#txtSansodhitKarChargeNoRAPA')[0];
                var txtChargePenaltyChNo=Ext.ComponentQuery.query('#txtChargePenaltyChNoRAPA')[0];
                var txtChargePenaltyChDate=Ext.ComponentQuery.query('#txtChargePenaltyChDateRAPA')[0];
                var txtChargePenaltyChSNo=Ext.ComponentQuery.query('#txtChargePenaltyChSNoRAPA')[0];
                var txtAmndChNo=Ext.ComponentQuery.query('#txtAmendedChNoRAPA')[0];
                var txtAmndChDate=Ext.ComponentQuery.query('#txtAmendedChDateRAPA')[0];
                var txtApplAmount=Ext.ComponentQuery.query('#txtAppealAmountRAPA')[0];
                var txtCaseRefNo=Ext.ComponentQuery.query('#txtCaseRefNoRAPA')[0];
                var txtCaseRefDate=Ext.ComponentQuery.query('#txtCaseRefDateRAPA')[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionRAPA')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnTranNoRAPA')[0];
                var cbofiscalYr=Ext.ComponentQuery.query('#cboFiscalYrRAPA')[0];

                var data = obj.root; 

                if(data === "")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("d");
                    msg("WARNING","यो पुनरावेदन नं. EXISTS छैन !");
                    return;
                }
                var taxpayer=data.TaxPayer;
                var bAddress =taxpayer.BusinessAddress.Address;

                txtPan.setValue(data.Pan);
                txtName.setValue(taxpayer.Name);
                txtPhoneNo.setValue(bAddress.Telephone);
                txtHouseNo.setValue(bAddress.HouseNo);
                txtWardNo.setValue(bAddress.WardNo);                 
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var svn=sn + "/" + vt;
                txtvdcStreetName.setValue(svn);
                txtLocationType.setValue(bAddress.LocationType);
                txtDistrictName.setValue(bAddress.DistrictNameNep);

                txtOffCode.setValue(data.OffCode);
                txtrevAppNo.setValue(data.RevAppNo);
                txtRevApplDate.setValue(data.RevAppDate);
                //alert(data.FiscalYear);
                cbofiscalYr.setValue(data.FiscalYear);
                cboApplCourtType.setValue(data.AppealCourtType);
                txtAsmntNo.setValue(data.AssessmentNo);
                txtDisputeDesc.setValue(data.DisputeDescription);
                txtSansodhitKarCNo.setValue(data.AssessmentNo);
                txtChargePenaltyChNo.setValue(data.ChargePenaltyChargeNo);
                txtChargePenaltyChDate.setValue(data.ChargePenaltyChargeDate);
                txtChargePenaltyChSNo.setValue(data.ChargePenaltyChargeSn);
                txtAmndChNo.setValue(data.AmendedChargeNo);
                txtAmndChDate.setValue(data.AmendedChargeDate);
                txtApplAmount.setValue(data.AppealAmount);
                txtCaseRefNo.setValue(data.AppealCaseRefNo);
                txtCaseRefDate.setValue(data.AppealCaseRefDate);


                var chkMM = Ext.ComponentQuery.query('#chkMMRAPA')[0];
                var chkSM = Ext.ComponentQuery.query('#chkSMRAPA')[0];
                var chkMN = Ext.ComponentQuery.query('#chkMNRAPA')[0];
                var chkVD = Ext.ComponentQuery.query('#chkVDRAPA')[0];


                if(txtLocationType.getValue() === "MM")
                {
                    chkMM.setValue(true);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }
                else if(txtLocationType.getValue() === "SM")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(true);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }

                else if(txtLocationType.getValue() === "MN")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(true);
                    chkVD.setValue(false);
                }
                else if(txtLocationType.getValue() === "VD")
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(true);
                }
                else
                {
                    chkMM.setValue(false);
                    chkSM.setValue(false);
                    chkMN.setValue(false);
                    chkVD.setValue(false);
                }



                var chkAS = Ext.ComponentQuery.query('#chkAmndAsmnt')[0];
                var chkC = Ext.ComponentQuery.query('#chkCharge')[0];
                var chkAC = Ext.ComponentQuery.query('#chkAmndCharge')[0];
                var pnl1 = Ext.ComponentQuery.query('#pnl1RAPA')[0];
                var pnl2 = Ext.ComponentQuery.query('#pnl2RAPA')[0];
                var pnl3 = Ext.ComponentQuery.query('#pnl3RAPA')[0];


                if(txtChargePenaltyChNo.getValue() !== "" || txtChargePenaltyChDate.getValue() !== "" || txtChargePenaltyChSNo.getValue() !== "")
                {
                    chkAS.setValue(false);
                    chkC.setValue(true);
                    chkAC.setValue(false);
                    pnl1.disable(true);
                    pnl2.enable(true);
                    pnl3.disable(true);

                }
                else if(txtAmndChNo.getValue() !== "" || txtAmndChDate.getValue() !== "")
                {
                    chkAS.setValue(false);
                    chkC.setValue(false);
                    chkAC.setValue(true);
                    pnl1.disable(true);
                    pnl2.disable(true);
                    pnl3.enable(true);
                    pnl3.enable(true);
                }

                else if(txtSansodhitKarCNo.getValue() !== "")
                {
                    chkAS.setValue(true);
                    chkC.setValue(false);
                    chkAC.setValue(false);
                    pnl1.enable(true);
                    pnl2.disable(true);
                    pnl3.disable(true);
                }

                else
                {
                    chkAS.setValue(false);
                    chkC.setValue(false);
                    chkAC.setValue(false);
                    pnl1.enable(true);
                    pnl2.enable(true);
                    pnl3.enable(true);
                }

                var win1 = Ext.getCmp('ReviewAppealAAWindow');
                var win2 = Ext.getCmp('ReviewAppealCPWindow');
                if(chkAS.checked === true)
                {
                    win1.close();
                }
                else if(chkC.checked === true)
                {
                    win2.close();
                } 

                hdnTranNo.setValue(data.TranNo);

                if(hdnAction.getValue() !== "D")
                {
                    hdnAction.setValue(data.Action);
                }

            },
            failure: function ( result, request ) {

                // wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    SaveReviewAppealApplicationAU: function(rStatus,action) {
        var offCode=Ext.ComponentQuery.query('#txtOffCodeRAPA')[0].getValue();
        var revAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPA')[0].getValue();
        var revApplDate=Ext.ComponentQuery.query('#txtRevAppealDateRAPA')[0].getValue();
        var pan=Ext.ComponentQuery.query('#txtPanRAPA')[0].getValue();
        var applCourtType=Ext.ComponentQuery.query('#cboAppealCourtTypeRAPA')[0].getValue();
        var asmntNo=Ext.ComponentQuery.query('#txtAssessmentNoRAPA')[0].getValue();
        var disputeDesc=Ext.ComponentQuery.query('#txtDisputeDescRAPA')[0].getValue();
        var sansodhitKarCNo=Ext.ComponentQuery.query('#txtSansodhitKarChargeNoRAPA')[0].getValue();
        var chargePenaltyChNo=Ext.ComponentQuery.query('#txtChargePenaltyChNoRAPA')[0].getValue();
        var chargePenaltyChDate=Ext.ComponentQuery.query('#txtChargePenaltyChDateRAPA')[0].getValue();
        var chargePenaltyChSNo=Ext.ComponentQuery.query('#txtChargePenaltyChSNoRAPA')[0].getValue();
        var amndChNo=Ext.ComponentQuery.query('#txtAmendedChNoRAPA')[0].getValue();
        var amndChDate=Ext.ComponentQuery.query('#txtAmendedChDateRAPA')[0].getValue();
        var applAmount=Ext.ComponentQuery.query('#txtAppealAmountRAPA')[0].getValue();
        var caseRefNo=Ext.ComponentQuery.query('#txtCaseRefNoRAPA')[0].getValue();
        var caseRefDate=Ext.ComponentQuery.query('#txtCaseRefDateRAPA')[0].getValue();
        var fiscalYr=Ext.ComponentQuery.query('#cboFiscalYrRAPA')[0].getValue();
        var acctType="10";
        var tranDate="";
        var userName="";
        var officerCode="";

        var param = Ext.ComponentQuery.query('#pnlReviewAppealApplication')[0].extraParam.params;
        //console.log("param",param);
        var offCodeAU = param.offCode;
        var requestNo = param.requestNo;
        var tranNo = param.tranNo;

        //var action = Ext.ComponentQuery.query('#hdnActionRAPA')[0].getValue();
        //var tranNo = Ext.ComponentQuery.query('#hdnTranNoRAPA')[0].getValue() === ""?null:Ext.ComponentQuery.query('#hdnTranNoRAPA')[0].getValue();
        //var revAppNo = Ext.ComponentQuery.query('#txtRevAppealNoRAPA')[0].getValue() === "" ?0:Ext.ComponentQuery.query('#txtRevAppealNoRAPA')[0].getValue();

        /*var loadMsg="";

        if(action == "E")
        {
        loadMsg = "Updating ...";
        }
        else
        {
        loadMsg = "Saving ...";
        }*/

        var RAPA={
            'OffCodeAU':offCodeAU,
            'RequestNo':requestNo,
            'OffCode':offCode,
            'RevAppNo':revAppNo,
            'Pan':pan,
            'AcctType':acctType,
            'RevAppDate':revApplDate,
            'FiscalYear':fiscalYr,
            'AppealCourtType':applCourtType,
            'DisputeDescription':disputeDesc,
            'AppealCaseRefNo':caseRefNo,
            'AppealCaseRefDate':caseRefDate,
            'AssessmentNo':sansodhitKarCNo,
            'ChargePenaltyChargeNo':chargePenaltyChNo,
            'ChargePenaltyChargeSn':chargePenaltyChSNo,
            'ChargePenaltyChargeDate':chargePenaltyChDate,
            'AmendedChargeDate':amndChDate,
            'AmendedChargeNo':amndChNo,
            'AppealAmount':applAmount,
            'OfficerCode':officerCode,
            'TranDate':tranDate,
            'UserName':userName,
            'TranNo':tranNo,
            'Rstatus':rStatus,
            'Action':action

        };
        //console.log(RAPA);
        //var waitSave = watiMsg(loadMsg);
        Ext.Ajax.request({
            method: 'POST',
            url: '../Handlers/IncomeTax/ReviewAppeal/ReviewAppealApplicationHandler.ashx',
            params: {method:'SaveReviewAppealApplicationAU', revAppealApplication : JSON.stringify(RAPA) },
            success: function( result, request ){

                // waitSave.hide();

                // var jsonMsg=Ext.decode(result.responseText);
                // msg(jsonMsg.success=="true"?"SUCCESS":"FAILURE",jsonMsg.message);
                var obj = Ext.decode(result.responseText);

                //  console.log('obj',obj.message);  


                if(rStatus === "F")
                {
                    msg('INFO','पुनरावेदन गएको डाटा सफलतापुर्वक Submit भयो ।');
                    return;

                }
                else if(rStatus === "I")
                {
                    msg('INFO','पुनरावेदन गएको डाटा सफलतापुर्वक Save भयो ।');
                    return;
                }
                else
                {
                    msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);
                }

            },
            failure: function ( result, request ) {

                // waitSave.hide();

                var obj = Ext.decode(result.responseText);

                msg("FAILURE",obj.message);
                return;
            }


        });
    },

    init: function(application) {
        this.control({
            "#pnlReviewAppealApplication": {
                afterrender: this.onPnlReviewAppealApplicationAfterRender
            },
            "#txtPanRAPA": {
                keypress: this.onTxtPanRAPAKeypress,
                blur: this.onTxtPanRAPABlur
            },
            "#btnSaveRAPA": {
                click: this.onBtnSaveRAPAClick
            },
            "#btnEditRAPA": {
                click: this.onBtnEditRAPAClick
            },
            "#btnDeleteRAPA": {
                click: this.onBtnDeleteRAPAClick
            },
            "#btnSubmitRAPA": {
                click: this.onBtnSubmitRAPAClick
            },
            "#btnCancelRAPA": {
                click: this.onBtnCancelRAPAClick
            },
            "#txtRevAppealNoRAPA": {
                keypress: this.onTxtRevAppealNoRAPAKeypress,
                blur: this.onTxtRevAppealNoRAPABlur
            },
            "#txtRevAppealDateRAPA": {
                blur: this.onTxtRevAppealDateRAPABlur
            },
            "#txtCaseRefDateRAPA": {
                blur: this.onTxtCaseRefDateRAPABlur
            },
            "#txtChargePenaltyChDateRAPA": {
                blur: this.onTxtChargePenaltyChDateRAPABlur
            },
            "#txtAmendedChDateRAPA": {
                blur: this.onTxtAmendedChDateRAPABlur
            },
            "#btnBackRAPA": {
                click: this.onBtnBackRAPAClick
            },
            "#txtAppealAmountRAPA": {
                blur: this.onTxtAppealAmountRAPABlur
            },
            "#txtDisputeDescRAPA": {
                keypress: this.onTxtDisputeDescRAPAKeypress,
                keyup: this.onTxtDisputeDescRAPAKeyup,
                change: this.onTxtDisputeDescRAPAChange,
                focus: this.onTxtDisputeDescRAPAFocus
            }
        });
    }

});
