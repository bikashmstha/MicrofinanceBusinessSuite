/*
 * File: app/view/CollectionSheetDeleteRegenerate.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.CollectionSheetDeleteRegenerate', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.Panel',
        'Ext.button.Button',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Column',
        'Ext.form.field.Checkbox',
        'Ext.selection.CheckboxModel'
    ],

    frame: true,
    title: 'Collection Sheet Delete Regenerate',

    layout: {
        type: 'table',
        columns: 2
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    id: 'frm-CollectionSheetDeleteRegenerate',
                    itemId: 'frm-CollectionSheetDeleteRegenerate',
                    bodyPadding: 10,
                    title: '',
                    items: [
                        {
                            xtype: 'container',
                            layout: {
                                type: 'table',
                                columns: 2
                            },
                            items: [
                                {
                                    xtype: 'container',
                                    colspan: 2,
                                    height: 30,
                                    width: 1000,
                                    layout: {
                                        type: 'hbox',
                                        align: 'stretch',
                                        pack: 'center'
                                    },
                                    items: [
                                        {
                                            xtype: 'button',
                                            itemId: 'btnLoadData',
                                            text: 'Load Data',
                                            listeners: {
                                                click: {
                                                    fn: me.onBtnLoadDataClick,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridpanel',
                                    colspan: 2,
                                    itemId: 'grdCollectionSheetDeleteRegenerate',
                                    margin: '5 0 0 0',
                                    width: 1000,
                                    title: '',
                                    store: 'CollectionSheetDeleteRegenerateStore',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            width: 151,
                                            dataIndex: 'CollectionSheetNo',
                                            text: 'Collection Sheet No'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'CenterCode',
                                            text: 'Center Code'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 119,
                                            dataIndex: 'CenterName',
                                            text: 'Center Name'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 152,
                                            dataIndex: 'EmpName',
                                            text: 'Employee Name'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'CollnDate',
                                            text: 'Collection Date'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'DataEntered',
                                            text: 'Data Entered',
                                            editor: {
                                                xtype: 'checkboxfield'
                                            }
                                        }
                                    ],
                                    selModel: Ext.create('Ext.selection.CheckboxModel', {

                                    })
                                },
                                {
                                    xtype: 'container',
                                    colspan: 1,
                                    height: 30,
                                    width: 1000,
                                    layout: {
                                        type: 'hbox',
                                        align: 'stretch',
                                        pack: 'center'
                                    },
                                    items: [
                                        {
                                            xtype: 'button',
                                            itemId: 'btnDelete',
                                            text: 'Delete',
                                            listeners: {
                                                click: {
                                                    fn: me.onBtnDeleteClick,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onBtnLoadDataClick: function(button, e, eOpts) {
        Ext.ComponentQuery.query('#grdCollectionSheetDeleteRegenerate')[0].setVisible(true);
        Ext.Ajax.request({
            url:'../Handlers/Finance/Transaction/CollectionSheetTransaction/EmployeeCenterCollectionHandler.ashx',
            params:{method:'RegenerateCollectionList', offCode:Ext.get('offCode').dom.innerHTML
                   },
            success: function ( result, request ) {

                var obj = Ext.decode(result.responseText);
                if(obj.success === 'true'){

                    var store =Ext.getStore('CollectionSheetDeleteRegenerateStore');
                    store.removeAll();
                    store.add(obj.root);


                }else{msg('FAILURE','Could Not Load Data');}
            },
            failure: function(form, action) {
                msg("FAILURE","Could Not Load Data");    }
        });

    },

    onBtnDeleteClick: function(button, e, eOpts) {
        Ext.MessageBox.confirm('Delete Selected Collection Sheet', 'Are you sure want to Delete Selected Collection Sheet?', function(btn){
        console.log('e',e);

        if(btn === 'yes'){
                var selectedItems=Ext.ComponentQuery.query('#grdCollectionSheetDeleteRegenerate')[0].getSelectionModel().getSelection();
        let len= selectedItems.length;

        var collectionSheetNoList=[];
        for(i=0; i<len; i++)
        {
        	 collectionSheetNoList.push(selectedItems[i].data.CollectionSheetNo);
        }





        Ext.Ajax.request({
             url:'../Handlers/Finance/Transaction/CollectionSheetTransaction/EmployeeCenterCollectionHandler.ashx',
             params:{method:'DeleteCollectionSheetMaster',collectionSheetNos:JSON.stringify(collectionSheetNoList)},
             success: function ( result, request ) {

                  var out = Ext.decode(result.responseText);
        				if(out.success==='true'){
        					msg('SUCCESS',out.message);
        				}
        				else{msg('FAILURE',out.message);


                  }
             },
             failure: function(form, action) {
        var out=Ext.decode(response.responseText);msg('FAILURE',out.message);     }
        });


           }
           else
           {

           }

        });


    }

});