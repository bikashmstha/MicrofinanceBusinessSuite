/*
 * File: app/controller/CreditClaim.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.CreditClaim', {
    extend: 'Ext.app.Controller',

    stores: [
        'CreditClaimAnx10',
        'ClaimTypeD03',
        'EstPaymentMode',
        'OfficeBankInfo',
        'FiscalYear',
        'IncomeTaxAcctType',
        'RevenueAccountAnx10'
    ],

    onDdlCCActTypeChange: function(field, newValue, oldValue, eOpts) {
        /*
        var strRevenueAc = Ext.getStore("RevenueAccountAnx10");
        strRevenueAc.load(
        {
        params:{acctType:"I",impOn:"SAD03"}
        });

        */

        this.PanCurrentOfficeCCTaxpayerInfo();


    },

    onGrdCCBeforeRender: function(component, eOpts) {
        var grd = Ext.ComponentQuery.query('#grdCC')[0];

        grd.columns[1].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";    

            var items = Ext.getStore("ClaimTypeD03").data.items;

            for(var i=0;i<items.length;i++)
            {        

                if(items[i].data.ClaimID === value)
                {           
                    temp = items[i].data.ClaimName;
                    break;
                }        
            }

            return temp;

        };

        grd.columns[3].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";    

            var items = Ext.getStore("EstPaymentMode").data.items;

            for(var i=0;i<items.length;i++)
            {        

                if(items[i].data.EstPaymentModeID === value)
                {           
                    temp = items[i].data.EstPaymentModeName;
                    break;
                }        
            }

            return temp;

        };

        grd.columns[5].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";    

            var items = Ext.getStore("OfficeBankInfo").data.items;

            for(var i=0;i<items.length;i++)
            {        

                if(items[i].data.BankBr === value)
                {           
                    temp = items[i].data.BankName;
                    break;
                }        
            }

            return temp;

        };











    },

    onCboCCTypeSelect: function(combo, records, eOpts) {
        var me = this;
        me.enableDisableControls(combo.getValue());




    },

    onBtnAddCCClick: function(button, e, eOpts) {




        var offCode = Ext.ComponentQuery.query('#hdnCC_Office_Code')[0].getValue();

        var me = this;

        var creditDocType = "";
        var fiscalYear;
        var creditFiscalyear = "";
        var accountCode = "";
        var creditDocMode = "";
        var creditDocNo = ""; 
        var creditBankCode ="";
        var creditDocDate = "";                  
        var creditAmount = null;
        var withTypeCode = "";	
        var withHoldingPan = "";	
        var withAgentName = "";
        var creditDate = "";
        //var creditDocDate = "";
        var errMsg = "";

        var cboClaimType = Ext.ComponentQuery.query('#cboCCType')[0];

        creditDocType = cboClaimType.getValue();
        fiscalYear = Ext.ComponentQuery.query('#ddlCC_FiscalYear')[0].getValue();


        creditAmount = Ext.ComponentQuery.query('#txtCreditAmtCC')[0].getValue();

        if(creditDocType === "PA")
        {    
            accountCode = Ext.ComponentQuery.query('#cboAcctNumberCC')[0].getValue();
            creditDocMode = Ext.ComponentQuery.query('#cboVoucherTypeCC')[0].getValue();
            creditDocNo =Ext.ComponentQuery.query('#txtVoucherNumCC')[0].getValue();
            creditBankCode = Ext.ComponentQuery.query('#cboBankCC')[0].getValue();
            creditDocDate = Ext.ComponentQuery.query('#txtCreditDateCC')[0].getValue();

            if(accountCode === "")
            {
                errMsg += "कृपया राजश्व शिर्षक नम्वर राख्नुहोस् !!! <br/>";
            }

            if(creditDocMode === "")
            {
                errMsg += "कृपया दाखीलाको तरिका राख्नुहोस् !!! <br/>";
            }

            if(creditDocNo === "")
            {
                errMsg += "कृपया दाखीला निस्सा नम्वर  राख्नुहोस् !!! <br/>";
            }

            if(creditBankCode === "")
            {
                errMsg += "कृपया बैंकको नाम राख्नुहोस् !!! <br/>";
            }

            if(creditDocDate === "")
            {
                errMsg += "कृपया दाखीला मिति राख्नुहोस् !!! <br/>";
            }

        }
        else if(creditDocType === "VT")
        {
            creditDocMode = Ext.ComponentQuery.query('#cboVoucherTypeCC')[0].getValue();
            creditBankCode = Ext.ComponentQuery.query('#cboBankCC')[0].getValue();    
            creditDocDate = Ext.ComponentQuery.query('#txtCreditDateCC')[0].getValue();

            if(creditDocMode === "")
            {
                errMsg += "कृपया दाखीलाको तरिका राख्नुहोस् !!! <br/>";
            }

            if(creditBankCode === "")
            {
                errMsg += "कृपया बैंकको नाम राख्नुहोस् !!! <br/>";
            }

            if(creditDocDate === "")
            {
                errMsg += "कृपया दाखीला मिति राख्नुहोस् !!! <br/>";
            }
        }
        else if(creditDocType === "CU")
        {    
            creditDocNo =Ext.ComponentQuery.query('#txtVoucherNumCC')[0].getValue();   
            creditDocDate = Ext.ComponentQuery.query('#txtCreditDateCC')[0].getValue();

            if(creditDocNo === "")
            {
                errMsg += "कृपया दाखीला निस्सा नम्वर  राख्नुहोस् !!! <br/>";
            }


            if(creditDocDate === "")
            {
                errMsg += "कृपया दाखीला मिति राख्नुहोस् !!! <br/>";
            }
        }
        else if(creditDocType === "TD")
        {
            creditDocNo =Ext.ComponentQuery.query('#txtVoucherNumCC')[0].getValue();   
            creditDocDate = Ext.ComponentQuery.query('#txtCreditDateCC')[0].getValue();
            withTypeCode = Ext.ComponentQuery.query('#cboWithHoldingTypeCC')[0].getValue();	
            withHoldingPan = Ext.ComponentQuery.query('#txtWithHoldingPanCC')[0].getValue();
            withAgentName = Ext.ComponentQuery.query('#txtWithHoldingNameCC')[0].getValue();

            if(creditDocNo === "")
            {
                errMsg += "कृपया दाखीला निस्सा नम्वर  राख्नुहोस् !!! <br/>";
            }

            if(creditDocDate === "")
            {
                errMsg += "कृपया दाखीला मिति राख्नुहोस् !!! <br/>";
            }

            if(withTypeCode === "")
            {
                errMsg += "कृपया अग्रिम कर कट्टीको किसिम राख्नुहोस् !!! <br/>";
            }


            if(withHoldingPan === "")
            {
                errMsg += "कृपया अग्रिम कर कट्टी गर्नेको स्था.ले.नं. (भए) राख्नुहोस् !!! <br/>";
            }

            if(withAgentName === "")
            {
                errMsg += "कृपया अग्रिम कर कट्टी गर्नेको नाम राख्नुहोस् !!! <br/>";
            }

        }
        else if(creditDocType === "TC")
        {
            fiscalYear = Ext.ComponentQuery.query('#ddlCC_FiscalYear')[0].getValue();

            if(fiscalYear === "")
            {
                errMsg += "कृपया क्रेडिट सारेको आर्थिक वर्ष राख्नुहोस् !!! <br/>";
            }
        }


        if(creditAmount === "")
        {
            errMsg += "कृपया दाखीला रकम राख्नुहोस् !!! <br/>";
        }

        if(errMsg !== "")
        {
            msg("WARNING",errMsg);
            return;
        }


        var grd = Ext.ComponentQuery.query('#grdCC')[0];
        var len = grd.getSelectionModel().getSelection().length;
        var strCreditClaim = Ext.getStore("CreditClaimAnx10");


        if(len < 1)
        {
            var rec = {    
                OffCode:offCode,
                AssessmentType:"SA",
                CreditNo:"",
                CreditDate:creditDate,
                CreditSN:null,
                CreditDocType:creditDocType,
                CreditDocNo:creditDocNo,
                CreditDocDate:creditDocDate,
                CreditDocMode:creditDocMode,
                CreditAmount:creditAmount,
                WithAgentName:withAgentName,
                WithHoldingPan:withHoldingPan,
                AccountCode:accountCode,
                CreditFiscalyear:"",
                WithTypeCode:withTypeCode,
                RecordStatus:"",
                CreditBankCode:creditBankCode,
                CreditOffCode:"",
                AssessmentNo:"",
                AssessmentDate:"",
                ClaimNo:"",
                ClaimDate:"",
                Terminal:"",
                TranDate:"",
                UserName:"",
                Pan:"",
                Fiscalyear:fiscalYear,
                SourceBank:"",
                TranNo:"",
                Action:""
            };

            strCreditClaim.add(rec);    

            grd.bindStore(strCreditClaim);


        }


        else
        {
            var row = grd.getSelectionModel().getSelection()[0];

            // row.data.CreditDocType =;
            row.data.AccountCode = accountCode;
            row.data.CreditDocMode = creditDocMode;
            row.data.CreditDocNo = creditDocNo;
            row.data.CreditBankCode = creditBankCode;
            row.data.CreditDocDate = creditDocDate;
            row.data.CreditAmount = creditAmount;
            row.data.WithTypeCode = withTypeCode;
            row.data.WithHoldingPan = withHoldingPan;
            row.data.WithAgentName = withAgentName;
            row.data.CreditFiscalyear = fiscalYear;

            //grd.getSelectionModel().select(false);
            grd.getSelectionModel().clearSelections();    

            grd.bindStore(strCreditClaim);


        }

        me.clearControls();
        me.calTotalCredit();

    },

    onBtnCC_SaveClick: function(button, e, eOpts) {
        var me = this;
        var frm_CreditClaim = Ext.ComponentQuery.query('#frm_CreditClaim')[0].getForm();
        this.SaveCreditClaim("I"); 
        /*
        if(!frm_CreditClaim.isValid())
        {
        msg("WARNING","Please Fill the required fields !!!");   
        return;

        }
        else
        {

        this.SaveCreditClaim("I"); 
        }
        */
    },

    onBtnCC_submitClick: function(button, e, eOpts) {

        var me = this;
        var loadMsg = "";
        var count = 0;
        var errorMsg = "";
        var form = button.up('form').getForm();
        var action = Ext.ComponentQuery.query('#hdnCC_Action')[0].getValue();
        var offCode = Ext.ComponentQuery.query('#hdnCC_Office_Code')[0].getValue();



        var txtCC_PanNo = Ext.ComponentQuery.query('#txtCC_PanNo')[0].getValue();
        var ddlCCActType = Ext.ComponentQuery.query('#ddlCCActType')[0].getValue();
        var ddlCC_FiscalYear = Ext.ComponentQuery.query('#ddlCC_FiscalYear')[0].getValue();
        var txtCC_ClainDate = Ext.ComponentQuery.query('#txtCC_ClainDate')[0].getValue();

        if(txtCC_PanNo === "" || txtCC_PanNo === null)
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया स्था . ले . नं . भर्नुहोस् !!!";

        }

        if(ddlCCActType === "" || ddlCCActType === null)
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया खाताको किसिम  भर्नुहोस् !!!";

        }

        if(ddlCC_FiscalYear === "" || ddlCC_FiscalYear === null)
        {

            count++; 
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया आ.ब. छान्नुहोस्!!! ";

        }

        if(txtCC_ClainDate === "" || txtCC_ClainDate === null)
        {

            count++; 
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया दावी मिति भर्नुहोस् !!! ";

        }


        if(count >0)
        {
            msg("WARNING",errorMsg);
            return false;
        }






        if(action == "E" && Ext.ComponentQuery.query('#dispCreditClaim_submissionNo')[0].getValue()  === "")
        {
            msg("WARNING","Please Enter Assessment No !!!");

            return;
        }
        /*
        if(!form.isValid())
        {
        msg("WARNING","Please Fill the required fields !!!");   
        return;

        }
        */

        if(action === "D")
        {

            //------------------------------------------------------
            // NB: Posting Data to Server
            //------------------------------------------------------
            //DeleteDCTBCredit(string claimNo)
            Ext.Ajax.request({
                url:"../Handlers/IncomeTax/D03/DCTBCreditHandler.ashx?method=DeleteDCTBCredit" ,
                params:{claimNo:Ext.ComponentQuery.query('#dispCreditClaim_submissionNo')[0].getValue()
                },
                success: function ( result, request ) {

                    var obj = Ext.decode(result.responseText);

                    msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);

                    if(obj.success === "false") return;

                    me.clearControls();



                },
                failure: function ( result, request ) {

                    var obj = Ext.decode(result.responseText);

                    msg("FAILURE",obj.message);
                    return;
                }

            });


        }

        else
        {
            Ext.Msg.confirm('Confirm Action', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
                if(btn == 'yes'){


                    me.SaveCreditClaim("F");

                    return true;
                }
            }, this);


        }

    },

    onBtnCC_EditClick: function(button, e, eOpts) {
        var hdnCC_Action = Ext.ComponentQuery.query('#hdnCC_Action')[0];
        var hdnlblCreditClaimAction  = Ext.ComponentQuery.query('#hdnlblCreditClaimAction')[0];
        var txtCC_ASSESSMENTNO = Ext.ComponentQuery.query('#txtCC_ASSESSMENTNO')[0];
        var hdnCC_Office_Code = Ext.ComponentQuery.query('#hdnCC_Office_Code')[0];
        hdnCC_Action.setValue("E");

        hdnlblCreditClaimAction.setValue("Updating ...कर मिलान दावी नं. भर्नुहोस् !!!");
        txtCC_ASSESSMENTNO.setDisabled(false);
        txtCC_ASSESSMENTNO.focus();
    },

    onBtnCC_DeleteClick: function(button, e, eOpts) {
        var hdnCC_Action = Ext.ComponentQuery.query('#hdnCC_Action')[0];
        var hdnlblCreditClaimAction  = Ext.ComponentQuery.query('#hdnlblCreditClaimAction')[0];
        var txtCC_ASSESSMENTNO = Ext.ComponentQuery.query('#txtCC_ASSESSMENTNO')[0];
        var hdnCC_Office_Code = Ext.ComponentQuery.query('#hdnCC_Office_Code')[0];
        hdnCC_Action.setValue("D");
        hdnlblCreditClaimAction.setValue(" Deleting ...कर मिलान दावी नं. भर्नुहोस् !!! ");
        //txtCC_ASSESSMENTNO.setDisabled(false);
    },

    onBtnCC_CancelClick: function(button, e, eOpts) {
        var me = this;
        me.ClarAllControl();
    },

    onTxtCC_ASSESSMENTNOKeypress: function(textfield, e, eOpts) {
        var objParam = Ext.ComponentQuery.query('#pnlCreditClaim')[0];



        var me=this;
        Ext.getStore("CreditClaimAnx10").loadData([],false);
        if(e.keyCode === 13 || e.keyCode === 9)
        {

            var txtCC_ASSESSMENTNO = Ext.ComponentQuery.query('#txtCC_ASSESSMENTNO')[0].getValue();
            var hdnCC_Office_Code = Ext.ComponentQuery.query('#hdnCC_Office_Code')[0].getValue();
            Ext.ComponentQuery.query('#dispCreditClaim_submissionNo')[0].setValue(txtCC_ASSESSMENTNO);
            Ext.Ajax.request({
                url: '../Handlers/IncomeTax/D03/DCTBCreditHandler.ashx',
                params: {
                    method:'GetDCTBCredit',claimNo:txtCC_ASSESSMENTNO,
                    id: 1
                },
                success: function(response){
                    var obj =Ext.decode( response.responseText);

                    var btnCC_Save = Ext.ComponentQuery.query("#btnCC_Save")[0];
                    var btnCC_submit = Ext.ComponentQuery.query("#btnCC_submit")[0];
                    var btnCC_Delete = Ext.ComponentQuery.query("#btnCC_Delete")[0];
                    var  btnAddCC = Ext.ComponentQuery.query("#btnAddCC")[0];
                    if(obj.success === "false")
                    {   

                        if(obj.message === "D") 
                        {
                            btnCC_Delete.setDisabled(true);
                            btnCC_Save.setDisabled(true);
                            btnCC_submit.setDisabled(true);
                            btnAddCC.setDisabled(true);
                            this.ReadOnlyControl(objParam);
                            msg("WARNING","This Record is already Deleted !!!");
                            return;            
                        }

                        else
                        {
                            msg("WARNING",obj.message);
                            return;
                        }
                    }



                    var dctbCC = obj.root;

                    var taxpayer = dctbCC.Taxpayer;
                    var office = taxpayer.Office;
                    var address = taxpayer.BusinessAddress.Address;
                    var strRevenueAc = Ext.getStore("RevenueAccountAnx10");
                    if(taxpayer.TaxpayerCategoryId === "B")
                    {

                        strRevenueAc.load(
                        {
                            params:{acctType:"I",impOn:"SAD03"}
                        });
                    }
                    else
                    {
                        strRevenueAc.load(
                        {
                            params:{acctType:"I",impOn:"SAD01"}
                        });
                    }


                    // Load Taxpayer Info
                    //Ext.ComponentQuery.query('#hdnFTCC_Office_Code')[0].setValue(office.OfficeCode);
                    Ext.ComponentQuery.query('#CreditClaim_IROName')[0].setValue(office.OfficeNameNepali);
                    Ext.ComponentQuery.query('#txtCC_Name')[0].setValue(taxpayer.Name);
                    Ext.ComponentQuery.query('#txtCC_Name')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtCC_HouseNo')[0].setValue(address.HouseNo);
                    Ext.ComponentQuery.query('#txtCC_HouseNo')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtCC_WardNo')[0].setValue(address.WardNo);
                    Ext.ComponentQuery.query('#txtCC_WardNo')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtCC_ToleName')[0].setValue(address.StreetName);
                    Ext.ComponentQuery.query('#txtCC_ToleName')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#ddlCCActType')[0].setValue('10');
                    if(address.LocationType=='MM')
                    {
                        Ext.ComponentQuery.query('#rdl_CC_Metro_Mun')[0].setValue(true);
                    }
                    else if(address.LocationType=='SM')
                    {
                        Ext.ComponentQuery.query('#rdl_CC_Sub_Metro_Mun')[0].setValue(true);
                    }
                    else if(address.LocationType=='MN')
                    {
                        Ext.ComponentQuery.query('#rdl_CC_Mun')[0].setValue(true);
                    }
                    else if(address.LocationType=='VD')
                    {
                        Ext.ComponentQuery.query('#rdl_CC_VDC')[0].setValue(true);
                    }

                    Ext.ComponentQuery.query('#txtCC_VDCName')[0].setValue(address.VdcTown);
                    Ext.ComponentQuery.query('#txtCC_VDCName')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtCC_DistrictName')[0].setValue(address.DistrictNameNep);
                    Ext.ComponentQuery.query('#txtCC_DistrictName')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtCC_Phone')[0].setValue(address.Telephone);
                    Ext.ComponentQuery.query('#txtCC_Phone')[0].setReadOnly(true);
                    //Ext.ComponentQuery.query('#txtMCC_Mobile')[0].setValue(true);
                    Ext.ComponentQuery.query('#txtCC_Email')[0].setValue(address.Email);
                    Ext.ComponentQuery.query('#txtCC_Email')[0].setReadOnly(true);
                    if(taxpayer.AcctStatus==='A')
                    Ext.ComponentQuery.query('#CC_TpOfficeType')[0].setValue('सक्रिय');

                    //Load CC
                    Ext.ComponentQuery.query('#txtCC_PanNo')[0].setValue(dctbCC.Pan);
                    Ext.ComponentQuery.query('#ddlCC_FiscalYear')[0].setValue(dctbCC.FiscalYear);
                    Ext.ComponentQuery.query('#txtCC_ClainDate')[0].setValue(dctbCC.ClaimDate);
                    Ext.ComponentQuery.query('#hdnCCTranNo')[0].setValue(dctbCC.TranNo);
                    Ext.ComponentQuery.query('#hdnCC_Office_Code')[0].setValue(dctbCC.OffCode);



                    // Load CC  Details
                    var grd = Ext.ComponentQuery.query('#grdCC')[0];
                    var store  = Ext.getStore('CreditClaimAnx10');
                    store.add(dctbCC.CreditClaims); 
                    grd.bindStore(store);
                    me.calTotalCredit();


                    if(obj.message === "F" || dctbCC.RecordStatus === "F") 
                    {

                        btnCC_Delete.setDisabled(true);
                        btnCC_Save.setDisabled(true);
                        btnCC_submit.setDisabled(true);
                        btnAddCC.setDisabled(true);
                        this.ReadOnlyControl(objParam);
                        msg("WARNING","This Record is already Finalized !!!");

                        return;                
                    }


                },
                failure: function ( result, request ) {
                    Ext.Msg.show({
                        title: 'Failure',
                        msg: 'ERROR OCURRED !!!' ,
                        buttons: Ext.MessageBox.OK,
                        icon:Ext.Msg.ERROR
                    });
                }
            });                    

        }

    },

    onCboVoucherTypeCCChange: function(field, newValue, oldValue, eOpts) {
        var cboVoucherTypeCC = Ext.ComponentQuery.query('#cboVoucherTypeCC')[0].getValue();
        var cboBankCC = Ext.ComponentQuery.query('#cboBankCC')[0];

        if(cboVoucherTypeCC === "CA")
        {




            cboBankCC.setDisabled(true);
            cboBankCC.setValue("");



        }
        else
        {

            cboBankCC.setDisabled(false); 


        }
    },

    onPnlCreditClaimAfterRender: function(component, eOpts) {

        Ext.getStore("CreditClaimAnx10").loadData([],false);

        var offCode = Ext.get('offCode').dom.innerHTML;

        Ext.ComponentQuery.query('#CCLoginOffcode')[0].setValue(offCode);


        Ext.Ajax.request({
            url: '../HANDLERS/Common/OfficeBankInfoHandler.ashx?method=GetOfficeBankInfo',
            params:{officeCode:offCode},
            success: function ( result, request ) {

                var data = Ext.decode(result.responseText); 
                // combo.store.loadData(data.root);        
                Ext.getStore('OfficeBankInfo').loadData(data.root);

            },
            failure: function ( result, request ) {
                Ext.Msg.show({
                    title: 'Failure',
                    msg: 'ERROR OCURRED !!!' ,
                    buttons: Ext.MessageBox.OK,
                    icon:Ext.Msg.ERROR
                });
            }

        });



        var objParam = Ext.ComponentQuery.query('#pnlCreditClaim')[0];

        console.log("Anx10",objParam.extraParam);

        if(objParam.extraParam)
        {
            var param = objParam.extraParam.params;
            var tranNo = param.tranNo;


            this.GetCreditClaimByTranNo(tranNo);
            this.ReadOnlyControl(objParam);

            return;
        }

    },

    SaveCreditClaim: function(rStatus) {
        //var me = this;
        //var loadMsg = "";

        var me = this;
        var loadMsg = "";
        var count = 0;
        var errorMsg = "";

        var txtCC_PanNo = Ext.ComponentQuery.query('#txtCC_PanNo')[0].getValue();
        var ddlCCActType = Ext.ComponentQuery.query('#ddlCCActType')[0].getValue();
        var ddlCC_FiscalYear = Ext.ComponentQuery.query('#ddlCC_FiscalYear')[0].getValue();
        var txtCC_ClainDate = Ext.ComponentQuery.query('#txtCC_ClainDate')[0].getValue();

        if(txtCC_PanNo === "" || txtCC_PanNo === null)
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया स्था . ले . नं . भर्नुहोस् !!!";

        }

        if(ddlCCActType === "" || ddlCCActType === null)
        {

            count++;
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया खाताको किसिम  भर्नुहोस् !!!";

        }

        if(ddlCC_FiscalYear === "" || ddlCC_FiscalYear === null)
        {

            count++; 
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया आ.ब. छान्नुहोस्!!! ";

        }

        if(txtCC_ClainDate === "" || txtCC_ClainDate === null)
        {

            count++; 
            errorMsg = errorMsg +'<br/>'+ count + ") कृपया दावी मिति भर्नुहोस् !!! ";

        }


        if(count >0)
        {
            msg("WARNING",errorMsg);
            return false;
        }



        //var pan = Ext.ComponentQuery.query('#txtCC_PanNo')[0].getValue();
        //var fiscalYear = Ext.ComponentQuery.query('#ddlCC_FiscalYear')[0].getValue();
        //var clainDate = Ext.ComponentQuery.query('#txtCC_ClainDate')[0].getValue();
        var hdnCCTranNo = Ext.ComponentQuery.query('#hdnCCTranNo')[0].getValue();
        var offCode = Ext.ComponentQuery.query('#hdnCC_Office_Code')[0].getValue();
        //=== "" ?null:Ext.ComponentQuery.query('#hdnCC_Office_Code')[0].getValue();
        var action = Ext.ComponentQuery.query('#hdnCC_Action')[0].getValue();


        if(action == "E")
        {
            loadMsg = "Updating ...";
        }
        else
        {
            loadMsg = "Saving ...";
        }

        var strCreditClaim = Ext.getStore("CreditClaimAnx10");
        var creditClaims = null;
        var credit = null;

        if(strCreditClaim.getCount() > 0)
        {
            creditClaims = getJson(strCreditClaim);
            strCreditClaim.filter(function(item){
                return item.get("Action")!= 'D';
            });
        }


        var SubmissionNo={
            SubmissionNumber:'',
            Username:'',
            Password:'',
            ContactNo:'',
            Emailid:'',
            submittedFor:'',
            SubmittedYN:'N',
            SubmittedDate:'',
            TranNo:'0',
            Address:'',
            RegOffice:'',
            Action:'A',
            PAN:txtCC_PanNo,
            FiscalYear:ddlCC_FiscalYear
        };



        credit = {
            Pan :txtCC_PanNo,
            FiscalYear :ddlCC_FiscalYear,
            ClaimNo :Ext.ComponentQuery.query('#txtCC_ASSESSMENTNO')[0].getValue()!==null?Ext.ComponentQuery.query('#txtCC_ASSESSMENTNO')[0].getValue():0,
            ClaimDate :txtCC_ClainDate,
            Terminal :"",
            TranDate :"",
            UserName :"",
            OffCode :offCode,
            RecordStatus :rStatus,
            TranNo :hdnCCTranNo !== ""?hdnCCTranNo:null,
            Source:"CC",
            Action :action!== ""?action:"",
            CreditClaims:creditClaims !== ""?creditClaims:null,
            SubmissionNo:SubmissionNo
        };

        var waitSave = watiMsg(loadMsg);

        //---------------------------------------------------------------------------------------
        // NB: Saving Annex-10(Credit Claim) Details
        //---------------------------------------------------------------------------------------
        var wait  = waitMsg('Saving ...');
        //msg("WARNING","Credit No is Already Exists !!!");
        Ext.Ajax.request({
            url:'../Handlers/IncomeTax/D03/DCTBCreditHandler.ashx?method=Save',
            params:{credit:JSON.stringify(credit)},
            success:function(result, request)
            {
                waitSave.hide();
                var obj = Ext.decode(result.responseText); 
                msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);

                // msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message,function(){me.ClarAllControl();}); 

                if(obj.success === "false") return;
                me.ClarAllControl();

            },

            failure:function(result, request){
                waitSave.hide();

                var errMsg = "Error in " + loadMsg;

                msg("FAILURE",errMsg);
                return;                 
            }

        });
    },

    clearControls: function() {
        //var pan = Ext.ComponentQuery.query('#txtCC_PanNo')[0];
        //var clainDate = Ext.ComponentQuery.query('#txtCC_ClainDate')[0];
        var hdnCCTranNo = Ext.ComponentQuery.query('#hdnCCTranNo')[0];
        var offCode = Ext.ComponentQuery.query('#hdnCC_Office_Code')[0];
        var action = Ext.ComponentQuery.query('#hdnCC_Action')[0];


        hdnCCTranNo.setValue("");
        action.setValue("");




        var cboCCType = Ext.ComponentQuery.query('#cboCCType')[0];

        var txtFiscalYear = Ext.ComponentQuery.query('#ddlCC_FiscalYear')[0];
        var txtCreditTrnsfrtxtFiscalYear = Ext.ComponentQuery.query('#txtCreditTransferFiscalYearCC')[0];
        var cboAcctNumber = Ext.ComponentQuery.query('#cboAcctNumberCC')[0];
        var cboVoucherType = Ext.ComponentQuery.query('#cboVoucherTypeCC')[0];
        var txtVoucherNumber = Ext.ComponentQuery.query('#txtVoucherNumCC')[0];
        var cboBank = Ext.ComponentQuery.query('#cboBankCC')[0];
        var txtCreditDate = Ext.ComponentQuery.query('#txtCreditDateCC')[0];
        var txtCreditAmt = Ext.ComponentQuery.query('#txtCreditAmtCC')[0];
        var cboWithHoldingTyp = Ext.ComponentQuery.query('#cboWithHoldingTypeCC')[0];
        var txtWithHoldingPan = Ext.ComponentQuery.query('#txtWithHoldingPanCC')[0];
        var txtWithHoldingName = Ext.ComponentQuery.query('#txtWithHoldingNameCC')[0];


        var hdnlblCreditClaimAction  = Ext.ComponentQuery.query('#hdnlblCreditClaimAction')[0];
        hdnlblCreditClaimAction.setValue("");



        var btnAdd = Ext.ComponentQuery.query('#btnAddCC')[0];
        cboCCType.setValue("");
        txtCreditTrnsfrtxtFiscalYear.setValue("");
        cboAcctNumber.setValue("");
        cboVoucherType.setValue("");
        txtVoucherNumber.setValue("");
        cboBank.setValue("");
        txtCreditDate.setValue("");
        txtCreditAmt.setValue("");
        cboWithHoldingTyp.setValue("");
        txtWithHoldingPan.setValue("");
        txtWithHoldingName.setValue("");

        txtCreditDate.clearInvalid();
        /*
        var btnCC_Save = Ext.ComponentQuery.query("#btnCC_Save")[0];
        var btnCC_submit = Ext.ComponentQuery.query("#btnCC_submit")[0];
        var btnCC_Delete = Ext.ComponentQuery.query("#btnCC_Delete")[0];
        btnCC_Delete.setDisabled(false);
        btnCC_Save.setDisabled(false);
        btnCC_submit.setDisabled(false);
        */














    },

    PanCurrentOfficeCCTaxpayerInfo: function() {
        var offCode = Ext.ComponentQuery.query('#CCLoginOffcode')[0].getValue();
        var pan = Ext.ComponentQuery.query('#txtCC_PanNo')[0].getValue();
        var acctType = Ext.ComponentQuery.query('#ddlCCActType')[0].getValue();
        LoadTaxpayerInfoWithValidPan(pan,acctType,function(data){
            var taxpayer = data.root.Taxpayer;
            var address = taxpayer.BusinessAddress.Address;
            var office = taxpayer.Office;

            var strRevenueAc = Ext.getStore("RevenueAccountAnx10");
            if(taxpayer.TaxpayerCategoryId === "B")
            {

                strRevenueAc.load(
                {
                    params:{acctType:"I",impOn:"SAD03"}
                });
            }
            else
            {
                strRevenueAc.load(
                {
                    params:{acctType:"I",impOn:"SAD01"}
                });
            }





            if(taxpayer.AcctStatus === "D")
            {
                msg("WARNING","PAN is Deactivated !!!");
                return;
            }
            if(offCode != office.OfficeCode)
            {
                msg("WARNING","PAN is not Registered in this office !!!");

                return;
            }

            Ext.ComponentQuery.query('#txtCC_PanNo')[0].setValue(pan);
            //Ext.ComponentQuery.query('#txtFTCC_PanNo')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#ddlCCActType')[0].setValue(acctType);
            // Ext.ComponentQuery.query('#ddlMCC_ActType')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#hdnCC_Office_Code')[0].setValue(office.OfficeCode);
            Ext.ComponentQuery.query('#CreditClaim_IROName')[0].setValue(office.OfficeNameNepali);
            Ext.ComponentQuery.query('#txtCC_Name')[0].setValue(taxpayer.Name);
            Ext.ComponentQuery.query('#txtCC_Name')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtCC_HouseNo')[0].setValue(address.HouseNo);
            Ext.ComponentQuery.query('#txtCC_HouseNo')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtCC_WardNo')[0].setValue(address.WardNo);
            Ext.ComponentQuery.query('#txtCC_WardNo')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtCC_ToleName')[0].setValue(address.StreetName);
            Ext.ComponentQuery.query('#txtCC_ToleName')[0].setReadOnly(true);

            if(address.LocationType=='MM')
            {
                Ext.ComponentQuery.query('#rdl_CC_Metro_Mun')[0].setValue(true);
            }
            else if(address.LocationType=='SM')
            {
                Ext.ComponentQuery.query('#rdl_CC_Sub_Metro_Mun')[0].setValue(true);
            }
            else if(address.LocationType=='MN')
            {
                Ext.ComponentQuery.query('#rdl_CC_Mun')[0].setValue(true);
            }
            else if(address.LocationType=='VD')
            {
                Ext.ComponentQuery.query('#rdl_CC_VDC')[0].setValue(true);
            }

            Ext.ComponentQuery.query('#txtCC_VDCName')[0].setValue(address.VdcTown);
            Ext.ComponentQuery.query('#txtCC_VDCName')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtCC_DistrictName')[0].setValue(address.DistrictNameNep);
            Ext.ComponentQuery.query('#txtCC_DistrictName')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtCC_Phone')[0].setValue(address.Telephone);
            Ext.ComponentQuery.query('#txtCC_Phone')[0].setReadOnly(true);
            //Ext.ComponentQuery.query('#txtMCC_Mobile')[0].setValue(true);
            Ext.ComponentQuery.query('#txtCC_Email')[0].setValue(address.Email);
            Ext.ComponentQuery.query('#txtCC_Email')[0].setReadOnly(true);
            if(taxpayer.AcctStatus==='A')
            Ext.ComponentQuery.query('#CC_TpOfficeType')[0].setValue('सक्रिय');

            Ext.Ajax.request({
                url: '../HANDLERS/Common/OfficeBankInfoHandler.ashx?method=GetOfficeBankInfo',
                params:{officeCode:office.OfficeCode},
                success: function ( result, request ) {

                    var data = Ext.decode(result.responseText); 
                    // combo.store.loadData(data.root);        
                    Ext.getStore('OfficeBankInfo').loadData(data.root);

                },
                failure: function ( result, request ) {
                    Ext.Msg.show({
                        title: 'Failure',
                        msg: 'ERROR OCURRED !!!' ,
                        buttons: Ext.MessageBox.OK,
                        icon:Ext.Msg.ERROR
                    });
                }

            });


        });
    },

    calTotalCredit: function() {
        var store = Ext.getStore("CreditClaimAnx10");
        var txtTotalCredit = Ext.ComponentQuery.query('#txtTotalCC')[0];
        var sum = 0;

        store.each(function (rec) {   

            if(rec.get('CreditAmount') !=="")
            {
                var creditAmt = rec.get('CreditAmount') === null || rec.get('CreditAmount') === "" ? 0:parseFloat(rec.get('CreditAmount'));
                sum = parseFloat(sum) + creditAmt; 
            }
        });
        txtTotalCredit.setValue(sum);
    },

    enableDisableControls: function(creditClaimType) {


        var btnAdd = Ext.ComponentQuery.query('#btnAddCC')[0];

        var txtFiscalYear = Ext.ComponentQuery.query('#txtFiscalYearCC')[0];
        var txtCreditTrnsfrtxtFiscalYear = Ext.ComponentQuery.query('#txtCreditTransferFiscalYearCC')[0];
        var cboAcctNumber = Ext.ComponentQuery.query('#cboAcctNumberCC')[0];
        var cboVoucherType = Ext.ComponentQuery.query('#cboVoucherTypeCC')[0];
        var txtVoucherNumber = Ext.ComponentQuery.query('#txtVoucherNumCC')[0];
        var cboBank = Ext.ComponentQuery.query('#cboBankCC')[0];
        var txtCreditDate = Ext.ComponentQuery.query('#txtCreditDateCC')[0];
        var txtCreditAmt = Ext.ComponentQuery.query('#txtCreditAmtCC')[0];
        var cboWithHoldingTyp = Ext.ComponentQuery.query('#cboWithHoldingTypeCC')[0];
        var txtWithHoldingPan = Ext.ComponentQuery.query('#txtWithHoldingPanCC')[0];
        var txtWithHoldingName = Ext.ComponentQuery.query('#txtWithHoldingNameCC')[0];

        if(creditClaimType !== "")
        {
            btnAdd.setVisible(true);  
        }
        else
        {

            return;
        }

        txtFiscalYear.setVisible(false);
        txtCreditTrnsfrtxtFiscalYear.setVisible(false);
        cboAcctNumber.setVisible(false);
        cboVoucherType.setVisible(false);
        txtVoucherNumber.setVisible(false);
        cboBank.setVisible(false);
        txtCreditDate.setVisible(false);
        txtCreditAmt.setVisible(false);
        cboWithHoldingTyp.setVisible(false);
        txtWithHoldingPan.setVisible(false);
        txtWithHoldingName.setVisible(false);  


        txtCreditTrnsfrtxtFiscalYear.setValue("");
        cboAcctNumber.setValue("");
        cboVoucherType.setValue("");
        txtVoucherNumber.setValue("");
        cboBank.setValue("");
        txtCreditDate.setValue("");
        txtCreditAmt.setValue("");
        cboWithHoldingTyp.setValue("");
        txtWithHoldingPan.setValue("");
        txtWithHoldingName.setValue("");

        if(creditClaimType === "PA")
        {
            txtFiscalYear.setVisible(false);
            cboAcctNumber.setVisible(true);
            cboVoucherType.setVisible(true);
            txtVoucherNumber.setVisible(true);
            cboBank.setVisible(true);
            txtCreditDate.setVisible(true);
            txtCreditAmt.setVisible(true);
        }
        else if(creditClaimType === "VT")
        {
            txtFiscalYear.setVisible(false);
            cboVoucherType.setVisible(true);
            cboBank.setVisible(true);
            txtCreditDate.setVisible(true);
            txtCreditAmt.setVisible(true);
        }
        else if(creditClaimType === "CU")
        {
            txtFiscalYear.setVisible(false);
            txtVoucherNumber.setVisible(true);
            txtCreditDate.setVisible(true);
            txtCreditAmt.setVisible(true);
        }
        else if(creditClaimType === "TD")
        {
            txtFiscalYear.setVisible(false);
            txtVoucherNumber.setVisible(true);
            txtCreditDate.setVisible(true);
            txtCreditAmt.setVisible(true);    
            cboWithHoldingTyp.setVisible(true);
            txtWithHoldingPan.setVisible(true);
            txtWithHoldingName.setVisible(true); 
        }
        else if(creditClaimType === "TC")
        {
            txtFiscalYear.setVisible(false);
            txtCreditTrnsfrtxtFiscalYear.setVisible(true);    
            txtCreditAmt.setVisible(true);
        }
    },

    editCreditClaim: function(row) {
        var me = this;
        //var objParam = Ext.ComponentQuery.query('#pnlCreditClaim')[0];
        //this.ReadOnlyControl(objParam);

        var cboClaimType = Ext.ComponentQuery.query('#cboCCType')[0];
        var txtCreditTrnsfrtxtFiscalYear = Ext.ComponentQuery.query('#txtCreditTransferFiscalYearCC')[0];
        var cboAcctNumber = Ext.ComponentQuery.query('#cboAcctNumberCC')[0];
        var cboVoucherType = Ext.ComponentQuery.query('#cboVoucherTypeCC')[0];
        var txtVoucherNumber = Ext.ComponentQuery.query('#txtVoucherNumCC')[0];
        var cboBank = Ext.ComponentQuery.query('#cboBankCC')[0];
        var txtCreditDate = Ext.ComponentQuery.query('#txtCreditDateCC')[0];
        var txtCreditAmt = Ext.ComponentQuery.query('#txtCreditAmtCC')[0];
        var cboWithHoldingTyp = Ext.ComponentQuery.query('#cboWithHoldingTypeCC')[0];
        var txtWithHoldingPan = Ext.ComponentQuery.query('#txtWithHoldingPanCC')[0];
        var txtWithHoldingName = Ext.ComponentQuery.query('#txtWithHoldingNameCC')[0];

        cboClaimType.setValue(row.data.CreditDocType);
        me.enableDisableControls(row.data.CreditDocType);
        cboAcctNumber.setValue(row.data.AccountCode);
        cboVoucherType.setValue(row.data.CreditDocMode);
        txtVoucherNumber.setValue(row.data.CreditDocNo);
        cboBank.setValue(row.data.CreditBankCode);
        txtCreditDate.setValue(row.data.CreditDocDate);
        txtCreditAmt.setValue(row.data.CreditAmount);  
        cboWithHoldingTyp.setValue(row.data.WithTypeCode);
        txtWithHoldingPan.setValue(row.data.WithHoldingPan);
        txtWithHoldingName.setValue(row.data.WithAgentName);
        txtCreditTrnsfrtxtFiscalYear.setValue(row.data.CreditFiscalyear);

    },

    ClarAllControl: function() {

        //var hdnCC_Office_Code = Ext.ComponentQuery.query('#hdnCC_Office_Code')[0].getValue();
        // Load Taxpayer Info #cboCCType


        var cboCCType = Ext.ComponentQuery.query('#cboCCType')[0];
        cboCCType.setValue("");
        var txtCC_ASSESSMENTNO = Ext.ComponentQuery.query('#txtCC_ASSESSMENTNO')[0];
        txtCC_ASSESSMENTNO.setValue("");
        var dispCreditClaim_submissionNo = Ext.ComponentQuery.query('#dispCreditClaim_submissionNo')[0];
        dispCreditClaim_submissionNo.setValue("");
        //Ext.ComponentQuery.query('#hdnFTCC_Office_Code')[0].setValue("");
        var CreditClaim_IROName = Ext.ComponentQuery.query('#CreditClaim_IROName')[0];
        CreditClaim_IROName.setValue("");
        var txtCC_Name = Ext.ComponentQuery.query('#txtCC_Name')[0];
        txtCC_Name.setValue("");
        var txtCC_HouseNo = Ext.ComponentQuery.query('#txtCC_HouseNo')[0];
        txtCC_HouseNo.setValue("");
        var txtCC_WardNo = Ext.ComponentQuery.query('#txtCC_WardNo')[0];
        txtCC_WardNo.setValue("");
        var txtCC_ToleName = Ext.ComponentQuery.query('#txtCC_ToleName')[0];
        txtCC_ToleName.setValue("");

        var rdl_CC_Metro_Mun = Ext.ComponentQuery.query('#rdl_CC_Metro_Mun')[0];
        rdl_CC_Metro_Mun.setValue(false);
        var rdl_CC_Sub_Metro_Mun = Ext.ComponentQuery.query('#rdl_CC_Sub_Metro_Mun')[0];
        rdl_CC_Sub_Metro_Mun.setValue(false);
        var rdl_CC_Mun = Ext.ComponentQuery.query('#rdl_CC_Mun')[0];
        rdl_CC_Mun.setValue(false);
        var rdl_CC_VDC = Ext.ComponentQuery.query('#rdl_CC_VDC')[0];
        rdl_CC_VDC.setValue(false);
        var txtCC_VDCName = Ext.ComponentQuery.query('#txtCC_VDCName')[0];
        txtCC_VDCName.setValue("");
        var txtCC_DistrictName = Ext.ComponentQuery.query('#txtCC_DistrictName')[0];
        txtCC_DistrictName.setValue("");
        var txtCC_Phone = Ext.ComponentQuery.query('#txtCC_Phone')[0];
        txtCC_Phone.setValue("");

        var txtCC_Email = Ext.ComponentQuery.query('#txtCC_Email')[0];
        txtCC_Email.setValue("");
        var CC_TpOfficeType = Ext.ComponentQuery.query('#CC_TpOfficeType')[0];
        CC_TpOfficeType.setValue("");

        //Load CC .clearInvalid();
        var txtCC_PanNo = Ext.ComponentQuery.query('#txtCC_PanNo')[0];
        var ddlCC_FiscalYear = Ext.ComponentQuery.query('#ddlCC_FiscalYear')[0];
        var txtCC_ClainDate = Ext.ComponentQuery.query('#txtCC_ClainDate')[0];
        var ddlCCActType = Ext.ComponentQuery.query('#ddlCCActType')[0];
        txtCC_PanNo.setValue("");
        ddlCC_FiscalYear.setValue("");
        txtCC_ClainDate.setValue("");
        ddlCCActType.setValue("");
        //clear Invalid
        txtCC_PanNo.clearInvalid();
        ddlCC_FiscalYear.clearInvalid();
        txtCC_ClainDate.clearInvalid();
        ddlCCActType.clearInvalid();


        var hdnCCTranNo = Ext.ComponentQuery.query('#hdnCCTranNo')[0];
        hdnCCTranNo.setValue("");
        var hdnCC_Office_Code = Ext.ComponentQuery.query('#hdnCC_Office_Code')[0];
        hdnCC_Office_Code.setValue("");

        var txtTotalCC = Ext.ComponentQuery.query('#txtTotalCC')[0];
        txtTotalCC.setValue("");

        Ext.getStore("CreditClaimAnx10").loadData([],false);
        var btnCC_Save = Ext.ComponentQuery.query("#btnCC_Save")[0];
        var btnCC_submit = Ext.ComponentQuery.query("#btnCC_submit")[0];
        var btnCC_Delete = Ext.ComponentQuery.query("#btnCC_Delete")[0];
        var btnAddCC = Ext.ComponentQuery.query("#btnAddCC")[0];
        btnCC_Delete.setDisabled(false);
        btnCC_Save.setDisabled(false);
        btnCC_submit.setDisabled(false);
        btnAddCC.setDisabled(false);


    },

    GetCreditClaimByTranNo: function(tranNo) {
        var me=this;
        Ext.getStore("CreditClaimAnx10").loadData([],false);

        var txtCC_ASSESSMENTNO = Ext.ComponentQuery.query('#txtCC_ASSESSMENTNO')[0].getValue();
        var hdnCC_Office_Code = Ext.ComponentQuery.query('#hdnCC_Office_Code')[0].getValue();

        Ext.Ajax.request({
            url: '../Handlers/IncomeTax/D03/DCTBCreditHandler.ashx',
            params: {
                method:'GetDCTBCreditByTranNo',tranNo:tranNo,
                id: 1
            },
            success: function(response){
                var obj =Ext.decode( response.responseText);

                var btnCC_Save = Ext.ComponentQuery.query("#btnCC_Save")[0];
                var btnCC_submit = Ext.ComponentQuery.query("#btnCC_submit")[0];
                var btnCC_Delete = Ext.ComponentQuery.query("#btnCC_Delete")[0];
                var  btnAddCC = Ext.ComponentQuery.query("#btnAddCC")[0];
                var cntCC_button = Ext.ComponentQuery.query("#cntCC_button")[0];

                if(obj.success === "false")
                {   

                    if(obj.message === "D") 
                    {
                        btnCC_Delete.setDisabled(true);
                        btnCC_Save.setDisabled(true);
                        btnCC_submit.setDisabled(true);
                        btnAddCC.setDisabled(true);
                        cntCC_button.setDisabled(true);
                        msg("WARNING","This Record is already Deleted !!!");
                        return;            
                    }

                    else
                    {
                        msg("WARNING",obj.message);
                        return;
                    }
                }



                var dctbCC = obj.root;

                var taxpayer = dctbCC.Taxpayer;
                var office = taxpayer.Office;
                var address = taxpayer.BusinessAddress.Address;

                var strRevenueAc = Ext.getStore("RevenueAccountAnx10");
                if(taxpayer.TaxpayerCategoryId === "B")
                {

                    strRevenueAc.load(
                    {
                        params:{acctType:"I",impOn:"SAD03"}
                    });
                }
                else
                {
                    strRevenueAc.load(
                    {
                        params:{acctType:"I",impOn:"SAD01"}
                    });
                }




                // Load Taxpayer Info
                //Ext.ComponentQuery.query('#hdnFTCC_Office_Code')[0].setValue(office.OfficeCode);
                Ext.ComponentQuery.query('#CreditClaim_IROName')[0].setValue(office.OfficeNameNepali);
                Ext.ComponentQuery.query('#txtCC_Name')[0].setValue(taxpayer.Name);
                Ext.ComponentQuery.query('#txtCC_Name')[0].setReadOnly(true);
                Ext.ComponentQuery.query('#txtCC_HouseNo')[0].setValue(address.HouseNo);
                Ext.ComponentQuery.query('#txtCC_HouseNo')[0].setReadOnly(true);
                Ext.ComponentQuery.query('#txtCC_WardNo')[0].setValue(address.WardNo);
                Ext.ComponentQuery.query('#txtCC_WardNo')[0].setReadOnly(true);
                Ext.ComponentQuery.query('#txtCC_ToleName')[0].setValue(address.StreetName);
                Ext.ComponentQuery.query('#txtCC_ToleName')[0].setReadOnly(true);
                Ext.ComponentQuery.query('#ddlCCActType')[0].setValue('10');
                if(address.LocationType=='MM')
                {
                    Ext.ComponentQuery.query('#rdl_CC_Metro_Mun')[0].setValue(true);
                }
                else if(address.LocationType=='SM')
                {
                    Ext.ComponentQuery.query('#rdl_CC_Sub_Metro_Mun')[0].setValue(true);
                }
                else if(address.LocationType=='MN')
                {
                    Ext.ComponentQuery.query('#rdl_CC_Mun')[0].setValue(true);
                }
                else if(address.LocationType=='VD')
                {
                    Ext.ComponentQuery.query('#rdl_CC_VDC')[0].setValue(true);
                }

                Ext.ComponentQuery.query('#txtCC_VDCName')[0].setValue(address.VdcTown);
                Ext.ComponentQuery.query('#txtCC_VDCName')[0].setReadOnly(true);
                Ext.ComponentQuery.query('#txtCC_DistrictName')[0].setValue(address.DistrictNameNep);
                Ext.ComponentQuery.query('#txtCC_DistrictName')[0].setReadOnly(true);
                Ext.ComponentQuery.query('#txtCC_Phone')[0].setValue(address.Telephone);
                Ext.ComponentQuery.query('#txtCC_Phone')[0].setReadOnly(true);
                //Ext.ComponentQuery.query('#txtMCC_Mobile')[0].setValue(true);
                Ext.ComponentQuery.query('#txtCC_Email')[0].setValue(address.Email);
                Ext.ComponentQuery.query('#txtCC_Email')[0].setReadOnly(true);
                if(taxpayer.AcctStatus==='A')
                Ext.ComponentQuery.query('#CC_TpOfficeType')[0].setValue('सक्रिय');

                //Load CC
                Ext.ComponentQuery.query('#txtCC_PanNo')[0].setValue(dctbCC.Pan);
                Ext.ComponentQuery.query('#ddlCC_FiscalYear')[0].setValue(dctbCC.FiscalYear);
                Ext.ComponentQuery.query('#txtCC_ClainDate')[0].setValue(dctbCC.ClaimDate);
                Ext.ComponentQuery.query('#hdnCCTranNo')[0].setValue(dctbCC.TranNo);
                Ext.ComponentQuery.query('#hdnCC_Office_Code')[0].setValue(dctbCC.OffCode);

                Ext.getStore("CreditClaimAnx10").loadData([],false);

                // Load CC  Details
                var grd = Ext.ComponentQuery.query('#grdCC')[0];
                var store  = Ext.getStore('CreditClaimAnx10');
                store.add(dctbCC.CreditClaims); 
                grd.bindStore(store);
                me.calTotalCredit();


                if(obj.message === "F" || dctbCC.RecordStatus === "F") 
                {

                    btnCC_Delete.setDisabled(true);
                    btnCC_Save.setDisabled(true);
                    btnCC_submit.setDisabled(true);
                    btnAddCC.setDisabled(true);
                    cntCC_button.setDisabled(true);
                    msg("WARNING","This Record is already Finalized !!!");

                    return;                
                }


            },
            failure: function ( result, request ) {
                Ext.Msg.show({
                    title: 'Failure',
                    msg: 'ERROR OCURRED !!!' ,
                    buttons: Ext.MessageBox.OK,
                    icon:Ext.Msg.ERROR
                });
            }
        });                    



    },

    ReadOnlyControl: function(ParentName) {
        ParentName.query('.field,.combo').forEach(function(c){c.setReadOnly(true);});
        ParentName.query('.grid').forEach(function(c){ c.on('beforeedit', function(editor, e) { return false;});});
    },

    init: function(application) {
        this.control({
            "#ddlCCActType": {
                change: this.onDdlCCActTypeChange
            },
            "#grdCC": {
                beforerender: this.onGrdCCBeforeRender
            },
            "#cboCCType": {
                select: this.onCboCCTypeSelect
            },
            "#btnAddCC": {
                click: this.onBtnAddCCClick
            },
            "#btnCC_Save": {
                click: this.onBtnCC_SaveClick
            },
            "#btnCC_submit": {
                click: this.onBtnCC_submitClick
            },
            "#btnCC_Edit": {
                click: this.onBtnCC_EditClick
            },
            "#btnCC_Delete": {
                click: this.onBtnCC_DeleteClick
            },
            "#btnCC_Cancel": {
                click: this.onBtnCC_CancelClick
            },
            "#txtCC_ASSESSMENTNO": {
                keypress: this.onTxtCC_ASSESSMENTNOKeypress
            },
            "#cboVoucherTypeCC": {
                change: this.onCboVoucherTypeCCChange
            },
            "#pnlCreditClaim": {
                afterrender: this.onPnlCreditClaimAfterRender
            }
        });
    }

});
