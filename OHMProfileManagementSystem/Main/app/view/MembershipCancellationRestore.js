/*
 * File: app/view/MembershipCancellationRestore.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MembershipCancellationRestore', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.button.Button'
    ],

    frame: true,
    itemId: '',
    title: 'MembershipCancellation/Restore',

    layout: {
        type: 'table',
        columns: 2
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    itemId: 'MembershipCancellationRestore',
                    bodyPadding: 10,
                    layout: {
                        type: 'table',
                        columns: 2
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            itemId: 'txtClosedDateBS',
                            fieldLabel: 'Closed Date (B.S.)',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            readOnly: true,
                            listeners: {
                                blur: {
                                    fn: me.onTxtClosedDateBSBlur,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtClosedDateAD',
                            margin: '0 0 0 50',
                            fieldLabel: '(A.D.)',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            readOnly: true
                        },
                        {
                            xtype: 'combobox',
                            colspan: 2,
                            itemId: 'ddlCenter',
                            fieldLabel: 'Center Name',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            size: 40,
                            displayField: 'CenterName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'CenterCodeStore',
                            valueField: 'CenterCode'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtMemberCode',
                            fieldLabel: 'Member Code',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            readOnly: true,
                            listeners: {
                                afterrender: {
                                    fn: me.onTxtMemberCodeAfterRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtMemberName',
                            margin: '0 0 0 10',
                            fieldLabel: '',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            readOnly: true,
                            size: 60
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtGroupCode',
                            fieldLabel: 'Group',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            readOnly: true
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtGroupName',
                            margin: '0 0 0 10',
                            fieldLabel: '',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            readOnly: true,
                            size: 60
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtMemberShipDateBS',
                            fieldLabel: 'Membership Date(B.S.)',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            readOnly: true
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtMemberShipDateAD',
                            margin: '0 0 0 50',
                            fieldLabel: '(A.D.)',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            readOnly: true
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtNomineeName',
                            width: 715,
                            fieldLabel: 'Nominee Name',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            readOnly: true
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtNomineeRelation',
                            width: 715,
                            fieldLabel: 'Nominee Relation',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            readOnly: true
                        },
                        {
                            xtype: 'combobox',
                            colspan: 2,
                            itemId: 'ddlReason',
                            width: 716,
                            fieldLabel: 'Reason',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            displayField: 'ReasonDesc',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'DropOutReasonStore',
                            valueField: 'ReasonCode'
                        },
                        {
                            xtype: 'container',
                            height: 37,
                            layout: {
                                type: 'hbox',
                                align: 'stretch',
                                pack: 'end'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'btnCancelMember',
                                    padding: 5,
                                    text: 'Cancel Member',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnCancelMemberClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            height: 34,
                            layout: {
                                type: 'hbox',
                                align: 'stretch',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'btnRestoreMember',
                                    padding: 5,
                                    text: 'Restore Member',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnRestoreMemberClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onMembershipCancellationRestoreAfterRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onTxtClosedDateBSBlur: function(component, e, eOpts) {
        GetEngDate(Ext.ComponentQuery.query('#txtClosedDateBS')[0].getValue(),function(strdate){Ext.ComponentQuery.query('#txtClosedDateAD')[0].setValue(strdate);});
    },

    onTxtMemberCodeAfterRender: function(component, eOpts) {
        component.getEl().on('dblclick', function(){
             var winPopup = Ext.create('MyApp.view.SearchMemberCancalationPopup',{

                });

                winPopup.extraParam={param:null};
                winPopup.show();
          });
    },

    onBtnCancelMemberClick: function(button, e, eOpts) {
        var myfrm=Ext.ComponentQuery.query('#MembershipCancellationRestore')[0];
          var record=  myfrm.rec;



        var Obj= {
              GroupCode:record.data.GroupCode,
        	  ClientNo:record.data.ClientNo,
        	  MembershipClosedDate:'20-APR-2015',
        	  TransType:'C',
        	  Active:'N',
        	  ReasonForInactive:Ext.ComponentQuery.query('#ddlReason')[0].getValue(),
        	  TranOfficeCode:record.data.TranOfficeCode,
        	  };
        var waitSave = watiMsg("Canceling .Please wait ...");
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/MemberTransaction/MemberCancellationRestoreHandler.ashx',
            params: {
                method:'Save',
                membercancellationrestore:JSON.stringify(Obj)
            },
            success: function ( response, request ) {
                         waitSave.hide();
                            var out=Ext.decode(response.responseText);
                            console.log(out);

                            if(out.success==="true")
                                {
                                   msg("SUCCESS",out.message,function(){
                                       Ext.ComponentQuery.query('#txtClosedDateBS')[0].setValue(getMisDateBS());
                                        Ext.ComponentQuery.query('#txtClosedDateAD')[0].setValue(getMisDateAD());
                                   });
                              }
                                else
                                    {
                                        msg("FAILURE",out.message);
                                    }
                            },
                            failure: function ( result, request ) {
                                waitSave.hide();
                                var out=Ext.decode(response.responseText);
                                msg("FAILURE",out.message);
                            }



                });

        Ext.ComponentQuery.query("#MembershipCancellationRestore")[0].getForm().reset();
        Ext.ComponentQuery.query('#btnRestoreMember')[0].setVisible(true);
        Ext.ComponentQuery.query('#txtClosedDateBS')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtClosedDateAD')[0].setValue(getMisDateAD());


    },

    onBtnRestoreMemberClick: function(button, e, eOpts) {
        var myfrm=Ext.ComponentQuery.query('#MembershipCancellationRestore')[0];
          var record=  myfrm.rec;


        var Obj= {
              GroupCode:record.data.GroupCode,
        	  ClientNo:record.data.ClientNo,
        	  MembershipClosedDate:'20-APR-2015',
        	  TransType:'R',
        	  Active:'Y',
        	  ReasonForInactive:Ext.ComponentQuery.query('#ddlReason')[0].getValue(),
        	  TranOfficeCode:record.data.TranOfficeCode,
        	  };
        var waitSave = watiMsg("Restoring.Please wait ...");
        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/MemberTransaction/MemberCancellationRestoreHandler.ashx',
            params: {
                method:'Save',
                membercancellationrestore:JSON.stringify(Obj)
            },
            success: function ( response, request ) {
                         waitSave.hide();
                            var out=Ext.decode(response.responseText);
                            console.log(out);

                            if(out.success==="true")
                                {
                                   msg("SUCCESS",out.message,function(){
                                       Ext.ComponentQuery.query('#txtClosedDateBS')[0].setValue(getMisDateBS());
                                       Ext.ComponentQuery.query('#txtClosedDateAD')[0].setValue(getMisDateAD());
                                   });
                              }
                                else
                                    {
                                        msg("FAILURE",out.message);
                                    }
                            },
                            failure: function ( result, request ) {
                                waitSave.hide();
                                var out=Ext.decode(response.responseText);
                                msg("FAILURE",out.message);
                            }



                });
        Ext.ComponentQuery.query("#MembershipCancellationRestore")[0].getForm().reset();
        Ext.ComponentQuery.query('#btnCancelMember')[0].setVisible(true);
        Ext.ComponentQuery.query('#txtClosedDateBS')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtClosedDateAD')[0].setValue(getMisDateAD());

    },

    onMembershipCancellationRestoreAfterRender: function(component, eOpts) {
        Ext.ComponentQuery.query('#txtClosedDateBS')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtClosedDateAD')[0].setValue(getMisDateAD());
        Ext.Ajax.request({
            url: '../Handlers/Finance/Maintenance/CenterLovHandler.ashx',
            params: {
                method:'Search',
                centerlov:JSON.stringify({InstituteCode:Ext.get('offCode').dom.innerHTML,CenterName:null})

            },
            success: function(response){
                var storeCenter=Ext.getStore('CenterCodeStore');

                var data=Ext.decode(response.responseText);
                storeCenter.removeAll();
                storeCenter.add(data.root);


            }
        });

        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/MemberTransaction/DropOutReasonHandler.ashx',
            params: {
                method:'Search',
                DropOutReasons:JSON.stringify({ReasonCode:null})

            },
            success: function(response){
                var storeReason=Ext.getStore('DropOutReasonStore');

                var data=Ext.decode(response.responseText);
                storeReason.removeAll();
                storeReason.add(data.root);


            }
        });
    }

});