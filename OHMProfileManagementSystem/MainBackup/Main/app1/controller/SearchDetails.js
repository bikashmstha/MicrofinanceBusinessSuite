/*
 * File: app/controller/SearchDetails.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.SearchDetails', {
    extend: 'Ext.app.Controller',

    stores: [
        'strReturnDetails',
        'strAssessmentHeader',
        'strAssessmentDetails',
        'strAppealHeader',
        'strAppealDetails',
        'AccountType',
        'RebateHeads',
        'RebateDetails',
        'strSpecialPenalty',
        'strReceiptPayments',
        'strRefundPayments'
    ],

    onSD_cmbAccTtypeCollapse: function(field, eOpts) {

        var pan=Ext.ComponentQuery.query("#SD_hdnPan")[0].getValue();
        var accttype=Ext.ComponentQuery.query('#SD_cmbAccTtype')[0].getValue();

        Ext.ComponentQuery.query('#SD_AD_grdLines')[0].store.removeAll();
        Ext.ComponentQuery.query('#SD_AppealD_grdDetails')[0].store.removeAll();

        var strVatRetrunDetails=Ext.getStore('strReturnDetails');

        strVatRetrunDetails.removeAll();

        strVatRetrunDetails.load(
        {
            params:{
                pan:pan,
                accttype:accttype

            }    
        }
        );


        var strSpecialPenalty=Ext.getStore('strSpecialPenalty');

        strSpecialPenalty.removeAll();
        strSpecialPenalty.load({
            params:{      
                pan:pan,
                accttype:accttype

            }  
        });

        var strAssHeader=Ext.getStore('strAssessmentHeader');

        strAssHeader.removeAll();
        strAssHeader.load({
            params:{      
                pan:pan,
                accttype:accttype

            }  
        });

        var strAppealHeader=Ext.getStore('strAppealHeader');

        strAppealHeader.removeAll();
        strAppealHeader.load({
            params:{      
                pan:pan,
                accttype:accttype

            }  
        });


        Ext.Ajax.request({
            url:"../Handlers/Search/SearchDetailsHandler.ashx?method=GetRebateHeadsForSearchDetails",
            params:{pan:pan,accttype:accttype},
            success:function(result,request)
            {
                var obj=Ext.decode(result.responseText);
                var strRebatehead=Ext.getStore("RebateHeads");
                if(obj.success ==="true")
                {
                    strRebatehead.loadData(obj.root);  
                }
                else
                {
                    Ext.ComponentQuery.query('#SD_RD_grdHeader')[0].store.removeAll();
                }

                if(strRebatehead.count()===0)
                {
                    Ext.ComponentQuery.query('#SD_RD_grdDetails')[0].store.removeAll();
                }

            },
            failure:function(result,request)
            {
                msg("FAILURE","Error in Fetching Data !!!");
                return; 
            }             
        });


        var strReceiptPayments=Ext.getStore('strReceiptPayments');

        strReceiptPayments.removeAll();
        strReceiptPayments.load({
            params:{      
                pan:pan,
                accttype:accttype

            }  
        });


        var strRefundPayments=Ext.getStore('strRefundPayments');

        strRefundPayments.removeAll();
        strRefundPayments.load({
            params:{      
                pan:pan,
                accttype:accttype

            }  
        });


    },

    onSD_AD_grdHeaderItemClick: function(dataview, record, item, index, e, eOpts) {

        console.log(record);
        console.log(record.get('MANo'));

        var MaNo=record.get('MANo');
        var MaDate=record.get('MAdate');
        var Offcode=record.get('OFFCODE');


        var strMaLines=Ext.getStore('strAssessmentDetails');

        strMaLines.removeAll();
        strMaLines.load({
            params:{      
                MaDate:MaDate,
                MaNo:MaNo,
                offcode:Offcode

            }  
        });

    },

    onSD_AppealD_grdHeaderItemClick: function(dataview, record, item, index, e, eOpts) {
        var strAppealLines=Ext.getStore('strAppealDetails');

        strAppealLines.removeAll();
        strAppealLines.load({
            params:{      
                AppealHeader:JSON.stringify(record.data)

            }  
        });

    },

    onSD_RD_grdHeaderItemClick: function(dataview, record, item, index, e, eOpts) {

        Ext.Ajax.request({
            url:"../Handlers/Search/SearchDetailsHandler.ashx?method=GetRebateDetailsForSearchDetails",
            params:{ rebateHead:JSON.stringify(record.data)},
            success:function(result,request)
            {
                var obj=Ext.decode(result.responseText);
                var strRebateDetail=Ext.getStore('RebateDetails');
                if(obj.success ==="true")
                {
                    strRebateDetail.loadData(obj.root);  
                }
                else
                {
                    Ext.ComponentQuery.query('#SD_RD_grdDetails')[0].store.removeAll();
                }

            },
            failure:function(result,request)
            {
                msg("FAILURE","Error in Fetching Data !!!");
                return; 
            }             
        });

    },

    onFrmSearchDetailsAfterRender: function(component, eOpts) {

        var pan=Ext.ComponentQuery.query('#popUpWinForSearchDetails')[0].pan;
        console.log(pan);
        Ext.ComponentQuery.query("#SD_hdnPan")[0].setValue(pan);


        Ext.ComponentQuery.query('#SD_grdReturnDetails')[0].store.removeAll();
        Ext.ComponentQuery.query('#SD_RD_grdDetails')[0].store.removeAll();
        Ext.ComponentQuery.query('#SD_RD_grdHeader')[0].store.removeAll();
        Ext.ComponentQuery.query('#SD_grdRefundPaymentDetails')[0].store.removeAll();
        Ext.ComponentQuery.query('#SD_grdReceiptPaymentDetails')[0].store.removeAll();
        Ext.ComponentQuery.query('#SD_grdSpecialPenaltyDetails')[0].store.removeAll();
        Ext.ComponentQuery.query('#SD_AD_grdHeader')[0].store.removeAll();
        Ext.ComponentQuery.query('#SD_AD_grdLines')[0].store.removeAll();
        Ext.ComponentQuery.query('#SD_AppealD_grdHeader')[0].store.removeAll();
        Ext.ComponentQuery.query('#SD_AppealD_grdDetails')[0].store.removeAll();



    },

    init: function(application) {
        this.control({
            "#SD_cmbAccTtype": {
                collapse: this.onSD_cmbAccTtypeCollapse
            },
            "#SD_AD_grdHeader": {
                itemclick: this.onSD_AD_grdHeaderItemClick
            },
            "#SD_AppealD_grdHeader": {
                itemclick: this.onSD_AppealD_grdHeaderItemClick
            },
            "#SD_RD_grdHeader": {
                itemclick: this.onSD_RD_grdHeaderItemClick
            },
            "#frmSearchDetails": {
                afterrender: this.onFrmSearchDetailsAfterRender
            }
        });
    }

});
