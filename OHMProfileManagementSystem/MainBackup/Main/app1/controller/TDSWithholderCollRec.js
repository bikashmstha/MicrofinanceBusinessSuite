/*
 * File: app/controller/TDSWithholderCollRec.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.TDSWithholderCollRec', {
    extend: 'Ext.app.Controller',

    models: [
        'TDSWithholderCollList',
        'TDSWithCollSum'
    ],
    stores: [
        'TDSWithholderCollList',
        'TDSWithCollSum'
    ],
    views: [
        'TDSWithholderCollRec'
    ],

    onGrdWCRTDSListItemClick: function(dataview, record, item, index, e, eOpts) {
        var me = this;

        var action = Ext.ComponentQuery.query("#hdnWCRTDSaction")[0];
        var act = action.getValue();

        var hdniro = Ext.ComponentQuery.query("#hdnWCRTDSiro")[0];
        var hdnpan = Ext.ComponentQuery.query("#hdnWCRTDSpan")[0];
        console.log("itmclick pan",hdnpan.getValue());
        var hdnfrom = Ext.ComponentQuery.query("#hdnWCRTDSfrom")[0];
        var hdnto = Ext.ComponentQuery.query("#hdnWCRTDSto")[0];

        if(act=="Detail")
        {
            me.getController('MyApp.controller.TDSWithCollRecDetails').init();
            me.getController('MyApp.controller.TDSWithCollRecDetails').ShowWithCollRecDet(hdnpan.getValue(),hdniro.getValue(),hdnfrom.getValue(),hdnto.getValue());
        }
    },

    ShowWithholderCollRec: function(pan, iro, from, to) {
        Ext.getCmp('cntOMTDS').removeAll();

        var pnlDynamic = Ext.create('MyApp.view.TDSWithholderCollRec');

        var pnlToRender = Ext.ComponentQuery.query("#cntOMTDS")[0];

        pnlToRender.add(pnlDynamic);

        var hdnpan = Ext.ComponentQuery.query("#hdnWCRTDSpan")[0];
        var hdnfrom = Ext.ComponentQuery.query("#hdnWCRTDSfrom")[0];
        var hdnto = Ext.ComponentQuery.query("#hdnWCRTDSto")[0];

        var dpMsg = Ext.ComponentQuery.query("#dpWCRTDSMsg")[0];
        var dpMsg1 = Ext.ComponentQuery.query("#dpWCRTDSMsg1")[0];
        var dpMsg2 = Ext.ComponentQuery.query("#dpWCRTDSMsg2")[0];
        var dpMsg3 = Ext.ComponentQuery.query("#dpWCRTDSMsg3")[0];

        hdnpan.setValue(pan);

        if(from===""&&to==="")
        {
            dpMsg.setValue('Verified TDS statistics upto now by all IROs');
        }
        else if(from!==""&&to!=="")
        {
            hdnfrom.setValue(from);
            hdnto.setValue(to);

            dpMsg.setValue('Verified TDS statistics by all IROs from');
            dpMsg1.setValue(hdnfrom.getValue());
            dpMsg2.setValue('to'); 
            dpMsg3.setValue(hdnto.getValue()); 
        }

        console.log("iro",iro);
        var param = {
            WhPan:hdnpan.getValue(),
            IrdCode:iro,
            FromDate:hdnfrom.getValue(),
            ToDate:hdnto.getValue()
        };

        console.log("after param");

        var store = Ext.getStore('TDSWithholderCollList');
        store.load({
            params:{objRec:JSON.stringify(param)}
        });

        console.log("store",store);

        Ext.Ajax.request({
            url:"../Handlers/TDS/SearchWithholderRecHandler.ashx?method=GetWithholderRec",
            params: {objRec:JSON.stringify(param)},
            success: function ( result, request ){

                //waitSave.hide();

                var obj = Ext.decode(result.responseText);
                var data = obj.root;

                console.log("data",obj.success);
                if(obj.success === "true")
                {
                    var amt =0;
                    var TDSamt = 0;
                    var count = 0;
                    var TDSSum = Ext.getStore('TDSWithCollSum'); 

                    if(obj.total!=="0")
                    {
                        for(var i=0;i<obj.total;i++)
                        {
                            amt = amt+data[i].PaymentAmt;
                            TDSamt = TDSamt+data[i].TDSAmt;
                            count = count+data[i].Count;
                        }

                        console.log("amt",amt);
                        TDSSum.loadData([],false);
                        TDSSum.add({
                            total:"Total:",
                            totalAmt:amt,
                            totalTDSAmt:TDSamt,
                            totalVerCount:count
                        });
                    }
                    else
                    {
                        TDSSum.loadData([],false);
                        TDSSum.add({
                            total:"Total:",
                            totalAmt:0,
                            totalTDSAmt:0,
                            totalVerCount:0
                        });
                    }
                }
                else if(obj.success === "false") 
                {
                    msg("FAILURE",obj.message);
                    return;
                }
            },

            failure: function ( result, request ){

                return;
            }
        });
    },

    init: function(application) {
        this.control({
            "#grdWCRTDSList": {
                itemclick: this.onGrdWCRTDSListItemClick
            }
        });
    }

});
