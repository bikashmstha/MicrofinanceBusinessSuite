/*
 * File: app/controller/PanIssue.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.PanIssue', {
    extend: 'Ext.app.Controller',

    onPI_btnCancelClick: function(button, e, eOpts) {
        var me=this;
        me.Clear();
        Ext.ComponentQuery.query('#PI_txtSubNo')[0].focus();
    },

    onPI_txtSubNoKeypress: function(textfield, e, eOpts) {

        if(e.keyCode === 13 ||e.keyCode === 9)
        {
            var isVat='';

            var subNo=Ext.ComponentQuery.query('#PI_txtSubNo')[0];
            var seriesNo=Ext.ComponentQuery.query('#PI_txtSeries')[0];
            var bntPanAllocate=Ext.ComponentQuery.query('#PI_bntPanAllocate')[0];



            Ext.Ajax.request({
                url:"../Handlers/Registration/AllocatePanHandler.ashx?method=CheckValidSubmissionNo",
                params:{
                    SubNo:subNo.getValue()
                },
                success: function ( result, request ){

                    var obj = Ext.decode(result.responseText);

                    if(obj.success == "true")
                    {
                        if(obj.message==='V')
                        {
                            Ext.ComponentQuery.query('#PI_txtSeries')[0].reset();  
                            Ext.ComponentQuery.query('#PI_txtSeries')[0].setReadOnly(false);
                            Ext.ComponentQuery.query('#PI_bntPanAllocate')[0].enable();  
                        }
                        else if(obj.message==='Y')
                        {
                            msg("INFO","Given submission No. has not verified yet !!!");
                            Ext.ComponentQuery.query('#PI_txtSubNo')[0].focus(true);
                            Ext.ComponentQuery.query('#PI_txtSeries')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#PI_bntPanAllocate')[0].disable();
                            return;
                        }
                        else if(obj.message==='N'||obj.message==='')
                        {
                            msg("INFO","Given submission No. has not submitted yet !!!");
                            Ext.ComponentQuery.query('#PI_txtSubNo')[0].focus(true);
                            Ext.ComponentQuery.query('#PI_txtSeries')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#PI_bntPanAllocate')[0].disable();
                            return;  
                        }
                        else if(obj.message==='X')
                        {
                            msg("INFO","Given submission No. is not valid !!!");
                            Ext.ComponentQuery.query('#PI_txtSubNo')[0].focus(true);
                            Ext.ComponentQuery.query('#PI_txtSeries')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#PI_bntPanAllocate')[0].disable();
                            return;  
                        }
                        else
                        {
                            msg("INFO","Given submission No. is already allocated !!!");
                            Ext.ComponentQuery.query('#PI_txtSubNo')[0].focus(true);
                            Ext.ComponentQuery.query('#PI_txtSeries')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#PI_bntPanAllocate')[0].disable();
                            return;  
                        }

                    }

                    else
                    {
                        Ext.ComponentQuery.query('#PI_txtSeries')[0].reset();  
                        Ext.ComponentQuery.query('#PI_txtSeries')[0].setReadOnly(false);
                        Ext.ComponentQuery.query('#PI_bntPanAllocate')[0].enable();  
                    }
                },

                failure: function ( result, request ){

                    msg("FAILURE","Error in Fetching Data !!!");
                    return;
                }

            });




            Ext.Ajax.request({
                url:"../Handlers/Registration/RegistrationsForHandler.ashx?method=GetRegistrationsFors",
                params:{
                    submissionNo:subNo.getValue()
                },
                success: function ( result, request ){

                    var obj = Ext.decode(result.responseText);

                    if(obj.success == "true")
                    { 
                        for(var i=0;i<obj.total;i++)
                        {
                            if(obj.root[i].RegFor=="VAT")
                            {

                                Ext.ComponentQuery.query('#PI_cmbFillingPeriod')[0].show();
                                Ext.ComponentQuery.query('#PI_cmbFillingPeriod')[0].allowBlank=false;
                                //Ext.ComponentQuery.query('#PI_cmbFillingPeriod')[0].focus();
                                isVat='True';

                                break;
                            }
                            else
                            {
                                Ext.ComponentQuery.query('#PI_cmbFillingPeriod')[0].hide(); 
                                Ext.ComponentQuery.query('#PI_cmbFillingPeriod')[0].allowBlank=true;
                                Ext.ComponentQuery.query('#PI_cmbFillingPeriod')[0].reset(); 

                            }
                        }

                        if(isVat=='True')
                        {
                            Ext.Ajax.request({
                                url:"../Handlers/Registration/Taxpayer/TaxpayerHandler.ashx?method=GetFillingPeriod",
                                params:{
                                    subNo:subNo.getValue()
                                },
                                success: function ( result, request ){

                                    var obj = Ext.decode(result.responseText);

                                    if(obj.success == "true")
                                    {   
                                        Ext.ComponentQuery.query('#PI_cmbFillingPeriod')[0].setValue(obj.message);
                                    }
                                },

                                failure: function ( result, request ){

                                    msg("FAILURE","Error in Fetching Data !!!");
                                    return;
                                }

                            });

                        }


                    }
                },

                failure: function ( result, request ){

                    msg("FAILURE","Error in Fetching Data !!!");
                    return;
                }

            });

        }
    },

    onPI_txtSeriesKeypress: function(textfield, e, eOpts) {
        if(e.keyCode === 13 ||e.keyCode === 9)
        {

            var subNo=Ext.ComponentQuery.query('#PI_txtSubNo')[0];
            var seriesNo=Ext.ComponentQuery.query('#PI_txtSeries')[0];
            var bntPanAllocate=Ext.ComponentQuery.query('#PI_bntPanAllocate')[0];

            var Form=Ext.ComponentQuery.query('#frmPanIssue')[0].getForm();

            if(!Form.isValid())
            {
                msg("WARNING","Please enter the required fields");   
                return;
            }

            Ext.Ajax.request({
                url:"../Handlers/Registration/AllocatePanHandler.ashx?method=GetAllocatedPan",
                params:{seriesNo:seriesNo.getValue(),
                    SubNo:subNo.getValue()
                },
                success: function ( result, request ){

                    var obj = Ext.decode(result.responseText);

                    var data=obj.root;

                    if(obj.success =='true')             
                    {  
                        console.log(data.Pan);
                        Ext.ComponentQuery.query('#IP_txtPan')[0].setValue(data.Pan);
                        Ext.ComponentQuery.query('#PI_txtName')[0].setValue(data.Name);
                        Ext.ComponentQuery.query('#PI_txtTradName')[0].setValue(data.TradName);

                        if(data.STAT=='Y')
                        {
                            //seriesNo.reset();
                            //bntPanAllocate.disable();
                            bntPanAllocate.enable();
                            msg('SUCCESS',"Your PAN will be your previous PAN("+data.Pan+")");
                            return;
                        }
                        else if(data.STAT=='A')
                        {
                            msg('INFO',"Series: "+seriesNo.getValue()+" does not have any PAN for allocation ");
                            Ext.ComponentQuery.query('#IP_txtPan')[0].reset();
                            Ext.ComponentQuery.query('#PI_txtName')[0].reset();
                            Ext.ComponentQuery.query('#PI_txtTradName')[0].reset();
                            bntPanAllocate.disable(); 
                            return;
                        }
                        else
                        {
                            bntPanAllocate.enable(); 
                        }
                    }

                    if(obj.success == "false") return;
                },

                failure: function ( result, request ){

                    msg("FAILURE","Error in Fetching Data !!!");
                    return;
                }

            });

        }
    },

    onPI_bntPanAllocateClick: function(button, e, eOpts) {
        var me=this;
        var subNo=Ext.ComponentQuery.query('#PI_txtSubNo')[0];
        var pan=Ext.ComponentQuery.query('#IP_txtPan')[0];
        var series=Ext.ComponentQuery.query('#PI_txtSeries')[0];
        var fp=Ext.ComponentQuery.query('#PI_cmbFillingPeriod')[0];
        var fillingPeriod='';
        var accttype='';

        //var Form=Ext.ComponentQuery.query('#frmPanIssue')[0].getForm();

        if(!(subNo.getValue()))
        {
            msg("WARNING","Please enter the submission number");  
            subNo.focus();
            return;
        }
        else if(!(series.getValue()))
        {
            msg("WARNING","Please enter the series");  
            series.focus();
            return;
        }

        if(!fp.isHidden() && fp.getValue()!==null)
        {
            fillingPeriod=fp.getValue();
            accttype='00';
        }

        Ext.Ajax.request({
            url:"../Handlers/Registration/PanIssueHandler.ashx?method=UpdateSubNoForPanIssue",
            params:{SubNo:subNo.getValue(),
                Pan:pan.getValue(),
                fillingPeriod:fillingPeriod,
                acctype:accttype
            },
            success: function (result,request ){

                var obj = Ext.decode(result.responseText);
                if(obj.success === "true")
                {
                    // me.Clear();
                    Ext.ComponentQuery.query('#PI_bntPanAllocate')[0].disable();

                }

                msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);
                // Ext.ComponentQuery.query('#PI_txtSubNo')[0].focus();

                if(obj.success == "false") return;

            },

            failure: function ( result, request ){

                msg("FAILURE","Error in Fetching Data !!!");
                return;
            }


        });
    },

    Clear: function() {
        Ext.ComponentQuery.query('#PI_txtSubNo')[0].reset();
        Ext.ComponentQuery.query('#IP_txtPan')[0].reset();
        Ext.ComponentQuery.query('#PI_txtSeries')[0].reset();
        Ext.ComponentQuery.query('#PI_txtName')[0].reset();
        Ext.ComponentQuery.query('#PI_txtTradName')[0].reset();
        Ext.ComponentQuery.query('#PI_bntPanAllocate')[0].enable();
        Ext.ComponentQuery.query('#PI_cmbFillingPeriod')[0].reset();
    },

    init: function(application) {
        this.control({
            "#PI_btnCancel": {
                click: this.onPI_btnCancelClick
            },
            "#PI_txtSubNo": {
                keypress: this.onPI_txtSubNoKeypress
            },
            "#PI_txtSeries": {
                keypress: this.onPI_txtSeriesKeypress
            },
            "#PI_bntPanAllocate": {
                click: this.onPI_bntPanAllocateClick
            }
        });
    }

});
