/*
 * File: app/view/CollectionSheetEdit.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.CollectionSheetEdit', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.field.ComboBox',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.selection.RowModel',
        'Ext.grid.column.Action',
        'Ext.grid.plugin.RowEditing'
    ],

    frame: true,
    title: 'Collection Sheet Edit',

    layout: {
        type: 'table',
        columns: 2
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'combobox',
                    colspan: 2,
                    itemId: 'ddlOffice',
                    fieldLabel: 'Office Code',
                    emptyText: '- - -Select - - -',
                    size: 50,
                    displayField: 'OfficeName',
                    forceSelection: true,
                    queryMode: 'local',
                    store: 'OfficeShortStore',
                    valueField: 'OfficeCode',
                    listeners: {
                        collapse: {
                            fn: me.onDdlOfficeCollapse,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'gridpanel',
                    colspan: 2,
                    itemId: 'grdCollectionSheetUnentry',
                    width: 930,
                    title: 'Collections Sheets',
                    store: 'CollectionSheetUnentryStore',
                    selModel: Ext.create('Ext.selection.RowModel', {

                    }),
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'CenterCode',
                            text: 'Center Code'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 262,
                            dataIndex: 'CenterName',
                            text: 'Center Name'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 210,
                            dataIndex: 'CollectionSheetNo',
                            text: 'Collection Sheet No'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 253,
                            dataIndex: 'EmployeeName',
                            text: 'Employee Name'
                        },
                        {
                            xtype: 'actioncolumn',
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var store = Ext.getStore('CollectionSheetUnentryStore');
                                        var grd =  Ext.ComponentQuery.query('#grdCollectionSheetUnentry')[0];
                                        var row = store.getAt(rowIndex).data;

                                        Ext.Msg.confirm('Confirm Action', 'Do you want to Un-Enter the selected Collection Sheet ?', function(btn) {
                                            if(btn == 'yes'){



                                                var wMsg='Collection Sheet On Un-Entry On Process....';

                                                var waitSave = watiMsg(wMsg);

                                                Ext.Ajax.request({
                                                    url: '../Handlers/Finance/Transaction/CollectionSheetTransaction/CollectionSheetMasterHandler.ashx',
                                                    params: {
                                                        method:'UnenterCollectionSheetMaster',
                                                        offCode:getOfficeCode(),
                                                        collectionSheetNo:row.CollectionSheetNo
                                                    },
                                                    success: function(response){
                                                        waitSave.hide();
                                                        var out=Ext.decode(response.responseText);
                                                        console.log(out);

                                                        if(out.success==="true")
                                                        {

                                                            msg("SUCCESS",out.message,function(){
                                                                grd.bindStore(store);
                                                                store.removeAt(rowIndex);
                                                            });




                                                        }
                                                        else
                                                        {
                                                            msg("FAILURE",out.message);
                                                        }
                                                    },
                                                    failure: function ( result, request ) {
                                                        waitSave.hide();
                                                        var out=Ext.decode(response.responseText);
                                                        msg("FAILURE",out.message);
                                                    }

                                                });



                                                return true;
                                            }
                                        });
                                    },
                                    icon: '../ITS/resources/images/icons/cancel.png'
                                }
                            ]
                        }
                    ],
                    plugins: [
                        Ext.create('Ext.grid.plugin.RowEditing', {

                        })
                    ]
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onPanelAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onDdlOfficeCollapse: function(field, eOpts) {
        var store=Ext.getStore('CollectionSheetUnentryStore');
        store.removeAll();

        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/CollectionSheetTransaction/UnapprovedCollectionHandler.ashx',
            params: {
                method:'GetGetUnapprovedColl',OfficeCode:getOfficeCode()
            },
            success: function(response){

            var data=Ext.decode(response.responseText);
            store.removeAll();
            store.add(data.root);


        }
        });
    },

    onPanelAfterRender: function(component, eOpts) {
        var officeStore=Ext.getStore('OfficeShortStore');
        getOfficeLov(getCurrentUser(),getOfficeCode(),function(obj){
          officeStore.removeAll();
            officeStore.add(obj.root);
        });

        var store=Ext.getStore('CollectionSheetUnentryStore');
        store.removeAll();
    }

});