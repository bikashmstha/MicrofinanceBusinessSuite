/*
 * File: app/controller/MFLoanRepayment.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.MFLoanRepayment', {
    extend: 'Ext.app.Controller',

    stores: [
        'CenterCodeStore',
        'LoanProductStore',
        'LoanRePaymentStore',
        'ContraAccountStore',
        'MFLoanSearchStore',
        'MFLoanDetailsStore',
        'MeLoanRepaymentDetailsStore',
        'MEFieldAssistantStore'
    ],

    onFrmMFLoanRepaymentAfterRender: function(component, eOpts) {
        Ext.ComponentQuery.query('#txtPaymentDateAD')[0].setValue(getMisDateAD());
        Ext.ComponentQuery.query('#txtPaymentDateBS')[0].setValue(getMisDateBS());


        var store=Ext.getStore('CenterCodeStore');
        store.removeAll();

        Ext.Ajax.request({
            url: '../Handlers/Finance/Maintenance/CenterHandler.ashx',
            params: {
                method:'GetTransferCenterList',
                offCode:getOfficeCode()
            },
            success: function(response){

                var data=Ext.decode(response.responseText);
                store.removeAll();
                store.add(data.root);


            }
        });

         Ext.Ajax.request({
                     url: '../Handlers/Finance/Transaction/LoanTransaction/LoanProductHandler.ashx',
                    params: {
                        method:'GetLoanProduct',
                        productName:null
                    },
                    success: function(response){

                        var data=Ext.decode(response.responseText);
                        var loanProductStore =Ext.getStore('LoanProductStore');

                        loanProductStore.removeAll();
                        loanProductStore.add(data.root);

                    }
                });


        Ext.Ajax.request({
                     url: '../Handlers/Finance/Transaction/LoanTransaction/MfLoanRepaymentHandler.ashx',
                    params: {
                        method:'GetMfRepayLoan',
                         offCode:getOfficeCode()

                    },
                    success: function(response){

                        var data=Ext.decode(response.responseText);
                        var loanRePaymentStore =Ext.getStore('LoanRePaymentStore');
                        loanRePaymentStore.removeAll();
                        loanRePaymentStore.add(data.root);

                    }
                });
        Ext.Ajax.request({
                     url: '../Handlers/Finance/Maintenance/AccountHeadEntryHandler.ashx',
                    params: {
                        method:'GetContraAccount',
                         offCode:getOfficeCode()

                    },
                    success: function(response){

                        var data=Ext.decode(response.responseText);
                        var contraAccountStore =Ext.getStore('ContraAccountStore');
                        contraAccountStore.removeAll();
                        contraAccountStore.add(data.root);

                    }
                });

                Ext.Ajax.request({
                     url: '../Handlers/Finance/Transaction/LoanTransaction/MfRepaySearchLoanHandler.ashx',
                    params: {
                        method:'GetMfRepaySearchLoan',
                         offCode:getOfficeCode()

                    },
                    success: function(response){

                        var data=Ext.decode(response.responseText);
                        var mfLoanSearchStore =Ext.getStore('MFLoanSearchStore');
                        mfLoanSearchStore.removeAll();
                        mfLoanSearchStore.add(data.root);

                    }
                });



        var empName ='';


                Ext.Ajax.request({
                    url: '../Handlers/Supervisor/EmployeeHandler.ashx',
                    params: {
                        method:'GetFieldAssistants',
                        officeCode:getOfficeCode(),empName:empName
                    },
                    success: function(response){

                    var data=Ext.decode(response.responseText);
                    var meFieldAssistantStore=Ext.getStore('MEFieldAssistantStore');
                    meFieldAssistantStore.removeAll();
                    meFieldAssistantStore.add(data.root);


                }
                });



    },

    onBtnLoanRepaymentClick: function(button, e, eOpts) {
        var loanNo=Ext.ComponentQuery.query("#ddlLoanNo")[0].getValue();
        var paymentDate=Ext.ComponentQuery.query("#txtPaymentDateBS")[0].getValue();
        var paidAmt=Ext.ComponentQuery.query("#txtPastPrinciple")[0].getValue();
        var totalBalance=Ext.ComponentQuery.query("#txtTotalBalance")[0].getValue();
        var totalPrincipalOutStanding=Ext.ComponentQuery.query("#txtPrincipalBalance")[0].getValue();
        var pastPrincipalDue=Ext.ComponentQuery.query("#txtInstallmentAmt")[0].getValue();
        var currentPrincipalSchedule=Ext.ComponentQuery.query("#txtPrincipalBalance")[0].getValue();
        var pastInterestDue=Ext.ComponentQuery.query("#txtInterestBalance")[0].getValue();
        var interestAmt=Ext.ComponentQuery.query("#txtCurrentInterest")[0].getValue();
        var penaltyAmt=Ext.ComponentQuery.query("#txtPenaltyBalance")[0].getValue();
        var principalPaidAmt=Ext.ComponentQuery.query("#txtPrincipleReceived")[0].getValue();
                var interestPaidAmt=Ext.ComponentQuery.query("#txtCollectionSheetNo")[0].getValue();
                var penaltyPaidAmt=Ext.ComponentQuery.query("#txtCollectionSheetNo")[0].getValue();
                var adjustFromSaving=Ext.ComponentQuery.query("#txtCollectionSheetNo")[0].getValue();
                var savingAccountNo=Ext.ComponentQuery.query("#txtCollectionSheetNo")[0].getValue();
        var contraAccount=Ext.ComponentQuery.query("#ddlContraAccount")[0].getValue();
        var voucherNo=Ext.ComponentQuery.query("#txtChequeNo")[0].getValue();
                var employeeId=Ext.ComponentQuery.query("#txtCollectionSheetNo")[0].getValue();
                var totalPrincipalPaidAmt=Ext.ComponentQuery.query("#txtCollectionSheetNo")[0].getValue();
                var totalInterestPaidAmt=Ext.ComponentQuery.query("#txtCollectionSheetNo")[0].getValue();
                var totalPenaltyPaidAmt=Ext.ComponentQuery.query("#txtCollectionSheetNo")[0].getValue();
                var remarks=Ext.ComponentQuery.query("#txtCollectionSheetNo")[0].getValue();


        		var tranOfficeCode=Ext.ComponentQuery.query("#txtCollectionSheetNo")[0].getValue();
                var user=Ext.ComponentQuery.query("#txtCollectionSheetNo")[0].getValue();
                var action=Ext.ComponentQuery.query("#txtCollectionSheetNo")[0].getValue();


        		 var objmfLoanRepayment={
        		        LoanNo:loanNo,
                        PaymentDate:loanNo,
                        PaidAmount:loanNo,
                        TotalBalance:loanNo,
                        TotalPrincipalOutstanding:loanNo,
                        PastPrincipalDue:loanNo,
                        CurrentPrincipalSchedule:loanNo,
                        PastInterestDue:loanNo,
                        InterestAmount:loanNo,
                        PenaltyAmount:loanNo,
                        PrincipalPaidAmount:loanNo,
                        InterestPaidAmount:loanNo,
                        PenaltyPaidAmount:loanNo,
                        AdjustFromSaving:loanNo,
                        SavingAccountNo:loanNo,
                        ContraAccount:loanNo,
                        VoucherNo:loanNo,
                        EmployeeId:loanNo,
                        TotalPrincipalPaidAmount:loanNo,
        				TotalInterestPaidAmount:loanNo,
                        TotalPenaltyPaidAmount:loanNo,
                        Remarks:loanNo,
                        TranOfficeCode:loanNo,
                        User1:loanNo,
                        Action:loanNo};
         Ext.Ajax.request
                ({
                    method: 'POST',
                    url: '../Handlers/Finance/Transaction/LoanTransaction/MfLoanRepaymentHandler.ashx?method=SaveLoanRepayment',
                    params:{mfLoanRepayment:JSON.stringify(objmfLoanRepayment)},

                    waitMsg: 'Please wait',
                    success: function(result, request) {
                        wait.hide();
                        var obj = Ext.decode(result.responseText);
                        if (obj.success != "true")
                        {
                            showMessage('ERROR OCURRED !!!',obj.message);
                        }
                        else
                        {
                            showMessage('INFO','Saved successfully ');


                        }
                    },
                    failure: function(result, request) {
                        wait.hide();
                        var obj = Ext.decode(result.responseText);

                        msg("FAILURE","Cannot be saved successfully");
                        return;
                    }
                });







    },

    onBtnSearchClick: function(button, e, eOpts) {
        var offCode=Ext.get('offCode').dom.innerHTML;
        var clientName='';
        var loanDno=Ext.ComponentQuery.query("#ddlLoaanNo")[0].getValue();
        var repaymentNo='';
        var dateForm='';
        var dateTo='';


        Ext.Ajax.request({
                             url: '../Handlers/Finance/Transaction/LoanTransaction/MfRepayDetailHandler.ashx',
                            params: {
                                method:'GetMfRepayDetail',
                                 offCode:offCode,clientName:clientName,loanDno:loanDno,repaymentNo:repaymentNo,dateForm:dateForm,dateTo:dateTo

                            },
                            success: function(response){

                                var data=Ext.decode(response.responseText);
                                var mfLoanDetailsStore =Ext.getStore('MFLoanDetailsStore');
                                mfLoanDetailsStore.removeAll();
                                mfLoanDetailsStore.add(data.root);

                            }
                        });

    },

    init: function(application) {
        this.control({
            "#frm-MFLoanRepayment": {
                afterrender: this.onFrmMFLoanRepaymentAfterRender
            },
            "#btnLoanRepayment": {
                click: this.onBtnLoanRepaymentClick
            },
            "#btnSearch": {
                click: this.onBtnSearchClick
            }
        });
    }

});
