/*
 * File: app/view/SelectOfficeTypePopUp.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.SelectOfficeTypePopUp', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.form.Panel',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Column',
        'Ext.selection.RowModel'
    ],

    height: 500,
    itemId: 'SelectOfficeTypePopUp',
    width: 700,
    autoScroll: true,
    title: 'Select Office Type',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    bodyPadding: 10,
                    title: '',
                    items: [
                        {
                            xtype: 'gridpanel',
                            itemId: 'grdSelectOfficeType',
                            width: '',
                            title: '',
                            store: 'OfficeTypeSearchStore',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'OfficeTypeCode',
                                    text: 'Office Type Code'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 509,
                                    dataIndex: 'OfficeTypeName',
                                    text: 'Office Type Name'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'CreatedBy',
                                    text: 'CreatedBy'
                                }
                            ],
                            selModel: Ext.create('Ext.selection.RowModel', {
                                listeners: {
                                    beforeselect: {
                                        fn: me.onRowModelBeforeSelect,
                                        scope: me
                                    }
                                }
                            })
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFormAfterRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onRowModelBeforeSelect: function(rowmodel, record, index, eOpts) {

        Ext.MessageBox.confirm('Select', 'Are you sure ?', function(btn){

           if(btn === 'yes'){
               console.log('record',record);

               Ext.ComponentQuery.query('#txtOfficeTypeCode')[0].setValue(record.data.OfficeTypeCode);
               Ext.ComponentQuery.query('#txtOfficeTypeName')[0].setValue(record.data.OfficeTypeName);


              // return true;
           }
           else
           {

           }
            var v=Ext.ComponentQuery.query('#SelectOfficeTypePopUp')[0];

            v.close();
        });

    },

    onFormAfterRender: function(component, eOpts) {
        var waitSave = watiMsg('Loading Data. Please wait ...');
        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/office/OfficeTypeHandler.ashx',
            params: {
                 method:"GetOfficeTypes"
            },
            success: function(response){


                var obj = Ext.decode(response.responseText);

              if(obj.success === "true")
              {

                  var store=Ext.getStore('OfficeTypeSearchStore');
                  store.removeAll();
                  store.add(obj.root);

              }
                else
                {

                    msg("FAILURE",obj.message);
                }
                waitSave.hide();

            }
        });
    }

});