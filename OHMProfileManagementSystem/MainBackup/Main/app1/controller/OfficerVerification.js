/*
 * File: app/controller/OfficerVerification.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.OfficerVerification', {
    extend: 'Ext.app.Controller',

    stores: [
        'eServicesModuleOffV'
    ],

    onPnlOfficerVerificationAfterRender: function(component, eOpts) {
        /*var umStore=Ext.getStore('UnverifiedModule');
        umStore.load({
        url:"../Handlers/Verification/UserVerificationModuleHandler.ashx?method=GetUnverifiedModulesWithCount",
        method:'POST',
        params: {}
        });
        */
    },

    onTxtSubmissionNoOffVBlur: function(component, e, eOpts) {
        this.LoadTranNoWithSubmissionNo();
    },

    onTxtSubmissionNoOffVKeypress: function(textfield, e, eOpts) {
        if(e.keyCode === 13)
        {
            this.LoadTranNoWithSubmissionNo();
        }
    },

    onBtnPreviewOffVClick: function(button, e, eOpts) {
        var txtSubmissionNo = Ext.ComponentQuery.query('#txtSubmissionNoOffV')[0];
        var lblTranNo = Ext.ComponentQuery.query('#lblTranNoOffV')[0];
        var cboModuleName = Ext.ComponentQuery.query('#cboModuleOffV')[0];

        var submissionNo = txtSubmissionNo.getValue();
        var moduleName = cboModuleName.getValue();
        var moduleTitle = cboModuleName.rawValue;

        var errMsg="";
        var errCount=0;

        if(!moduleName)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया Module छान्नुहोस् !<br/>";
            cboModuleName.focus();

        }
        if(!submissionNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया Submission No हाल्नुहोस् !<br/>";
            txtSubmissionNo.focus();
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }


        if(moduleName=="Registration")
        {
            Ext.Ajax.request({
                url:"../Handlers/Registration/RegistrationsForHandler.ashx?method=GetRegistrationsFors",
                params:{submissionNo:submissionNo},
                success: function ( result, request ) {  
                    var obj = Ext.decode(result.responseText);             
                    var regFor=[];
                    var dta=obj.root;
                    if(dta.length>0)
                    {
                        for(var c=0;c<dta.length;c++)
                        {
                            regFor.push(dta[c].RegFor);
                        }
                        console.log('bforepoppup',obj);

                        //  dynamicPopUp(moduleName,{});
                        ////

                        var winPopup = Ext.create('MyApp.view.PopupWindow',{
                            autoScroll:true,
                            width:1300,
                            height:550,

                            draggable:false,
                            maximizable:false,
                            minimizable:false,
                            resizable:false,
                            modal:true,
                            title:"",
                            y:50,
                            layout:'fit'
                        });           

                        winPopup.extraParam={RegistrationFor:regFor,submissionNo:submissionNo};
                        winPopup.show();
                        ///



                    }
                    else
                    {
                        msg("WARNING","Invalid Submission No");
                    }
                },
                failure: function ( result, request ) {
                    msg("FAILURE","Error in Fetching Data !!!");
                }
            });
        }
        else
        {
            dynamicPopUp(moduleName,{tranNo:lblTranNo.getValue()}); 

            //uiConfig = {menuLink:moduleName,pageTitle:moduleTitle};

            //DynamicUI(uiConfig,null,{tranNo:tranNo});
        }




    },

    onBtnVerifyOffVClick: function(button, e, eOpts) {
        var txtSubmissionNo = Ext.ComponentQuery.query('#txtSubmissionNoOffV')[0];
        var lblTranNo = Ext.ComponentQuery.query('#lblTranNoOffV')[0];
        var cboModuleName = Ext.ComponentQuery.query('#cboModuleOffV')[0];

        var submissionNo = txtSubmissionNo.getValue();
        var moduleName = cboModuleName.rawValue;

        var errMsg="";
        var errCount=0;

        if(!moduleName)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया Module छान्नुहोस् !<br/>";
            cboModuleName.focus();

        }
        if(!submissionNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया Submission No हाल्नुहोस् !<br/>";
            txtSubmissionNo.focus();
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }

        var tranNo = lblTranNo.getValue();
        if(tranNo === "")
        {
            msg("WARNING","This Submission No does not exits");
            return;
        }

        var OV={'TranNo':tranNo};

        Ext.Ajax.request({
            method: 'POST',
            url: '../Handlers/Verification/UserTranVerificationHandler.ashx',
            params: {method:'SaveOfficerTranVerifications', officerTranVerification : JSON.stringify(OV)},
            success: function( result, request ){

                var jsonMsg=Ext.decode(result.responseText);
                msg(jsonMsg.success=="True"?"SUCCESS":"FAILURE",jsonMsg.message);
            }
        });
        this.ClearControls();
    },

    LoadTranNoWithSubmissionNo: function() {
        var me=this;
        var txtSubmissionNo = Ext.ComponentQuery.query("#txtSubmissionNoOffV")[0];
        var cboModule = Ext.ComponentQuery.query('#cboModuleOffV')[0];
        var hdnAction = Ext.ComponentQuery.query('#hdnActionOffV')[0];
        var lblTranNo = Ext.ComponentQuery.query('#lblTranNoOffV')[0];

        var submissionNo = txtSubmissionNo.getValue();
        var moduleName = cboModule.rawValue;

        var errMsg="";
        var errCount=0;

        if(!moduleName)
        {
            errCount++;
            errMsg +=errCount+") "+"* Please, Select Module Name.<br/>";
            cboModuleName.focus();
        }
        if(!submissionNo)
        {
            errCount++;
            errMsg +=errCount+") "+"* Please, Enter Submission No.<br/>";
            txtSubmissionNo.focus();
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }

        Ext.Ajax.request({
            url:"../Handlers/VAT/VatReturnsSubmissionNumberHandler.ashx?method=GetInfoForOfficerVerification",
            params:{submissionNo:submissionNo},
            success: function ( result, request ) {            
                var obj = Ext.decode(result.responseText);  
                var data=obj.root;
                var tranNo='';
                if(data)
                {
                    if(data.TranNo)
                    {
                        if(data.SubmittedYN=="V")
                        {
                            msg("WARNING","This Submission No is already Verified.");
                            me.EnableDisableControls('D',tranNo);
                            return;
                        }

                        tranNo=data.TranNo;
                        var submittedFor=data.submittedFor;

                        if(moduleName === "E-Registration" && submittedFor === "REG")
                        {
                            me.EnableDisableControls('E',tranNo);
                        }
                        else if(moduleName === "E-VAT Returns" && submittedFor === "VRET")
                        {
                            me.EnableDisableControls('E',tranNo);
                        }
                        else if(moduleName === "E-Close Of Business" && submittedFor === "VCB")
                        {
                            me.EnableDisableControls('E',tranNo);
                        }
                        else if(moduleName === "E-Installment Return" && submittedFor === "INST")
                        {
                            me.EnableDisableControls('E',tranNo);
                        }
                        else if(moduleName === "E-Self Assessment D01" && submittedFor === "ASS01")
                        {
                            me.EnableDisableControls('E',tranNo);
                        }
                        else if(moduleName === "E-Self Assessment D03" && (submittedFor === "SA" || submittedFor === "CB"))
                        {
                            me.EnableDisableControls('E',tranNo);
                        }
                        else if(moduleName === "E-TDS" && submittedFor === "TDS")
                        {
                            me.EnableDisableControls('E',tranNo);
                        }
                        else if(moduleName === "Diplomatic Refund" && submittedFor === "DiplomaticRefund")
                        {
                            me.EnableDisableControls('E',tranNo);
                        }
                        else
                        {
                            msg('WARNING','This Submission Number Does not Exists For '+ moduleName);
                            me.EnableDisableControls('D',tranNo);
                        }
                    }
                    else
                    {
                        msg("WARNING","This Submission No is Not Yet Submitted"); 
                        me.EnableDisableControls('D',tranNo);
                    }
                }
                else
                {
                    msg("WARNING","This Submission No does not exits"); 
                    me.EnableDisableControls('D',tranNo);
                }
            },
            failure: function ( result, request ) {

                msg("FAILURE","Error in Fetching Data !!!");
            }
        });
    },

    ClearControls: function(txt) {
        var txtSubmissionNo=Ext.ComponentQuery.query('#txtSubmissionNoOffV')[0];
        var cboModuleName=Ext.ComponentQuery.query('#cboModuleOffV')[0];

        txtSubmissionNo.reset();
        cboModuleName.reset();
    },

    EnableDisableControls: function(action,tranNo) {
        var lblTranNo = Ext.ComponentQuery.query('#lblTranNoOffV')[0];
        if(action=='E')
        {
            Ext.ComponentQuery.query('#btnPreviewOffV')[0].enable(true);
            Ext.ComponentQuery.query('#btnVerifyOffV')[0].enable(true);
            lblTranNo.setValue(tranNo);
        }
        else if(action=='D')
        {
            Ext.ComponentQuery.query('#btnPreviewOffV')[0].disable(true);
            Ext.ComponentQuery.query('#btnVerifyOffV')[0].disable(true);
            lblTranNo.setValue('');
        }
    },

    init: function(application) {
        this.control({
            "#pnlOfficerVerification": {
                afterrender: this.onPnlOfficerVerificationAfterRender
            },
            "#txtSubmissionNoOffV": {
                blur: this.onTxtSubmissionNoOffVBlur,
                keypress: this.onTxtSubmissionNoOffVKeypress
            },
            "#btnPreviewOffV": {
                click: this.onBtnPreviewOffVClick
            },
            "#btnVerifyOffV": {
                click: this.onBtnVerifyOffVClick
            }
        });
    }

});
