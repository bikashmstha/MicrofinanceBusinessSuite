/*
 * File: app/controller/D03Annex11.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.D03Annex11', {
    extend: 'Ext.app.Controller',

    stores: [
        'MedServiceTypAnx11',
        'MedicalCreditClaimAnx11'
    ],

    onPnlD03Annex11AfterRender: function(component, eOpts) {
        var me = this;
        var param =  me.validateParam();

        var store = Ext.getStore('MedicalCreditClaimAnx11');
        store.loadData([],false);

        if(param.action === "E")
        {

            var btnSubmit = Ext.ComponentQuery.query('#btnSubmitAnx11')[0];        
            btnSubmit.setText("Update Annex 11"); 

            me.loadDataForUpdate(param.submissionNo,param);
        }



        //----------------------------------------------------------------
        // NB: Return to SetAnnex	
        //----------------------------------------------------------------
        if(param.from === "MV")
        {
            var annexD03 = me.getController('MyApp.controller.SetAnnexD03');

            var el = Ext.get('lnkRedirectTopAnx11');

            el.on('click', function(e,t,eOpts){

                Ext.Msg.confirm('Confirm Action', 'के तपाई पछाडि गएर अनुसुची तय गर्न चाहनुहुन्छ?', function(btn) {
                    if(btn == 'yes'){        

                        param.action ="";
                        annexD03.redirectToAnnexD03(param);
                    }
                }, this);
            });
        }
    },

    onGrdMdedicalClaimAnx11BeforeRender: function(component, eOpts) {
        var grd = Ext.ComponentQuery.query('#grdMedicalClaimAnx11')[0];

        grd.columns[3].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";    

            var items = Ext.getStore("MedServiceTypAnx11").data.items;

            for(var i=0;i<items.length;i++)
            {        

                if(items[i].data.MedServiceTypID === value)
                {           
                    temp = items[i].data.MedServiceTypName;
                    break;
                }        
            }

            return temp;

        };

    },

    onBtnAddNewAnx11Click: function(button, e, eOpts) {
        var grd = Ext.ComponentQuery.query('#grdMedicalClaimAnx11')[0];

        var rec={
            MedicalSno:null,
            MedicalExpDate:'',
            MedicalServiceProvider:'',
            MedicalServiceType:'',
            MedicalExpAmt:null
        };

        grd.store.add(rec);

        var col = grd.headerCt.getHeaderAtIndex(0);
        var rows = grd.store.data.items;
        var record = rows[rows.length-1];
        grd.getPlugin('pluginMedicalClaimAnx11').startEdit(record, col);

    },

    onBtnSubmitAnx11Click: function(button, e, eOpts) {
        var me = this;
        var view = Ext.ComponentQuery.query('#pnlD03Annex11')[0];
        var user = me.getController('MyApp.controller.LoginSecurity');
        var pan = "";
        var fiscalYear = "";
        var assessmentNo = "";
        var offCode = "";
        var action = "A";

        var param =  me.validateParam();

        pan = param.pan;
        fiscalYear =param.fiscalYear;
        assessmentNo = param.submissionNo;
        offCode = param.offCode;
        action = param.action;

        var medCreditClaimDetail = null;
        var medCreditClaim = null;
        var totMedExp = Ext.ComponentQuery.query('#txtTotalMedExpAnx11')[0].getValue();
        var strMedicalCreditClaimAnx11 = Ext.getStore('MedicalCreditClaimAnx11');

        strMedicalCreditClaimAnx11.clearFilter();

        if(strMedicalCreditClaimAnx11.getCount() > 0)
        {
            medCreditClaimDetail = getJson(strMedicalCreditClaimAnx11); 

            strMedicalCreditClaimAnx11.filter(function(item){
                return item.get("Action")!= 'D';
            });
        }

        medCreditClaim = { 
            AssessmentNo:assessmentNo,
            AssessmentDate:"",
            OfficeCode:offCode,
            PAN:pan,
            AccType:"10",     
            FiscalYear:fiscalYear, 
            MedCrCl:null, 
            TotalMedExpCFY:totMedExp !== ""?totMedExp:null, 
            MedCrclRemLFY:null, 
            MedicalTaxCrRemaining:null,
            MedCrClCFY:null,
            RecordStatus:"",
            Terminal:'',
            TranDate:'',
            UserName:'',
            TranNo:null,
            Source:'SA-D03',
            Action:action,
            MedicalCrClaimDetail:medCreditClaimDetail !== ""?medCreditClaimDetail:null,
            SubmissionNo:null
        };


        var wait  = waitMsg('Saving ...');

        //-----------------------------------------------------------------------------------------------
        // NB: Posting Data to Server
        //-----------------------------------------------------------------------------------------------

        var url = "../Handlers/IncomeTax/D03/DCTBMedicalCrClaimHandler.ashx?method=SaveDCTBMedicalCrClaim";
        var args = {dCTBMedicalCrClaim:JSON.stringify(medCreditClaim)};

        if(param.from === "AU")
        {  
            url = "../Handlers/IncomeTax/D03/DCTBMedicalCrClaimHandler.ashx?method=SaveDCTBMedicalCrClaimAU";
            args = {offCodeAU:param.offCodeAU,requestNo:param.requestNo,dCTBMedicalCrClaim:JSON.stringify(medCreditClaim)};
        }

        Ext.Ajax.request({
            url:url,
            params:args,
            success: function ( result, request ) {

                wait.hide();

                var obj = Ext.decode(result.responseText);        


                if(obj.success === "true")
                {

                    if(obj.root !== null && obj.root.CreditClaims !== null)
                    {               
                        strMedicalCreditClaimAnx11.loadData([],false);
                        strMedicalCreditClaimAnx11.add(obj.root.MedicalCrClaimDetail);
                    }


                    if(param.action === "" || param.action === "A")
                    {

                        param.action = "E";            

                        var btnSubmit = Ext.ComponentQuery.query('#btnSubmitAnx11')[0];        
                        btnSubmit.setText("Update Annex 11");   

                        var annexD03 = me.getController('MyApp.controller.SetAnnexD03');
                        annexD03.loadAnxSummary(assessmentNo);

                    }

                }

                msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);

            },
            failure: function ( result, request ) {

                wait.hide();

                msg("FAILURE","Error in Saving !!!");
                return;
            }

        });

    },

    onTxtMedicalExpensesAnx11Change: function(field, newValue, oldValue, eOpts) {
        var me = this;
        me.calcTotMedExp();
    },

    onLblRedirectAnx11Click: function(label) {
        var me = this;

        Ext.Msg.confirm('Confirm Action', 'के तपाई पछाडि गएर अनुसुची तय गर्न चाहनुहुन्छ?', function(btn) {
            if(btn == 'yes'){        

                var annexD03 = me.getController('MyApp.controller.SetAnnexD03');

                var param = me.validateParam();
                param.action ="";

                annexD03.redirectToAnnexD03(param);
            }
        }, this);

    },

    calcTotMedExp: function() {
        var store = Ext.getStore("MedicalCreditClaimAnx11");
        var txtTotMedExp = Ext.ComponentQuery.query('#txtTotalMedExpAnx11')[0];
        var medExp = Ext.ComponentQuery.query('#txtMedicalExpensesAnx11')[0].getValue();
        var grd = Ext.ComponentQuery.query('#grdMedicalClaimAnx11')[0];
        var record = grd.getSelectionModel().getSelection()[0];
        var rowIdx = store.indexOf(record);
        var idx = 0;
        var sum = 0;

        medExp = medExp === null || medExp === "" ?0:parseFloat(medExp);

        store.each(function (rec) {   


            if(rec.get('MedicalExpAmt') !=="" && rowIdx !== idx)
            {
                var medExpAmt = rec.get('MedicalExpAmt') === null || rec.get('MedicalExpAmt') === "" ? 0:parseFloat(rec.get('MedicalExpAmt'));

                sum = parseFloat(sum) + medExpAmt; 
            }	
            idx++;
        });

        var overallMedExp = sum + medExp;
        txtTotMedExp.setValue(overallMedExp);
    },

    loadDataForUpdate: function(submissionNo,param) {
        var wait  = waitMsg('Loading ...');
        var strMedClaim = Ext.getStore("MedicalCreditClaimAnx11");

        strMedClaim.loadData([],false);

        var url = "../Handlers/IncomeTax/D03/DCTBMedicalCrClaimHandler.ashx?method=GetDCTBMedicalCrClaim" ;
        var args = {assessmentNo:submissionNo};

        if(param.from === "AU")
        {  
            url = "../Handlers/IncomeTax/D03/DCTBMedicalCrClaimHandler.ashx?method=GetDCTBMedicalCrClaimAU";
            args = {offCodeAU:param.offCodeAU,requestNo:param.requestNo,assessmentNo:submissionNo};
        }

        Ext.Ajax.request({
            url:url,
            params:args,
            success:function(result, request)
            {      
                wait.hide();
                var obj = Ext.decode(result.responseText); 

                strMedClaim.add(obj.root.MedicalCrClaimDetail);

                //--------------------------------------------------------------------
                //NB: Calculate Total
                //--------------------------------------------------------------------
                var txtTotMedExp = Ext.ComponentQuery.query('#txtTotalMedExpAnx11')[0];
                var sum = 0;

                strMedClaim.each(function (rec) {   

                    if(rec.get('MedicalExpAmt') !=="")
                    {
                        var medExpAmt = rec.get('MedicalExpAmt') === null || rec.get('MedicalExpAmt') === "" ? 0:parseFloat(rec.get('MedicalExpAmt'));

                        sum = parseFloat(sum) + medExpAmt;  
                    }
                });

                txtTotMedExp.setValue(sum);
            },

            failure:function(result, request){
                msg('ERROR OCURRED !!!', 'Error');                 
            }

        });

    },

    onLaunch: function() {
        var me = this;
        var param = me.validateParam();
        var annexD03 = me.getController('MyApp.controller.SetAnnexD03');

        var el = Ext.get('lnkRedirectTopAnx11');

        el.on('click', function(e,t,eOpts){

            Ext.Msg.confirm('Confirm Action', 'के तपाई पछाडि गएर अनुसुची तय गर्न चाहनुहुन्छ?', function(btn) {
                if(btn == 'yes'){        

                    param.action ="";
                    annexD03.redirectToAnnexD03(param);
                }
            }, this);
        });


    },

    validateParam: function() {
        var me = this;
        var view = Ext.ComponentQuery.query('#pnlD03Annex11')[0];
        var user = me.getController('MyApp.controller.LoginSecurity');  
        var param = "";

        if(view.extraParam === null)
        {
            user.clearSession();

            return;

        }
        else
        {
            return view.extraParam;
        }
    },

    init: function(application) {
        this.control({
            "#pnlD03Annex11": {
                afterrender: this.onPnlD03Annex11AfterRender
            },
            "#grdMedicalClaimAnx11": {
                beforerender: this.onGrdMdedicalClaimAnx11BeforeRender
            },
            "#btnAddNewAnx11": {
                click: this.onBtnAddNewAnx11Click
            },
            "#btnSubmitAnx11": {
                click: this.onBtnSubmitAnx11Click
            },
            "#txtMedicalExpensesAnx11": {
                change: this.onTxtMedicalExpensesAnx11Change
            },
            "#lblRedirectAnx11": {
                click: this.onLblRedirectAnx11Click
            }
        });
    }

});
