/*
 * File: app/view/Refund.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.Refund', {
    extend: 'Ext.panel.Panel',

    frame: true,
    padding: '10 10 10 10',
    title: 'Refund',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    height: 420,
                    bodyPadding: '5 5 0 5',
                    title: '',
                    items: [
                        {
                            xtype: 'container',
                            height: 30,
                            layout: {
                                align: 'stretch',
                                type: 'hbox'
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    flex: 1,
                                    margins: '0 110 0 0 ',
                                    itemId: 'txtOfficeCodeRefund',
                                    maxWidth: 140,
                                    fieldLabel: 'Office Code',
                                    readOnly: true
                                },
                                {
                                    xtype: 'textfield',
                                    flex: 1,
                                    margins: '0 150 0 0 ',
                                    itemId: 'txtRefReqNo',
                                    maxWidth: 300,
                                    fieldLabel: 'Refund Request Number',
                                    labelWidth: 150
                                },
                                {
                                    xtype: 'image',
                                    flex: 1,
                                    margins: '0 10 0 0 ',
                                    height: 20,
                                    itemId: 'imgUpdate',
                                    maxHeight: 20,
                                    maxWidth: 20,
                                    minHeight: 20,
                                    src: '../ITS/resources/images/icons/Update.png'
                                },
                                {
                                    xtype: 'label',
                                    flex: 1,
                                    itemId: 'lblMessage',
                                    text: 'My Label'
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            height: 30,
                            layout: {
                                align: 'stretch',
                                type: 'hbox'
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    flex: 1,
                                    margins: '0 115 0 0',
                                    itemId: 'txtPanRefund',
                                    maxWidth: 185,
                                    fieldLabel: 'PAN',
                                    enableKeyEvents: true,
                                    enforceMaxLength: true,
                                    maskRe: /[0-9]/,
                                    maxLength: 9,
                                    size: 9
                                },
                                {
                                    xtype: 'textfield',
                                    flex: 1,
                                    itemId: 'txtAcctTypeRefund',
                                    maxWidth: 135,
                                    fieldLabel: 'Acct Type',
                                    readOnly: true
                                }
                            ]
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            itemId: 'txtTradeNameRefund',
                            maxWidth: 450,
                            fieldLabel: 'Trade Name',
                            readOnly: true
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            itemId: 'txtRefundYearRefund',
                            maxWidth: 150,
                            fieldLabel: 'Refund Year',
                            enableKeyEvents: true,
                            enforceMaxLength: true,
                            maskRe: /[0-9]/,
                            maxLength: 4,
                            minLength: 4
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            itemId: 'txtRequestDateRefund',
                            maxWidth: 180,
                            fieldLabel: 'Request Date',
                            enableKeyEvents: true,
                            maskRe: /[0-9.]/,
                            listeners: {
                                blur: {
                                    fn: me.onTxtRequestDateRefundBlur,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'container',
                            height: 30,
                            layout: {
                                align: 'stretch',
                                type: 'hbox'
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    flex: 1,
                                    margins: '0 95 0 0',
                                    itemId: 'txtOfficerCodeRefund',
                                    maxWidth: 210,
                                    fieldLabel: 'Officer Code'
                                },
                                {
                                    xtype: 'textfield',
                                    flex: 1,
                                    itemId: 'txtOfficerNameRefund',
                                    maxWidth: 320,
                                    fieldLabel: 'Officer Name'
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            height: 20,
                            items: [
                                {
                                    xtype: 'hiddenfield',
                                    itemId: 'hdnActionRefund',
                                    fieldLabel: 'Label'
                                },
                                {
                                    xtype: 'hiddenfield',
                                    itemId: 'hdnTranNo',
                                    fieldLabel: 'Label'
                                },
                                {
                                    xtype: 'hiddenfield',
                                    itemId: 'hdnForGrd',
                                    fieldLabel: 'Label'
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            height: 30,
                            items: [
                                {
                                    xtype: 'toolbar',
                                    items: [
                                        {
                                            xtype: 'button',
                                            itemId: 'btnAddRefund',
                                            icon: '../ITS/resources/images/icons/edit_add.png',
                                            text: 'Add'
                                        },
                                        {
                                            xtype: 'tbseparator'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            height: 145,
                            itemId: 'grdRefund',
                            title: 'Refund Excess Credit Detail',
                            store: 'RefundExcessCreditDet',
                            columns: [
                                {
                                    xtype: 'rownumberer',
                                    width: 40,
                                    dataIndex: 'Sno',
                                    text: 'Sno'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'AcctType',
                                    text: 'AcctType'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'FiscalYear',
                                    text: 'Fiscal Year',
                                    editor: {
                                        xtype: 'combobox',
                                        itemId: 'cboFiscalYear',
                                        emptyText: '  select ...',
                                        enforceMaxLength: true,
                                        selectOnFocus: true,
                                        displayField: 'fiscalYear',
                                        forceSelection: true,
                                        store: 'FiscalYear',
                                        typeAhead: true,
                                        valueField: 'fiscalYear'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    maxWidth: 300,
                                    minWidth: 300,
                                    width: 150,
                                    dataIndex: 'CreditAmount',
                                    text: 'Credit Amount',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtCreditAmount',
                                        maskRe: /[0-9]/
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 150,
                                    dataIndex: 'ClaimAmount',
                                    text: 'Claim Amount',
                                    editor: {
                                        xtype: 'textfield',
                                        itemId: 'txtClaimAmount',
                                        maskRe: /[0-9]/
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'OffCode',
                                    text: 'OffCode'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'Pan',
                                    text: 'Pan'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'RefundReqNo',
                                    text: 'RefundReqNo'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'RefundYear',
                                    text: 'RefundYear'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'Terminal',
                                    text: 'Terminal'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'TranDate',
                                    text: 'TranDate'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'UserName',
                                    text: 'UserName'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'Action',
                                    text: 'Action'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'TranNo',
                                    text: 'TranNo'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'Status',
                                    text: 'Status'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e) {


                                                var store = Ext.getStore('RefundExcessCreditDet');
                                                var grd = Ext.ComponentQuery.query('#grdRefund')[0];
                                                var row = store.getAt(rowIndex).data;
                                                console.log('row>>>',row);
                                                Ext.Msg.confirm('Confirm Action', 'Do you want to Remove ?', function(btn) {
                                                    if(btn == 'yes'){
                                                        if(row.Action === "E")
                                                        {    
                                                            row.Action = "D";
                                                            grd.bindStore(store);         
                                                            store.filter(function(item){
                                                                return item.get("Action")!= 'D';
                                                            });
                                                        }
                                                        else
                                                        {

                                                            store.removeAt(rowIndex);
                                                        }


                                                        return true;
                                                    }
                                                }, this);  





                                                /*//alert('sssss');
                                                var btnAddRefund=Ext.ComponentQuery.query('#btnAddRefund')[0];
                                                var doIt = confirm("This change is irreversible. \n Are you sure? ");

                                                if( doIt===true)
                                                {
                                                    var str=Ext.getStore('RefundExcessCreditDet');
                                                    //var record=str.data.items[rowIndex].data;
                                                    // if(record.Action==="A")
                                                    //{
                                                    str.removeAt(rowIndex);   
                                                    btnAddRefund.enable(true);
                                                    //}
                                                    //else
                                                    // { 
                                                    // record.Action="D";
                                                    //str.filter(function(item){
                                                    // return item.get('Action')!='D'

                                                    //});
                                                    //}
                                                    Ext.ComponentQuery.query('#grdRefund')[0].bindStore(str);
                                                }
                                                */





                                            },
                                            icon: '../ITS/resources/images/icons/cancel.png'
                                        }
                                    ]
                                }
                            ],
                            plugins: [
                                Ext.create('Ext.grid.plugin.RowEditing', {
                                    pluginId: 'pluginRefund',
                                    listeners: {
                                        canceledit: {
                                            fn: me.onGridroweditingpluginCanceledit,
                                            scope: me
                                        },
                                        validateedit: {
                                            fn: me.onGridroweditingpluginValidateedit,
                                            scope: me
                                        },
                                        beforeedit: {
                                            fn: me.onGridroweditingpluginBeforeEdit,
                                            scope: me
                                        }
                                    }
                                })
                            ],
                            listeners: {
                                afterrender: {
                                    fn: me.onGrdRefundAfterRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'container',
                            height: 30,
                            margin: '10 0 0 0',
                            layout: {
                                align: 'stretch',
                                type: 'hbox'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    margins: '0 5 0 0',
                                    itemId: 'btnSaveRefund',
                                    iconCls: 'icon-save',
                                    text: 'Save'
                                },
                                {
                                    xtype: 'button',
                                    flex: 1,
                                    margins: '0 5 0 0',
                                    itemId: 'btnEditRefund',
                                    maxWidth: 60,
                                    iconCls: 'icon-edit',
                                    text: 'Edit'
                                },
                                {
                                    xtype: 'button',
                                    flex: 1,
                                    margins: '0 5 0 0',
                                    itemId: 'btnSubmitRefund',
                                    maxWidth: 70,
                                    iconCls: 'icon-ok',
                                    text: 'Submit'
                                },
                                {
                                    xtype: 'button',
                                    flex: 1,
                                    itemId: 'btnDelete',
                                    margin: '0 5 0 0',
                                    maxWidth: 60,
                                    iconCls: 'icon-delete',
                                    text: 'Delete'
                                },
                                {
                                    xtype: 'button',
                                    flex: 1,
                                    itemId: 'btnVerifyRefund',
                                    margin: '0 5 0 0',
                                    maxWidth: 60,
                                    iconCls: 'icon-verify',
                                    text: 'Verify'
                                },
                                {
                                    xtype: 'button',
                                    flex: 1,
                                    margins: '0 5 0 0',
                                    itemId: 'btnPrintRefund',
                                    maxWidth: 60,
                                    iconCls: 'icon-print',
                                    text: 'Print'
                                },
                                {
                                    xtype: 'button',
                                    flex: 1,
                                    itemId: 'btnCancelRefund',
                                    margin: '0 5 0 0',
                                    maxWidth: 60,
                                    iconCls: 'icon-cancel',
                                    text: 'Cancel'
                                }
                            ]
                        }
                    ]
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onPanelAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onTxtRequestDateRefundBlur: function(component, e, eOpts) {

        return validateFutureDate(field.getValue(),"Y",function(){ field.focus();});

    },

    onGridroweditingpluginCanceledit: function(editor, e, eOpts) {
        console.log(grid);


        grid.store.removeAt(grid.rowIdx);


        var btnAddRefund=Ext.ComponentQuery.query('#btnAddRefund')[0];
        btnAddRefund.enable(true);

    },

    onGridroweditingpluginValidateedit: function(editor, e, eOpts) {
        console.log("Editor",editor);
        console.log("eeee",e);

        var count=0;
        var message="";
        var valid=true;


        var btnAddRefund=Ext.ComponentQuery.query('#btnAddRefund')[0];


        if(isNaN(editor.context.newValues.FiscalYear) || Number(editor.context.newValues.FiscalYear)===0)
        {
            count++;
            message=message+count+") "+"Fiscal Year छान्नुहोस् !!! <br/>" ;
            btnAddRefund.disable(true);
        }

        if(isNaN(editor.context.newValues.CreditAmount)|| Number(editor.context.newValues.CreditAmount)===0)
        {
            valid = false;


            count++;
            message=message+count+") "+"Credit Amount भर्नुहोस् !!! <br/>" ;
            btnAddRefund.disable(true);
        }

        if(isNaN(editor.context.newValues.ClaimAmount)|| Number(editor.context.newValues.ClaimAmount)===0)
        {
            valid = false;


            count++;
            message=message+count+") "+"Claim Amount भर्नुहोस् !!! <br/>" ;
            btnAddRefund.disable(true);
        }

        if(Number(editor.context.newValues.ClaimAmount)>Number(editor.context.newValues.CreditAmount))
        {
            count++;
            message=message+count+") "+" 'Credit Amount' भन्दा 'Claim Amount' कम हुन्छ !!!<br/>" ;
        }

        else
        {
            btnAddRefund.enable(true);
        }


        e.cancel =count>0;
        if(e.cancel)
        {
            msg('Warning',message);
        } 
















    },

    onGridroweditingpluginBeforeEdit: function(editor, e, eOpts) {
        if(Ext.ComponentQuery.query('#hdnForGrd')[0].getValue()==="Z")
        {
            return false;
        }
    },

    onGrdRefundAfterRender: function(component, eOpts) {
        /*    
        Ext.ComponentQuery.query('#grdRefund')[0].on('validateedit', function(editor, e) {


        var index=e.rowIdx;
        console.log("Index>>>",index);
        console.log('new Data added???',editor.context.newValues.FiscalYear);

        console.log('editor added???',editor.context.store.data.items);


        console.log('no of rows@@@',e.store.data.items.length);

        var items=editor.context.newValues.FiscalYear;
        //var itm=editor.context.store.data.items;
        var itm=e.store.data.items;

        for(var i=0;i<itm.length;i++)
        {
            if(i!=index)
            {
                var fiscalYear=itm[i].data.FiscalYear;

                if(items==fiscalYear)
                {
                    msg("WARNING","Data Already Exit");
                    console.log('datas@@@',fiscalYear);
                    break;
                }

            }
        }

    });
    */

    //----------

    var btnAddRefund=Ext.ComponentQuery.query('#btnAddRefund')[0];

    Ext.ComponentQuery.query('#grdRefund')[0].on('validateedit', function(editor, e) {
        console.log('e>>',e);

        var index=e.rowIdx; 
        // var max = Ext.ComponentQuery.query('#grdAppModuleUv')[0].getSelectionModel().getSelection()[0].data.LevelOfVerification;
        var fiscalYear= editor.context.newValues.FiscalYear;
        var items=e.store.data.items;
        var count=0;
        var message="";
        var valid=true;
        if(fiscalYear==="" || fiscalYear==="  select ...")
        {
            count++;
            message=message+count+") "+"Fiscal Year is required. <br/>" ;       
        }
        else
        {
            for(var i=0; i<items.length;i++)
            {
                if(i!=index)
                {      
                    var uid=items[i].data.FiscalYear;
                    if(fiscalYear==uid)
                    {
                        count++;
                        message=message+count+") "+"Fiscal Year Already Exists. <br/>" ;
                        break;
                    }
                }


            }
        }


        if(isNaN(editor.context.newValues.FiscalYear) || Number(editor.context.newValues.FiscalYear)===0)
        {
            count++;
            message=message+count+") "+"Fiscal Year छान्नुहोस् !!! <br/>" ;
            btnAddRefund.disable(true);
        }


        if(isNaN(editor.context.newValues.CreditAmount)|| Number(editor.context.newValues.CreditAmount)===0)
        {
            valid = false;


            count++;
            message=message+count+") "+"Credit Amount भर्नुहोस् !!! <br/>" ;
            btnAddRefund.disable(true);
        }

        if(isNaN(editor.context.newValues.ClaimAmount)|| Number(editor.context.newValues.ClaimAmount)===0)
        {
            valid = false;


            count++;
            message=message+count+") "+"Claim Amount भर्नुहोस् !!! <br/>" ;
            btnAddRefund.disable(true);
        }

        if(Number(editor.context.newValues.ClaimAmount)>Number(editor.context.newValues.CreditAmount))
        {
            count++;
            message=message+count+") "+" 'Credit Amount' भन्दा 'Claim Amount' कम हुन्छ !!!<br/>" ;
        }


        else
        {
            btnAddRefund.enable(true);
        }






        e.cancel = count>0;
        if(e.cancel)
        {
            Ext.MessageBox.alert('Warning',message);
        }




    });

    },

    onPanelAfterRender: function(component, eOpts) {

        Ext.ComponentQuery.query('#txtAcctTypeRefund')[0].setValue('10');

        var offCode = Ext.get('offCode').dom.innerHTML;
        //alert(offCode);
        Ext.ComponentQuery.query('#txtOfficeCodeRefund')[0].setValue(offCode);

        Ext.ComponentQuery.query('#txtTradeNameRefund')[0].setReadOnly(true);
        Ext.ComponentQuery.query('#txtRefReqNo')[0].disable(true);




        Ext.ComponentQuery.query('#lblMessage')[0].setText('');
        Ext.ComponentQuery.query('#imgUpdate')[0].hide(true);

        Ext.ComponentQuery.query('#btnPrintRefund')[0].disable(true);
        Ext.ComponentQuery.query('#btnVerifyRefund')[0].disable(true);



    }

});