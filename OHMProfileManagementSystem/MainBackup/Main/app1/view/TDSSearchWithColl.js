/*
 * File: app/view/TDSSearchWithColl.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.TDSSearchWithColl', {
    extend: 'Ext.panel.Panel',

    frame: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    height: 277,
                    id: 'frmSWCTDSform',
                    itemId: 'frmSWCTDSform',
                    margin: '50 0 0 300',
                    width: 444,
                    bodyPadding: 10,
                    title: 'Search Withholder TDS Collection',
                    items: [
                        {
                            xtype: 'container',
                            margin: '0 0 0 30',
                            items: [
                                {
                                    xtype: 'combobox',
                                    id: 'cboSWCTDSIro',
                                    itemId: 'cboSWCTDSIro',
                                    width: 350,
                                    fieldLabel: 'IRO',
                                    labelWidth: 150,
                                    emptyText: '--------Select IRO---------',
                                    editable: false,
                                    displayField: 'OfficeNameEnglish',
                                    store: 'IROName',
                                    valueField: 'OfficeCode'
                                },
                                {
                                    xtype: 'textfield',
                                    id: 'txtSWCTDSWithPan',
                                    itemId: 'txtSWCTDSWithPan',
                                    fieldLabel: 'Withholder Pan',
                                    labelWidth: 150,
                                    allowBlank: false
                                },
                                {
                                    xtype: 'combobox',
                                    id: 'cboSWCTDSDateType',
                                    itemId: 'cboSWCTDSDateType',
                                    maxWidth: 350,
                                    width: 218,
                                    fieldLabel: 'Date Type',
                                    labelWidth: 150,
                                    editable: false,
                                    displayField: 'Type',
                                    queryMode: 'local',
                                    store: 'TDSDateType',
                                    valueField: 'Type'
                                },
                                {
                                    xtype: 'radiofield',
                                    id: 'rdSWCTDSSelDate',
                                    itemId: 'rdSWCTDSSelDate',
                                    boxLabel: 'Selection Date',
                                    checked: true
                                },
                                {
                                    xtype: 'textfield',
                                    validator: function(value) {
                                        var errDate = "";

                                        errDate = validateNepDate(value);

                                        return errDate === ""?true:errDate;
                                    },
                                    id: 'txtSWCTDSFromDate',
                                    itemId: 'txtSWCTDSFromDate',
                                    width: 250,
                                    fieldLabel: 'From Date',
                                    labelWidth: 150,
                                    allowBlank: false,
                                    emptyText: 'YYYY-MM-DD',
                                    enforceMaxLength: true,
                                    maxLength: 10,
                                    minLength: 10,
                                    listeners: {
                                        blur: {
                                            fn: me.onTxtSWCTDSFromDateBlur,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    validator: function(value) {
                                        var errDate = "";

                                        errDate = validateNepDate(value);

                                        return errDate === ""?true:errDate;
                                    },
                                    id: 'txtSWCTDSToDate',
                                    itemId: 'txtSWCTDSToDate',
                                    width: 250,
                                    fieldLabel: 'To Date',
                                    labelWidth: 150,
                                    allowBlank: false,
                                    emptyText: 'YYYY-MM-DD',
                                    enforceMaxLength: true,
                                    maxLength: 10,
                                    minLength: 10,
                                    listeners: {
                                        blur: {
                                            fn: me.onTxtSWCTDSToDateBlur,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'radiofield',
                                    id: 'rdSWCTDSAllRec',
                                    itemId: 'rdSWCTDSAllRec',
                                    boxLabel: 'All Records'
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            margin: '0 0 0 185',
                            items: [
                                {
                                    xtype: 'button',
                                    id: 'btnSWCTDSSearch',
                                    itemId: 'btnSWCTDSSearch',
                                    width: 58,
                                    text: 'Search'
                                },
                                {
                                    xtype: 'button',
                                    id: 'btnSWCTDSReset',
                                    itemId: 'btnSWCTDSReset',
                                    width: 54,
                                    text: 'Reset'
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onTxtSWCTDSFromDateBlur: function(component, e, eOpts) {
        field.validate();
    },

    onTxtSWCTDSToDateBlur: function(component, e, eOpts) {
        field.validate();
    }

});