/*
 * File: app/controller/ReceiptPayments.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.ReceiptPayments', {
    extend: 'Ext.app.Controller',

    stores: [
        'PaymentTypeStore',
        'OfficeBankInfo',
        'RevenueAccountStore'
    ],

    onPnlReceiptPaymentsAfterRender: function(component, eOpts) {
        var me=this;
        var txtAcctType=Ext.ComponentQuery.query("#txtAcctTypeRP")[0];
        var txtSeqNo=Ext.ComponentQuery.query("#txtSeqNoRP")[0];
        txtAcctType.setValue('00');
        //txtSeqNo.setValue('1');

        var offCode= Ext.get('offCode').dom.innerHTML;
        var txtOffCode = Ext.ComponentQuery.query("#txtOfficeCodeRP")[0];

        var storePT = Ext.getStore('PaymentTypeStore');
        storePT.load();

        var storeRAN = Ext.getStore('RevenueAccountStore');
        storeRAN.load();
        //alert(offCode);
        var storeOB = Ext.getStore('OfficeBankInfo');
        storeOB.load({
            url: '../Handlers/Common/OfficeBankInfoHandler.ashx?method=GetOfficeBankInfo',
            params:{officeCode:offCode}

        });

        var objParam = Ext.ComponentQuery.query('#pnlReceiptPayments')[0].extraParam;
        //console.log("render",objParam);
        if (!objParam)
        {

            txtOffCode.setValue(offCode);
            // me.LoadUserOffice();
            me.ReadOnlyControls("p");
            me.ClearControls();
            return;
        }
        else if(objParam.params.from === "MV")
        {
            me.LoadReceiptPaymentsWithTranNo();
            me.ReadOnlyControls("t");
        }

        else if(objParam.params.from === "AU"  )
        {

            if(objParam.params.auAction === "A")
            {

                me.LoadPostedReceiptPayments();

            }
            else if(objParam.params.auAction === "E" || objParam.params.auAction === "V")
            {
                if( objParam.params.auAction === "V")
                {
                    me.ReadOnlyControls("t");
                }
                me.LoadReceiptPaymentsAU();

            }
            me.ReadOnlyControls("au");
        }
    },

    onTxtPanRPKeypress: function(textfield, e, eOpts) {
        /*if(e.keyCode === 13)
        {
        var txtPan = Ext.ComponentQuery.query("#txtPanRP")[0];
        //console.log(txtPan.maxLength);

        var pan=txtPan.getValue();

        //console.log(pan.length);

        var panLength=pan.length;

        var maxLen=txtPan.maxLength;

        if(panLength<maxLen || panLength>maxLen)
        {
            msg("WARNING","कृपया स्था.ले.नं. नौ अंकको हाल्नुहोस् !");
            return;
        }
        else
        {
            this.LoadValidatePan();
        }

    }*/
    },

    onCboBankCodeRPChange: function(field, newValue, oldValue, eOpts) {
        var txtOffCode=Ext.ComponentQuery.query("#txtOfficeCodeRP")[0];
        var offCode= txtOffCode.getValue();
        var txtBranchCode=Ext.ComponentQuery.query("#txtBranchCodeRP")[0];

        //var storeOB = Ext.getStore('OfficeBankInfo');

        //console.log("new",newValue);

        var BankBrachCode="";
        var brCode="";
        if(newValue)
        {
            BankBrachCode=newValue;
            brCode=BankBrachCode.split(',')[1];
            txtBranchCode.setValue(brCode);
        }

        //var bankBranchName=field.rawValue;
        //console.log("BBN",bankBranchName);
    },

    onCboPaymentTypeRPChange: function(field, newValue, oldValue, eOpts) {
        //console.log("newV",newValue);
        var txtVoucherNo=Ext.ComponentQuery.query("#txtVoucherNoRP")[0];
        var cboBankCode=Ext.ComponentQuery.query("#cboBankCodeRP")[0];
        var txtBranchCode=Ext.ComponentQuery.query("#txtBranchCodeRP")[0];
        var cboRevenueAcctNo=Ext.ComponentQuery.query("#cboRevenueAcctNoRP")[0];

        var label=Ext.ComponentQuery.query("#lbl")[0];


        if(newValue === "TP")
        {
            label.setText("भौचर नं.");
            label.disable(true);
            txtVoucherNo.disable(true);
            cboBankCode.disable(true);
            txtBranchCode.disable(true);
            cboRevenueAcctNo.disable(true);
            txtVoucherNo.reset();
            cboBankCode.reset();
            txtBranchCode.reset();
            cboRevenueAcctNo.reset();
        }
        else if(newValue ==="CS")
        {
            label.setText("रसिद नं.");
            label.enable(true);
            txtVoucherNo.enable(true);
            cboBankCode.disable(false);
            txtBranchCode.disable(false);
            cboRevenueAcctNo.disable(false);
            txtVoucherNo.reset();
            cboBankCode.reset();
            txtBranchCode.reset();
            cboRevenueAcctNo.reset();

        }
        else
        {
            label.setText("भौचर नं.");
            label.enable(true);
            txtVoucherNo.enable(true);
            cboBankCode.enable(true);
            txtBranchCode.enable(true);
            cboRevenueAcctNo.enable(true);
        }
    },

    onBtnSaveRPClick: function(button, e, eOpts) {
        var me=this;

        var txtPan=Ext.ComponentQuery.query("#txtPanRP")[0];
        var txtAcctType=Ext.ComponentQuery.query("#txtAcctTypeRP")[0];
        var txtReceiptDate=Ext.ComponentQuery.query("#txtReceiptDateRP")[0];
        var txtSeqNo=Ext.ComponentQuery.query("#txtSeqNoRP")[0];

        var pan=txtPan.getValue();
        var acctType=txtAcctType.getValue();
        var receiptDate=txtReceiptDate.getValue();
        var seqNo=txtSeqNo.getValue();

        var cboPaymentType=Ext.ComponentQuery.query("#cboPaymentTypeRP")[0].getValue();
        var txtRemarks=Ext.ComponentQuery.query("#txtRemarksRP")[0].getValue();

        var errMsg="";
        var errCount=0;


        if(!pan)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया स्था.ले.नं. हाल्नुहोस् !<br/>";
            txtPan.focus();
        }
        if(!acctType)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया खाता किसिम हाल्नुहोस् !<br/>";

        }
        if(!receiptDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया receipt मिति  हाल्नुहोस् !<br/>";
            txtReceiptDate.focus();
        }
        if(cboPaymentType === "TP" && txtRemarks === "") 
        {
            msg("WARNING","क्रपया  कैफियत लेख्नुहोस् !");
            return;
        }
        /*if(!seqNo)
        {
        errCount++;
        errMsg +=errCount+") "+"कृपया सिं. नं. हाल्नुहोस् !<br/>";
        }
        */

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }
        var objParam = Ext.ComponentQuery.query('#pnlReceiptPayments')[0].extraParam;
        if(!objParam)
        {
            me.SaveReceiptPayments("I");
            me.ClearControls();
            me.ReadOnlyControls("p");
        }
        else if(objParam.params.from === "AU")
        {
            me.SaveReceiptPaymentsAU("I","E");
            me.ReadOnlyControls("au");
        }



    },

    onBtnEditRPClick: function(button, e, eOpts) {
        var me=this;
        me.ClearControls("e");

        var lblAction= Ext.ComponentQuery.query("#lblActionRP")[0];
        var hdnAction = Ext.ComponentQuery.query('#hdnActionRP')[0];

        var txtPan=Ext.ComponentQuery.query("#txtPanRP")[0];
        var txtAcctType=Ext.ComponentQuery.query("#txtAcctTypeRP")[0];
        var txtReceiptDate=Ext.ComponentQuery.query("#txtReceiptDateRP")[0];
        var txtSeqNo=Ext.ComponentQuery.query("#txtSeqNoRP")[0];

        var pan=txtPan.getValue();
        var acctType=txtAcctType.getValue();
        var receiptDate=txtReceiptDate.getValue();
        var seqNo=txtSeqNo.getValue();

        var btnSave = Ext.ComponentQuery.query('#btnSaveRP')[0];
        var btnEdit = Ext.ComponentQuery.query('#btnEditRP')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteRP')[0];

        btnSave.enable(true);
        btnEdit.disable(true);
        btnDelete.disable(true);

        //txtSeqNo.setValue("");

        hdnAction.setValue("E");
        lblAction.setValue("Updating ...............");

        lblAction.setVisible(true);


        var errMsg="";
        var errCount=0;

        if(!pan)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया स्था.ले.नं. हाल्नुहोस् !<br/>";
            txtPan.focus();
        }
        if(!acctType)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया खाता किसिम हाल्नुहोस् !<br/>";

        }
        if(!receiptDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया receipt मिति  हाल्नुहोस् !<br/>";
            txtReceiptDate.focus();
        }
        if(!seqNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया सिं. नं. हाल्नुहोस् !<br/>";
            txtSeqNo.focus();
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }
    },

    onBtnDeleteRPClick: function(button, e, eOpts) {
        var me=this;
        me.ClearControls("e");

        var lblAction= Ext.ComponentQuery.query("#lblActionRP")[0];
        var hdnAction = Ext.ComponentQuery.query('#hdnActionRP')[0];

        var txtPan=Ext.ComponentQuery.query("#txtPanRP")[0];
        var txtAcctType=Ext.ComponentQuery.query("#txtAcctTypeRP")[0];
        var txtReceiptDate=Ext.ComponentQuery.query("#txtReceiptDateRP")[0];
        var txtSeqNo=Ext.ComponentQuery.query("#txtSeqNoRP")[0];

        var pan=txtPan.getValue();
        var acctType=txtAcctType.getValue();
        var receiptDate=txtReceiptDate.getValue();
        var seqNo=txtSeqNo.getValue();

        var btnSave = Ext.ComponentQuery.query('#btnSaveRP')[0];
        var btnEdit = Ext.ComponentQuery.query('#btnEditRP')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteRP')[0];

        btnSave.disable(true);
        btnEdit.disable(true);
        btnDelete.disable(true);

        //txtSeqNo.setValue("");

        hdnAction.setValue("D");
        lblAction.setValue("Deleting ...............");

        lblAction.setVisible(true);


        var errMsg="";
        var errCount=0;

        if(!pan)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया स्था.ले.नं. हाल्नुहोस् !<br/>";
            txtPan.focus();
        }
        if(!acctType)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया खाता किसिम हाल्नुहोस् !<br/>";

        }
        if(!receiptDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया receipt मिति  हाल्नुहोस् !<br/>";
            txtReceiptDate.focus();
        }
        if(!seqNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया सिं. नं. हाल्नुहोस् !<br/>";
            txtSeqNo.focus();
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }
    },

    onBtnSubmitRPClick: function(button, e, eOpts) {
        var me = this;
        var action = Ext.ComponentQuery.query('#hdnActionRP')[0];
        var txtPan=Ext.ComponentQuery.query("#txtPanRP")[0];
        var txtAcctType=Ext.ComponentQuery.query("#txtAcctTypeRP")[0];
        var txtReceiptDate=Ext.ComponentQuery.query("#txtReceiptDateRP")[0];
        var txtSeqNo=Ext.ComponentQuery.query("#txtSeqNoRP")[0];

        var pan=txtPan.getValue();
        var acctType=txtAcctType.getValue();
        var receiptDate=txtReceiptDate.getValue();
        var seqNo=txtSeqNo.getValue();

        var cboPaymentType=Ext.ComponentQuery.query("#cboPaymentTypeRP")[0].getValue();
        var txtRemarks=Ext.ComponentQuery.query("#txtRemarksRP")[0].getValue();

        var errMsg="";
        var errCount=0;

        if(!pan)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया स्था.ले.नं. हाल्नुहोस् !<br/>";
            txtPan.focus();
        }
        if(!acctType)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया खाता किसिम हाल्नुहोस् !<br/>";

        }
        if(!receiptDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया receipt मिति  हाल्नुहोस् !<br/>";
            txtReceiptDate.focus();
        }

        if(cboPaymentType === "TP" && txtRemarks === "") 
        {
            msg("WARNING","क्रपया  कैफियत लेख्नुहोस् !");
            return;
        }
        /*if(!seqNo)
        {
        errCount++;
        errMsg +=errCount+") "+"कृपया सिं. नं. हाल्नुहोस् !<br/>";
        }*/

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }


        var objParam = Ext.ComponentQuery.query('#pnlReceiptPayments')[0].extraParam;
        //console.log("param",objParam);
        if(!objParam)
        {
            if(action.lastValue === "D")
            {  
                Ext.Msg.confirm('Confirm', 'के तपाई साचै नै डाटा DELETE गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.SaveReceiptPayments("D");
                        me.ClearControls();
                        me.ReadOnlyControls("p");
                        return true;
                    }
                }, this);


            }
            else
            {
                Ext.Msg.confirm('Confirm', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.SaveReceiptPayments("F");
                        me.ClearControls();
                        me.ReadOnlyControls("p");

                        return true;
                    }
                }, this);


            }

        }
        else if(objParam.params.from === "AU")
        {

            if(action.lastValue === "D")
            {  
                Ext.Msg.confirm('Confirm', 'के तपाई साचै नै डाटा DELETE गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.SaveReceiptPaymentsAU("D","D");
                        return true;
                    }
                }, this);


            }
            else
            {
                Ext.Msg.confirm('Confirm', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
                    if(btn == 'yes'){

                        me.SaveReceiptPaymentsAU("F","E");
                        me.ClearControls("");
                        me.ReadOnlyControls("au");
                        return true;
                    }
                }, this);


            }
        }

    },

    onBtnCancelRPClick: function(button, e, eOpts) {
        this.ClearControls();
        this.ReadOnlyControls("p");
    },

    onTxtSeqNoRPKeypress: function(textfield, e, eOpts) {
        /*if(e.keyCode === 13)
        {
        this.LoadReceiptPayments();

        }*/
    },

    onTxtReceiptDateRPBlur: function(component, e, eOpts) {
        /*
        var errDate = "";

        errDate = validateFutureDate(field.getValue(),"Y");
        errDate = errDate === ""?validateFutureDate(field.getValue(),"Y"):errDate;
        //console.log(errDate);

        return errDate === ""?true:errDate;
        */

        return validateFutureDate(field.getValue(),"Y",function(){field.focus();});
    },

    onTxtPanRPBlur: function(component, e, eOpts) {
        /*var txtPan = Ext.ComponentQuery.query("#txtPanRP")[0];
        //console.log(txtPan.maxLength);

        var pan=txtPan.getValue();

        //console.log(pan.length);

        var panLength=pan.length;

        var maxLen=txtPan.maxLength;

        if(panLength<maxLen || panLength>maxLen)
        {
            msg("WARNING","कृपया स्था.ले.नं. नौ अंकको हाल्नुहोस् !");
            return;
        }
        else
        {
            this.LoadValidatePan();
        }*/
        this.LoadValidatePan();
    },

    onTxtSeqNoRPBlur: function(component, e, eOpts) {
        this.LoadReceiptPayments();
    },

    onBtnBackRPClick: function(button, e, eOpts) {
        var param=Ext.ComponentQuery.query('#pnlReceiptPayments')[0].extraParam;
        var tNo=param.tranNo;
        var idxM=param.indexM;
        var idxT=param.indexT;

        uiConfig = {menuLink:'ModuleVerification',pageTitle:'Module Verification'};
        DynamicUI(uiConfig,null,{tranNo:tNo,indexM:idxM,indexT:idxT });
    },

    onTxtRemarksRPKeypress: function(textfield, e, eOpts) {
        return unicodeKeyPress(textfield,e,eOpts);
    },

    onTxtRemarksRPKeyup: function(textfield, e, eOpts) {
        return unicodeKeyUp(textfield,e,eOpts);
    },

    onTxtRemarksRPChange: function(field, newValue, oldValue, eOpts) {
        return unicodeChange(field, newValue, oldValue, eOpts);

    },

    onTxtRemarksRPFocus: function(component, e, eOpts) {
        return unicodeFocus(field,eOpts);
    },

    LoadValidatePan: function() {
        var me =this;
        var txtPan = Ext.ComponentQuery.query("#txtPanRP")[0].getValue();
        var txtOffCode=Ext.ComponentQuery.query("#txtOfficeCodeRP")[0].getValue();
        var acctType=Ext.ComponentQuery.query("#txtAcctTypeRP")[0].getValue();

        var txtName = Ext.ComponentQuery.query("#txtTaxPayerNameRP")[0];
        var txtAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRP")[0];
        /*if(txtPan === "")
        {
        return;
        }


        ValidatePan(txtPan,function(data){
        console.log("data",data.root);

        });*/

        //var acctType="00";

        var flag = true;


        flag = LoadTaxpayerInfoWithValidPan(txtPan,acctType,function(data){

            //console.log("data",data);
            //console.log(data.root.Taxpayer);

            var taxpayer=data.root.Taxpayer;

            //  console.log(taxpayer.Office.OfficeCode);
            var offCode=taxpayer.Office.OfficeCode;
            if(offCode != txtOffCode)
            {

                msg("WARNING","Pan is not registered in this office !!!");
                return false;
            }
            var bAddress =taxpayer.BusinessAddress.Address;

            txtName.setValue(taxpayer.Name);
            var sn= bAddress.StreetName;
            var vt=bAddress.VdcTown;
            var wn=bAddress.WardNo;
            var dn=bAddress.DistrictNameNep;
            var svn=sn +"/" + vt;
            var addr=svn + "-" + wn + "," + dn;
            txtAddress.setValue(addr);
            me.ReadOnlyControls("");

        });

        if(flag === false)
        { 
            me.ReadOnlyControls("p");
            me.ClearControls("p");
        }
    },

    SaveReceiptPayments: function(rStatus) {
        var txtOffCode=Ext.ComponentQuery.query("#txtOfficeCodeRP")[0].getValue();
        var txtPan=Ext.ComponentQuery.query("#txtPanRP")[0].getValue();
        var txtAcctType=Ext.ComponentQuery.query("#txtAcctTypeRP")[0].getValue();
        var txtReceiptDate=Ext.ComponentQuery.query("#txtReceiptDateRP")[0].getValue();
        var txtSeqNo=Ext.ComponentQuery.query("#txtSeqNoRP")[0].getValue();
        var cboPaymentType=Ext.ComponentQuery.query("#cboPaymentTypeRP")[0].getValue();
        var txtVoucherNo=Ext.ComponentQuery.query("#txtVoucherNoRP")[0].getValue();
        var cboBankCode=Ext.ComponentQuery.query("#cboBankCodeRP")[0].getValue();
        var txtBranchCode=Ext.ComponentQuery.query("#txtBranchCodeRP")[0].getValue();
        var cboRevenueAcctNo=Ext.ComponentQuery.query("#cboRevenueAcctNoRP")[0].getValue();
        var txtAmount=Ext.ComponentQuery.query("#txtAmountRP")[0].getValue();
        var txtRemarks=Ext.ComponentQuery.query("#txtRemarksRP")[0].getValue();
        var hdnAction = Ext.ComponentQuery.query('#hdnActionRP')[0];
        var seqNo="";
        var bCode;
        if(hdnAction.lastValue === "E" || hdnAction.lastValue === "D")
        {
            seqNo = txtSeqNo;
        }
        else
        {
            seqNo="1";
        }
        /*if(cboPaymentType === "TP" && txtRemarks === "") 
        {
        msg("WARNING","क्रपया विवरण लेख्नुहोस् !");
        return;
        }
        else*/ if(cboPaymentType === "TP" || cboPaymentType === "CS") 
        {
            bCode = cboBankCode;

        }
        else 
        {
            bCode = cboBankCode.split(',')[0];
        }

        /*if(cboBankCode !== null)
        {
        bCode = cboBankCode.split(',')[0];

        }
        else
        {
        bCode = cboBankCode;  
        }*/

        //var bankCode=cboBankCode === ""?"":cboBankCode;
        var action = Ext.ComponentQuery.query('#hdnActionRP')[0].getValue();
        var tranNo = Ext.ComponentQuery.query('#hdnTranNoRP')[0].getValue() === ""?null:Ext.ComponentQuery.query('#hdnTranNoRP')[0].getValue();


        var RP="";

        RP={  
            'OffCode':txtOffCode,   
            'Pan':txtPan,
            'AcctType':txtAcctType,
            'ReceiptDate':txtReceiptDate,
            'SeqNo':seqNo,
            'PaymentTypeCode':cboPaymentType,
            'VoucherNo':txtVoucherNo,
            'BankCode':bCode,
            'BranchCode':txtBranchCode,
            'RevenueAcctNo':cboRevenueAcctNo,
            'Amount':txtAmount,
            'Remarks':txtRemarks,
            'BatchNo':"",
            'TranNo':tranNo,
            'TranDate':"",
            'UserID':"",
            'Rstatus':rStatus,
            'Action':action
        };
        //console.log("RP",RP);
        Ext.Ajax.request
        ({
            url:'../Handlers/VAT/ReceiptPayments/ReceiptPaymentsHandler.ashx?method=SaveReceiptPayments',
            params:{receiptPayments:JSON.stringify(RP)},
            success:function(result,request)
            {
                // var r=Ext.decode(result.request.options.params.receiptPayments);
                //console.log("r",r);
                // console.log("seq",r.SeqNo);
                // var seqNo=r.SeqNo;
                var obj = Ext.decode(result.responseText);

                var mmsg=obj.message;
                //console.log(mmsg);

                var len=mmsg.length;
                //console.log(len);
                var sNo="";
                var seqno="";
                var j=43;
                for(i=0;i<len-j;i++)
                {
                    sNo=mmsg.substr(len-i,i);
                }
                // console.log(sNo);
                if(seqNo == 1)
                {
                    seqno = sNo;
                }
                else
                {
                    seqno=seqNo;
                }

                if(rStatus === "F")
                {
                    if(action === "E")
                    {
                        msg("INFO",'Receipt Payments सफलतापुर्वक Submit भयो ।<br><B STYLE="COLOR:RED">कृपया सिं. नं. टिप्नुहोस् :'+ seqNo + '<\B>');
                        return;
                    }
                    msg("INFO",'Receipt Payments सफलतापुर्वक Submit भयो ।<br><B STYLE="COLOR:RED">'+ seqno + '<\B>');
                    return;
                }
                else
                {
                    if(action === "")
                    {
                        msg("INFO",'Receipt Payments सफलतापुर्वक Save भयो <br> <B STYLE = "COLOR:RED">' + seqno + '<\B>');
                    }
                    else
                    {
                        msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);
                    }
                }
            }
        });

    },

    ClearControls: function(txt) {
        var txtOffCode=Ext.ComponentQuery.query("#txtOfficeCodeRP")[0];
        var txtPan=Ext.ComponentQuery.query("#txtPanRP")[0];
        var txtAcctType=Ext.ComponentQuery.query("#txtAcctTypeRP")[0];
        var txtReceiptDate=Ext.ComponentQuery.query("#txtReceiptDateRP")[0];
        var txtSeqNo=Ext.ComponentQuery.query("#txtSeqNoRP")[0];
        var cboPaymentType=Ext.ComponentQuery.query("#cboPaymentTypeRP")[0];
        var txtVoucherNo=Ext.ComponentQuery.query("#txtVoucherNoRP")[0];
        var cboBankCode=Ext.ComponentQuery.query("#cboBankCodeRP")[0];
        var txtBranchCode=Ext.ComponentQuery.query("#txtBranchCodeRP")[0];
        var cboRevenueAcctNo=Ext.ComponentQuery.query("#cboRevenueAcctNoRP")[0];
        var txtAmount=Ext.ComponentQuery.query("#txtAmountRP")[0];
        var txtRemarks=Ext.ComponentQuery.query("#txtRemarksRP")[0];
        var lblAction=Ext.ComponentQuery.query("#lblActionRP")[0];

        var btnSave = Ext.ComponentQuery.query('#btnSaveRP')[0];
        var btnEdit = Ext.ComponentQuery.query('#btnEditRP')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteRP')[0];

        var hdnAction = Ext.ComponentQuery.query('#hdnActionRP')[0];

        var txtTaxPayerName = Ext.ComponentQuery.query("#txtTaxPayerNameRP")[0];
        var txtTaxPayerAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRP")[0];

        if(txt === "e")
        {
            //txtOffCod.reset();
            txtPan.reset();
            txtTaxPayerName.reset();
            txtTaxPayerAddress.reset();
            // txtAcctType.reset();
            txtReceiptDate.reset();
            // txtSeqNo.reset();
            cboPaymentType.reset();
            txtVoucherNo.reset();
            cboBankCode.reset();
            txtBranchCode.reset();
            cboRevenueAcctNo.reset();
            txtAmount.reset();
            txtRemarks.reset();
            lblAction.setVisible(true);
            txtSeqNo.enable(true);
            txtSeqNo.setReadOnly(false);
        }

        else if(txt === "p")
        {

            // txtAcctType.reset();
            txtReceiptDate.reset();
            // txtSeqNo.reset();
            cboPaymentType.reset();
            txtVoucherNo.reset();
            cboBankCode.reset();
            txtBranchCode.reset();
            cboRevenueAcctNo.reset();
            txtAmount.reset();
            txtRemarks.reset();
            lblAction.setVisible(true);
            btnSave.enable(true);
            txtSeqNo.enable(true);
            txtSeqNo.setReadOnly(false);
        }

        else if(txt === "N")
        {
            cboPaymentType.reset();
            txtVoucherNo.reset();
            cboBankCode.reset();
            txtBranchCode.reset();
            cboRevenueAcctNo.reset();
            txtAmount.reset();
            txtRemarks.reset();
            lblAction.setVisible(true);
            btnSave.enable(true);
            txtSeqNo.enable(true);
            txtSeqNo.setReadOnly(false);
        }

        else
        {

            txtPan.reset();
            txtTaxPayerName.reset();
            txtTaxPayerAddress.reset();
            // txtAcctType.reset();
            txtReceiptDate.reset();
            //txtSeqNo.setValue("1");
            txtSeqNo.reset();
            cboPaymentType.reset();
            txtVoucherNo.reset();
            cboBankCode.reset();
            txtBranchCode.reset();
            cboRevenueAcctNo.reset();
            txtAmount.reset();
            txtRemarks.reset();
            lblAction.setVisible(false);
            txtSeqNo.disable(true);
            txtSeqNo.setReadOnly(true);
            btnSave.enable(true);
            btnEdit.enable(true);
            btnDelete.enable(true);
            hdnAction.setValue("");
        }
    },

    LoadReceiptPayments: function() {
        var me = this;
        var txtPan=Ext.ComponentQuery.query("#txtPanRP")[0].getValue();
        var txtAcctType=Ext.ComponentQuery.query("#txtAcctTypeRP")[0].getValue();
        var txtReceiptDate=Ext.ComponentQuery.query("#txtReceiptDateRP")[0].getValue();
        var txtSeqNo=Ext.ComponentQuery.query("#txtSeqNoRP")[0].getValue();

        var errMsg="";
        var errCount=0;

        if(!txtPan)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया स्था.ले.नं. हाल्नुहोस् !<br/>";
        }
        if(!txtAcctType)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया खाता किसिम हाल्नुहोस् !<br/>";
        }
        if(!txtReceiptDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया receipt मिति  हाल्नुहोस् !<br/>";
        }
        if(!txtSeqNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया सिं. नं. हाल्नुहोस् !<br/>";
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }

        Ext.Ajax.request({
            url:'../Handlers/VAT/ReceiptPayments/ReceiptPaymentsHandler.ashx?method=GetReceiptPayments',
            params:{pan:txtPan, acctType:txtAcctType, seqNo:txtSeqNo, receiptDate:txtReceiptDate},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                /* if(obj.success === "false")
                {   
                msg("WARNING",obj.message);
                return;
                }*/
                if(obj.message === "F")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("N");
                    msg("WARNING","Receipt Payments पहिला नै FINALIZED भइसक्यो !");
                    return;
                }
                if(obj.message === "D")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("N");
                    msg("WARNING","Receipt Payments पहिला नै DELETED भइसक्यो !");
                    return;
                }
                if(obj.message === "V")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("N");
                    msg("WARNING","Receipt Payments पहिला नै VERIFIED भइसक्यो !");
                    return;
                }
                if(obj.message === "")
                {
                    me.ReadOnlyControls("");
                }


                var data = obj.root;
                // console.log('data',data);
                if(data === "")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("N");
                    msg("WARNING","Receipt Payments EXISTS छैन !");
                    return;
                }

                var txtOffCode=Ext.ComponentQuery.query("#txtOfficeCodeRP")[0];
                var cboPaymentType=Ext.ComponentQuery.query("#cboPaymentTypeRP")[0];
                var txtVoucherNo=Ext.ComponentQuery.query("#txtVoucherNoRP")[0];
                var cboBankCode=Ext.ComponentQuery.query("#cboBankCodeRP")[0];
                var txtBranchCode=Ext.ComponentQuery.query("#txtBranchCodeRP")[0];
                var cboRevenueAcctNo=Ext.ComponentQuery.query("#cboRevenueAcctNoRP")[0];
                var txtAmount=Ext.ComponentQuery.query("#txtAmountRP")[0];
                var txtRemarks=Ext.ComponentQuery.query("#txtRemarksRP")[0];

                var lblAction=Ext.ComponentQuery.query("#lblActionRP")[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionRP')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnTranNoRP')[0];

                var txtTaxPayerName = Ext.ComponentQuery.query("#txtTaxPayerNameRP")[0];
                var txtTaxPayerAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRP")[0];

                var taxpayer=data.TaxPayer;
                var bAddress =taxpayer.BusinessAddress.Address;
                // txtPan.setValue(data.Pan);
                txtTaxPayerName.setValue(taxpayer.Name);
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var wn=bAddress.WardNo;
                var dn=bAddress.DistrictNameNep;
                var svn=sn +"/" + vt;
                var addr=svn + "-" + wn + "," + dn;
                txtTaxPayerAddress.setValue(addr);

                txtOffCode.setValue(data.OffCode);   
                cboPaymentType.setValue(data.PaymentTypeCode);
                txtVoucherNo.setValue(data.VoucherNo);

                var bCode=data.BankCode;
                var brCode=data.BranchCode;
                var bankBrCode=bCode+","+brCode;
                //alert(bankBrCode);
                cboBankCode.setValue(bankBrCode);
                txtBranchCode.setValue(data.BranchCode);
                cboRevenueAcctNo.setValue(data.RevenueAcctNo);
                txtAmount.setValue(data.Amount);
                txtRemarks.setValue(data.Remarks);
                hdnTranNo.setValue(data.TranNo);

            },
            failure: function ( result, request ) {

                // wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    ReadOnlyControls: function(txt) {
        var txtOffCode=Ext.ComponentQuery.query("#txtOfficeCodeRP")[0];
        var txtPan=Ext.ComponentQuery.query("#txtPanRP")[0];
        var txtAcctType=Ext.ComponentQuery.query("#txtAcctTypeRP")[0];
        var txtReceiptDate=Ext.ComponentQuery.query("#txtReceiptDateRP")[0];
        var txtSeqNo=Ext.ComponentQuery.query("#txtSeqNoRP")[0];
        var cboPaymentType=Ext.ComponentQuery.query("#cboPaymentTypeRP")[0];
        var txtVoucherNo=Ext.ComponentQuery.query("#txtVoucherNoRP")[0];
        var cboBankCode=Ext.ComponentQuery.query("#cboBankCodeRP")[0];
        var txtBranchCode=Ext.ComponentQuery.query("#txtBranchCodeRP")[0];
        var cboRevenueAcctNo=Ext.ComponentQuery.query("#cboRevenueAcctNoRP")[0];
        var txtAmount=Ext.ComponentQuery.query("#txtAmountRP")[0];
        var txtRemarks=Ext.ComponentQuery.query("#txtRemarksRP")[0];
        var form=(Ext.ComponentQuery.query('#frmReceiptPayments')[0]).getForm();
        var fields = form.getFields();
        var fCntBack=Ext.ComponentQuery.query("#fCntBtnBackRP")[0];
        var fCntBtn=Ext.ComponentQuery.query("#fCntButtonRP")[0];

        var btnEdit = Ext.ComponentQuery.query('#btnEditRP')[0];
        var btnDelete = Ext.ComponentQuery.query('#btnDeleteRP')[0];
        var btnCancel = Ext.ComponentQuery.query('#btnCancelRP')[0];

        if(txt === "p")
        {
            /* //Convert All Fields To Read Only\r",

            Ext.each(fields.items, function (f) {
            f.inputEl.dom.disabled = true;
            });
            //End Converting Fields To Read Only\r",*/

            txtAcctType.setReadOnly(true);
            txtReceiptDate.setReadOnly(true);
            // txtSeqNo.setReadOnly(true);
            // txtSeqNo.disable(true);
            cboPaymentType.setReadOnly(true);
            txtVoucherNo.setReadOnly(true);
            cboBankCode.setReadOnly(true);
            txtBranchCode.setReadOnly(true);
            cboRevenueAcctNo.setReadOnly(true);
            txtAmount.setReadOnly(true);
            txtRemarks.setReadOnly(true);
            txtRemarks.disable(true);
        }
        else if(txt === "t")
        {
            //Convert All Fields To Read Only\r",

            Ext.each(fields.items, function (f) {
                f.inputEl.dom.disabled = true;
            });
            //End Converting Fields To Read Only\r",

            //txtAcctType.setReadOnly(true);
            //txtReceiptDate.setReadOnly(true);
            // txtSeqNo.setReadOnly(true);
            txtSeqNo.enable(true);
            cboPaymentType.setReadOnly(true);
            txtVoucherNo.setReadOnly(true);
            cboBankCode.setReadOnly(true);
            //txtBranchCode.setReadOnly(true);
            cboRevenueAcctNo.setReadOnly(true);
            //txtAmount.setReadOnly(true);
            txtRemarks.setReadOnly(true);
            //fCntBack.setVisible(true);
            fCntBtn.setVisible(false);
        }
        else if(txt === "au")
        {

            txtSeqNo.enable(true);
            txtSeqNo.setReadOnly(true);
            btnEdit.disable(true);
            btnDelete.disable(true);
            btnCancel.disable(true);

        }
        else if(txt === "N")
        {
            cboPaymentType.setReadOnly(true);
            txtVoucherNo.setReadOnly(true);
            cboBankCode.setReadOnly(true);
            txtBranchCode.setReadOnly(true);
            cboRevenueAcctNo.setReadOnly(true);
            txtAmount.setReadOnly(true);
            txtRemarks.setReadOnly(true);
        }
        else
        {
            /* 
            Ext.each(fields.items, function (f) {
            f.inputEl.dom.disabled = false;
            });*/

            txtAcctType.setReadOnly(true);
            txtReceiptDate.setReadOnly(false);
            // txtSeqNo.setReadOnly(true);
            //txtSeqNo.enable(true);
            cboPaymentType.setReadOnly(false);
            txtVoucherNo.setReadOnly(false);
            cboBankCode.setReadOnly(false);
            txtBranchCode.setReadOnly(true);
            cboRevenueAcctNo.setReadOnly(false);
            txtAmount.setReadOnly(false);
            txtRemarks.setReadOnly(false);
            txtRemarks.enable(true);
            fCntBtn.setVisible(true);


            // txtSeqNo.disable(true);
            btnEdit.enable(true);
            btnDelete.enable(true);
            btnCancel.enable(true);

        }
    },

    ValidationControls: function(txt) {
        var txtOffCode=Ext.ComponentQuery.query("#txtOfficeCodeRP")[0].getValue();
        var txtPan=Ext.ComponentQuery.query("#txtPanRP")[0].getValue();
        var txtAcctType=Ext.ComponentQuery.query("#txtAcctTypeRP")[0].getValue();
        var txtReceiptDate=Ext.ComponentQuery.query("#txtReceiptDateRP")[0].getValue();
        var txtSeqNo=Ext.ComponentQuery.query("#txtSeqNoRP")[0].getValue();
        var cboPaymentType=Ext.ComponentQuery.query("#cboPaymentTypeRP")[0].getValue();

        var errMsg="";
        var errCount=0;

        if(!txtOffCode)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया कार्यलय कोड हाल्नुहोस् !<br/>";

        }
        if(!txtPan)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया स्था.ले.नं. हाल्नुहोस् !<br/>";

        }
        if(!txtAcctType)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया खाता किसिम हाल्नुहोस् !<br/>";

        }
        if(!txtReceiptDate)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया receipt मिति हाल्नुहोस्!<br/>";


        }
        if(!txtSeqNo)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया सिं नं. हाल्नुहोस् !<br/>";
        }
        if(!cboPaymentType)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया payment किसिम हाल्नुहोस् !<br/>";
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }
    },

    LoadUserOffice: function() {
        var txtOffCode=Ext.ComponentQuery.query("#txtOfficeCodeRP")[0];

        Ext.Ajax.request({
            url:"../Handlers/Security/OfficeUserHandler.ashx?method=GetUserOffice",
            params:{},
            success: function ( result, request ) {            


                var obj = Ext.decode(result.responseText);  
                // console.log(obj.root.OfficeCode);
                var data=obj.root;
                var offCode=data.OfficeCode;

                txtOffCode.setValue(offCode);

                var storeOB = Ext.getStore('OfficeBankInfo');
                storeOB.load({
                    url:"../HANDLERS/Common/OfficeBankInfoHandler.ashx?method=GetOfficeBankInfo",
                    method:'POST',
                    params: {
                        officeCode:offCode
                    }
                });

            },
            failure: function ( result, request ) {


                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    LoadReceiptPaymentsWithTranNo: function() {
        var me = this;
        var objParam = Ext.ComponentQuery.query('#pnlReceiptPayments')[0].extraParam;
        //console.log(objParam);
        var tranNo=objParam.params.tranNo;
        //alert(tranNo);

        Ext.Ajax.request({
            url:'../Handlers/VAT/ReceiptPayments/ReceiptPaymentsHandler.ashx?method=GetReceiptPaymentsWithTranNo',
            params:{tranNo:tranNo},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }

                var data = obj.root;
                if(data === "")
                {
                    msg("WARNING","डाटा भेटाऊन सकेन !");
                    return;
                }


                var txtOffCode=Ext.ComponentQuery.query("#txtOfficeCodeRP")[0];
                var txtPan=Ext.ComponentQuery.query("#txtPanRP")[0];
                var txtAcctType=Ext.ComponentQuery.query("#txtAcctTypeRP")[0];
                var txtReceiptDate=Ext.ComponentQuery.query("#txtReceiptDateRP")[0];
                var txtSeqNo=Ext.ComponentQuery.query("#txtSeqNoRP")[0];
                var cboPaymentType=Ext.ComponentQuery.query("#cboPaymentTypeRP")[0];
                var txtVoucherNo=Ext.ComponentQuery.query("#txtVoucherNoRP")[0];
                var cboBankCode=Ext.ComponentQuery.query("#cboBankCodeRP")[0];
                var txtBranchCode=Ext.ComponentQuery.query("#txtBranchCodeRP")[0];
                var cboRevenueAcctNo=Ext.ComponentQuery.query("#cboRevenueAcctNoRP")[0];
                var txtAmount=Ext.ComponentQuery.query("#txtAmountRP")[0];
                var txtRemarks=Ext.ComponentQuery.query("#txtRemarksRP")[0];

                var lblAction=Ext.ComponentQuery.query("#lblActionRP")[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionRP')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnTranNoRP')[0];

                var txtTaxPayerName = Ext.ComponentQuery.query("#txtTaxPayerNameRP")[0];
                var txtTaxPayerAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRP")[0];

                var taxpayer=data.TaxPayer;
                var bAddress =taxpayer.BusinessAddress.Address;
                txtPan.setValue(data.Pan);
                txtTaxPayerName.setValue(taxpayer.Name);
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var wn=bAddress.WardNo;
                var dn=bAddress.DistrictNameNep;
                var svn=sn +"/" + vt;
                var addr=svn + "-" + wn + "," + dn;
                txtTaxPayerAddress.setValue(addr);

                txtOffCode.setValue(data.OffCode);   
                // txtPan.setValue(data.Pan);
                txtAcctType.setValue(data.AcctType);
                txtReceiptDate.setValue(data.ReceiptDate);
                txtSeqNo.setValue(data.SeqNo);
                cboPaymentType.setValue(data.PaymentTypeCode);
                txtVoucherNo.setValue(data.VoucherNo);

                var bCode=data.BankCode;
                var brCode=data.BranchCode;
                var bankBrCode=bCode+","+brCode;
                // alert(bankBrCode);
                cboBankCode.setValue(bankBrCode);
                txtBranchCode.setValue(data.BranchCode);
                cboRevenueAcctNo.setValue(data.RevenueAcctNo);
                txtAmount.setValue(data.Amount);
                txtRemarks.setValue(data.Remarks);
                hdnTranNo.setValue(data.TranNo);

            },
            failure: function ( result, request ) {

                // wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    LoadPostedReceiptPayments: function() {
        var me=this;
        var objParam = Ext.ComponentQuery.query('#pnlReceiptPayments')[0].extraParam;
        //console.log("op",objParam);

        var offCodeAU = objParam.params.offCode;
        var requestNo = objParam.params.requestNo;
        var pan = objParam.params.pks[0].data.Value;
        var acctType = objParam.params.pks[1].data.Value;
        var seqNo = objParam.params.pks[2].data.Value;
        var recDate = objParam.params.pks[3].data.Value;
        Ext.Ajax.request({
            url:'../Handlers/VAT/ReceiptPayments/ReceiptPaymentsHandler.ashx?method=GetPostedReceiptPayments',
            params:{offCodeAU:offCodeAU,requestNo:requestNo,pan:pan, acctType:acctType, seqNo:seqNo, receiptDate:recDate},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                /*
                if(obj.message === "F")
                {
                me.ClearControls("N");
                me.ReadOnlyControls("N");
                msg("WARNING","Receipt Payments पहिला नै FINALIZED भइसक्यो !");
                return;
                }
                if(obj.message === "D")
                {
                me.ClearControls("N");
                me.ReadOnlyControls("N");
                msg("WARNING","Receipt Payments पहिला नै DELETED भइसक्यो !");
                return;
                }
                if(obj.message === "V")
                {
                me.ClearControls("N");
                me.ReadOnlyControls("N");
                msg("WARNING","Receipt Payments पहिला नै VERIFIED भइसक्यो !");
                return;
                }
                if(obj.message === "")
                {
                me.ReadOnlyControls("");
                }
                */
                var data = obj.root;
                // console.log('data',data);
                if(data === "")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("N");
                    msg("WARNING","Receipt Payments EXISTS छैन !");
                    return;
                }

                var txtOffCode=Ext.ComponentQuery.query("#txtOfficeCodeRP")[0];
                var txtPan=Ext.ComponentQuery.query("#txtPanRP")[0];
                var txtAcctType=Ext.ComponentQuery.query("#txtAcctTypeRP")[0];
                var txtReceiptDate=Ext.ComponentQuery.query("#txtReceiptDateRP")[0];
                var txtSeqNo=Ext.ComponentQuery.query("#txtSeqNoRP")[0];
                var cboPaymentType=Ext.ComponentQuery.query("#cboPaymentTypeRP")[0];
                var txtVoucherNo=Ext.ComponentQuery.query("#txtVoucherNoRP")[0];
                var cboBankCode=Ext.ComponentQuery.query("#cboBankCodeRP")[0];
                var txtBranchCode=Ext.ComponentQuery.query("#txtBranchCodeRP")[0];
                var cboRevenueAcctNo=Ext.ComponentQuery.query("#cboRevenueAcctNoRP")[0];
                var txtAmount=Ext.ComponentQuery.query("#txtAmountRP")[0];
                var txtRemarks=Ext.ComponentQuery.query("#txtRemarksRP")[0];

                var lblAction=Ext.ComponentQuery.query("#lblActionRP")[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionRP')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnTranNoRP')[0];

                var txtTaxPayerName = Ext.ComponentQuery.query("#txtTaxPayerNameRP")[0];
                var txtTaxPayerAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRP")[0];

                var taxpayer=data.TaxPayer;
                var bAddress =taxpayer.BusinessAddress.Address;
                txtPan.setValue(data.Pan);
                txtTaxPayerName.setValue(taxpayer.Name);
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var wn=bAddress.WardNo;
                var dn=bAddress.DistrictNameNep;
                var svn=sn +"/" + vt;
                var addr=svn + "-" + wn + "," + dn;
                txtTaxPayerAddress.setValue(addr);

                txtOffCode.setValue(data.OffCode); 
                //txtPan.setValue(data.Pan);
                txtAcctType.setValue(data.AcctType);
                txtSeqNo.setValue(data.SeqNo);
                txtReceiptDate.setValue(data.ReceiptDate);
                cboPaymentType.setValue(data.PaymentTypeCode);
                txtVoucherNo.setValue(data.VoucherNo);

                var bCode=data.BankCode;
                var brCode=data.BranchCode;
                var bankBrCode=bCode+","+brCode;
                //alert(bankBrCode);
                cboBankCode.setValue(bankBrCode);
                txtBranchCode.setValue(data.BranchCode);
                cboRevenueAcctNo.setValue(data.RevenueAcctNo);
                txtAmount.setValue(data.Amount);
                txtRemarks.setValue(data.Remarks);
                hdnTranNo.setValue(data.TranNo);

            },
            failure: function ( result, request ) {

                // wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    LoadReceiptPaymentsAU: function() {
        var me=this;
        var objParam = Ext.ComponentQuery.query('#pnlReceiptPayments')[0].extraParam;
        //console.log("op",objParam);

        var offCodeAU = objParam.params.offCode;
        var requestNo = objParam.params.requestNo;

        Ext.Ajax.request({
            url:'../Handlers/VAT/ReceiptPayments/ReceiptPaymentsHandler.ashx?method=GetReceiptPaymentsAU',
            params:{offCodeAU:offCodeAU,requestNo:requestNo},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                /*
                if(obj.message === "F")
                {
                me.ClearControls("N");
                me.ReadOnlyControls("N");
                msg("WARNING","Receipt Payments पहिला नै FINALIZED भइसक्यो !");
                return;
                }
                if(obj.message === "D")
                {
                me.ClearControls("N");
                me.ReadOnlyControls("N");
                msg("WARNING","Receipt Payments पहिला नै DELETED भइसक्यो !");
                return;
                }
                if(obj.message === "V")
                {
                me.ClearControls("N");
                me.ReadOnlyControls("N");
                msg("WARNING","Receipt Payments पहिला नै VERIFIED भइसक्यो !");
                return;
                }
                if(obj.message === "")
                {
                me.ReadOnlyControls("");
                }
                */
                var data = obj.root;
                // console.log('data',data);
                if(data === "")
                {
                    me.ClearControls("N");
                    me.ReadOnlyControls("N");
                    msg("WARNING","Receipt Payments EXISTS छैन !");
                    return;
                }

                var txtOffCode=Ext.ComponentQuery.query("#txtOfficeCodeRP")[0];
                var txtPan=Ext.ComponentQuery.query("#txtPanRP")[0];
                var txtAcctType=Ext.ComponentQuery.query("#txtAcctTypeRP")[0];
                var txtReceiptDate=Ext.ComponentQuery.query("#txtReceiptDateRP")[0];
                var txtSeqNo=Ext.ComponentQuery.query("#txtSeqNoRP")[0];
                var cboPaymentType=Ext.ComponentQuery.query("#cboPaymentTypeRP")[0];
                var txtVoucherNo=Ext.ComponentQuery.query("#txtVoucherNoRP")[0];
                var cboBankCode=Ext.ComponentQuery.query("#cboBankCodeRP")[0];
                var txtBranchCode=Ext.ComponentQuery.query("#txtBranchCodeRP")[0];
                var cboRevenueAcctNo=Ext.ComponentQuery.query("#cboRevenueAcctNoRP")[0];
                var txtAmount=Ext.ComponentQuery.query("#txtAmountRP")[0];
                var txtRemarks=Ext.ComponentQuery.query("#txtRemarksRP")[0];

                var lblAction=Ext.ComponentQuery.query("#lblActionRP")[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionRP')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnTranNoRP')[0];

                var txtTaxPayerName = Ext.ComponentQuery.query("#txtTaxPayerNameRP")[0];
                var txtTaxPayerAddress = Ext.ComponentQuery.query("#txtTaxPayerAddressRP")[0];

                var taxpayer=data.TaxPayer;
                var bAddress =taxpayer.BusinessAddress.Address;
                txtPan.setValue(data.Pan);
                txtTaxPayerName.setValue(taxpayer.Name);
                var sn= bAddress.StreetName;
                var vt=bAddress.VdcTown;
                var wn=bAddress.WardNo;
                var dn=bAddress.DistrictNameNep;
                var svn=sn +"/" + vt;
                var addr=svn + "-" + wn + "," + dn;
                txtTaxPayerAddress.setValue(addr);

                txtOffCode.setValue(data.OffCode); 
                //txtPan.setValue(data.Pan);
                txtAcctType.setValue(data.AcctType);
                txtSeqNo.setValue(data.SeqNo);
                txtReceiptDate.setValue(data.ReceiptDate);
                cboPaymentType.setValue(data.PaymentTypeCode);
                txtVoucherNo.setValue(data.VoucherNo);

                var bCode=data.BankCode;
                var brCode=data.BranchCode;
                var bankBrCode=bCode+","+brCode;
                //alert(bankBrCode);
                cboBankCode.setValue(bankBrCode);
                txtBranchCode.setValue(data.BranchCode);
                cboRevenueAcctNo.setValue(data.RevenueAcctNo);
                txtAmount.setValue(data.Amount);
                txtRemarks.setValue(data.Remarks);
                hdnTranNo.setValue(data.TranNo);

            },
            failure: function ( result, request ) {

                // wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    SaveReceiptPaymentsAU: function(rStatus,action) {
        var txtOffCode=Ext.ComponentQuery.query("#txtOfficeCodeRP")[0].getValue();
        var txtPan=Ext.ComponentQuery.query("#txtPanRP")[0].getValue();
        var txtAcctType=Ext.ComponentQuery.query("#txtAcctTypeRP")[0].getValue();
        var txtReceiptDate=Ext.ComponentQuery.query("#txtReceiptDateRP")[0].getValue();
        var txtSeqNo=Ext.ComponentQuery.query("#txtSeqNoRP")[0].getValue();
        var cboPaymentType=Ext.ComponentQuery.query("#cboPaymentTypeRP")[0].getValue();
        var txtVoucherNo=Ext.ComponentQuery.query("#txtVoucherNoRP")[0].getValue();
        var cboBankCode=Ext.ComponentQuery.query("#cboBankCodeRP")[0].getValue();
        var txtBranchCode=Ext.ComponentQuery.query("#txtBranchCodeRP")[0].getValue();
        var cboRevenueAcctNo=Ext.ComponentQuery.query("#cboRevenueAcctNoRP")[0].getValue();
        var txtAmount=Ext.ComponentQuery.query("#txtAmountRP")[0].getValue();
        var txtRemarks=Ext.ComponentQuery.query("#txtRemarksRP")[0].getValue();

        var objParam = Ext.ComponentQuery.query('#pnlReceiptPayments')[0].extraParam;
        //console.log("op",objParam);

        var offCodeAU = objParam.params.offCode;
        var requestNo = objParam.params.requestNo;
        var tranNo = objParam.params.tranNo;

        //var tranNo = Ext.ComponentQuery.query('#hdnTranNoRP')[0].getValue() === ""?null:Ext.ComponentQuery.query('#hdnTranNoRP')[0].getValue();


        var RP="";

        RP={ 
            'OffCodeAU':offCodeAU,
            'RequestNo':requestNo,
            'OffCode':txtOffCode,   
            'Pan':txtPan,
            'AcctType':txtAcctType,
            'ReceiptDate':txtReceiptDate,
            'SeqNo':txtSeqNo,
            'PaymentTypeCode':cboPaymentType,
            'VoucherNo':txtVoucherNo,
            'BankCode':txtBranchCode,
            'BranchCode':txtBranchCode,
            'RevenueAcctNo':cboRevenueAcctNo,
            'Amount':txtAmount,
            'Remarks':txtRemarks,
            'BatchNo':"",
            'TranNo':tranNo,
            'TranDate':"",
            'UserID':"",
            'Rstatus':rStatus,
            'Action':action
        };
        //console.log("RP",RP);
        Ext.Ajax.request
        ({
            url:'../Handlers/VAT/ReceiptPayments/ReceiptPaymentsHandler.ashx?method=SaveReceiptPaymentsAU',
            params:{receiptPayment:JSON.stringify(RP)},
            success:function(result,request)
            {

                var obj = Ext.decode(result.responseText);

                if(rStatus === "F")
                {

                    msg("INFO",'Receipt Payments सफलतापुर्वक Submit भयो ।');
                    return;
                }
                else
                {
                    if(action === "E")
                    {
                        msg("INFO",'Receipt Payments सफलतापुर्वक Save भयो ');
                    }
                    else
                    {
                        msg(obj.success === "true" ?"SUCCESS":"FAILURE",obj.message);
                    }
                }
            }
        });

    },

    init: function(application) {
        this.control({
            "#pnlReceiptPayments": {
                afterrender: this.onPnlReceiptPaymentsAfterRender
            },
            "#txtPanRP": {
                keypress: this.onTxtPanRPKeypress,
                blur: this.onTxtPanRPBlur
            },
            "#cboBankCodeRP": {
                change: this.onCboBankCodeRPChange
            },
            "#cboPaymentTypeRP": {
                change: this.onCboPaymentTypeRPChange
            },
            "#btnSaveRP": {
                click: this.onBtnSaveRPClick
            },
            "#btnEditRP": {
                click: this.onBtnEditRPClick
            },
            "#btnDeleteRP": {
                click: this.onBtnDeleteRPClick
            },
            "#btnSubmitRP": {
                click: this.onBtnSubmitRPClick
            },
            "#btnCancelRP": {
                click: this.onBtnCancelRPClick
            },
            "#txtSeqNoRP": {
                keypress: this.onTxtSeqNoRPKeypress,
                blur: this.onTxtSeqNoRPBlur
            },
            "#txtReceiptDateRP": {
                blur: this.onTxtReceiptDateRPBlur
            },
            "#btnBackRP": {
                click: this.onBtnBackRPClick
            },
            "#txtRemarksRP": {
                keypress: this.onTxtRemarksRPKeypress,
                keyup: this.onTxtRemarksRPKeyup,
                change: this.onTxtRemarksRPChange,
                focus: this.onTxtRemarksRPFocus
            }
        });
    }

});
