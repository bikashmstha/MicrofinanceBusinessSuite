/*
 * File: app/controller/TDSWithholdeeTran.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.TDSWithholdeeTran', {
    extend: 'Ext.app.Controller',

    models: [
        'TDSWithTran'
    ],
    stores: [
        'TDSWithTran'
    ],
    views: [
        'TDSWithholdeeTran'
    ],

    ShowWithholdeeTran: function(pan, type, fromDate, toDate, name) {
        Ext.getCmp('cntOMTDS').removeAll();

        var pnlDynamic = Ext.create('MyApp.view.TDSWithholdeeTran');
        var pnlToRender = Ext.ComponentQuery.query("#cntOMTDS")[0];
        pnlToRender.add(pnlDynamic);

        var dpfFrom = Ext.ComponentQuery.query("#dpfTDSWHTFrom")[0];
        var dpfTo = Ext.ComponentQuery.query("#dpfTDSWHTTo")[0];
        var dpfType = Ext.ComponentQuery.query("#dpfTDSWHTType")[0];
        var dpfPan = Ext.ComponentQuery.query("#dpfTDSWHTPan")[0];
        var dpfName = Ext.ComponentQuery.query("#dpfTDSWHTName")[0];

        dpfFrom.setValue(fromDate);
        dpfTo.setValue(toDate);
        dpfType.setValue(type);
        dpfPan.setValue(pan);
        dpfName.setValue(name);

        console.log("Pan",dpfPan.getValue());

        var param = {
            Pan:dpfPan.getValue(),
            DateType:dpfType.getValue(),
            FromDate:dpfFrom.getValue(),
            ToDate:dpfTo.getValue()
        };

        var store = Ext.getStore('TDSWithTran');

        store.load({
            params:{withHoldee:JSON.stringify(param)}
        });

        /*Ext.Ajax.request({
        url:"../Handlers/TDS/WithholdeeTranHandler.ashx?method=GetWithHoldeeTran",
        params:{withHoldee:JSON.stringify(param)},
        success: function ( result, request ){


        if(obj.success === "true")
        {
        msg("SUCCESS",obj.message);
        me.getController('MyApp.controller.TDSWithholdeeTran').ShowWithholdeeTran();
        }
        else if(obj.success === "false") 
        {
        msg("FAILURE",obj.message);
        return;
        }

        },

        failure: function ( result, request ){

        return;
        }

        });*/
    },

    ShowUserWithholdeeTran: function(pan, type, from, to, name) {
        Ext.getCmp('cntWLITDSDynamic').removeAll();

        var pnlDynamic = Ext.create('MyApp.view.TDSWithholdeeTran');
        var pnlToRender = Ext.ComponentQuery.query("#cntWLITDSDynamic")[0];
        pnlToRender.add(pnlDynamic);

        var dpfFrom = Ext.ComponentQuery.query("#dpfTDSWHTFrom")[0];
        var dpfTo = Ext.ComponentQuery.query("#dpfTDSWHTTo")[0];
        var dpfType = Ext.ComponentQuery.query("#dpfTDSWHTType")[0];
        var dpfPan = Ext.ComponentQuery.query("#dpfTDSWHTPan")[0];
        var dpfName = Ext.ComponentQuery.query("#dpfTDSWHTName")[0];

        dpfFrom.setValue(from);
        dpfTo.setValue(to);
        dpfType.setValue(type);
        dpfPan.setValue(pan);
        dpfName.setValue(name);

        var param = {
            Pan:dpfPan.getValue(),
            DateType:dpfType.getValue(),
            FromDate:dpfFrom.getValue(),
            ToDate:dpfTo.getValue()
        };

        var store = Ext.getStore('TDSWithTran');

        store.load({
            params:{withHoldee:JSON.stringify(param)}
        });
    }

});
