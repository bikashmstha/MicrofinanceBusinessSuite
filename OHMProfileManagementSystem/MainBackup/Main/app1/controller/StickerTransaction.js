/*
 * File: app/controller/StickerTransaction.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.StickerTransaction', {
    extend: 'Ext.app.Controller',

    stores: [
        'StickerType',
        'StickerTransactionDet',
        'AllowedLocationEASy',
        'LotTransferFrom',
        'UserLocationEASy',
        'StickerTransactionInOut'
    ],

    onPnlStickerTransactionAfterRender: function(component, eOpts) {
        //var storeLoc = Ext.getStore('LocationEASy');
        //storeLoc.load();
        var storeST = Ext.getStore('StickerType');
        storeST.load();
        var storeULoc = Ext.getStore('UserLocationEASy');
        storeULoc.load();

    },

    onCboTransferFromSTTChange: function(field, newValue, oldValue, eOpts) {
        var storeAL = Ext.getStore('AllowedLocationEASy');
        //storeAL.load();

        //console.log('value',newValue);
        storeAL.load({
            url:"../Handlers/Common/Excise/LocationHandler.ashx?method=GetAllowedLocations",
            method:'POST',
            params: {
                locID: newValue
            }
        });
        /*var combo=Ext.ComponentQuery.query('#cboTransferFromSTT')[0];
        storeAL.on('load', function (store, records, successful, options) {
        if (successful && Ext.typeOf(combo.getPicker().loadMask) !== "boolean")
        {
        combo.getPicker().loadMask.hide();
        }
        });*/
        Ext.override(Ext.LoadMask, {
            onHide: function() {
                this.callParent();
            }
        });
        //combobox.getPicker().setLoading(false);
        // Ext.getCmp("my_grid").getView().setLoading(false);
    },

    onCntSTTDetailsBeforeRender: function(component, eOpts) {
        var grid = Ext.ComponentQuery.query('#grdSTTDetails')[0];

        grid.columns[0].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";    


            var items=Ext.getStore('StickerType').data.items;


            for(var i=0;i<items.length;i++)
            {

                if(items[i].data.StickerID == value)
                {
                    temp=items[i].data.StickerDescription;
                    break;
                }        
            }


            return temp;
        };
    },

    onBtnAddSTTClick: function(button, e, eOpts) {
        var cboTransferFrom=Ext.ComponentQuery.query('#cboTransferFromSTT')[0];

        if(!cboTransferFrom.getValue())
        {
            msg("WARNING","कृपया लोकेसन छाल्नुहोस् !");
            return;
        }
        var grd = Ext.ComponentQuery.query('#grdSTTDetails')[0];
        var recc={ 

            StickerType:"",
            Lot:"",
            TransferNo:"",
            BoxNo:"",
            Prefix:"",
            StickerNoFrom:"",
            StickerNoTo:"",
            Action:"A"

        };
        grd.store.add(recc);

        var col = grd.headerCt.getHeaderAtIndex(0);
        var rec = grd.store.data.items;
        var record = rec[rec.length-1];
        grd.getPlugin('grdSTTplugin').startEdit(record, col);

    },

    onBtnOKSTTClick: function(button, e, eOpts) {
        var grd=Ext.ComponentQuery.query('#grdLotSTT')[0];
        var selectedLot=grd.getSelectionModel().getSelection()[0];

        if(!selectedLot)
        {
            msg('WARNING','Select Lot first!');
            return;
        }
        var win=Ext.getCmp('winSelectLot');
        var target=win.target;
        var index=win.index; 
        var selectedIndex= grd.getStore().indexOf(selectedLot);

        var store=Ext.getStore('StickerTransactionDet');

        var store1=Ext.getStore('LotTransferFrom');

        //console.log('target',target);
        target.setValue(store1.getAt(selectedIndex).data.TransferNo);
        var data=store.getAt(index).data;
        data.TransferNo=store1.getAt(selectedIndex).data.TransferNo;
        data.BoxNo=store1.getAt(selectedIndex).data.BoxNo;
        data.Prefix=store1.getAt(selectedIndex).data.Prefix;
        data.StickerNoFrom=store1.getAt(selectedIndex).data.StickerNoFrom;
        data.StickerNoTo=store1.getAt(selectedIndex).data.StickerNoTo;
        store.removeAt(index);
        store.insert(index,data);
        win.close();
    },

    onBtnSearchSTTClick: function(button, e, eOpts) {
        var txtSearch=Ext.ComponentQuery.query('#txtSearchSTT')[0].getValue();
        if(!txtSearch)
        {
            msg('WARNING',"क्रपया बक्स नं. हाल्नुहोस् !");
            return;  
        }
        var grd=Ext.ComponentQuery.query('#grdLotSTT')[0];

        grd.getStore().filter(function(item){

            return (item.data.BoxNo == txtSearch) ;
        });

    },

    onBtnSaveSTTClick: function(button, e, eOpts) {
        var me=this;
        var hdnAction = Ext.ComponentQuery.query('#hdnActionSTT')[0];
        var hdnAct = Ext.ComponentQuery.query('#hdnActSTT')[0];

        var cboTransferFrom=Ext.ComponentQuery.query('#cboTransferFromSTT')[0];
        var grd=Ext.ComponentQuery.query('#grdSTTDetails')[0];

        var errMsg="";
        var errCount=0;
        if(!cboTransferFrom.getValue())
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया लोकेसन छाल्नुहोस् !<br/>";
        }

        if(grd.getStore().getCount()<=0)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया Sticker Transaction Details हाल्नुहोस् !<br/>";
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }
        if(hdnAct.lastValue === "DROUT")
        {
            hdnAction.setValue("E");   
            me.SaveStickerTransactionWithDetails("I");
        }
        else
        {
            me.SaveStickerTransactionWithDetails("I");
        }
        me.ClearControls();
    },

    onBtnEditSTTClick: function(button, e, eOpts) {
        var me=this;
        me.ClearControls(e);
        var cboTransferFrom=Ext.ComponentQuery.query('#cboTransferFromSTT')[0];
        var txtTransferNo=Ext.ComponentQuery.query('#txtTransferNoSTT')[0];

        var lblAction= Ext.ComponentQuery.query("#lblActionSTT")[0];
        var hdnAction = Ext.ComponentQuery.query('#hdnActionSTT')[0];

        hdnAction.setValue("E");
        lblAction.setValue("Updating ...............");

        txtTransferNo.setVisible(true);
        //txtTransferNo.focus(true);

        var errMsg="";
        var errCount=0;
        if(!cboTransferFrom.getValue())
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया लोकेसन छाल्नुहोस् !<br/>";
        }
        if(!txtTransferNo.getValue())
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया डिलिभरी नं. हाल्नुहोस् !<br/>";
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }
    },

    onBtnDeleteSTTClick: function(button, e, eOpts) {
        var me=this;
        me.ClearControls(e);
        var cboTransferFrom=Ext.ComponentQuery.query('#cboTransferFromSTT')[0];
        var txtTransferNo=Ext.ComponentQuery.query('#txtTransferNoSTT')[0];

        var lblAction= Ext.ComponentQuery.query("#lblActionSTT")[0];
        var hdnAction = Ext.ComponentQuery.query('#hdnActionSTT')[0];

        hdnAction.setValue("D");
        //console.log(action.lastValue);
        lblAction.setValue("Deleting ...............");

        txtTransferNo.enable(true);
        txtTransferNo.focus(true);

        var errMsg="";
        var errCount=0;
        if(!cboTransferFrom.getValue())
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया लोकेसन छाल्नुहोस् !<br/>";
        }
        if(!txtTransferNo.getValue())
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया डिलिभरी मिति हाल्नुहोस् !<br/>";
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }
    },

    onBtnSubmitSTTClick: function(button, e, eOpts) {
        var me=this;
        var cboTransferFrom=Ext.ComponentQuery.query('#cboTransferFromSTT')[0].getValue();
        var txtTransferNo=Ext.ComponentQuery.query('#txtTransferNoSTT')[0].getValue();

        var lblAction= Ext.ComponentQuery.query("#lblActionSTT")[0];
        var hdnAction = Ext.ComponentQuery.query('#hdnActionSTT')[0];

        if(hdnAction == "E" && cboTransferFrom  === null && txtTransferNo === "")
        {
            msg('WARNING',"कृपया लोकेसन र डिलिभरी मिति हाल्नुहोस् !");
            return;
        }

        if(hdnAction.lastValue === "D")
        {  
            Ext.Msg.confirm('Confirm', 'के तपाई साचै नै डाटा DELETE गर्न चाहनुहन्छ ?', function(btn) {
                if(btn == 'yes'){

                    me.SaveStickerTransactionWithDetails("D");
                    this.ClearControls();
                    return true;
                }
            }, this);


        }
        else
        {
            Ext.Msg.confirm('Confirm', 'एकपटक Submit गरिसकेपछि अर्को पटक विवरण फेरि परिवर्तन गर्न पइने छैन। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
                if(btn == 'yes'){

                    me.SaveStickerTransactionWithDetails("F");
                    this.ClearControls();

                    return true;
                }
            }, this);


        }
    },

    onBtnCancelSTTClick: function(button, e, eOpts) {
        this.ReadOnlyShowHideControls("c");
        this.ClearControls();

    },

    onTxtTransferNoSTTKeypress: function(textfield, e, eOpts) {
        if(e.keyCode === 13)
        {
            this.LoadStickerTransactionWithDetails();

        }

    },

    onBtnDraftSTTClick: function(button, e, eOpts) {
        //var cboTransferFrom=Ext.ComponentQuery.query('#cboTransferFromSTT')[0].getValue();
        var hdnAct = Ext.ComponentQuery.query('#hdnActSTT')[0];
        hdnAct.setValue("DROUT");
        var iOut="DR";
        Ext.Ajax.request
        ({
            url:'../Handlers/Excise/Sticker/StickerTransactionHandler.ashx?method=GetStickerTransactionUserInOut',
            params:{inOut:iOut},
            success: function ( result, request ) {            


                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }
                var data = obj.root; 
                //console.log(data);
                var storeSTIO = Ext.getStore('StickerTransactionInOut');
                storeSTIO.loadData(data);
                storeSTIO.clearFilter();
            },
            failure: function ( result, request ) {


                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

        var winStickerTransactionInOut = Ext.create('MyApp.view.WinStickerTransactionInOut');

        winStickerTransactionInOut.grdSTTDet=Ext.ComponentQuery.query('#grdSTTDetails')[0];
        winStickerTransactionInOut.a=Ext.ComponentQuery.query('#cboTransferFromSTT')[0];
        winStickerTransactionInOut.b=Ext.ComponentQuery.query('#txtTransferNoSTT')[0];
        winStickerTransactionInOut.c=Ext.ComponentQuery.query('#cboTransferToSTT')[0];
        winStickerTransactionInOut.d=Ext.ComponentQuery.query('#txtTransferDateSTT')[0];
        winStickerTransactionInOut.e=Ext.ComponentQuery.query('#txtTransferBySTT')[0];
        winStickerTransactionInOut.io="DR";

        winStickerTransactionInOut.show();
    },

    onBtnSIPTSTTClick: function(button, e, eOpts) {
        //var cboTransferFrom=Ext.ComponentQuery.query('#cboTransferFromSTT')[0].getValue();
        var iOut="IN";

        Ext.Ajax.request
        ({
            url:'../Handlers/Excise/Sticker/StickerTransactionHandler.ashx?method=GetStickerTransactionUserInOut',
            params:{inOut:iOut},
            success: function ( result, request ) {            


                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }
                var data = obj.root; 
                // console.log(data);
                var storeSTIO = Ext.getStore('StickerTransactionInOut');
                storeSTIO.loadData(data);
                storeSTIO.clearFilter();

            },
            failure: function ( result, request ) {


                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

        var winStickerTransactionInOut = Ext.create('MyApp.view.WinStickerTransactionInOut');

        winStickerTransactionInOut.grdSTTDet=Ext.ComponentQuery.query('#grdSTTDetails')[0];
        winStickerTransactionInOut.a=Ext.ComponentQuery.query('#txtTransferFromSTT')[0];
        winStickerTransactionInOut.b=Ext.ComponentQuery.query('#txtTransferNoSTT')[0];
        winStickerTransactionInOut.c=Ext.ComponentQuery.query('#txtTransferToSTT')[0];
        winStickerTransactionInOut.d=Ext.ComponentQuery.query('#txtTransferDateSTT')[0];
        winStickerTransactionInOut.e=Ext.ComponentQuery.query('#txtTransferBySTT')[0];
        winStickerTransactionInOut.io="IN";

        winStickerTransactionInOut.show();


    },

    onBtnSOPTSTTTClick: function(button, e, eOpts) {
        //var cboTransferFrom=Ext.ComponentQuery.query('#cboTransferFromSTT')[0].getValue();
        var hdnAct = Ext.ComponentQuery.query('#hdnActSTT')[0];
        hdnAct.setValue("DROUT");
        var iOut="OUT";
        Ext.Ajax.request
        ({
            url:'../Handlers/Excise/Sticker/StickerTransactionHandler.ashx?method=GetStickerTransactionUserInOut',
            params:{inOut:iOut},
            success: function ( result, request ) {            


                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }
                var data = obj.root; 
                //console.log(data);
                var storeSTIO = Ext.getStore('StickerTransactionInOut');
                storeSTIO.loadData(data);
                storeSTIO.clearFilter();
            },
            failure: function ( result, request ) {


                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

        var winStickerTransactionInOut = Ext.create('MyApp.view.WinStickerTransactionInOut');

        winStickerTransactionInOut.grdSTTDet=Ext.ComponentQuery.query('#grdSTTDetails')[0];
        winStickerTransactionInOut.a=Ext.ComponentQuery.query('#cboTransferFromSTT')[0];
        winStickerTransactionInOut.b=Ext.ComponentQuery.query('#txtTransferNoSTT')[0];
        winStickerTransactionInOut.c=Ext.ComponentQuery.query('#cboTransferToSTT')[0];
        winStickerTransactionInOut.d=Ext.ComponentQuery.query('#txtTransferDateSTT')[0];
        winStickerTransactionInOut.e=Ext.ComponentQuery.query('#txtTransferBySTT')[0];
        winStickerTransactionInOut.io="OUT";

        winStickerTransactionInOut.show();
    },

    onBtnApproveSTTClick: function(button, e, eOpts) {
        this.ReadOnlyShowHideControls("c");
        var hdnAction = Ext.ComponentQuery.query('#hdnActionSTT')[0];
        hdnAction.setValue("E");
        this.ApprovedStickerTransactionWithDetails("V");

        this.ClearControls();
    },

    onBtnRejectSTTClick: function(button, e, eOpts) {
        this.ReadOnlyShowHideControls("c");
        var hdnAction = Ext.ComponentQuery.query('#hdnActionSTT')[0];
        hdnAction.setValue("E");

        this.ApprovedStickerTransactionWithDetails("R");

        this.ClearControls();
    },

    onDetailsSTTClick: function(gridcolumn) {
        var me=this;
        var hdnAction = Ext.ComponentQuery.query('#hdnActionSTT')[0];

        var win=Ext.getCmp('winStickerTransactionInOut');
        //console.log(win);
        var grdSTTDet=win.grdSTTDet;
        var a=win.a;
        var b=win.b;
        var c=win.c;
        var d=win.d;
        var e=win.e;
        var io=win.io;
        //alert(io);
        var grdInOut=Ext.ComponentQuery.query('#grdSTTInOut')[0];
        var selection=grdInOut.getSelectionModel().getSelection()[0];
        var selectedIndx= grdInOut.getStore().indexOf(selection);

        var storeSTTDet=grdSTTDet.getStore();

        var storeInOut=grdInOut.getStore();


        if(io === "DR" )
        {
            hdnAction.setValue("");
            me.ReadOnlyShowHideControls("c");
        }
        else if( io === "OUT")
        {
            hdnAction.setValue("");
            me.ReadOnlyShowHideControls("c"); 
        }

        else if(io === "IN")
        {
            hdnAction.setValue("IN");
            if(storeInOut.getCount() > 0)
            {
                me.ReadOnlyShowHideControls("");
            }
            else
            {
                me.ReadOnlyShowHideControls("c");
            }
        }
        var tFrom=storeInOut.getAt(selectedIndx).data.TransferFrom;
        var tNo=storeInOut.getAt(selectedIndx).data.TransferNo;
        a.setValue(storeInOut.getAt(selectedIndx).data.TransferFrom);
        b.setValue(storeInOut.getAt(selectedIndx).data.TransferNo);
        c.setValue(storeInOut.getAt(selectedIndx).data.TransferTo);
        d.setValue(storeInOut.getAt(selectedIndx).data.TransferDate);
        e.setValue(storeInOut.getAt(selectedIndx).data.TransferedBy);

        var data=storeInOut.getAt(selectedIndx).get('StickerTransactionDetailsLST');

        storeSTTDet.loadData(data);
        storeSTTDet.clearFilter();
        storeSTTDet.filter(function(item){

            return (item.data.TransferFrom == tFrom && item.data.TransferNo == tNo) ;
        });
        win.close();
    },

    onSelectLotSTTClick: function(gridcolumn) {
        var myGrd=Ext.ComponentQuery.query('#grdSTTDetails')[0];
        var cboTransferFrom=Ext.ComponentQuery.query('#cboTransferFromSTT')[0].getValue();
        var cboStickerType=Ext.ComponentQuery.query('#cboStickerTypeSTT')[0].getValue();
        var errMsg="";
        var errCount=0;
        if(!cboTransferFrom)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया लोकेसन छाल्नुहोस् !<br/>";
        }

        if(!cboStickerType)
        {
            errCount++;
            errMsg +=errCount+") "+"कृपया स्टिकर किसिम हाल्नुहोस् !<br/>";
        }

        if(errCount>0)
        {
            msg("WARNING",errMsg);    
            return false;
        }
        Ext.Ajax.request
        ({
            url:'../Handlers/Excise/Sticker/StickerTransactionHandler.ashx?method=GetLotToTransferFrom',
            params:{locID:cboTransferFrom,stickerID:cboStickerType},
            success: function ( result, request ) {            


                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }
                var data = obj.root; 
                //console.log(data);
                var storeLTF = Ext.getStore('LotTransferFrom');
                storeLTF.loadData(data);
                storeLTF.clearFilter();
            },
            failure: function ( result, request ) {


                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

        var selection=myGrd.getSelectionModel().getSelection();

        var selectedIndex= myGrd.getStore().indexOf( selection[0] );

        var winSelLot = Ext.create('MyApp.view.SelectLot');
        winSelLot.index=selectedIndex;
        winSelLot.target=Ext.ComponentQuery.query('#txtTransferNoSTT')[0];
        winSelLot.show();
        //alert(winSelLot.index);
    },

    onBtnSATSTTClick: function(button, e, eOpts) {
        var iOut="APP";

        Ext.Ajax.request
        ({
            url:'../Handlers/Excise/Sticker/StickerTransactionHandler.ashx?method=GetStickerTransactionUserInOut',
            params:{inOut:iOut},
            success: function ( result, request ) {            


                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }
                var data = obj.root; 
                // console.log(data);
                var storeSTIO = Ext.getStore('StickerTransactionInOut');
                storeSTIO.loadData(data);
                storeSTIO.clearFilter();
                var grid = Ext.ComponentQuery.query('#grdSTTInOut')[0];
                grid.columns[6].setVisible(false);

            },
            failure: function ( result, request ) {


                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

        var winStickerTransactionInOut = Ext.create('MyApp.view.WinStickerTransactionInOut');

        winStickerTransactionInOut.show();

    },

    onBtnSRTSTTClick: function(button, e, eOpts) {

        var iOut="RJ";

        Ext.Ajax.request
        ({
            url:'../Handlers/Excise/Sticker/StickerTransactionHandler.ashx?method=GetStickerTransactionUserInOut',
            params:{inOut:iOut},
            success: function ( result, request ) {            


                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }
                var data = obj.root; 
                // console.log(data);
                var storeSTIO = Ext.getStore('StickerTransactionInOut');
                storeSTIO.loadData(data);
                storeSTIO.clearFilter();
                var grid = Ext.ComponentQuery.query('#grdSTTInOut')[0];
                grid.columns[6].setVisible(false); 

            },
            failure: function ( result, request ) {


                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

        var winStickerTransactionInOut = Ext.create('MyApp.view.WinStickerTransactionInOut');

        winStickerTransactionInOut.show();

    },

    SaveStickerTransactionWithDetails: function(rStatus) {
        var cboTransferFrom=Ext.ComponentQuery.query('#cboTransferFromSTT')[0].getValue();
        var cboTransferTo=Ext.ComponentQuery.query('#cboTransferToSTT')[0].getValue();
        var txtTransferNo=Ext.ComponentQuery.query('#txtTransferNoSTT')[0].getValue();
        var txtTransferDate=Ext.ComponentQuery.query('#txtTransferDateSTT')[0].getValue();
        var txtTransferBy=Ext.ComponentQuery.query('#txtTransferBySTT')[0].getValue();
        var txtRemarks = Ext.ComponentQuery.query('#txtRemarksSTT')[0].getValue();

        var stickerTransDetLST="";

        var storeSTD=Ext.getStore('StickerTransactionDet');
        storeSTD.clearFilter();
        /*storeSTD.filter(function(item){

        return (item.data.TransferFrom == cboTransferFrom && item.data.TransferNo == txtTransferNo) ;
        });
        */
        if(storeSTD.getCount() > 0)
        {
            StickerTransactionDetailsLST = getJson(storeSTD); 
        }
        var action = Ext.ComponentQuery.query('#hdnActionSTT')[0].getValue();
        var tranNo = Ext.ComponentQuery.query('#hdnTranNoSTT')[0].getValue() === ""?null:Ext.ComponentQuery.query('#hdnTranNoSTT')[0].getValue();

        var STD="";

        STD={  
            'TransferFrom':cboTransferFrom,   
            'TransferTo':cboTransferTo,
            'TransferNo':txtTransferNo,
            'TransferDate':txtTransferDate,
            'TransferedBy':txtTransferBy,
            'Remarks':txtRemarks,
            'ReceivedUserID':"",
            'ReceivedDate':"",
            'TransferStatus':rStatus,
            'TranNo':tranNo,
            'TranDate':"",
            'UserID':"",
            'Action':action,
            StickerTransactionDetailsLST:StickerTransactionDetailsLST!==""?StickerTransactionDetailsLST:null
        };
        //console.log('STD',STD);

        Ext.Ajax.request
        ({
            url:'../Handlers/Excise/Sticker/StickerTransactionHandler.ashx?method=SaveStickerTransaction',
            params:{stickerTransaction:JSON.stringify(STD)},
            success: function( result, request ){

                var jsonMsg=Ext.decode(result.responseText);
                msg(jsonMsg.success=="True"?"SUCCESS":"FAILURE",jsonMsg.message);
            }

        });
    },

    LoadStickerTransactionWithDetails: function() {
        var cboTransferFrom=Ext.ComponentQuery.query('#cboTransferFromSTT')[0].getValue();
        var txtTransferNo=Ext.ComponentQuery.query('#txtTransferNoSTT')[0].getValue();

        if( cboTransferFrom === null || txtTransferNo ==="" )
        {

            msg('WARNING',"कृपया लोकेसन र डिलिभरी मिति हाल्नुहोस् !");
            return;

        }

        //var wait = watiMsg('loading ...');

        Ext.Ajax.request({
            url:"../Handlers/Excise/Sticker/StickerTransactionHandler.ashx?method=GetStickerTransaction",
            params:{transferFrom:cboTransferFrom,transferNo:txtTransferNo},
            success: function ( result, request ) {            

                // wait.hide();            

                //console.log("obj",result.responseText);
                var obj = Ext.decode(result.responseText);            

                if(obj.success === "false")
                {   
                    msg("WARNING",obj.message);
                    return;
                }

                var data = obj.root; 


                var cboTransferTo=Ext.ComponentQuery.query('#cboTransferToSTT')[0];
                var txtTransferDate=Ext.ComponentQuery.query('#txtTransferDateSTT')[0];
                var txtTransferBy=Ext.ComponentQuery.query('#txtTransferBySTT')[0];
                var txtRemarks = Ext.ComponentQuery.query('#txtRemarksSTT')[0];

                var lblAction= Ext.ComponentQuery.query("#lblActionSTT")[0];
                var hdnAction = Ext.ComponentQuery.query('#hdnActionSTT')[0];
                var hdnTranNo = Ext.ComponentQuery.query('#hdnTranNoSTT')[0];

                cboTransferTo.setValue(data.TransferTo);   
                txtTransferDate.setValue(data.TransferDate);
                txtTransferBy.setValue(data.TransferedBy);
                txtRemarks.setValue(data.Remarks);
                hdnTranNo.setValue(data.TranNo);


                var grd= Ext.ComponentQuery.query('#grdSTTDetails')[0];
                var store = Ext.getStore('StickerTransactionDet');
                //console.log(data.StickerTransactionDetailsLST);
                store.loadData(data.StickerTransactionDetailsLST);

                store.clearFilter();
                store.filter(function(item){

                    return (item.data.TransferFrom == cboTransferFrom && item.data.TransferNo == txtTransferNo) ;
                });
            },
            failure: function ( result, request ) {

                // wait.hide();
                msg("FAILURE","Error in Fetching Data !!!");
            }
        });

    },

    ClearControls: function(txt) {
        var cboTransferFrom=Ext.ComponentQuery.query('#cboTransferFromSTT')[0];
        var cboTransferTo=Ext.ComponentQuery.query('#cboTransferToSTT')[0];
        var txtTransferNo=Ext.ComponentQuery.query('#txtTransferNoSTT')[0];
        var txtTransferDate=Ext.ComponentQuery.query('#txtTransferDateSTT')[0];
        var txtTransferBy=Ext.ComponentQuery.query('#txtTransferBySTT')[0];
        var txtRemarks = Ext.ComponentQuery.query('#txtRemarksSTT')[0];
        var grid = Ext.ComponentQuery.query('#grdSTTDetails')[0];
        var lblAction= Ext.ComponentQuery.query("#lblActionSTT")[0];
        var hdnAction = Ext.ComponentQuery.query('#hdnActionSTT')[0];
        var txtTransferFrom=Ext.ComponentQuery.query('#txtTransferFromSTT')[0];
        var txtTransferTo=Ext.ComponentQuery.query('#txtTransferToSTT')[0];
        if(txt==="e")
        {
            cboTransferFrom.reset();
            cboTransferTo.reset();
            txtTransferNo.reset();
            txtTransferNo.setVisible(true);
            txtTransferDate.reset();
            txtTransferBy.reset();
            txtRemarks.reset();
            grid.getStore().removeAll();
            txtTransferNo.enable(true);

        }
        else
        {
            cboTransferFrom.reset();
            cboTransferTo.reset();
            txtTransferNo.reset();
            txtTransferNo.setVisible(false);
            txtTransferDate.reset();
            txtTransferBy.reset();
            txtRemarks.reset();
            grid.getStore().removeAll();
            lblAction.reset();
            hdnAction.reset();
            hdnAction.setValue("");
            //txtTransferNo.disable(true); 
            txtTransferFrom.reset();
            txtTransferTo.reset();
        }
    },

    ReadOnlyShowHideControls: function(txt) {
        var cboTransferFrom=Ext.ComponentQuery.query('#cboTransferFromSTT')[0];
        var cboTransferTo=Ext.ComponentQuery.query('#cboTransferToSTT')[0];
        var txtTransferNo=Ext.ComponentQuery.query('#txtTransferNoSTT')[0];
        var txtTransferDate=Ext.ComponentQuery.query('#txtTransferDateSTT')[0];
        var txtTransferBy=Ext.ComponentQuery.query('#txtTransferBySTT')[0];
        var cntRemarks = Ext.ComponentQuery.query('#fCntRemarksSTT')[0];
        var txtTransferFrom=Ext.ComponentQuery.query('#txtTransferFromSTT')[0];
        var txtTransferTo=Ext.ComponentQuery.query('#txtTransferToSTT')[0];
        var btnAdd=Ext.ComponentQuery.query('#btnAddSTT')[0];
        var grid = Ext.ComponentQuery.query('#grdSTTDetails')[0];
        var cntBottom1 = Ext.ComponentQuery.query('#fCntBottomSTT')[0];
        var cntBottom2 = Ext.ComponentQuery.query('#fCntBottom2STT')[0];

        if(txt==="c")
        {
            cboTransferFrom.setVisible(true);
            cboTransferTo.setVisible(true);
            txtTransferNo.setVisible(false);
            txtTransferNo.setReadOnly(false);
            txtTransferDate.setReadOnly(false);
            txtTransferBy.setReadOnly(false);
            cntRemarks.setVisible(false);
            txtTransferFrom.setVisible(false);
            txtTransferTo.setVisible(false);
            txtTransferFrom.setReadOnly(false);
            txtTransferTo.setReadOnly(false);
            btnAdd.enable(true);
            cntBottom1.setVisible(true);
            cntBottom2.setVisible(false);
            grid.columns[1].setVisible(true);   
        }
        else
        {
            cboTransferFrom.setVisible(false);
            cboTransferTo.setVisible(false);
            txtTransferNo.setVisible(true);
            txtTransferNo.setReadOnly(true);
            txtTransferDate.setReadOnly(true);
            txtTransferBy.setReadOnly(true);
            cntRemarks.setVisible(true);
            txtTransferFrom.setVisible(true);
            txtTransferTo.setVisible(true);
            txtTransferFrom.setReadOnly(true);
            txtTransferTo.setReadOnly(true);
            btnAdd.disable(true);
            cntBottom1.setVisible(false);
            cntBottom2.setVisible(true);
            grid.columns[1].setVisible(false);
        }


    },

    ApprovedStickerTransactionWithDetails: function(rStatus) {
        var txtTransferFrom=Ext.ComponentQuery.query('#txtTransferFromSTT')[0].getValue();
        var txtTransferTo=Ext.ComponentQuery.query('#txtTransferToSTT')[0].getValue();
        var txtTransferNo=Ext.ComponentQuery.query('#txtTransferNoSTT')[0].getValue();
        var txtTransferDate=Ext.ComponentQuery.query('#txtTransferDateSTT')[0].getValue();
        var txtTransferBy=Ext.ComponentQuery.query('#txtTransferBySTT')[0].getValue();
        var txtRemarks = Ext.ComponentQuery.query('#txtRemarksSTT')[0].getValue();

        var stickerTransDetLST="";

        var storeSTD=Ext.getStore('StickerTransactionDet');
        storeSTD.clearFilter();
        /*storeSTD.filter(function(item){

        return (item.data.TransferFrom == cboTransferFrom && item.data.TransferNo == txtTransferNo) ;
        });
        */
        if(storeSTD.getCount() > 0)
        {
            StickerTransactionDetailsLST = getJson(storeSTD); 
        }
        var action = Ext.ComponentQuery.query('#hdnActionSTT')[0].getValue();
        var tranNo = Ext.ComponentQuery.query('#hdnTranNoSTT')[0].getValue() === ""?null:Ext.ComponentQuery.query('#hdnTranNoSTT')[0].getValue();

        var STD="";

        STD={  
            'TransferFrom':txtTransferFrom,   
            'TransferTo':txtTransferTo,
            'TransferNo':txtTransferNo,
            'TransferDate':txtTransferDate,
            'TransferedBy':txtTransferBy,
            'Remarks':txtRemarks,
            'ReceivedUserID':"",
            'ReceivedDate':"",
            'TransferStatus':rStatus,
            'TranNo':tranNo,
            'TranDate':"",
            'UserID':"",
            'Action':action,
            StickerTransactionDetailsLST:StickerTransactionDetailsLST!==""?StickerTransactionDetailsLST:null
        };
        //console.log('STD',STD);

        Ext.Ajax.request
        ({
            url:'../Handlers/Excise/Sticker/StickerTransactionHandler.ashx?method=SaveStickerTransaction',
            params:{stickerTransaction:JSON.stringify(STD)},
            success: function( result, request ){

                var jsonMsg=Ext.decode(result.responseText);
                msg(jsonMsg.success=="True"?"SUCCESS":"FAILURE",jsonMsg.message);
            }

        });
    },

    init: function(application) {
        this.control({
            "#pnlStickerTransaction": {
                afterrender: this.onPnlStickerTransactionAfterRender
            },
            "#cboTransferFromSTT": {
                change: this.onCboTransferFromSTTChange
            },
            "#cntSTTDetails": {
                beforerender: this.onCntSTTDetailsBeforeRender
            },
            "#btnAddSTT": {
                click: this.onBtnAddSTTClick
            },
            "#btnOKSTT": {
                click: this.onBtnOKSTTClick
            },
            "#btnSearchSTT": {
                click: this.onBtnSearchSTTClick
            },
            "#btnSaveSTT": {
                click: this.onBtnSaveSTTClick
            },
            "#btnEditSTT": {
                click: this.onBtnEditSTTClick
            },
            "#btnDeleteSTT": {
                click: this.onBtnDeleteSTTClick
            },
            "#btnSubmitSTT": {
                click: this.onBtnSubmitSTTClick
            },
            "#btnCancelSTT": {
                click: this.onBtnCancelSTTClick
            },
            "#txtTransferNoSTT": {
                keypress: this.onTxtTransferNoSTTKeypress
            },
            "#btnDraftSTT": {
                click: this.onBtnDraftSTTClick
            },
            "#btnSIPTSTT": {
                click: this.onBtnSIPTSTTClick
            },
            "#btnSOPTSTTT": {
                click: this.onBtnSOPTSTTTClick
            },
            "#btnApproveSTT": {
                click: this.onBtnApproveSTTClick
            },
            "#btnRejectSTT": {
                click: this.onBtnRejectSTTClick
            },
            "#detailsSTT": {
                click: this.onDetailsSTTClick
            },
            "#selectLotSTT": {
                click: this.onSelectLotSTTClick
            },
            "#btnSATSTT": {
                click: this.onBtnSATSTTClick
            },
            "#btnSRTSTT": {
                click: this.onBtnSRTSTTClick
            }
        });
    }

});
