/*
 * File: app/view/SelectLoanPopup.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.SelectLoanPopup', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.form.Panel',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.selection.RowModel',
        'Ext.grid.column.Column'
    ],

    height: 500,
    itemId: 'SelectLoanPopup',
    width: 700,
    autoScroll: true,
    layout: 'fit',
    title: 'Select Loan',
    maximizable: true,
    minimizable: true,
    modal: true,
    y: 80,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    id: 'frmSelectLoanPopup',
                    itemId: 'frmSelectLoanPopup',
                    autoScroll: true,
                    bodyPadding: 10,
                    title: '',
                    items: [
                        {
                            xtype: 'gridpanel',
                            itemId: 'grdSearchLoan',
                            title: '',
                            store: 'LoanHeadingPopupStore',
                            selModel: Ext.create('Ext.selection.RowModel', {
                                listeners: {
                                    beforeselect: {
                                        fn: me.onRowModelBeforeSelect,
                                        scope: me
                                    }
                                }
                            }),
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    width: 110,
                                    dataIndex: 'LoanProductCode',
                                    text: 'Loan Product Code'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 280,
                                    dataIndex: 'LoanProductName',
                                    text: 'Loan Product Name'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'InterestRate',
                                    text: 'Interest Rate'
                                }
                            ]
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onFrmSelectLoanPopupAfterRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onRowModelBeforeSelect: function(rowmodel, record, index, eOpts) {
        Ext.MessageBox.confirm('Select', 'Are you sure ?', function(btn){

           if(btn === 'yes'){
               //console.log('record',record);


               Ext.ComponentQuery.query('#txtFromLoanNo')[0].setValue(record.data.LoanProduct_Code);
               Ext.ComponentQuery.query('#txtFromLoanNoDesc')[0].setValue(record.data.LoanProduct_Name);
               Ext.ComponentQuery.query('#txtFromLoanDateBS')[0].setValue(record.data.LoanDate_Bs);
               Ext.ComponentQuery.query('#txtFromLoanDateAD')[0].setValue(record.data.LoanDate);


           }
           else
           {

           }
            var v=Ext.ComponentQuery.query('#SelectLoanNoPopup')[0];

            v.close();
        });

    },

    onFrmSelectLoanPopupAfterRender: function(component, eOpts) {
        var waitSave = watiMsg('Loading Data. Please wait ...');
        Ext.Ajax.request({
            url:'../Handlers/Finance/Transaction/EditTransaction/LoanTransferFromLoanHandler.ashx',
            params:{method:'GetLoanTransferFrmLoan', OfficeCode:getOfficeCode(),
                    CenterCode:Ext.ComponentQuery.query('#txtFromCenterCode')[0].getValue(),
                    ClientNo:Ext.ComponentQuery.query('#txtFromMemberCode')[0].ClientNo,
                    ProductCode:Ext.ComponentQuery.query('#ddlFromLoanType')[0].getValue()
                   },
            success: function ( result, request ) {

                var obj = Ext.decode(result.responseText);
                if(obj.success === 'true'){
                    //console.log("Resu",obj.root);
                    var store =Ext.getStore('LoanNoStore');
                    store.removeAll();
                    store.add(obj.root);


                }else{msg('FAILURE','Could Not Load Data');}
                waitSave.hide();
            },
            failure: function(form, action) {
                msg("FAILURE","Could Not Load Data");  waitSave.hide();  }
        });
    }

});