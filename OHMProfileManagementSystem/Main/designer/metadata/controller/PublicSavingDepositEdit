{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "PublicSavingDepositEdit",
        "stores": [
            "OfficeMapStore",
            "ProductTypeStore",
            "SavingAccountNumberSearchStore",
            "ContraAccountStore",
            "ChargeTypeStore",
            "ChargeSourceStore"
        ]
    },
    "configAlternates": {
        "designer|userClassName": "string",
        "stores": "typedarray"
    },
    "name": "MyController1",
    "designerId": "20af4e0c-b8a6-4024-ae3f-1cfd972f24d1",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#frmAllPublicSavingAccountDeposit",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "PublicSavingDepositEdit",
                "fn": "onFrmAllPublicSavingAccountDepositAfterRender",
                "implHandler": [
                    "Ext.ComponentQuery.query(\"#txtDepositDateBS\")[0].setValue(getMisDateBS());",
                    "Ext.ComponentQuery.query(\"#txtDepositDateAD\")[0].setValue(getMisDateAD());",
                    "Ext.ComponentQuery.query(\"#txtDepositDateFromBSSearch\")[0].setValue(getMisDateBS());",
                    "Ext.ComponentQuery.query(\"#txtDepositDateToBSSearch\")[0].setValue(getMisDateBS());",
                    "",
                    "var userCode =getCurrentUser();",
                    "var officeName='';",
                    "        Ext.Ajax.request({",
                    "            url: '../Handlers/GeneralMasterParameters/Office/OfficeHandler.ashx',",
                    "            params: {",
                    "                method:'GetOfficeList',",
                    "                userCode:userCode,officeName:officeName",
                    "            },",
                    "            success: function(response){",
                    "",
                    "                var data=Ext.decode(response.responseText);",
                    "                var officeMapStore=Ext.getStore('OfficeMapStore');",
                    "                officeMapStore.removeAll();",
                    "                officeMapStore.add(data.root);",
                    "            }",
                    "        });",
                    "",
                    "var productName='';",
                    "        Ext.Ajax.request({",
                    "            url: '../Handlers/Finance/Transaction/EditTransaction/PubSavingProductHandler.ashx',",
                    "            params: {",
                    "                method:'GetPubSavingProd',",
                    "                ProductName:productName",
                    "            },",
                    "            success: function(response){",
                    "",
                    "                var data=Ext.decode(response.responseText);",
                    "                var productTypeStore=Ext.getStore('ProductTypeStore');",
                    "                productTypeStore.removeAll();",
                    "                productTypeStore.add(data.root);",
                    "            }",
                    "        });",
                    "",
                    "var officeCode='';",
                    "var productCode='';",
                    "var savingAccountNo='';",
                    "",
                    "        Ext.Ajax.request({",
                    "            url: '../Handlers/Finance/Transaction/EditTransaction/AdjPubSavingAccountHandler.ashx',",
                    "            params: {",
                    "                method:'GetAdjPubSavingAcc',",
                    "                OfficeCode:getOfficeCode(),ProductCode:productCode,SavingAccountNo:savingAccountNo",
                    "            },",
                    "            success: function(response){",
                    "",
                    "                var data=Ext.decode(response.responseText);",
                    "                var savingAccountNumberSearchStore=Ext.getStore('SavingAccountNumberSearchStore');",
                    "                savingAccountNumberSearchStore.removeAll();",
                    "                savingAccountNumberSearchStore.add(data.root);",
                    "            }",
                    "        });",
                    "",
                    "Ext.Ajax.request({",
                    "            url: '../Handlers/Finance/Maintenance/AccountHeadEntryHandler.ashx',",
                    "            params: {",
                    "                method:'GetContraAccount',",
                    "                offCode:getOfficeCode()",
                    "            },",
                    "            success: function(response){",
                    "                var data=Ext.decode(response.responseText);",
                    "                var contraAccountStore =Ext.getStore('ContraAccountStore');",
                    "                contraAccountStore.removeAll();",
                    "                contraAccountStore.add(data.root);",
                    "            }",
                    "        });",
                    "",
                    " var chargeTypeStore=Ext.getStore('ChargeTypeStore');",
                    "                chargeTypeStore.removeAll();",
                    "",
                    "                getReferences('CHARGE_TYPE',function(data){",
                    "",
                    "                    chargeTypeStore.add(data.root);",
                    "                });",
                    "",
                    "",
                    "var chargeSourceStore=Ext.getStore('ChargeSourceStore');",
                    "                chargeSourceStore.removeAll();",
                    "",
                    "                getReferences('CHARGE_SOURCE_ABBS',function(data){",
                    "",
                    "                    chargeSourceStore.add(data.root);",
                    "                });",
                    "",
                    "",
                    "var officeCode='';",
                    "var savingAccountNo='';",
                    "",
                    "        Ext.Ajax.request({",
                    "            url: '../Handlers/Finance/Transaction/EditTransaction/PubSavingAccountSearchHandler.ashx',",
                    "            params: {",
                    "                method:'GetPubSavAccSearch',",
                    "                OfficeCode:getOfficeCode(),SavingAccountNo:savingAccountNo",
                    "            },",
                    "            success: function(response){",
                    "",
                    "                var data=Ext.decode(response.responseText);",
                    "                var savingAccountNumberSearchStore=Ext.getStore('SavingAccountNumberSearchStore');",
                    "                savingAccountNumberSearchStore.removeAll();",
                    "                savingAccountNumberSearchStore.add(data.root);",
                    "            }",
                    "        });",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    ""
                ],
                "name": "afterrender",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view",
                "implHandler": "code"
            },
            "name": "onFrmAllPublicSavingAccountDepositAfterRender",
            "designerId": "4c29385f-63c5-4178-a479-aeafb382730d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnSearch",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton31",
                "fn": "onBtnSearchClick",
                "implHandler": [
                    "var offCode=Ext.ComponentQuery.query(\"#ddlOfficeCode\")[0].getValue();",
                    "//var depositNo=Ext.ComponentQuery.query(\"#sdfsd\")[0].getValue();",
                    "var savingAccountNo=Ext.ComponentQuery.query(\"#ddlSavingAccountNoSearch\")[0].getValue();",
                    "//var clientName=Ext.ComponentQuery.query(\"#ddlLoanNoo\")[0].getValue();",
                    "var fromDate=Ext.ComponentQuery.query(\"#txtDepositDateBS\")[0].getValue();",
                    "var toDate=Ext.ComponentQuery.query(\"#txtDepositDateAD\")[0].getValue();",
                    "",
                    "",
                    "",
                    "          Ext.Ajax.request({",
                    "                    url: '../Handlers/Finance/Transaction/EditTransaction/PubSavingDepositDetailHandler.ashx',",
                    "                    params: {",
                    "                        method:'GetPubSavDepoDetail',",
                    "                        OfficeCode:offCode,",
                    "                        DepositNo:null,",
                    "                        SavingAccountNo:savingAccountNo,",
                    "                        ClientName:clientName,",
                    "                        FromDate:fromDate,",
                    "                        ToDate:toDate",
                    "                    },",
                    "                    success: function(response){",
                    "                        var data=Ext.decode(response.responseText);",
                    "                        //var loanSectorStore=Ext.getStore('LoanSectorStore');",
                    "                        //loanSectorStore.removeAll();",
                    "                        //loanSectorStore.add(data.root);",
                    "                    }",
                    "                });",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view",
                "implHandler": "code"
            },
            "name": "onBtnSearchClick",
            "designerId": "fd507f4b-b4e5-44c1-a8ad-4b6eaffff21e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnDeposit",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton29",
                "fn": "onBtnDepositClick",
                "implHandler": [
                    "var accountNo=Ext.ComponentQuery.query(\"#ddlSavingAccountNo\")[0].getValue();",
                    "var depositDate=Ext.ComponentQuery.query(\"#txtDepositDateBS\")[0].getValue();",
                    "var depositAmount=Ext.ComponentQuery.query(\"#txtDepositAmount\")[0].getValue();",
                    "var contraAccount=Ext.ComponentQuery.query(\"#ddlContraAccount\")[0].getValue();",
                    "//var mandatorySavingType=Ext.ComponentQuery.query(\"#ddlMandatorySaveType\")[0].getValue();",
                    "var penaltyAmount=Ext.ComponentQuery.query(\"#txtPenaltyAmount\")[0].getValue();",
                    "var chargeAmount=Ext.ComponentQuery.query(\"#txtChargeAmount\")[0].getValue();",
                    "var chargeType=Ext.ComponentQuery.query(\"#ddlChargeType\")[0].getValue();",
                    "//var voucherNo=Ext.ComponentQuery.query(\"#txtLoanPeriod\")[0].getValue();",
                    "//var empId=Ext.ComponentQuery.query(\"#txtGraceDays\")[0].getValue();",
                    "var remarks=Ext.ComponentQuery.query(\"#txtRemarks\")[0].getValue();",
                    "var depositBy=Ext.ComponentQuery.query(\"#txtDepositBy\")[0].getValue();",
                    "var tranOfficeCode=Ext.ComponentQuery.query(\"#ddlOfficeCode\")[0].getValue();",
                    "var acOfficeCode=Ext.ComponentQuery.query(\"#ddlOfficeCodeSearch\")[0].getValue();",
                    "var valueDate=Ext.ComponentQuery.query(\"#txtValueDateBS\")[0].getValue();",
                    "var chargeSource=Ext.ComponentQuery.query(\"#ddlChargeSource\")[0].getValue();",
                    "//var adjustFromSaving=Ext.ComponentQuery.query(\"#ddlChargeSource\")[0].getValue();",
                    "//var adjustAccountNo=Ext.ComponentQuery.query(\"#ddlChargeSource\")[0].getValue();",
                    "//var adjustChequeNo=Ext.ComponentQuery.query(\"#ddlChargeSource\")[0].getValue();",
                    "",
                    "",
                    "",
                    "        var objPublicSavingDepositEdit={",
                    "                                 AccountNo:accountNo,",
                    "                                 DepositDate:depositDate,",
                    "                                 DepositAmount:depositAmount,",
                    "                                 ContraAccount :contraAccount,",
                    "                                 MandatorySavingType:mandatorySavingType,",
                    "                                 PenaltyAmount:penaltyAmount,",
                    "                                 ChargeAmount:chargeAmount,",
                    "                                 ChargeType:chargeType,",
                    "                                 VoucherNo:voucherNo,",
                    "                                 EmpId:empId,",
                    "                                 Remarks:remarks,",
                    "                                 DepositBy:depositBy,",
                    "                                 TranOfficeCode:tranOfficeCode,",
                    "                                 AcOfficeCode:acOffice,",
                    "                                 ValueDate:valueDate,",
                    "                                 ChargeSource:chargeSource,",
                    "                                 AdjustFromSaving:adjustFromSaving,",
                    "                                 AdjustAccountNo:adjustAccountNo,",
                    "                                 AdjustChequeNo:adjustChequeNo",
                    "",
                    "",
                    "",
                    "        };",
                    "",
                    "",
                    "",
                    "                        var wMsg='';",
                    "                        var waitSave = watiMsg(wMsg);",
                    "",
                    "                        Ext.Ajax.request({",
                    "                                    url: '../Handlers/Finance/Transaction/EditTransaction/PublicSavingDepositHandler.ashx',",
                    "                                    params: {",
                    "                                        method:'SavePublicSavingDeposit',",
                    "                                        SavePublicSavingDeposit:JSON.stringify(objPublicSavingDepositEdit)",
                    "                                    },",
                    "                                    success: function(response){",
                    "                                    waitSave.hide();",
                    "                                    var out=Ext.decode(response.responseText);",
                    "                                    console.log(out);",
                    "",
                    "                                    if(out.success===\"true\")",
                    "                                        {",
                    "                                            var message=out.root;",
                    "                                            if(message.OutResultCode===\"SUCCESS\")",
                    "                                                {",
                    "                                                    msg(\"SUCCESS\",message.OutResultMessage,function(){",
                    "",
                    "                                                    });",
                    "",
                    "",
                    "",
                    "                                                }",
                    "                                            else",
                    "                                                {",
                    "                                                  msg(\"FAILURE\",message.OutResultMessage);",
                    "                                                }",
                    "                                        }",
                    "                                        else",
                    "                                            {",
                    "                                                msg(\"FAILURE\",out.message);",
                    "                                            }",
                    "                                    },",
                    "                                    failure: function ( result, request ) {",
                    "                                        waitSave.hide();",
                    "                                        var out=Ext.decode(response.responseText);",
                    "                                        msg(\"FAILURE\",out.message);",
                    "                                    }",
                    "",
                    "                                });",
                    "",
                    "",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "configAlternates": {
                "fn": "string",
                "name": "string",
                "scope": "string",
                "designer|controlQuery": "string",
                "designer|params": "typedarray",
                "designer|targetType": "view",
                "implHandler": "code"
            },
            "name": "onBtnDepositClick",
            "designerId": "b10a17a5-1009-4add-9135-c6742f3e2d24"
        }
    ]
}