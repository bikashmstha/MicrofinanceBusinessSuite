/*
 * File: app/controller/VisitReport.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.VisitReport', {
    extend: 'Ext.app.Controller',

    stores: [
        'VisitOfficerStore',
        'VisitTypeStore',
        'MistakeTypeStore',
        'AVRepMistakeStore',
        'AVRepLInkedOrg',
        'AVRepRiskStore',
        'RiskTypeStore'
    ],

    onFrmVisitReportAfterRender: function(component, eOpts) {



        var strVT = Ext.getStore('VisitTypeStore');
        strVT.removeAll();
        strVT.load();

        var strRisk = Ext.getStore('RiskTypeStore');
        strRisk.removeAll();
        Ext.Ajax.request({
            url: '../Handlers/Common/Visit/RiskTypeHandler.ashx',
            params: {method:'GetRiskTypes' },
            success: function(response){
                var JSONResponse=Ext.decode(response.responseText);
                var visitSelection=JSONResponse.root;
                if(JSONResponse.success=='true')
                {  

                    strRisk.add(JSONResponse.root);



                }

            }
        });

        var strMistake = Ext.getStore('MistakeTypeStore');
        strMistake.removeAll();
        Ext.Ajax.request({
            url: '../Handlers/Common/Visit/MistakeTypeHandler.ashx',
            params: {method:'GetMistakeTypes' },
            success: function(response){
                var JSONResponse=Ext.decode(response.responseText);
                var visitSelection=JSONResponse.root;
                if(JSONResponse.success=='true')
                {  

                    strMistake.add(JSONResponse.root);



                }

            }
        });


        //Clear Visit Officer
        var strAVOfficer = Ext.getStore('VisitOfficerStore');
        strAVOfficer.removeAll();
        //strAVOfficer.add(avOfficer);


        //Clear Rep Mistake 
        var strAVRepMistake = Ext.getStore('AVRepMistakeStore');
        strAVRepMistake.removeAll();
        //strAVRepMistake.add(avRepMistake);

        //Clear Rep Risk
        var strAVRepRisk = Ext.getStore('AVRepRiskStore');
        strAVRepRisk.removeAll();
        //strAVRepRisk.add(avRepMistake);


        //Clear Rep Risk
        var strAVLinkedOrg = Ext.getStore('AVRepLInkedOrg');
        strAVLinkedOrg.removeAll();
        //strAVLinkedOrg.add(avLinkedOrg);


    },

    onBtnAVOfficerAddClick: function(button, e, eOpts) {
        var pan=Ext.ComponentQuery.query('#txtVRPan')[0];
        var selDate=Ext.ComponentQuery.query('#txtVRSelectionDate')[0];
        var message='';
        if(pan.getValue()==='')
        {
            message+='<BR>* कृपया पहिला प्यान भर्नुहोला।';

        }

        if(selDate.getValue()==='')
        {
            message+='<BR>* कृपया पहिला छनोट मिति भर्नुहोला।';
        }

        if(message!=='')
        {
            msg('INFO',message);
            return;
        }
        else
        {
            var grd = Ext.ComponentQuery.query('#grdAVOfficer')[0];
            var rec={
                PAN:pan.getValue(),
                SelectionDate:selDate.getValue(),
                OfficerName:'',
                OfficerCode:'',
                Action:'A'
            };
            if(grd.store.add(rec))
            {
                var btnAVOfficer= Ext.ComponentQuery.query('#btnAVOfficerAdd')[0];
                btnAVOfficer.disable(true);
            }

            var col = grd.headerCt.getHeaderAtIndex(0);
            var recd = grd.store.data.items;
            var record = recd[recd.length-1];
            grd.getPlugin('plugInGrdAVOfficer').startEdit(record, col);		
        }
    },

    onTxtVRSelectionDateBlur: function(component, e, eOpts) {
        var me=this;
        me.LoadVisitSelection();



    },

    onBtnVRSaveClick: function(button, e, eOpts) {
        var me =this;
        if(Ext.ComponentQuery.query('#hdnAVReportAction')[0].getValue()=='F')
        {
            msg('INFO','* यो भ्रमण रिपोर्ट सब्मिट भैसकेको छ।<BR> तपाई यो भ्रमण रिपोर्ट सच्याउन सक्नु हुन्न।');
            return;
        }

        var form = button.up('form').getForm();
        me.SaveVisitSelection(form,'I');
    },

    onBtnAVRiskAddClick: function(button, e, eOpts) {
        var pan=Ext.ComponentQuery.query('#txtVRPan')[0];
        var selDate=Ext.ComponentQuery.query('#txtVRSelectionDate')[0];
        var message='';
        if(pan.getValue()==='')
        {
            message+='<BR>* कृपया पहिला प्यान भर्नुहोला।';

        }

        if(selDate.getValue()==='')
        {
            message+='<BR>* कृपया पहिला छनोट मिति भर्नुहोला।';
        }

        if(message!=='')
        {
            msg('INFO',message);
            return;
        }
        else
        {
            var grd = Ext.ComponentQuery.query('#grdRisks')[0];
            var rec={
                PAN:pan.getValue(),
                SelectionDate:selDate.getValue(),
                RiskTypeId:'',
                Remarks:'',
                Action:'A'
            };
            if(grd.store.add(rec))
            {
                var btnAVRisk= Ext.ComponentQuery.query('#btnAVRiskAdd')[0];
                btnAVRisk.disable(true);
            }

            var col = grd.headerCt.getHeaderAtIndex(0);
            var recd = grd.store.data.items;
            var record = recd[recd.length-1];
            grd.getPlugin('plugInGrdAVRisk').startEdit(record, col);		
        }
    },

    onBtnAVMistakeAddClick: function(button, e, eOpts) {
        var pan=Ext.ComponentQuery.query('#txtVRPan')[0];
        var selDate=Ext.ComponentQuery.query('#txtVRSelectionDate')[0];
        var message='';
        if(pan.getValue()==='')
        {
            message+='<BR>* कृपया पहिला प्यान भर्नुहोला।';

        }

        if(selDate.getValue()==='')
        {
            message+='<BR>* कृपया पहिला छनोट मिति भर्नुहोला।';
        }

        if(message!=='')
        {
            msg('INFO',message);
            return;
        }
        else
        {
            var grd = Ext.ComponentQuery.query('#grdMistakes')[0];
            var rec={
                PAN:pan.getValue(),
                SelectionDate:selDate.getValue(),
                MistakeTypeId:'',
                Remarks:'',
                Action:'A'
            };
            if(grd.store.add(rec))
            {
                var btnAVMistake= Ext.ComponentQuery.query('#btnAVMistakeAdd')[0];
                btnAVMistake.disable(true);
            }

            var col = grd.headerCt.getHeaderAtIndex(0);
            var recd = grd.store.data.items;
            var record = recd[recd.length-1];
            grd.getPlugin('plugInGrdAVMistake').startEdit(record, col);		
        }
    },

    onBtnAVLinkedOrgClick: function(button, e, eOpts) {
        var pan=Ext.ComponentQuery.query('#txtVRPan')[0];
        var selDate=Ext.ComponentQuery.query('#txtVRSelectionDate')[0];
        var message='';
        if(pan.getValue()==='')
        {
            message+='<BR>* कृपया पहिला प्यान भर्नुहोला।';

        }

        if(selDate.getValue()==='')
        {
            message+='<BR>* कृपया पहिला छनोट मिति भर्नुहोला।';
        }

        if(message!=='')
        {
            msg('INFO',message);
            return;
        }
        else
        {
            var grd = Ext.ComponentQuery.query('#grdLinkedOrg')[0];
            var rec={
                PAN:pan.getValue(),
                SelectionDate:selDate.getValue(),
                LinkedPan:'',
                Remarks:'',
                Action:'A'
            };
            if(grd.store.add(rec))
            {
                var btnAVLinkedOrgAdd= Ext.ComponentQuery.query('#btnAVLinkedOrg')[0];
                btnAVLinkedOrgAdd.disable(true);
            }

            var col = grd.headerCt.getHeaderAtIndex(0);
            var recd = grd.store.data.items;
            var record = recd[recd.length-1];
            grd.getPlugin('plugInGrdAVLinkedOrg').startEdit(record, col);		
        }
    },

    onBtnVRSubmitClick: function(button, e, eOpts) {
        var me =this;

        if(Ext.ComponentQuery.query('#hdnAVReportAction')[0].getValue()=='F')
        {
            msg('INFO','* यो भ्रमण रिपोर्ट सब्मिट भैसकेको छ।<BR> तपाई यो भ्रमण रिपोर्ट सच्याउन सक्नु हुन्न।');
            return;
        }
        else
        {
            var pan=Ext.ComponentQuery.query('#txtVRPan')[0].getValue();
            var visitDate=Ext.ComponentQuery.query('#txtVRVisitDate')[0].getValue();
            var periodFrom=Ext.ComponentQuery.query('#txtVRPeriodFrom')[0].getValue();
            var periodTo=Ext.ComponentQuery.query('#txtVRPeriodTo')[0].getValue();
            var closeDate=Ext.ComponentQuery.query('#txtVRCloseDate')[0].getValue();
            var errMsg='';

            if(!pan)
            {
                errMsg+='<BR>* तपाईले प्यान अनिवार्य रूपमा भर्नु पर्नेछ।';
            }
            if(!visitDate)
            {
                errMsg+='<BR>* तपाईले भ्रमण शुरू मिति अनिवार्य रूपमा भर्नु पर्नेछ।';
            }
            if(closeDate)
            {
                errMsg+='<BR>* तपाईले भ्रमण सकिएको मिति अनिवार्य रूपमा भर्नु पर्नेछ।';
            }
            if(!periodFrom||!periodTo)
            {
                errMsg+='<BR>* तपाईले परिक्षण अवधि अनिवार्य रूपमा भर्नु पर्नेछ।';
            }

            if(errMsg!=='')
            {
                msg('INFO',errMsg);
                return;
            }
            else
            {
                var form = button.up('form').getForm();
                me.SaveVisitSelection(form,'F');
            }
        }





    },

    onBtnVRCancelClick: function(button, e, eOpts) {

    },

    onTxtVRCloseDateBlur: function(component, e, eOpts) {
        var me=this;
        if(field.getValue!=='')
        {
            validateFutureDate(field.getValue(),'N',function(obj){

                field.focus();

            });
        }

    },

    onTxtVRPeriodFromBlur: function(component, e, eOpts) {
        var me=this;
        if(field.getValue!=='')
        {
            validateFutureDate(field.getValue(),'N',function(obj){

                field.focus();

            });
        }

    },

    onTxtVRPeriodToBlur: function(component, e, eOpts) {
        var me=this;
        if(field.getValue!=='')
        {
            validateFutureDate(field.getValue(),'N',function(obj){

                field.focus();

            });
        }

    },

    onTxtVRNextVisitDateBlur: function(component, e, eOpts) {
        var me=this;
        if(field.getValue!=='')
        {
            validateFutureDate(field.getValue(),'Y',function(obj){

                field.focus();

            });
        }

    },

    LoadVisitSelection: function() {
        var me=this;
        var pan=Ext.ComponentQuery.query('#txtVRPan')[0];
        var selectionDate=Ext.ComponentQuery.query('#txtVRSelectionDate')[0];


        Ext.Ajax.request({
            url: '../Handlers/Common/Visit/VisitSelectionHandler.ashx',
            params: {method:'GetVisitSelection',pan: pan.getValue(),selectionDate:selectionDate.getValue() },
            success: function(response){
                var JSONResponse=Ext.decode(response.responseText);
                var visitSelection=JSONResponse.root;
                if(JSONResponse.success=='true')
                {  
                    if(!visitSelection)
                    {
                        return;
                    }
                    if(visitSelection.Status!='F')
                    {
                        msg('INFO','* यो भ्रमण सब्मिट भएकेको छैन।<BR> कृपया पहिले यो भ्रमण सब्मिट गर्नु होला।');
                        return;
                    }

                    Ext.ComponentQuery.query('#ddlVRVisitType')[0].setValue(visitSelection.AVType);
                    Ext.ComponentQuery.query('#txtVRVisitDate')[0].setValue(visitSelection.VisitDate);
                    Ext.ComponentQuery.query('#hdnAVIT')[0].setValue(visitSelection.SelForIT);
                    Ext.ComponentQuery.query('#hdnAVVat')[0].setValue(visitSelection.SelForVat);
                    Ext.ComponentQuery.query('#hdnAVEx')[0].setValue(visitSelection.SelForExcise);
                    Ext.ComponentQuery.query('#hdnVSOfficeCode')[0].setValue(visitSelection.OffCode);
                    Ext.ComponentQuery.query('#hdnVSEntDate')[0].setValue(visitSelection.SelEntDate);


                    if(visitSelection.SelForIT=='T')
                    {
                        Ext.ComponentQuery.query('#hdnAVIT')[0].setValue('T');
                    }
                    else
                    {
                        Ext.ComponentQuery.query('#hdnAVIT')[0].setValue('F');
                        me.DisableAVYieldComponents('I');
                    }

                    if(visitSelection.SelForVat=='T')
                    {

                        Ext.ComponentQuery.query('#hdnAVVat')[0].setValue('T');
                    }
                    else
                    {
                        Ext.ComponentQuery.query('#hdnAVIT')[0].setValue('F');
                        me.DisableAVYieldComponents('V');
                    }

                    if(visitSelection.SelForExcise=='T')
                    {
                        Ext.ComponentQuery.query('#hdnAVEx')[0].setValue('T');
                    }
                    else
                    {
                        Ext.ComponentQuery.query('#hdnAVIT')[0].setValue('F');
                        me.DisableAVYieldComponents('E');
                    }


                    //Load Visit Report
                    if(visitSelection.VisitReport)
                    {
                        if(visitSelection.VisitReport.Status=='F')
                        {
                            msg('INFO','* यो भ्रमण रिपोर्ट सब्मिट भैसकेको छ।<BR> तपाई यो भ्रमण रिपोर्ट सच्याउन सक्नु हुन्न।');
                            Ext.ComponentQuery.query('#btnVRSave')[0].disable(true);
                            Ext.ComponentQuery.query('#btnVRSubmit')[0].disable(true);
                            return;
                        }



                        var visitReport=visitSelection.VisitReport;

                        Ext.ComponentQuery.query('#txtVRPeriodFrom')[0].setValue(visitReport.PeriodFrom);
                        Ext.ComponentQuery.query('#txtVRPeriodTo')[0].setValue(visitReport.PeriodTo);
                        Ext.ComponentQuery.query('#txtVRCloseDate')[0].setValue(visitReport.CloseDate);
                        //ComputerAcct:Ext.ComponentQuery.query('#rdbComputerEntryYes')[0].getValue()===true?'Y':'N',//
                        Ext.ComponentQuery.query('#txtVRRemarks')[0].setValue(visitReport.Remarks);
                        Ext.ComponentQuery.query('#txtVRNoOfEmployee')[0].setValue(visitReport.NoOfEmpl);
                        Ext.ComponentQuery.query('#txtVRNextVisitDate')[0].setValue(visitReport.NextVisitWhen);
                        Ext.ComponentQuery.query('#hdnAVReportAction')[0].setValue('E');


                        if(visitReport.ComputerAcct=='Y')
                        {
                            Ext.ComponentQuery.query('#rdbComputerEntryYes')[0].setValue(true);
                            Ext.ComponentQuery.query('#rdbComputerEntryNo')[0].setValue(false);

                        }
                        else
                        {
                            Ext.ComponentQuery.query('#rdbComputerEntryYes')[0].setValue(false);
                            Ext.ComponentQuery.query('#rdbComputerEntryNo')[0].setValue(true);
                        }



                    }
                    else
                    {
                        Ext.ComponentQuery.query('#hdnAVReportAction')[0].setValue('A');
                    }


                    //Load Visit Officer
                    var avOfficer=visitSelection.VisitOfficers;
                    var strAVOfficer = Ext.getStore('VisitOfficerStore');
                    strAVOfficer.removeAll();
                    strAVOfficer.add(avOfficer);


                    //Load Rep Mistake 
                    var avRepMistake=visitSelection.AVRepMistake;
                    var strAVRepMistake = Ext.getStore('AVRepMistakeStore');
                    strAVRepMistake.removeAll();
                    strAVRepMistake.add(avRepMistake);

                    //Load Rep Risk
                    var avRepRisk=visitSelection.AVRepRisk;
                    var strAVRepRisk = Ext.getStore('AVRepRiskStore');
                    strAVRepRisk.removeAll();
                    strAVRepRisk.add(avRepRisk);


                    //Load Rep Risk
                    var avLinkedOrg=visitSelection.AVLinkedOrg;
                    var strAVLinkedOrg = Ext.getStore('AVRepLInkedOrg');
                    strAVLinkedOrg.removeAll();
                    strAVLinkedOrg.add(avLinkedOrg);


                    //Load IT Yield
                    if(visitSelection.AVITYield)
                    {
                        var itYield=visitSelection.AVITYield;
                        Ext.ComponentQuery.query('#txtVRITPrimaryMAAmount')[0].setValue(itYield.PrimaryMaAmt);
                        Ext.ComponentQuery.query('#txtVRITPrimaryInterest')[0].setValue(itYield.PrimaryInterest);
                        Ext.ComponentQuery.query('#txtVRITPrimaryPenalty')[0].setValue(itYield.PrimaryPenalty);
                        Ext.ComponentQuery.query('#txtVRITPrimaryADCharge')[0].setValue(itYield.PrimaryADCharge);
                        Ext.ComponentQuery.query('#txtVRITFinalMAAmount')[0].setValue(itYield.FinalMAAmt);
                        Ext.ComponentQuery.query('#txtVRITFinalInterest')[0].setValue(itYield.FinalInterest);
                        Ext.ComponentQuery.query('#txtVRITFinalPenalty')[0].setValue(itYield.FinalPenalty);
                        Ext.ComponentQuery.query('#txtVRITFinalADCharge')[0].setValue(itYield.FinalADCharge);
                        Ext.ComponentQuery.query('#hdnAVITYieldAction')[0].setValue('E');

                    }
                    else
                    {   

                        Ext.ComponentQuery.query('#hdnAVITYieldAction')[0].setValue('A');
                    }

                    //Load Vat Yield
                    if(visitSelection.AVVatYield)
                    {
                        var vatYield=visitSelection.AVVatYield;
                        Ext.ComponentQuery.query('#txtVRVATPrimaryMAAmount')[0].setValue(vatYield.PrimaryMaAmt);
                        Ext.ComponentQuery.query('#txtVRVATPrimaryInterest')[0].setValue(vatYield.PrimaryInterest);
                        Ext.ComponentQuery.query('#txtVRVATPrimaryPenalty')[0].setValue(vatYield.PrimaryPenalty);
                        Ext.ComponentQuery.query('#txtVRVATPrimaryADCharge')[0].setValue(vatYield.PrimaryADCharge);
                        Ext.ComponentQuery.query('#txtVRVATFinalMAAmount')[0].setValue(vatYield.FinalMAAmt);
                        Ext.ComponentQuery.query('#txtVRVATFinalInterest')[0].setValue(vatYield.FinalInterest);
                        Ext.ComponentQuery.query('#txtVRVATFinalPenalty')[0].setValue(vatYield.FinalPenalty);
                        Ext.ComponentQuery.query('#txtVRVATFinalADCharge')[0].setValue(vatYield.FinalADCharge);
                        Ext.ComponentQuery.query('#hdnAVVATYieldAction')[0].setValue('E');
                    }
                    else
                    {
                        Ext.ComponentQuery.query('#hdnAVVATYieldAction')[0].setValue('A');
                    }

                    //Load Excise Yield
                    if(visitSelection.AVEXYield)
                    {
                        var exYield=visitSelection.AVEXYield;
                        Ext.ComponentQuery.query('#txtVREXPrimaryMAAmount')[0].setValue(exYield.PrimaryMaAmt);
                        Ext.ComponentQuery.query('#txtVREXPrimaryInterest')[0].setValue(exYield.PrimaryInterest);
                        Ext.ComponentQuery.query('#txtVREXPrimaryPenalty')[0].setValue(exYield.PrimaryPenalty);
                        Ext.ComponentQuery.query('#txtVREXPrimaryADCharge')[0].setValue(exYield.PrimaryADCharge);
                        Ext.ComponentQuery.query('#txtVREXFinalMAAmount')[0].setValue(exYield.FinalMAAmt);
                        Ext.ComponentQuery.query('#txtVREXFinalInterest')[0].setValue(exYield.FinalInterest);
                        Ext.ComponentQuery.query('#txtVREXFinalPenalty')[0].setValue(exYield.FinalPenalty);
                        Ext.ComponentQuery.query('#txtVREXFinalADCharge')[0].setValue(exYield.FinalADCharge);
                        Ext.ComponentQuery.query('#hdnAVEXYieldAction')[0].setValue('E');
                    }
                    else
                    {
                        Ext.ComponentQuery.query('#hdnAVEXYieldAction')[0].setValue('A');
                    }

                }

            }
        });
    },

    PrepareVisitReport: function(action) {
        var visitReport={
            PAN:Ext.ComponentQuery.query('#txtVRPan')[0].getValue(),
            SelectionDate:Ext.ComponentQuery.query('#txtVRSelectionDate')[0].getValue(),
            OffCode:Ext.get('offCode').dom.innerHTML,
            VisitDate:Ext.ComponentQuery.query('#txtVRVisitDate')[0].getValue(),
            CloseDate:Ext.ComponentQuery.query('#txtVRCloseDate')[0].getValue(),
            PeriodFrom:Ext.ComponentQuery.query('#txtVRPeriodFrom')[0].getValue(),
            PeriodTo:Ext.ComponentQuery.query('#txtVRPeriodTo')[0].getValue(),
            ControlCDate:'',//Ext.ComponentQuery.query('#txtVRSelectionDate')[0].getValue(),
            ComputerAcct:Ext.ComponentQuery.query('#rdbComputerEntryYes')[0].getValue()===true?'Y':'N',//
            Remarks:Ext.ComponentQuery.query('#txtVRRemarks')[0].getValue(),
            NoOfEmpl:Ext.ComponentQuery.query('#txtVRNoOfEmployee')[0].getValue(),
            NextVisitWhen:Ext.ComponentQuery.query('#txtVRNextVisitDate')[0].getValue(),
            VRepEntDate:Ext.get('nepDate').dom.innerHTML,
            UserIdRep:'',
            AvType:Ext.ComponentQuery.query('#ddlVRVisitType')[0].getValue(),
            Status:action,
            Action:Ext.ComponentQuery.query('#hdnAVReportAction')[0].getValue()
        };

        return visitReport;



    },

    PrepareAVITYield: function(status) {
        var    PrimaryMaAmt=Ext.ComponentQuery.query('#txtVRITPrimaryMAAmount')[0].getValue();
        var    PrimaryInterest=Ext.ComponentQuery.query('#txtVRITPrimaryInterest')[0].getValue();
        var    PrimaryPenalty=Ext.ComponentQuery.query('#txtVRITPrimaryPenalty')[0].getValue();
        var    PrimaryADCharge=Ext.ComponentQuery.query('#txtVRITPrimaryADCharge')[0].getValue();
        var    FinalMAAmt=Ext.ComponentQuery.query('#txtVRITFinalMAAmount')[0].getValue();
        var    FinalInterest=Ext.ComponentQuery.query('#txtVRITFinalInterest')[0].getValue();
        var    FinalPenalty=Ext.ComponentQuery.query('#txtVRITFinalPenalty')[0].getValue();
        var    FinalADCharge=Ext.ComponentQuery.query('#txtVRITFinalADCharge')[0].getValue();

        if(PrimaryMaAmt===null&&PrimaryInterest===null&&PrimaryPenalty===null&&PrimaryADCharge===null&&FinalMAAmt===null&&FinalInterest===null&&FinalPenalty===null&&FinalADCharge===null)
        {
            return null;
        }
        else
        {
            var avITYield={
                PAN:Ext.ComponentQuery.query('#txtVRPan')[0].getValue(),
                SelectionDate:Ext.ComponentQuery.query('#txtVRSelectionDate')[0].getValue(),
                AcctType:'10',
                PrimaryMaAmt:Ext.ComponentQuery.query('#txtVRITPrimaryMAAmount')[0].getValue(),
                PrimaryInterest:Ext.ComponentQuery.query('#txtVRITPrimaryInterest')[0].getValue(),
                PrimaryPenalty:Ext.ComponentQuery.query('#txtVRITPrimaryPenalty')[0].getValue(),
                PrimaryADCharge:Ext.ComponentQuery.query('#txtVRITPrimaryADCharge')[0].getValue(),
                FinalMAAmt:Ext.ComponentQuery.query('#txtVRITFinalMAAmount')[0].getValue(),
                FinalInterest:Ext.ComponentQuery.query('#txtVRITFinalInterest')[0].getValue(),
                FinalPenalty:Ext.ComponentQuery.query('#txtVRITFinalPenalty')[0].getValue(),
                FinalADCharge:Ext.ComponentQuery.query('#txtVRITFinalADCharge')[0].getValue(),
                Action:Ext.ComponentQuery.query('#hdnAVITYieldAction')[0].getValue()

            };
            return avITYield;
        }

    },

    PrepareAVVATYield: function(status) {
        var    PrimaryMaAmt=Ext.ComponentQuery.query('#txtVRVATPrimaryMAAmount')[0].getValue();
        var    PrimaryInterest=Ext.ComponentQuery.query('#txtVRVATPrimaryInterest')[0].getValue();
        var    PrimaryPenalty=Ext.ComponentQuery.query('#txtVRVATPrimaryPenalty')[0].getValue();
        var    PrimaryADCharge=Ext.ComponentQuery.query('#txtVRVATPrimaryADCharge')[0].getValue();
        var    FinalMAAmt=Ext.ComponentQuery.query('#txtVRVATFinalMAAmount')[0].getValue();
        var    FinalInterest=Ext.ComponentQuery.query('#txtVRVATFinalInterest')[0].getValue();
        var    FinalPenalty=Ext.ComponentQuery.query('#txtVRVATFinalPenalty')[0].getValue();
        var    FinalADCharge=Ext.ComponentQuery.query('#txtVRVATFinalADCharge')[0].getValue();


        if(PrimaryMaAmt===null&&PrimaryInterest===null&&PrimaryPenalty===null&&PrimaryADCharge===null&&FinalMAAmt===null&&FinalInterest===null&&FinalPenalty===null&&FinalADCharge===null)
        {
            return null;
        }
        else
        {


            var avVATYield={
                PAN:Ext.ComponentQuery.query('#txtVRPan')[0].getValue(),
                SelectionDate:Ext.ComponentQuery.query('#txtVRSelectionDate')[0].getValue(),
                AcctType:'00',
                PrimaryMaAmt:Ext.ComponentQuery.query('#txtVRVATPrimaryMAAmount')[0].getValue(),
                PrimaryInterest:Ext.ComponentQuery.query('#txtVRVATPrimaryInterest')[0].getValue(),
                PrimaryPenalty:Ext.ComponentQuery.query('#txtVRVATPrimaryPenalty')[0].getValue(),
                PrimaryADCharge:Ext.ComponentQuery.query('#txtVRVATPrimaryADCharge')[0].getValue(),
                FinalMAAmt:Ext.ComponentQuery.query('#txtVRVATFinalMAAmount')[0].getValue(),
                FinalInterest:Ext.ComponentQuery.query('#txtVRVATFinalInterest')[0].getValue(),
                FinalPenalty:Ext.ComponentQuery.query('#txtVRVATFinalPenalty')[0].getValue(),
                FinalADCharge:Ext.ComponentQuery.query('#txtVRVATFinalADCharge')[0].getValue(),
                Action:Ext.ComponentQuery.query('#hdnAVVATYieldAction')[0].getValue()

            };
            return avVATYield;
        }
    },

    PrepareAVEXYield: function(status) {
        var    PrimaryMaAmt=Ext.ComponentQuery.query('#txtVREXPrimaryMAAmount')[0].getValue();
        var    PrimaryInterest=Ext.ComponentQuery.query('#txtVREXPrimaryInterest')[0].getValue();
        var    PrimaryPenalty=Ext.ComponentQuery.query('#txtVREXPrimaryPenalty')[0].getValue();
        var    PrimaryADCharge=Ext.ComponentQuery.query('#txtVREXPrimaryADCharge')[0].getValue();
        var    FinalMAAmt=Ext.ComponentQuery.query('#txtVREXFinalMAAmount')[0].getValue();
        var    FinalInterest=Ext.ComponentQuery.query('#txtVREXFinalInterest')[0].getValue();
        var    FinalPenalty=Ext.ComponentQuery.query('#txtVREXFinalPenalty')[0].getValue();
        var    FinalADCharge=Ext.ComponentQuery.query('#txtVREXFinalADCharge')[0].getValue();


        if(PrimaryMaAmt===null&&PrimaryInterest===null&&PrimaryPenalty===null&&PrimaryADCharge===null&&FinalMAAmt===null&&FinalInterest===null&&FinalPenalty===null&&FinalADCharge===null)
        {
            return null;
        }
        else
        {
            var avEXYield={
                PAN:Ext.ComponentQuery.query('#txtVRPan')[0].getValue(),
                SelectionDate:Ext.ComponentQuery.query('#txtVRSelectionDate')[0].getValue(),
                AcctType:'20',
                PrimaryMaAmt:Ext.ComponentQuery.query('#txtVREXPrimaryMAAmount')[0].getValue(),
                PrimaryInterest:Ext.ComponentQuery.query('#txtVREXPrimaryInterest')[0].getValue(),
                PrimaryPenalty:Ext.ComponentQuery.query('#txtVREXPrimaryPenalty')[0].getValue(),
                PrimaryADCharge:Ext.ComponentQuery.query('#txtVREXPrimaryADCharge')[0].getValue(),
                FinalMAAmt:Ext.ComponentQuery.query('#txtVREXFinalMAAmount')[0].getValue(),
                FinalInterest:Ext.ComponentQuery.query('#txtVREXFinalInterest')[0].getValue(),
                FinalPenalty:Ext.ComponentQuery.query('#txtVREXFinalPenalty')[0].getValue(),
                FinalADCharge:Ext.ComponentQuery.query('#txtVREXFinalADCharge')[0].getValue(),
                Action:Ext.ComponentQuery.query('#hdnAVEXYieldAction')[0].getValue()

            };
            return avEXYield;
        }
    },

    SaveVisitSelection: function(form, action) {
        var me=this;

        var strMsg='';
        var pan=Ext.ComponentQuery.query('#txtVRPan')[0];
        var selectionDate=Ext.ComponentQuery.query('#txtVRSelectionDate')[0];
        var offCode=Ext.get('offCode').dom.innerHTML;
        var visitDate=Ext.ComponentQuery.query('#txtVRVisitDate')[0];
        //var cancelDate=Ext.ComponentQuery.query('#txtVRCancelDate')[0];
        var closeDate=Ext.ComponentQuery.query('#txtVRCloseDate')[0];
        var periodFrom=Ext.ComponentQuery.query('#txtVRPeriodFrom')[0];
        var periodTo=Ext.ComponentQuery.query('#txtVRPeriodTo')[0];
        var vRepEntDate=Ext.get('nepDate').dom.innerHTML;
        var avType=Ext.ComponentQuery.query('#ddlVRVisitType')[0];

        var selForIT=Ext.ComponentQuery.query('#hdnAVIT')[0].getValue();
        var selForVat=Ext.ComponentQuery.query('#hdnAVVat')[0].getValue();
        var selForEx=Ext.ComponentQuery.query('#hdnAVEx')[0].getValue();

        var visitOfficers=(!Ext.getStore('VisitOfficerStore'))?null:getJson(Ext.getStore('VisitOfficerStore'));
        var avRiskType=(!Ext.getStore('AVRepRiskStore'))?null:getJson(Ext.getStore('AVRepRiskStore'));
        var avMistake=(!Ext.getStore('AVRepMistakeStore'))?null:getJson(Ext.getStore('AVRepMistakeStore'));
        var avLinkedOrg=(!Ext.getStore('AVRepLInkedOrg'))?null:getJson(Ext.getStore('AVRepLInkedOrg'));


        var objVisitSelection={

            PAN : pan.getValue(),
            SelectionDate : selectionDate.getValue(),
            VisitDate : visitDate.getValue(),
            SelForIT:selForIT,
            SelForVat:selForVat,
            SelForExcise:selForEx,
            CloseDate : closeDate.getValue(),
            PeriodFrom : periodFrom.getValue(),
            PeriodTo : periodTo.getValue(),
            OffCode:Ext.ComponentQuery.query('#hdnVSOfficeCode')[0].getValue(),
            SelEntDate:Ext.ComponentQuery.query('#hdnVSEntDate')[0].getValue(),
            VRepEntDate : vRepEntDate,
            AVType : avType.getValue(),
            VisitReport:me.PrepareVisitReport(action),
            VisitOfficers:visitOfficers,
            AVITYield:me.PrepareAVITYield(),
            AVVatYield:me.PrepareAVVATYield(),
            AVEXYield:me.PrepareAVEXYield(),
            AVRepRisk:avRiskType,
            AVRepMistake:avMistake,
            AVLinkedOrg:avLinkedOrg,
            Status:'F',
            Action:'E'

        };



        if(strMsg!=='')
        {
            msg('INFO',strMsg);
        }
        else
        {

            //var form=Ext.getCmp('frmVisitReport');

            //var form = button.up('form').getForm();
            if(form)
            {
                //console.log(form);
            }



            //---------------------------------------------------------------------------------------
            //--------------------------  SAVE OR EDIT VISIT SELECTION------------------------------- 
            //---------------------------------------------------------------------------------------

            if(form.isValid()){

                form.submit({
                    url: '../Handlers/Common/Visit/VisitSelectionHandler.ashx',
                    waitMsg: 'Saving Visit Selection..',
                    params:{method:'SaveVisitSelection',
                    visitSelection:JSON.stringify(objVisitSelection)},
                    success: function(p1, o) {
                        var JSONResponse=Ext.decode(o.response.responseText);

                        if(JSONResponse.success=='True')
                        {  
                            Ext.Msg.show({
                                title:'INFO',
                                msg: action=='I'?'भ्रमण रिपोर्ट सफलतापूर्वक सेभ भयो':'भ्रमण रिपोर्ट सफलतापूर्वक सब्मिट भयो',
                                buttons: Ext.Msg.OK,
                                fn: function (btn){
                                    if(btn=='ok'){
                                        //Ext.ComponentQuery.query('#lblSPAction')[0].setValue('');
                                        if(action=='I')
                                        {
                                            Ext.ComponentQuery.query('#hdnVRAction')[0].setValue('E');
                                            Ext.ComponentQuery.query('#hdnAVReportAction')[0].setValue('E');
                                            Ext.ComponentQuery.query('#hdnAVITYieldAction')[0].setValue('E');
                                            Ext.ComponentQuery.query('#hdnAVVATYieldAction')[0].setValue('E');
                                            Ext.ComponentQuery.query('#hdnAVEXYieldAction')[0].setValue('E');
                                        }
                                        else if(action=='F')
                                        {
                                            Ext.ComponentQuery.query('#hdnVRAction')[0].setValue('F');
                                            Ext.ComponentQuery.query('#hdnAVReportAction')[0].setValue('F');
                                        }

                                        //me.ResetSpecialPenaltyControls();


                                    }
                                }
                            });
                        }
                        else
                        {
                            msg('INFO','Failed Saving Visit Report');
                        }
                    },
                    failure:function(fp, o) {
                        alert("err");
                    }
                });

            }

            //---------------------------------------------------------------------------------------
            //-------------------------- END SAVE OR EDIT VISIT SELECTION----------------------------
            //---------------------------------------------------------------------------------------

        }


        /*
        PAN = a.PAN,
        SelectionDate = a.SelectionDate,
        OffCode = a.OffCode,
        VisitDate = a.VisitDate,
        CancelDate = a.CancelDate,
        CancelUser = a.CancelUser,
        CloseDate = a.CloseDate,
        PeriodFrom = a.PeriodFrom,
        PeriodTo = a.PeriodTo,
        SelEntDate = a.SelEntDate,
        VRepEntDate = a.VRepEntDate,
        AVType = a.AVType,
        SelForVat = a.SelForVat,
        SelForIT = a.SelForIT,
        SelForExcise = a.SelForExcise,
        UserIdSel = a.UserIdSel,
        TranNo = a.TranNo,
        VisitReport=a.VisitReport==null?null:ToDataTransferObject(a.VisitReport),
        VisitOfficers = a.VisitOfficers==null?null:ToDataTransferObjects(a.VisitOfficers).ToList(),
        AVRepMistake=a.AVRepMistake==null? null:ToDataTransferObjects(a.AVRepMistake).ToList(),
        AVRepRisk=a.AVRepRisk==null?null:ToDataTransferObjects(a.AVRepRisk).ToList(),
        AVLinkedOrg=a.AVLinkedOrg==null?null:ToDataTransferObjects(a.AVLinkedOrg).ToList(),
        AVITYield=a.AVITYield==null?null:ToDataTransferObject(a.AVITYield),
        AVVatYield=a.AVVatYield==null?null:ToDataTransferObject(a.AVVatYield),
        AVEXYield=a.AVEXYield==null?null:ToDataTransferObject(a.AVEXYield),
        Action = a.Action
        */
    },

    DisableAVYieldComponents: function(type) {
        if(type=='I')
        {
            Ext.ComponentQuery.query('#txtVRITPrimaryMAAmount')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVRITPrimaryInterest')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVRITPrimaryPenalty')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVRITPrimaryADCharge')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVRITFinalMAAmount')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVRITFinalInterest')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVRITFinalPenalty')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVRITFinalADCharge')[0].setReadOnly(true);
        }
        else if(type=='V')
        {
            Ext.ComponentQuery.query('#txtVRVATPrimaryMAAmount')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVRVATPrimaryInterest')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVRVATPrimaryPenalty')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVRVATPrimaryADCharge')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVRVATFinalMAAmount')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVRVATFinalInterest')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVRVATFinalPenalty')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVRVATFinalADCharge')[0].setReadOnly(true);

        }
        else if(type=='E')
        {
            Ext.ComponentQuery.query('#txtVREXPrimaryMAAmount')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVREXPrimaryInterest')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVREXPrimaryPenalty')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVREXPrimaryADCharge')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVREXFinalMAAmount')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVREXFinalInterest')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVREXFinalPenalty')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtVREXFinalADCharge')[0].setReadOnly(true);


        }
    },

    init: function(application) {
        this.control({
            "#frmVisitReport": {
                afterrender: this.onFrmVisitReportAfterRender
            },
            "#btnAVOfficerAdd": {
                click: this.onBtnAVOfficerAddClick
            },
            "#txtVRSelectionDate": {
                blur: this.onTxtVRSelectionDateBlur
            },
            "#btnVRSave": {
                click: this.onBtnVRSaveClick
            },
            "#btnAVRiskAdd": {
                click: this.onBtnAVRiskAddClick
            },
            "#btnAVMistakeAdd": {
                click: this.onBtnAVMistakeAddClick
            },
            "#btnAVLinkedOrg": {
                click: this.onBtnAVLinkedOrgClick
            },
            "#btnVRSubmit": {
                click: this.onBtnVRSubmitClick
            },
            "#btnVRCancel": {
                click: this.onBtnVRCancelClick
            },
            "#txtVRCloseDate": {
                blur: this.onTxtVRCloseDateBlur
            },
            "#txtVRPeriodFrom": {
                blur: this.onTxtVRPeriodFromBlur
            },
            "#txtVRPeriodTo": {
                blur: this.onTxtVRPeriodToBlur
            },
            "#txtVRNextVisitDate": {
                blur: this.onTxtVRNextVisitDateBlur
            }
        });
    }

});
