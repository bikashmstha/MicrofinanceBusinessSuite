/*
 * File: app/view/SelfAssessmentD01.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.SelfAssessmentD01', {
    extend: 'Ext.panel.Panel',

    frame: true,
    height: 500,
    itemId: 'pnlSelfAssessmentD01',
    maxHeight: 500,
    minHeight: 500,
    layout: {
        align: 'stretch',
        type: 'vbox'
    },
    collapsed: false,
    title: 'Self Assessment D01',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    flex: 1,
                    frame: true,
                    height: 450,
                    itemId: 'SelfAssessmentDoneFormPanel',
                    maxHeight: 450,
                    minHeight: 450,
                    width: 859,
                    autoScroll: true,
                    bodyPadding: 10,
                    items: [
                        {
                            xtype: 'panel',
                            frame: true,
                            height: 130,
                            itemId: 'selfAssmt',
                            margin: '1 0 1 0',
                            bodyPadding: '10 10 10 10',
                            collapsed: false,
                            frameHeader: false,
                            title: 'आय विवरण',
                            titleCollapse: true,
                            items: [
                                {
                                    xtype: 'label',
                                    margin: '0 0 0 460',
                                    style: 'font-size: 15px;\r\n font-weight: bolder;',
                                    text: 'आय विवरण'
                                },
                                {
                                    xtype: 'container',
                                    height: 28,
                                    items: [
                                        {
                                            xtype: 'label',
                                            margin: '0 0 0 180',
                                            style: 'font-size:12.5px;',
                                            text: '(नेपालमा स्रोत रहेको व्यवसायबाट मात्र यस आयबर्षमा रू. २० लाख सम्म कारोवार र रू. २ लाख सम्म आय हुने प्राकृतिक व्यक्तिको लागि)'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    height: 30,
                                    margin: '0 0 0 5',
                                    layout: {
                                        type: 'column'
                                    },
                                    items: [
                                        {
                                            xtype: 'combobox',
                                            itemId: 'cboFiscalYearSADone',
                                            width: 150,
                                            fieldLabel: 'आयवर्ष ',
                                            labelSeparator: ' ',
                                            labelWidth: 55,
                                            enableKeyEvents: true,
                                            displayField: 'fiscalYear',
                                            store: 'FiscalYear',
                                            valueField: 'fiscalYear',
                                            listeners: {
                                                select: {
                                                    fn: me.onCboFiscalYearSADoneSelect,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'displayfield',
                                            height: 30,
                                            itemId: 'txtTSOsaDone',
                                            margin: '0 0 0 60',
                                            maxWidth: 350,
                                            minWidth: 200,
                                            width: 200,
                                            fieldLabel: 'आ.रा.का. को नाम',
                                            fieldStyle: 'font-weight:bold'
                                        },
                                        {
                                            xtype: 'textfield',
                                            itemId: 'txtSubmissionNoTest',
                                            maxWidth: 220,
                                            width: 220,
                                            fieldLabel: 'सब्मिशन न.',
                                            fieldStyle: 'color:#1A0A4A;',
                                            readOnly: true,
                                            enableKeyEvents: true,
                                            enforceMaxLength: true,
                                            maskRe: /[0-9]/,
                                            maxLength: 12,
                                            size: 9,
                                            listeners: {
                                                keypress: {
                                                    fn: me.onTxtSubmissionNoTestKeypress,
                                                    scope: me
                                                },
                                                keyup: {
                                                    fn: me.onTxtSubmissionNoTestKeyup,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'textfield',
                                            itemId: 'txtSADoneFromDate',
                                            margin: '0 0 0 50',
                                            width: 300,
                                            fieldLabel: 'करोवार बन्द भएको भए बन्द भएको मिति',
                                            labelWidth: 200,
                                            emptyText: '____ \ __ \ __',
                                            listeners: {
                                                blur: {
                                                    fn: me.onTxtSADoneFromDateBlur,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'hiddenfield',
                                            itemId: 'hdnOfficeCodeSADone',
                                            fieldLabel: 'Office Code'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            frame: true,
                            height: 200,
                            itemId: 'oneSelfAssessment',
                            margin: '1 0 1 0',
                            minHeight: 200,
                            bodyPadding: '10 10 10 10',
                            animCollapse: false,
                            collapseFirst: false,
                            collapsed: false,
                            title: '१ करदाता सम्बन्धी विवरण',
                            items: [
                                {
                                    xtype: 'container',
                                    height: 30,
                                    layout: {
                                        align: 'stretch',
                                        type: 'hbox'
                                    },
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            flex: 1,
                                            itemId: 'txtPanSTDone',
                                            maxWidth: 150,
                                            width: 100,
                                            fieldLabel: 'स्था.ले.न.',
                                            labelSeparator: ' ',
                                            labelWidth: 59,
                                            emptyText: ' | | | | | | | |',
                                            enableKeyEvents: true,
                                            enforceMaxLength: true,
                                            maskRe: /[0-9]/,
                                            maxLength: 9,
                                            minLength: 9,
                                            size: 9
                                        },
                                        {
                                            xtype: 'textfield',
                                            flex: 1,
                                            margins: '0 0 0 50',
                                            itemId: 'txtAcctType',
                                            maxWidth: 130,
                                            minWidth: 130,
                                            width: 130,
                                            fieldLabel: 'खाताको किसिम',
                                            labelSeparator: ' ',
                                            readOnly: true
                                        },
                                        {
                                            xtype: 'container',
                                            flex: 1,
                                            margins: '0 0 0 5',
                                            layout: {
                                                align: 'stretch',
                                                type: 'hbox'
                                            },
                                            items: [
                                                {
                                                    xtype: 'hiddenfield',
                                                    itemId: 'hdnUsernameSADone',
                                                    fieldLabel: 'Label'
                                                },
                                                {
                                                    xtype: 'hiddenfield',
                                                    flex: 1,
                                                    itemId: 'hdnAction',
                                                    fieldLabel: 'Label'
                                                },
                                                {
                                                    xtype: 'hiddenfield',
                                                    flex: 1,
                                                    itemId: 'hdnToMakeEnableOrDisable',
                                                    fieldLabel: 'Label'
                                                },
                                                {
                                                    xtype: 'hiddenfield',
                                                    flex: 1,
                                                    itemId: 'hdnActionDisable',
                                                    fieldLabel: 'Label'
                                                },
                                                {
                                                    xtype: 'hiddenfield',
                                                    flex: 1,
                                                    itemId: 'hdnOffCodeSADone',
                                                    fieldLabel: 'Label'
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtNameSTDone',
                                    margin: '0 0 0 5',
                                    width: 400,
                                    fieldLabel: 'नाम',
                                    labelSeparator: ' ',
                                    labelWidth: 53,
                                    readOnly: true
                                },
                                {
                                    xtype: 'container',
                                    height: 65,
                                    margin: '0 0 0 5',
                                    layout: {
                                        align: 'stretch',
                                        type: 'hbox'
                                    },
                                    items: [
                                        {
                                            xtype: 'label',
                                            flex: 1,
                                            margins: '',
                                            maxWidth: 50,
                                            text: 'ठेगाना'
                                        },
                                        {
                                            xtype: 'fieldset',
                                            flex: 1,
                                            margins: '0 0 0 8',
                                            maxWidth: 70,
                                            minWidth: 20,
                                            layout: {
                                                align: 'stretch',
                                                type: 'vbox'
                                            },
                                            items: [
                                                {
                                                    xtype: 'label',
                                                    flex: 1,
                                                    margins: '0 0 0 7',
                                                    text: 'घर न.'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    itemId: 'txtHouseNoSADone',
                                                    minHeight: 25,
                                                    minWidth: 45,
                                                    fieldLabel: '',
                                                    readOnly: true
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'fieldset',
                                            flex: 1,
                                            maxWidth: 60,
                                            layout: {
                                                align: 'stretch',
                                                type: 'vbox'
                                            },
                                            items: [
                                                {
                                                    xtype: 'label',
                                                    flex: 1,
                                                    margins: '0 0 0 5',
                                                    text: 'वार्ड न.'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    itemId: 'txtWardSADone',
                                                    maxHeight: 30,
                                                    maxWidth: 45,
                                                    fieldLabel: '',
                                                    readOnly: true
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'fieldset',
                                            flex: 1,
                                            minWidth: 200,
                                            width: 200,
                                            layout: {
                                                align: 'stretch',
                                                type: 'vbox'
                                            },
                                            items: [
                                                {
                                                    xtype: 'label',
                                                    flex: 1,
                                                    margins: '0 0 0 70',
                                                    text: 'गाउ /टोल र बाटोको नाम'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    itemId: 'txtToleSADone',
                                                    maxHeight: 25,
                                                    fieldLabel: '',
                                                    readOnly: true
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'fieldset',
                                            flex: 1,
                                            minWidth: 350,
                                            width: 350,
                                            layout: {
                                                align: 'stretch',
                                                type: 'vbox'
                                            },
                                            items: [
                                                {
                                                    xtype: 'radiogroup',
                                                    flex: 1,
                                                    margins: '0 0 0 12',
                                                    width: 305,
                                                    layout: {
                                                        type: 'column'
                                                    },
                                                    fieldLabel: '',
                                                    vertical: true,
                                                    items: [
                                                        {
                                                            xtype: 'radiofield',
                                                            itemId: 'rbdMM',
                                                            margin: '0 12 0 0',
                                                            readOnly: true,
                                                            boxLabel: 'म. न. पा.'
                                                        },
                                                        {
                                                            xtype: 'radiofield',
                                                            itemId: 'rbdSM',
                                                            margin: '0 12 0 0',
                                                            readOnly: true,
                                                            boxLabel: 'उ. म. न. पा.'
                                                        },
                                                        {
                                                            xtype: 'radiofield',
                                                            itemId: 'rbdMN',
                                                            margin: '0 12 0 0',
                                                            readOnly: true,
                                                            boxLabel: 'न. पा.'
                                                        },
                                                        {
                                                            xtype: 'radiofield',
                                                            itemId: 'rbdVD',
                                                            margin: '',
                                                            readOnly: true,
                                                            boxLabel: 'गा. वि. स.'
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    itemId: 'txtMetroTypeSADone',
                                                    maxHeight: 25,
                                                    fieldLabel: '',
                                                    readOnly: true
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'fieldset',
                                            flex: 1,
                                            layout: {
                                                align: 'stretch',
                                                type: 'vbox'
                                            },
                                            items: [
                                                {
                                                    xtype: 'label',
                                                    flex: 1,
                                                    margins: '0 0 0 100',
                                                    text: 'जिल्ला'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    itemId: 'txtDistrictDone',
                                                    maxHeight: 25,
                                                    fieldLabel: '',
                                                    readOnly: true
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    height: 30,
                                    layout: {
                                        align: 'stretch',
                                        type: 'hbox'
                                    },
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            flex: 1,
                                            margins: '0 0 0 5',
                                            itemId: 'txtPhoneSADone',
                                            maxWidth: 200,
                                            minWidth: 200,
                                            width: 200,
                                            fieldLabel: 'फोन ',
                                            labelSeparator: ' ',
                                            labelWidth: 53,
                                            readOnly: true
                                        },
                                        {
                                            xtype: 'textfield',
                                            flex: 1,
                                            margins: '0 0 0 40',
                                            itemId: 'txtFaxSADone',
                                            maxWidth: 200,
                                            minWidth: 200,
                                            width: 200,
                                            fieldLabel: 'फ्याक्श',
                                            labelSeparator: ' ',
                                            labelWidth: 40,
                                            readOnly: true
                                        },
                                        {
                                            xtype: 'textfield',
                                            flex: 1,
                                            margins: '0 0 0 40',
                                            itemId: 'txtEmailSADone',
                                            fieldLabel: 'इमेल ',
                                            labelSeparator: ' ',
                                            labelWidth: 40,
                                            readOnly: true
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    height: 30,
                                    layout: {
                                        align: 'stretch',
                                        type: 'hbox'
                                    },
                                    items: [
                                        {
                                            xtype: 'hiddenfield',
                                            flex: 1,
                                            itemId: 'hdnTaxId',
                                            fieldLabel: 'Label'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            frame: true,
                            itemId: 'twoSelfAssessment',
                            margin: '1 0 1 0',
                            maxHeight: 125,
                            minHeight: 125,
                            animCollapse: false,
                            collapsed: false,
                            frameHeader: false,
                            title: '२ फर्म सम्वन्धी विवरण',
                            items: [
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtNameDtwo',
                                    margin: '8 0 0 5',
                                    width: 400,
                                    fieldLabel: 'नाम',
                                    labelSeparator: ' ',
                                    labelWidth: 53,
                                    readOnly: true
                                },
                                {
                                    xtype: 'container',
                                    height: 65,
                                    margin: '0 0 0 5',
                                    layout: {
                                        align: 'stretch',
                                        type: 'hbox'
                                    },
                                    items: [
                                        {
                                            xtype: 'label',
                                            flex: 1,
                                            margins: '',
                                            maxWidth: 50,
                                            text: 'ठेगाना'
                                        },
                                        {
                                            xtype: 'fieldset',
                                            flex: 1,
                                            margins: '0 0 0 8',
                                            height: 80,
                                            maxWidth: 60,
                                            layout: {
                                                align: 'stretch',
                                                type: 'vbox'
                                            },
                                            items: [
                                                {
                                                    xtype: 'label',
                                                    flex: 1,
                                                    margins: '0 0 0 7',
                                                    width: 28,
                                                    text: 'घर न.'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    itemId: 'txtHouseNoDtwo',
                                                    maxHeight: 25,
                                                    maxWidth: 45,
                                                    fieldLabel: '',
                                                    readOnly: true
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'fieldset',
                                            flex: 1,
                                            maxWidth: 60,
                                            layout: {
                                                align: 'stretch',
                                                type: 'vbox'
                                            },
                                            items: [
                                                {
                                                    xtype: 'label',
                                                    flex: 1,
                                                    margins: '0 0 0 3',
                                                    width: 86,
                                                    text: 'वार्ड न.'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    itemId: 'txtWardDtwo',
                                                    maxHeight: 25,
                                                    maxWidth: 40,
                                                    fieldLabel: '',
                                                    readOnly: true
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'fieldset',
                                            flex: 1,
                                            minWidth: 200,
                                            width: 200,
                                            layout: {
                                                align: 'stretch',
                                                type: 'vbox'
                                            },
                                            items: [
                                                {
                                                    xtype: 'label',
                                                    flex: 1,
                                                    margins: '0 0 0 50',
                                                    height: 58,
                                                    width: 145,
                                                    text: 'गाउ /टोल र बाटोको नाम'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    itemId: 'txtToleDtwo',
                                                    maxHeight: 25,
                                                    fieldLabel: '',
                                                    readOnly: true
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'fieldset',
                                            flex: 1,
                                            minWidth: 350,
                                            width: 350,
                                            layout: {
                                                align: 'stretch',
                                                type: 'vbox'
                                            },
                                            items: [
                                                {
                                                    xtype: 'radiogroup',
                                                    flex: 1,
                                                    margins: '0 0 0 26',
                                                    width: 179,
                                                    layout: {
                                                        type: 'column'
                                                    },
                                                    fieldLabel: '',
                                                    vertical: true,
                                                    items: [
                                                        {
                                                            xtype: 'radiofield',
                                                            itemId: 'rbdMMTwo',
                                                            margin: '',
                                                            readOnly: true,
                                                            boxLabel: 'म. न. पा.'
                                                        },
                                                        {
                                                            xtype: 'radiofield',
                                                            itemId: 'rbdSMTwo',
                                                            margin: '0 0 0 10',
                                                            readOnly: true,
                                                            boxLabel: 'उ. म. न. पा.'
                                                        },
                                                        {
                                                            xtype: 'radiofield',
                                                            itemId: 'rbdMNTwo',
                                                            margin: '0 0 0 10',
                                                            readOnly: true,
                                                            boxLabel: 'न. पा.'
                                                        },
                                                        {
                                                            xtype: 'radiofield',
                                                            itemId: 'rbdVDTwo',
                                                            margin: '0 0 0 10',
                                                            readOnly: true,
                                                            boxLabel: 'गा. वि. स.'
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    itemId: 'txtMetroDtwo',
                                                    fieldLabel: '',
                                                    readOnly: true
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'fieldset',
                                            flex: 1,
                                            layout: {
                                                align: 'stretch',
                                                type: 'vbox'
                                            },
                                            items: [
                                                {
                                                    xtype: 'label',
                                                    flex: 1,
                                                    margins: '0 0 0 100',
                                                    width: 86,
                                                    text: 'जिल्ला'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    itemId: 'txtDistrictDtwo',
                                                    maxHeight: 25,
                                                    fieldLabel: '',
                                                    readOnly: true
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            frame: true,
                            height: 275,
                            itemId: 'fourSelfAssessment',
                            maxHeight: 275,
                            layout: {
                                align: 'stretch',
                                type: 'vbox'
                            },
                            bodyPadding: '10 10 10 10',
                            collapsed: false,
                            title: '३ करको गणना',
                            items: [
                                {
                                    xtype: 'container',
                                    flex: 1,
                                    maxHeight: 23,
                                    items: [
                                        {
                                            xtype: 'label',
                                            margin: '0 0 0 525',
                                            text: 'रू.'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    height: 85,
                                    layout: {
                                        align: 'stretch',
                                        padding: '1 0 0 0',
                                        type: 'vbox'
                                    },
                                    items: [
                                        {
                                            xtype: 'fieldset',
                                            margins: '0 1 0 10',
                                            maxHeight: 83,
                                            minHeight: 83,
                                            padding: '5 0 0 0',
                                            title: '',
                                            items: [
                                                {
                                                    xtype: 'container',
                                                    margin: '2 0 0 2',
                                                    layout: {
                                                        type: 'column'
                                                    },
                                                    items: [
                                                        {
                                                            xtype: 'label',
                                                            text: '१'
                                                        },
                                                        {
                                                            xtype: 'textfield',
                                                            columnWidth: 0.7,
                                                            itemId: 'txtInclusionSADone',
                                                            margin: '0 0 0 15',
                                                            width: 300,
                                                            fieldLabel: 'कारोवार रकम',
                                                            labelSeparator: ' ',
                                                            labelWidth: 350,
                                                            fieldStyle: 'text-align:right;',
                                                            enableKeyEvents: true,
                                                            enforceMaxLength: true,
                                                            maskRe: /[0-9]/,
                                                            maxLength: 7,
                                                            listeners: {
                                                                blur: {
                                                                    fn: me.onTxtInclusionSADoneBlur,
                                                                    scope: me
                                                                },
                                                                keypress: {
                                                                    fn: me.onTxtInclusionSADoneKeypress,
                                                                    scope: me
                                                                },
                                                                keyup: {
                                                                    fn: me.onTxtInclusionSADoneKeyup,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'hiddenfield',
                                                            itemId: 'hdnAssmtdtlSn',
                                                            fieldLabel: 'Label'
                                                        },
                                                        {
                                                            xtype: 'hiddenfield',
                                                            itemId: 'hdnAssmtDetailChildDOne',
                                                            fieldLabel: 'Label'
                                                        },
                                                        {
                                                            xtype: 'hiddenfield',
                                                            itemId: 'hdnTranNo',
                                                            fieldLabel: 'Label'
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'container',
                                                    margin: '2 0 0 2',
                                                    layout: {
                                                        type: 'column'
                                                    },
                                                    items: [
                                                        {
                                                            xtype: 'label',
                                                            text: '२'
                                                        },
                                                        {
                                                            xtype: 'textfield',
                                                            columnWidth: 0.7,
                                                            itemId: 'txtExpensesSADone',
                                                            margin: '0 0 0 15',
                                                            width: 300,
                                                            fieldLabel: 'कट्टी हुने रकम',
                                                            labelSeparator: ' ',
                                                            labelWidth: 350,
                                                            fieldStyle: 'text-align:right;',
                                                            enableKeyEvents: true,
                                                            enforceMaxLength: true,
                                                            maskRe: /[0-9]/,
                                                            maxLength: 7,
                                                            listeners: {
                                                                keypress: {
                                                                    fn: me.onTxtExpensesSADoneKeypress,
                                                                    scope: me
                                                                },
                                                                blur: {
                                                                    fn: me.onTxtExpensesSADoneBlur,
                                                                    scope: me
                                                                },
                                                                keyup: {
                                                                    fn: me.onTxtExpensesSADoneKeyup,
                                                                    scope: me
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'container',
                                                    height: 29,
                                                    margin: '2 0 0 2',
                                                    layout: {
                                                        type: 'column'
                                                    },
                                                    items: [
                                                        {
                                                            xtype: 'label',
                                                            text: '३'
                                                        },
                                                        {
                                                            xtype: 'textfield',
                                                            columnWidth: 0.7,
                                                            itemId: 'txtAssessableIncomeSADone',
                                                            margin: '0 0 0 15',
                                                            width: 500,
                                                            fieldLabel: 'आय &nbsp;&nbsp;&nbsp;&nbsp;&nbsp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp(१-२)  ',
                                                            labelSeparator: ' ',
                                                            labelWidth: 350,
                                                            fieldStyle: 'text-align:right;',
                                                            readOnly: true,
                                                            maskRe: /[0-9]/
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    height: 120,
                                    layout: {
                                        align: 'stretch',
                                        padding: '1 0 0 0',
                                        type: 'vbox'
                                    },
                                    items: [
                                        {
                                            xtype: 'fieldset',
                                            margins: '0 1 0 10',
                                            maxHeight: 115,
                                            minHeight: 130,
                                            padding: '5 0 0 0',
                                            title: '',
                                            items: [
                                                {
                                                    xtype: 'container',
                                                    margin: '2 0 0 2',
                                                    layout: {
                                                        type: 'column'
                                                    },
                                                    items: [
                                                        {
                                                            xtype: 'label',
                                                            text: '४'
                                                        },
                                                        {
                                                            xtype: 'textfield',
                                                            columnWidth: 0.7,
                                                            itemId: 'txtSumTaxLiabilitySADone',
                                                            margin: '0 0 0 15',
                                                            width: 300,
                                                            fieldLabel: 'लाग्ने कर',
                                                            labelSeparator: ' ',
                                                            labelWidth: 350,
                                                            fieldStyle: 'text-align:right;',
                                                            readOnly: true,
                                                            emptyText: 'लाग्ने करको लागी कारोबार रकम छान्नुहोस्....',
                                                            maskRe: /[0-9]/
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'container',
                                                    margin: '2 0 0 2',
                                                    layout: {
                                                        type: 'column'
                                                    },
                                                    items: [
                                                        {
                                                            xtype: 'label',
                                                            text: '५'
                                                        },
                                                        {
                                                            xtype: 'textfield',
                                                            columnWidth: 0.7,
                                                            itemId: 'txt117SADone',
                                                            margin: '0 0 0 15',
                                                            width: 300,
                                                            fieldLabel: 'दफा ११७ वमोजिमको शुल्क',
                                                            labelSeparator: ' ',
                                                            labelWidth: 350,
                                                            fieldStyle: 'text-align:right;',
                                                            enableKeyEvents: true,
                                                            maskRe: /[0-9]/,
                                                            listeners: {
                                                                blur: {
                                                                    fn: me.onTxt117SADoneBlur,
                                                                    scope: me
                                                                },
                                                                keyup: {
                                                                    fn: me.onTxt117SADoneKeyup,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'hiddenfield',
                                                            itemId: 'hdnStatusForHide',
                                                            fieldLabel: 'Label'
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'container',
                                                    height: 29,
                                                    margin: '2 0 0 2',
                                                    layout: {
                                                        type: 'column'
                                                    },
                                                    items: [
                                                        {
                                                            xtype: 'label',
                                                            text: '६'
                                                        },
                                                        {
                                                            xtype: 'textfield',
                                                            columnWidth: 0.7,
                                                            itemId: 'txt119SADone',
                                                            margin: '0 0 0 15',
                                                            width: 500,
                                                            fieldLabel: 'दफा ११९ वमोजिमको ब्याज',
                                                            labelSeparator: ' ',
                                                            labelWidth: 350,
                                                            fieldStyle: 'text-align:right;',
                                                            enableKeyEvents: true,
                                                            maskRe: /[0-9]/,
                                                            listeners: {
                                                                blur: {
                                                                    fn: me.onTxt119SADoneBlur,
                                                                    scope: me
                                                                },
                                                                keyup: {
                                                                    fn: me.onTxt119SADoneKeyup,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'hiddenfield',
                                                            itemId: 'hdnTotalAmount',
                                                            fieldLabel: 'Label'
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'container',
                                                    height: 29,
                                                    margin: '2 0 0 2',
                                                    layout: {
                                                        type: 'column'
                                                    },
                                                    items: [
                                                        {
                                                            xtype: 'label',
                                                            text: '७'
                                                        },
                                                        {
                                                            xtype: 'textfield',
                                                            columnWidth: 0.7,
                                                            itemId: 'txtTotalPayableTaxSADone',
                                                            margin: '0 0 0 15',
                                                            width: 500,
                                                            fieldLabel: 'जम्मा तिर्नु पर्ने रकम &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp(४‌+५+६)',
                                                            labelSeparator: ' ',
                                                            labelWidth: 350,
                                                            fieldStyle: 'text-align:right;',
                                                            readOnly: true,
                                                            maskRe: /[0-9]/
                                                        },
                                                        {
                                                            xtype: 'hiddenfield',
                                                            itemId: 'hdnChargeDate117',
                                                            fieldLabel: 'Label'
                                                        },
                                                        {
                                                            xtype: 'hiddenfield',
                                                            itemId: 'hdnChargeDate119',
                                                            fieldLabel: 'Label'
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            height: 260,
                            itemId: 'fiveSelfAssessment',
                            maxHeight: 500,
                            layout: {
                                align: 'stretch',
                                type: 'vbox'
                            },
                            bodyPadding: '10 10 10 10',
                            title: '४ कर दाखिला विवरण',
                            items: [
                                {
                                    xtype: 'container',
                                    height: 30,
                                    items: [
                                        {
                                            xtype: 'toolbar',
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    itemId: 'btnAddSADone',
                                                    icon: '../ITS/resources/images/icons/edit_add.png',
                                                    text: 'Add',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onBtnAddSADoneClick,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'tbseparator'
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    flex: 1,
                                    maxHeight: 16,
                                    layout: {
                                        type: 'column'
                                    },
                                    items: [
                                        {
                                            xtype: 'label',
                                            text: ''
                                        },
                                        {
                                            xtype: 'label',
                                            margin: '0 0 0 20',
                                            text: '१'
                                        },
                                        {
                                            xtype: 'label',
                                            margin: '0 0 0 150',
                                            text: '२'
                                        },
                                        {
                                            xtype: 'label',
                                            margin: '0 0 0 165',
                                            text: '३'
                                        },
                                        {
                                            xtype: 'label',
                                            margin: '0 0 0 90',
                                            text: '४'
                                        },
                                        {
                                            xtype: 'label',
                                            margin: '0 10 0 170',
                                            text: '५'
                                        },
                                        {
                                            xtype: 'label',
                                            margin: '0 0 0 210',
                                            text: '६'
                                        },
                                        {
                                            xtype: 'label',
                                            margin: '0 0 0 90',
                                            text: '७'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'gridpanel',
                                    flex: 1,
                                    height: 160,
                                    itemId: 'grdSADoneFour',
                                    maxHeight: 160,
                                    store: 'SelfAssessmentD01',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            maxWidth: 50,
                                            dataIndex: 'Sno',
                                            text: 'क्रम.स.'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'SubmissionNumber',
                                            text: 'SubmissionNo'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            maxWidth: 200,
                                            minWidth: 200,
                                            width: 200,
                                            dataIndex: 'TreasureAcctNo',
                                            text: 'राजस्व खाता न.',
                                            editor: {
                                                xtype: 'combobox',
                                                itemId: 'cboTreasureAccDone',
                                                maxWidth: 245,
                                                minWidth: 245,
                                                width: 245,
                                                emptyText: '-- Select --',
                                                displayField: 'RevActWithCode',
                                                store: 'RevenueAccountAnx10',
                                                valueField: 'AccountCode'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'PaymentMode',
                                            text: 'भुक्तानीको किसिम',
                                            editor: {
                                                xtype: 'combobox',
                                                itemId: 'cboPaymentMode',
                                                emptyText: '-- Select --',
                                                displayField: 'EstPaymentModeName',
                                                queryMode: 'local',
                                                store: 'EstPaymentMode',
                                                valueField: 'EstPaymentModeID',
                                                listeners: {
                                                    change: {
                                                        fn: me.onCboPaymentModeChange,
                                                        scope: me
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'VoucherNo',
                                            text: 'भौचर / रसिद न.',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtVoucherNo'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 300,
                                            dataIndex: 'BankBr',
                                            text: 'बैंकको नाम',
                                            editor: {
                                                xtype: 'combobox',
                                                itemId: 'cboBankCode',
                                                emptyText: '-- Select --',
                                                displayField: 'BankName',
                                                forceSelection: true,
                                                queryMode: 'local',
                                                store: 'OfficeBankInfo',
                                                typeAhead: true,
                                                valueField: 'BankBr'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'BranchCode',
                                            text: 'BranchCode'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'PaymentDate',
                                            text: 'दाखिला मिति',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtPaymentDateSADone',
                                                maskRe: /[0-9.]/,
                                                listeners: {
                                                    blur: {
                                                        fn: me.onTxtPaymentDateSADoneBlur,
                                                        scope: me
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'Amount',
                                            text: 'दाखिला रकम',
                                            editor: {
                                                xtype: 'textfield',
                                                fieldStyle: 'text-align:right;',
                                                maskRe: /[0-9]/,
                                                maxLength: 18
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'EnteredDate',
                                            text: 'EnteredDate'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'EnteredBy',
                                            text: 'EnteredBy'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'Action',
                                            text: 'Action'
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            items: [
                                                {
                                                    handler: function(view, rowIndex, colIndex, item, e) {
                                                        //alert('sssss');



                                                        /*
                                                        var doIt = confirm("This change is irreversible. \n Are you sure? ");
                                                        var btnAddSADone=Ext.ComponentQuery.query('#btnAddSADone')[0];

                                                        if( doIt===true)
                                                        {
                                                        var str=Ext.getStore('SelfAssessmentD01');
                                                        //var record=str.data.items[rowIndex].data;
                                                        // if(record.Action==="A")
                                                        //{
                                                        str.removeAt(rowIndex);   
                                                        btnAddSADone.enable(true);
                                                        //}
                                                        //else
                                                        // { 
                                                        // record.Action="D";
                                                        //str.filter(function(item){
                                                        // return item.get('Action')!='D'

                                                        //});
                                                        //}
                                                        Ext.ComponentQuery.query('#grdSADoneFour')[0].bindStore(str);
                                                    }

                                                    */

                                                    Ext.Msg.confirm('Confirm Action', 'Do you want to Remove ?', function(btn) {
                                                        if(btn == 'yes'){


                                                            var str=Ext.getStore('SelfAssessmentD01');
                                                            //var record=str.data.items[rowIndex].data;
                                                            // if(record.Action==="A")
                                                            //{
                                                            str.removeAt(rowIndex);   
                                                            btnAddSADone.enable(true);
                                                            //}
                                                            //else
                                                            // { 
                                                            // record.Action="D";
                                                            //str.filter(function(item){
                                                            // return item.get('Action')!='D'

                                                            //});
                                                            //}
                                                            Ext.ComponentQuery.query('#grdSADoneFour')[0].bindStore(str);


                                                            return true;
                                                        }
                                                    }, this);  

                                                    },
                                                    icon: '../ITS/resources/images/icons/cancel.png'
                                                }
                                            ]
                                        }
                                    ],
                                    plugins: [
                                        Ext.create('Ext.grid.plugin.RowEditing', {
                                            pluginId: 'grdPluginSADone',
                                            listeners: {
                                                validateedit: {
                                                    fn: me.onGridroweditingpluginValidateedit,
                                                    scope: me
                                                },
                                                canceledit: {
                                                    fn: me.onGridroweditingpluginCanceledit,
                                                    scope: me
                                                },
                                                beforeedit: {
                                                    fn: me.onGridroweditingpluginBeforeEdit,
                                                    scope: me
                                                }
                                            }
                                        })
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            height: 35,
                            itemId: 'cntButtonSA',
                            maxHeight: 35,
                            minHeight: 35,
                            padding: '2 0 2 0',
                            layout: {
                                align: 'stretch',
                                type: 'hbox'
                            },
                            items: [
                                {
                                    xtype: 'image',
                                    flex: 1,
                                    height: 15,
                                    itemId: 'imgSA',
                                    margin: '0 3 0 0',
                                    maxHeight: 15,
                                    maxWidth: 15,
                                    minHeight: 15,
                                    minWidth: 15,
                                    width: 15,
                                    src: '../ITS/resources/images/icons/Update.png'
                                },
                                {
                                    xtype: 'label',
                                    flex: 1,
                                    itemId: 'lblMessage',
                                    margin: '0 240 0 0',
                                    text: ''
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'btnSaveSA',
                                    margin: '0 0 0 10',
                                    iconCls: 'icon-save',
                                    text: 'Save'
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'btnEditSA',
                                    margin: '0 0 0 5',
                                    iconCls: 'icon-edit',
                                    text: 'Edit'
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'btnSubmitSA',
                                    margin: '0 0 0 5',
                                    iconCls: 'icon-ok',
                                    text: 'Submit',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnSubmitSAClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    flex: 1,
                                    hidden: true,
                                    itemId: 'btnDelete',
                                    margin: '0 0 0 5',
                                    iconCls: 'icon-delete',
                                    text: 'Delete',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnDeleteClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    hidden: true,
                                    itemId: 'btnVerifySA',
                                    margin: '0 0 0 5',
                                    iconCls: 'icon-verify',
                                    text: 'Verify',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnVerifySAClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'btnPrintSA',
                                    margin: '0 0 0 5',
                                    iconCls: 'icon-print',
                                    text: 'Print',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnPrintSAClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'btnCancelSA',
                                    margin: '0 0 0 5',
                                    iconCls: 'icon-cancel',
                                    text: 'Cancel'
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            height: 30,
                            hidden: true,
                            itemId: 'cntBackSA',
                            layout: {
                                align: 'stretch',
                                pack: 'end',
                                type: 'hbox'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'btnBackSA',
                                    iconCls: 'icon-back',
                                    text: 'Back',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnBackSAClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'hiddenfield',
                            itemId: 'hdnActGrd',
                            fieldLabel: 'Label'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onCboFiscalYearSADoneSelect: function(combo, records, eOpts) {

        /*
        //---Value to INPUT -----------------------------------------------------------
        var cboFiscalYearSADone=Ext.ComponentQuery.query('#cboFiscalYearSADone')[0];
        var txtSADoneIncome=Ext.ComponentQuery.query('#txtSADoneIncome')[0];
        var txtMetroTypeSADone=Ext.ComponentQuery.query('#txtMetroTypeSADone')[0];
        // ------------------------------------------------------------------------------


        // ------ Value to OUTPUT-------------------------------------------------------
        var txtSADoneFromDate=Ext.ComponentQuery.query('#txtSADoneFromDate')[0];
        var txtSumTaxLiabilitySADone=Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0];

        Ext.Ajax.request
        ({

            url:'../Handlers/IncomeTax/D01/ilkTaxRateHandler.ashx?method=GetilkTaxRate',
            params:{fiscalYear_Tmp:cboFiscalYearSADone.getValue(), income_Tmp:txtSADoneIncome.getValue(), MetroTypeSADone:txtMetroTypeSADone.getValue() 
            },






            success:function(response){
                console.log(response.responseText);
                var obj =Ext.decode(response.responseText);
                var row = obj.root;

                var date=row.DateNRate.split('&&')[0];
                var rate=row.DateNRate.split('&&')[1];

                txtSADoneFromDate.setValue(date);
                txtSumTaxLiabilitySADone.setValue(rate);

                console.log(date);
                console.log(rate);

                //alert(row);

            },





            failure:function()
            {
                msg('FAILURE',Ext.decode(response));

            }



        });
        */
    },

    onTxtSubmissionNoTestKeypress: function(textfield, e, eOpts) {
        if(e.keyCode === 13)
        {



            var submissionNo=Ext.ComponentQuery.query('#txtSubmissionNoTest')[0].getValue();

            // Ext.ComponentQuery.query('#txtSubmissionNoTest')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setReadOnly(true);
            Ext.ComponentQuery.query('#cboFiscalYearSADone')[0].setReadOnly(true);
            //Ext.ComponentQuery.query('#btnSaveSA')[0].disable(true);
            Ext.ComponentQuery.query('#btnEditSA')[0].enable(true);



            Ext.Ajax.request({

                url:'../Handlers/IncomeTax/D01/AssessmentSADoneHandler.ashx?method=GetAssessment',
                params:{submissionNumber:submissionNo},
                success:function(response){
                    var obj=Ext.decode(response.responseText);

                    var row= obj.root;

                    Ext.ComponentQuery.query('#txtSubmissionNoTest')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtPanSTDone')[0].setReadOnly(true);


                    var strSADone=Ext.getStore('SelfAssessmentD01');
                    strSADone.removeAll();
                    strSADone.loadData([],false);


                    //console.log("yahoooo",obj.root);
                    //console.log("AssmtDetailChildDOne",obj.root.AssmtDetailChildDOne);

                    //console.log("Expenses",obj.root.AssmtDetailChildDOne[0].Expenses);



                    //console.log("ASS01Testing",row);

                    console.log("root>>",obj.root);

                    var taxpayer=obj.root.Taxpayer;
                    var address=taxpayer.BusinessAddress.Address;
                    var office=taxpayer.Office;
                    var individual = null;

                    console.log("indv>>: " + taxpayer.IndividualAddress.Address);

                    if(taxpayer.IndividualAddress !== undefined && taxpayer.IndividualAddress !== null)
                    {
                        individual = taxpayer.IndividualAddress.Address;
                    }



                    var grdVoucherLST=Ext.ComponentQuery.query('#grdSADoneFour')[0];
                    grdVoucherLST.store.add(obj.root.VoucherTbsLSTLST); 
                    console.log('TranNo>>>>',obj.root.TranNo);
                    Ext.ComponentQuery.query('#hdnTranNo')[0].setValue(obj.root.TranNo);



                    //----------------------------------------------------------------------------------------------------
                    if(obj.root.RecordStatus==="D")
                    {
                        msg("Info","यो बिबरण हटाईसकेको छ <br/ ");

                        Ext.ComponentQuery.query('#cboFiscalYearSADone')[0].setValue("");

                        Ext.ComponentQuery.query('#txtPanSTDone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtAcctType')[0].setValue(""); 

                        Ext.ComponentQuery.query('#txtPhoneSADone')[0].setValue("");                   
                        Ext.ComponentQuery.query('#txtNameSTDone')[0].setValue("");

                        Ext.ComponentQuery.query('#txtHouseNoSADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtWardSADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtToleSADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtDistrictDone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtFaxSADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtEmailSADone')[0].setValue("");

                        Ext.ComponentQuery.query('#txtMetroTypeSADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtTSOsaDone')[0].setValue("");
                        Ext.ComponentQuery.query('#hdnOfficeCodeSADone')[0].setValue("");

                        Ext.ComponentQuery.query('#rbdMM')[0].setValue(false);                   
                        Ext.ComponentQuery.query('#rbdSM')[0].setValue(false); 
                        Ext.ComponentQuery.query('#rbdMN')[0].setValue(false);                        
                        Ext.ComponentQuery.query('#rbdVD')[0].setValue(false);

                        //---setting values in Two no field (Individual Address)-----

                        Ext.ComponentQuery.query('#txtNameDtwo')[0].setValue("");
                        Ext.ComponentQuery.query('#txtHouseNoDtwo')[0].setValue("");
                        Ext.ComponentQuery.query('#txtWardDtwo')[0].setValue("");
                        Ext.ComponentQuery.query('#txtToleDtwo')[0].setValue("");                    
                        Ext.ComponentQuery.query('#txtDistrictDtwo')[0].setValue("");
                        Ext.ComponentQuery.query('#txtMetroDtwo')[0].setValue("");

                        Ext.ComponentQuery.query('#rbdMMTwo')[0].setValue(false);  
                        Ext.ComponentQuery.query('#rbdSMTwo')[0].setValue(true);   
                        Ext.ComponentQuery.query('#rbdMNTwo')[0].setValue(false);                   

                        Ext.ComponentQuery.query('#rbdVDTwo')[0].setValue(false);                  

                        //--setting Values in three--
                        Ext.ComponentQuery.query('#txtExpensesSADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtInclusionSADone')[0].setValue("");
                        Ext.ComponentQuery.query('#hdnAssmtdtlSn')[0].setValue("");

                        Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setValue("");

                        Ext.ComponentQuery.query('#txt117SADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txt119SADone')[0].setValue("");
                        //Ext.ComponentQuery.query('#txt119SADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].NetTaxLiability);

                        var grdVoucherLSTa=Ext.ComponentQuery.query('#grdSADoneFour')[0];
                        grdVoucherLSTa.store.removeAll(); 

                        var SelfAssessmentD01=Ext.getStore('SelfAssessmentD01');
                        SelfAssessmentD01.removeAll();

                        SelfAssessmentD01.loadData([],false);


                        Ext.ComponentQuery.query('#txtExpensesSADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtInclusionSADone')[0].setReadOnly(true);


                        Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setReadOnly(true);

                        Ext.ComponentQuery.query('#txt117SADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txt119SADone')[0].setReadOnly(true);


                        Ext.ComponentQuery.query('#lblMessage')[0].setText('');
                        Ext.ComponentQuery.query('#imgSA')[0].hide(true);

                        Ext.ComponentQuery.query('#btnAddSADone')[0].disable(true);
                        Ext.ComponentQuery.query('#btnSaveSA')[0].disable(true);
                        Ext.ComponentQuery.query('#btnEditSA')[0].disable(true);
                        Ext.ComponentQuery.query('#btnSubmitSA')[0].disable(true);
                        Ext.ComponentQuery.query('#btnDelete')[0].disable(true);
                        Ext.ComponentQuery.query('#btnVerifySA')[0].disable(true);
                        Ext.ComponentQuery.query('#btnPrintSA')[0].disable(true);
                        Ext.ComponentQuery.query('#btnCancelSA')[0].disable(true);
                    }
                    else if(obj.root.RecordStatus==="V")
                    {
                        msg("Info","यो बिबरण रूजु भईसकेको छ <br/ ");

                        Ext.ComponentQuery.query('#cboFiscalYearSADone')[0].setValue("");

                        Ext.ComponentQuery.query('#txtPanSTDone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtAcctType')[0].setValue(""); 

                        Ext.ComponentQuery.query('#txtPhoneSADone')[0].setValue("");                   
                        Ext.ComponentQuery.query('#txtNameSTDone')[0].setValue("");

                        Ext.ComponentQuery.query('#txtHouseNoSADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtWardSADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtToleSADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtDistrictDone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtFaxSADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtEmailSADone')[0].setValue("");

                        Ext.ComponentQuery.query('#txtMetroTypeSADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtTSOsaDone')[0].setValue("");
                        Ext.ComponentQuery.query('#hdnOfficeCodeSADone')[0].setValue("");

                        Ext.ComponentQuery.query('#rbdMM')[0].setValue(false);                   
                        Ext.ComponentQuery.query('#rbdSM')[0].setValue(false); 
                        Ext.ComponentQuery.query('#rbdMN')[0].setValue(false);                        
                        Ext.ComponentQuery.query('#rbdVD')[0].setValue(false);

                        //---setting values in Two no field (Individual Address)-----

                        Ext.ComponentQuery.query('#txtNameDtwo')[0].setValue("");
                        Ext.ComponentQuery.query('#txtHouseNoDtwo')[0].setValue("");
                        Ext.ComponentQuery.query('#txtWardDtwo')[0].setValue("");
                        Ext.ComponentQuery.query('#txtToleDtwo')[0].setValue("");                    
                        Ext.ComponentQuery.query('#txtDistrictDtwo')[0].setValue("");
                        Ext.ComponentQuery.query('#txtMetroDtwo')[0].setValue("");

                        Ext.ComponentQuery.query('#rbdMMTwo')[0].setValue(false);  
                        Ext.ComponentQuery.query('#rbdSMTwo')[0].setValue(true);   
                        Ext.ComponentQuery.query('#rbdMNTwo')[0].setValue(false);                   

                        Ext.ComponentQuery.query('#rbdVDTwo')[0].setValue(false);                  

                        //--setting Values in three--
                        Ext.ComponentQuery.query('#txtExpensesSADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtInclusionSADone')[0].setValue("");
                        Ext.ComponentQuery.query('#hdnAssmtdtlSn')[0].setValue("");

                        Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setValue("");

                        Ext.ComponentQuery.query('#txt117SADone')[0].setValue("");
                        Ext.ComponentQuery.query('#txt119SADone')[0].setValue("");
                        //Ext.ComponentQuery.query('#txt119SADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].NetTaxLiability);

                        var grdVoucherLSTaa=Ext.ComponentQuery.query('#grdSADoneFour')[0];
                        grdVoucherLSTaa.store.removeAll(); 

                        var SelfAssessmentsD01=Ext.getStore('SelfAssessmentD01');
                        SelfAssessmentsD01.removeAll();


                        Ext.ComponentQuery.query('#txtExpensesSADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtInclusionSADone')[0].setReadOnly(true);


                        Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setReadOnly(true);

                        Ext.ComponentQuery.query('#txt117SADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txt119SADone')[0].setReadOnly(true);

                        Ext.ComponentQuery.query('#lblMessage')[0].setText('');
                        Ext.ComponentQuery.query('#imgSA')[0].hide(true);


                        Ext.ComponentQuery.query('#btnAddSADone')[0].disable(true);
                        Ext.ComponentQuery.query('#btnSaveSA')[0].disable(true);
                        Ext.ComponentQuery.query('#btnEditSA')[0].disable(true);
                        Ext.ComponentQuery.query('#btnSubmitSA')[0].disable(true);
                        Ext.ComponentQuery.query('#btnDelete')[0].disable(true);
                        Ext.ComponentQuery.query('#btnVerifySA')[0].disable(true);
                        Ext.ComponentQuery.query('#btnPrintSA')[0].disable(true);
                        Ext.ComponentQuery.query('#btnCancelSA')[0].disable(true);

                    }
                    else if(obj.root.RecordStatus==="F")
                    {
                        msg("Info","यो बिबरण परिबर्तन गर्न पाईनेछैन् <br/ ");
                        Ext.ComponentQuery.query('#hdnStatusForHide')[0].setValue("F");

                        Ext.ComponentQuery.query('#cboFiscalYearSADone')[0].setReadOnly(true);

                        Ext.ComponentQuery.query('#txtPanSTDone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtAcctType')[0].setReadOnly(true); 

                        Ext.ComponentQuery.query('#txtPhoneSADone')[0].setReadOnly(true);                  
                        Ext.ComponentQuery.query('#txtNameSTDone')[0].setReadOnly(true);

                        Ext.ComponentQuery.query('#txtHouseNoSADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtWardSADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtToleSADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtDistrictDone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtFaxSADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtEmailSADone')[0].setReadOnly(true);

                        Ext.ComponentQuery.query('#txtMetroTypeSADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtTSOsaDone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#hdnOfficeCodeSADone')[0].setReadOnly(true);




                        Ext.ComponentQuery.query('#rbdMM')[0].setValue(false);                   
                        Ext.ComponentQuery.query('#rbdSM')[0].setValue(false); 
                        Ext.ComponentQuery.query('#rbdMN')[0].setValue(false);                        
                        Ext.ComponentQuery.query('#rbdVD')[0].setValue(false);





                        // ----------------------------------------
                        //---setting values in Two no field (Individual Address)-----

                        Ext.ComponentQuery.query('#txtNameDtwo')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtHouseNoDtwo')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtWardDtwo')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtToleDtwo')[0].setReadOnly(true);                    
                        Ext.ComponentQuery.query('#txtDistrictDtwo')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtMetroDtwo')[0].setReadOnly(true);                   


                        //--setting Values in three--
                        Ext.ComponentQuery.query('#txtExpensesSADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtInclusionSADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#hdnAssmtdtlSn')[0].setReadOnly(true);

                        Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setReadOnly(true);

                        Ext.ComponentQuery.query('#txt117SADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txt119SADone')[0].setReadOnly(true);







                        Ext.ComponentQuery.query('#cboFiscalYearSADone')[0].setValue(obj.root.FiscalYear);

                        Ext.ComponentQuery.query('#txtPanSTDone')[0].setValue(obj.root.Pan);
                        Ext.ComponentQuery.query('#txtAcctType')[0].setValue(obj.root.AcctType); 

                        Ext.ComponentQuery.query('#txtPhoneSADone')[0].setValue(address.Telephone);                   
                        Ext.ComponentQuery.query('#txtNameSTDone')[0].setValue(taxpayer.Name);

                        Ext.ComponentQuery.query('#txtHouseNoSADone')[0].setValue(address.HouseNo);
                        Ext.ComponentQuery.query('#txtWardSADone')[0].setValue(address.WardNo);
                        Ext.ComponentQuery.query('#txtToleSADone')[0].setValue(address.StreetName);
                        Ext.ComponentQuery.query('#txtDistrictDone')[0].setValue(address.DistrictNameNep);
                        Ext.ComponentQuery.query('#txtFaxSADone')[0].setValue(address.Fax);
                        Ext.ComponentQuery.query('#txtEmailSADone')[0].setValue(address.Email);

                        Ext.ComponentQuery.query('#txtMetroTypeSADone')[0].setValue(address.VdcTown);
                        Ext.ComponentQuery.query('#txtTSOsaDone')[0].setValue(office.OfficeNameNepali);
                        Ext.ComponentQuery.query('#hdnOfficeCodeSADone')[0].setValue(office.OfficeCode);



                        if(address.LocationType=== "MM")
                        {  
                            Ext.ComponentQuery.query('#rbdMM')[0].setValue(true);
                            Ext.ComponentQuery.query('#rbdMM')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7ka');
                        }

                        else if(address.LocationType==="SM")
                        {  
                            Ext.ComponentQuery.query('#rbdSM')[0].setValue(true);
                            Ext.ComponentQuery.query('#rbdSM')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7ka');
                        }

                        else if(address.LocationType==="MN")
                        {

                            Ext.ComponentQuery.query('#rbdMN')[0].setValue(true);
                            Ext.ComponentQuery.query('#rbdMN')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7kha');
                        }

                        else
                        {   
                            Ext.ComponentQuery.query('#rbdVD')[0].setValue(true);
                            Ext.ComponentQuery.query('#rbdVD')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7Ga');

                        }


                        //---setting values in Two no field (Individual Address)-----

                        Ext.ComponentQuery.query('#txtNameDtwo')[0].setValue(taxpayer.Name);

                        if(individual !== undefined && individual !== null)
                        {
                            Ext.ComponentQuery.query('#txtHouseNoDtwo')[0].setValue(individual.HouseNo);
                            Ext.ComponentQuery.query('#txtWardDtwo')[0].setValue(individual.WardNo);
                            Ext.ComponentQuery.query('#txtToleDtwo')[0].setValue(individual.StreetName);                    
                            Ext.ComponentQuery.query('#txtDistrictDtwo')[0].setValue(individual.DistrictNameNep);
                            Ext.ComponentQuery.query('#txtMetroDtwo')[0].setValue(individual.VdcTown);

                            if(individual.LocationType==="MM")
                            {                           
                                Ext.ComponentQuery.query('#rbdMMTwo')[0].setValue(true);                        
                            }

                            else if(individual.LocationType==="SM")
                            {
                                Ext.ComponentQuery.query('#rbdSMTwo')[0].setValue(true);                        
                                Ext.ComponentQuery.query('#rbdSMTwo')[0].setReadOnly(true);
                            }
                            else if(individual.LocationType==="MN")
                            {
                                Ext.ComponentQuery.query('#rbdMNTwo')[0].setValue(true);                        
                                Ext.ComponentQuery.query('#rbdMNTwo')[0].setReadOnly(true);
                            }
                        }
                        else
                        {
                            Ext.ComponentQuery.query('#rbdVDTwo')[0].setValue(true);                        
                            Ext.ComponentQuery.query('#rbdVDTwo')[0].setReadOnly(true);
                        }



                        //--setting Values in three--
                        Ext.ComponentQuery.query('#txtExpensesSADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].Expenses);
                        Ext.ComponentQuery.query('#txtInclusionSADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].Inclusions);
                        Ext.ComponentQuery.query('#hdnAssmtdtlSn')[0].setValue(obj.root.AssmtDetailChildDOne[0].AssessDetailSn);

                        Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].AssessableIncome);
                        Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setValue(obj.root.TotalTaxLiability);
                        Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setValue(obj.root.TotalPayableTax);

                        Ext.ComponentQuery.query('#txt117SADone')[0].setValue(obj.root.ChargePenaltyDetail[0].Amount);
                        Ext.ComponentQuery.query('#txt119SADone')[0].setValue(obj.root.ChargePenaltyDetail[1].Amount);
                        //Ext.ComponentQuery.query('#txt119SADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].NetTaxLiability);

                        Ext.ComponentQuery.query('#lblMessage')[0].setText('');
                        Ext.ComponentQuery.query('#imgSA')[0].hide(true);


                        Ext.ComponentQuery.query('#btnAddSADone')[0].disable(true);
                        Ext.ComponentQuery.query('#btnSaveSA')[0].disable(true);
                        Ext.ComponentQuery.query('#btnEditSA')[0].disable(true);
                        Ext.ComponentQuery.query('#btnSubmitSA')[0].disable(true); 
                        Ext.ComponentQuery.query('#btnPrintSA')[0].enable(true);
                        Ext.ComponentQuery.query('#btnDelete')[0].disable(true);




                    }

                    //----------------------------------------------------------------------------------------------------------

                    else
                    {     Ext.ComponentQuery.query('#hdnAction')[0].setValue('E');   


                        Ext.ComponentQuery.query('#cboFiscalYearSADone')[0].setValue(obj.root.FiscalYear);

                        Ext.ComponentQuery.query('#txtPanSTDone')[0].setValue(obj.root.Pan);
                        Ext.ComponentQuery.query('#txtAcctType')[0].setValue(obj.root.AcctType); 

                        Ext.ComponentQuery.query('#txtPhoneSADone')[0].setValue(address.Telephone);                   
                        Ext.ComponentQuery.query('#txtNameSTDone')[0].setValue(taxpayer.Name);

                        Ext.ComponentQuery.query('#txtHouseNoSADone')[0].setValue(address.HouseNo);
                        Ext.ComponentQuery.query('#txtWardSADone')[0].setValue(address.WardNo);
                        Ext.ComponentQuery.query('#txtToleSADone')[0].setValue(address.StreetName);
                        Ext.ComponentQuery.query('#txtDistrictDone')[0].setValue(address.DistrictNameNep);
                        Ext.ComponentQuery.query('#txtFaxSADone')[0].setValue(address.Fax);
                        Ext.ComponentQuery.query('#txtEmailSADone')[0].setValue(address.Email);

                        Ext.ComponentQuery.query('#txtMetroTypeSADone')[0].setValue(address.VdcTown);
                        Ext.ComponentQuery.query('#txtTSOsaDone')[0].setValue(office.OfficeNameNepali);
                        Ext.ComponentQuery.query('#hdnOfficeCodeSADone')[0].setValue(office.OfficeCode);



                        if(address.LocationType=== "MM")
                        {  
                            Ext.ComponentQuery.query('#rbdMM')[0].setValue(true);
                            Ext.ComponentQuery.query('#rbdMM')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7ka');
                        }

                        else if(address.LocationType==="SM")
                        {  
                            Ext.ComponentQuery.query('#rbdSM')[0].setValue(true);
                            Ext.ComponentQuery.query('#rbdSM')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7ka');
                        }

                        else if(address.LocationType==="MN")
                        {

                            Ext.ComponentQuery.query('#rbdMN')[0].setValue(true);
                            Ext.ComponentQuery.query('#rbdMN')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7kha');
                        }

                        else
                        {   
                            Ext.ComponentQuery.query('#rbdVD')[0].setValue(true);
                            Ext.ComponentQuery.query('#rbdVD')[0].setReadOnly(true);
                            Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7Ga');

                        }


                        //---setting values in Two no field (Individual Address)-----

                        Ext.ComponentQuery.query('#txtNameDtwo')[0].setValue(taxpayer.Name);



                        if(individual !== undefined && individual !== null)
                        {
                            Ext.ComponentQuery.query('#txtHouseNoDtwo')[0].setValue(individual.HouseNo);
                            Ext.ComponentQuery.query('#txtWardDtwo')[0].setValue(individual.WardNo);
                            Ext.ComponentQuery.query('#txtToleDtwo')[0].setValue(individual.StreetName);                    
                            Ext.ComponentQuery.query('#txtDistrictDtwo')[0].setValue(individual.DistrictNameNep);
                            Ext.ComponentQuery.query('#txtMetroDtwo')[0].setValue(individual.VdcTown);

                            if(individual.LocationType==="MM")
                            {                           
                                Ext.ComponentQuery.query('#rbdMMTwo')[0].setValue(true);                        
                            }

                            else if(individual.LocationType==="SM")
                            {
                                Ext.ComponentQuery.query('#rbdSMTwo')[0].setValue(true);                        
                                Ext.ComponentQuery.query('#rbdSMTwo')[0].setReadOnly(true);
                            }
                            else if(individual.LocationType==="MN")
                            {
                                Ext.ComponentQuery.query('#rbdMNTwo')[0].setValue(true);                        
                                Ext.ComponentQuery.query('#rbdMNTwo')[0].setReadOnly(true);
                            }
                        }
                        else
                        {
                            Ext.ComponentQuery.query('#rbdVDTwo')[0].setValue(true);                        
                            Ext.ComponentQuery.query('#rbdVDTwo')[0].setReadOnly(true);
                        }



                        //--setting Values in three--
                        if(obj.root.AssmtDetailChildDOne)
                        {

                            Ext.ComponentQuery.query('#txtExpensesSADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].Expenses);
                            Ext.ComponentQuery.query('#hdnAssmtDetailChildDOne')[0].setValue("E");
                            Ext.ComponentQuery.query('#txtInclusionSADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].Inclusions);
                            Ext.ComponentQuery.query('#hdnAssmtdtlSn')[0].setValue(obj.root.AssmtDetailChildDOne[0].AssessDetailSn);
                        }
                        else
                        {
                            Ext.ComponentQuery.query('#hdnAssmtDetailChildDOne')[0].setValue('');
                            Ext.ComponentQuery.query('#btnEditSA')[0].disable(true);
                            Ext.ComponentQuery.query('#btnVerifySA')[0].disable(true);
                            Ext.ComponentQuery.query('#btnDelete')[0].disable(true);


                        }
                        Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].AssessableIncome);
                        Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setValue(obj.root.TotalTaxLiability);
                        Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setValue(obj.root.TotalPayableTax);

                        Ext.ComponentQuery.query('#txt117SADone')[0].setValue(obj.root.ChargePenaltyDetail[0].Amount);
                        Ext.ComponentQuery.query('#txt119SADone')[0].setValue(obj.root.ChargePenaltyDetail[1].Amount);
                        //Ext.ComponentQuery.query('#txt119SADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].NetTaxLiability);

                        Ext.ComponentQuery.query('#btnSaveSA')[0].enable(true);
                        Ext.ComponentQuery.query('#btnEditSA')[0].enable(true);
                        Ext.ComponentQuery.query('#btnSubmitSA')[0].enable(true);
                        Ext.ComponentQuery.query('#btnDelete')[0].enable(true);
                        Ext.ComponentQuery.query('#btnVerifySA')[0].disable(true);
                        Ext.ComponentQuery.query('#btnPrintSA')[0].disable(true);
                        Ext.ComponentQuery.query('#btnCancelSA')[0].enable(true);



                        Ext.ComponentQuery.query('#txtExpensesSADone')[0].setReadOnly(false);
                        Ext.ComponentQuery.query('#txtInclusionSADone')[0].setReadOnly(false);


                        Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setReadOnly(true);

                        Ext.ComponentQuery.query('#txt117SADone')[0].setReadOnly(false);
                        Ext.ComponentQuery.query('#txt119SADone')[0].setReadOnly(false);


                    }

                },
                failure:function(response){}


            });
        }

    },

    onTxtSubmissionNoTestKeyup: function(textfield, e, eOpts) {
        /*


        var submissionNo=Ext.ComponentQuery.query('#txtSubmissionNoTest')[0].getValue();

        // Ext.ComponentQuery.query('#txtSubmissionNoTest')[0].setReadOnly(true);
        Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setReadOnly(true);
        Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setReadOnly(true);
        Ext.ComponentQuery.query('#cboFiscalYearSADone')[0].setReadOnly(true);
        //Ext.ComponentQuery.query('#btnSaveSA')[0].disable(true);
        Ext.ComponentQuery.query('#btnEditSA')[0].enable(true);



        Ext.Ajax.request({

            url:'../Handlers/IncomeTax/D01/AssessmentSADoneHandler.ashx?method=GetAssessment',
            params:{submissionNumber:submissionNo},
            success:function(response){
                var obj=Ext.decode(response.responseText);

                var row= obj.root;

                Ext.ComponentQuery.query('#txtSubmissionNoTest')[0].setReadOnly(true);


                var strSADone=Ext.getStore('SelfAssessmentD01');
                strSADone.removeAll();
                strSADone.loadData([],false);


                //console.log("yahoooo",obj.root);
                //console.log("AssmtDetailChildDOne",obj.root.AssmtDetailChildDOne);

                //console.log("Expenses",obj.root.AssmtDetailChildDOne[0].Expenses);



                //console.log("ASS01Testing",row);

                console.log("root>>",obj.root);

                var taxpayer=obj.root.Taxpayer;
                var address=taxpayer.BusinessAddress.Address;
                var office=taxpayer.Office;
                var individual = null;

                console.log("indv>>: " + taxpayer.IndividualAddress.Address);

                if(taxpayer.IndividualAddress !== undefined && taxpayer.IndividualAddress !== null)
                {
                    individual = taxpayer.IndividualAddress.Address;
                }



                var grdVoucherLST=Ext.ComponentQuery.query('#grdSADoneFour')[0];
                grdVoucherLST.store.add(obj.root.VoucherTbsLSTLST); 
                console.log('TranNo>>>>',obj.root.TranNo);
                Ext.ComponentQuery.query('#hdnTranNo')[0].setValue(obj.root.TranNo);



                //----------------------------------------------------------------------------------------------------
                if(obj.root.RecordStatus==="D")
                {
                    msg("Info","यो बिबरण हटाईसकेको छ <br/ ");

                    Ext.ComponentQuery.query('#cboFiscalYearSADone')[0].setValue("");

                    Ext.ComponentQuery.query('#txtPanSTDone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtAcctType')[0].setValue(""); 

                    Ext.ComponentQuery.query('#txtPhoneSADone')[0].setValue("");                   
                    Ext.ComponentQuery.query('#txtNameSTDone')[0].setValue("");

                    Ext.ComponentQuery.query('#txtHouseNoSADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtWardSADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtToleSADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtDistrictDone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtFaxSADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtEmailSADone')[0].setValue("");

                    Ext.ComponentQuery.query('#txtMetroTypeSADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtTSOsaDone')[0].setValue("");
                    Ext.ComponentQuery.query('#hdnOfficeCodeSADone')[0].setValue("");

                    Ext.ComponentQuery.query('#rbdMM')[0].setValue(false);                   
                    Ext.ComponentQuery.query('#rbdSM')[0].setValue(false); 
                    Ext.ComponentQuery.query('#rbdMN')[0].setValue(false);                        
                    Ext.ComponentQuery.query('#rbdVD')[0].setValue(false);

                    //---setting values in Two no field (Individual Address)-----

                    Ext.ComponentQuery.query('#txtNameDtwo')[0].setValue("");
                    Ext.ComponentQuery.query('#txtHouseNoDtwo')[0].setValue("");
                    Ext.ComponentQuery.query('#txtWardDtwo')[0].setValue("");
                    Ext.ComponentQuery.query('#txtToleDtwo')[0].setValue("");                    
                    Ext.ComponentQuery.query('#txtDistrictDtwo')[0].setValue("");
                    Ext.ComponentQuery.query('#txtMetroDtwo')[0].setValue("");

                    Ext.ComponentQuery.query('#rbdMMTwo')[0].setValue(false);  
                    Ext.ComponentQuery.query('#rbdSMTwo')[0].setValue(true);   
                    Ext.ComponentQuery.query('#rbdMNTwo')[0].setValue(false);                   

                    Ext.ComponentQuery.query('#rbdVDTwo')[0].setValue(false);                  

                    //--setting Values in three--
                    Ext.ComponentQuery.query('#txtExpensesSADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtInclusionSADone')[0].setValue("");
                    Ext.ComponentQuery.query('#hdnAssmtdtlSn')[0].setValue("");

                    Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setValue("");

                    Ext.ComponentQuery.query('#txt117SADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txt119SADone')[0].setValue("");
                    //Ext.ComponentQuery.query('#txt119SADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].NetTaxLiability);

                    var grdVoucherLSTa=Ext.ComponentQuery.query('#grdSADoneFour')[0];
                    grdVoucherLSTa.store.removeAll(); 

                    var SelfAssessmentD01=Ext.getStore('SelfAssessmentD01');
                    SelfAssessmentD01.removeAll();

                    SelfAssessmentD01.loadData([],false);


                    Ext.ComponentQuery.query('#txtExpensesSADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtInclusionSADone')[0].setReadOnly(true);


                    Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setReadOnly(true);

                    Ext.ComponentQuery.query('#txt117SADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txt119SADone')[0].setReadOnly(true);





                    Ext.ComponentQuery.query('#btnAddSADone')[0].disable(true);
                    Ext.ComponentQuery.query('#btnSaveSA')[0].disable(true);
                    Ext.ComponentQuery.query('#btnEditSA')[0].disable(true);
                    Ext.ComponentQuery.query('#btnSubmitSA')[0].disable(true);
                    Ext.ComponentQuery.query('#btnDelete')[0].disable(true);
                    Ext.ComponentQuery.query('#btnVerifySA')[0].disable(true);
                    Ext.ComponentQuery.query('#btnPrintSA')[0].disable(true);
                    Ext.ComponentQuery.query('#btnCancelSA')[0].disable(true);
                }
                else if(obj.root.RecordStatus==="V")
                {
                    msg("Info","यो बिबरण रूजु भईसकेको छ <br/ ");

                    Ext.ComponentQuery.query('#cboFiscalYearSADone')[0].setValue("");

                    Ext.ComponentQuery.query('#txtPanSTDone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtAcctType')[0].setValue(""); 

                    Ext.ComponentQuery.query('#txtPhoneSADone')[0].setValue("");                   
                    Ext.ComponentQuery.query('#txtNameSTDone')[0].setValue("");

                    Ext.ComponentQuery.query('#txtHouseNoSADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtWardSADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtToleSADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtDistrictDone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtFaxSADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtEmailSADone')[0].setValue("");

                    Ext.ComponentQuery.query('#txtMetroTypeSADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtTSOsaDone')[0].setValue("");
                    Ext.ComponentQuery.query('#hdnOfficeCodeSADone')[0].setValue("");

                    Ext.ComponentQuery.query('#rbdMM')[0].setValue(false);                   
                    Ext.ComponentQuery.query('#rbdSM')[0].setValue(false); 
                    Ext.ComponentQuery.query('#rbdMN')[0].setValue(false);                        
                    Ext.ComponentQuery.query('#rbdVD')[0].setValue(false);

                    //---setting values in Two no field (Individual Address)-----

                    Ext.ComponentQuery.query('#txtNameDtwo')[0].setValue("");
                    Ext.ComponentQuery.query('#txtHouseNoDtwo')[0].setValue("");
                    Ext.ComponentQuery.query('#txtWardDtwo')[0].setValue("");
                    Ext.ComponentQuery.query('#txtToleDtwo')[0].setValue("");                    
                    Ext.ComponentQuery.query('#txtDistrictDtwo')[0].setValue("");
                    Ext.ComponentQuery.query('#txtMetroDtwo')[0].setValue("");

                    Ext.ComponentQuery.query('#rbdMMTwo')[0].setValue(false);  
                    Ext.ComponentQuery.query('#rbdSMTwo')[0].setValue(true);   
                    Ext.ComponentQuery.query('#rbdMNTwo')[0].setValue(false);                   

                    Ext.ComponentQuery.query('#rbdVDTwo')[0].setValue(false);                  

                    //--setting Values in three--
                    Ext.ComponentQuery.query('#txtExpensesSADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtInclusionSADone')[0].setValue("");
                    Ext.ComponentQuery.query('#hdnAssmtdtlSn')[0].setValue("");

                    Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setValue("");

                    Ext.ComponentQuery.query('#txt117SADone')[0].setValue("");
                    Ext.ComponentQuery.query('#txt119SADone')[0].setValue("");
                    //Ext.ComponentQuery.query('#txt119SADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].NetTaxLiability);

                    var grdVoucherLSTaa=Ext.ComponentQuery.query('#grdSADoneFour')[0];
                    grdVoucherLSTaa.store.removeAll(); 

                    var SelfAssessmentsD01=Ext.getStore('SelfAssessmentD01');
                    SelfAssessmentsD01.removeAll();


                    Ext.ComponentQuery.query('#txtExpensesSADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtInclusionSADone')[0].setReadOnly(true);


                    Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setReadOnly(true);

                    Ext.ComponentQuery.query('#txt117SADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txt119SADone')[0].setReadOnly(true);


                    Ext.ComponentQuery.query('#btnAddSADone')[0].disable(true);
                    Ext.ComponentQuery.query('#btnSaveSA')[0].disable(true);
                    Ext.ComponentQuery.query('#btnEditSA')[0].disable(true);
                    Ext.ComponentQuery.query('#btnSubmitSA')[0].disable(true);
                    Ext.ComponentQuery.query('#btnDelete')[0].disable(true);
                    Ext.ComponentQuery.query('#btnVerifySA')[0].disable(true);
                    Ext.ComponentQuery.query('#btnPrintSA')[0].disable(true);
                    Ext.ComponentQuery.query('#btnCancelSA')[0].disable(true);

                }
                else if(obj.root.RecordStatus==="F")
                {
                    msg("Info","यो बिबरण परिबर्तन गर्न पाईनेछैन् <br/ ");
                    Ext.ComponentQuery.query('#hdnStatusForHide')[0].setValue("F");

                    Ext.ComponentQuery.query('#cboFiscalYearSADone')[0].setReadOnly(true);

                    Ext.ComponentQuery.query('#txtPanSTDone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtAcctType')[0].setReadOnly(true); 

                    Ext.ComponentQuery.query('#txtPhoneSADone')[0].setReadOnly(true);                  
                    Ext.ComponentQuery.query('#txtNameSTDone')[0].setReadOnly(true);

                    Ext.ComponentQuery.query('#txtHouseNoSADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtWardSADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtToleSADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtDistrictDone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtFaxSADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtEmailSADone')[0].setReadOnly(true);

                    Ext.ComponentQuery.query('#txtMetroTypeSADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtTSOsaDone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#hdnOfficeCodeSADone')[0].setReadOnly(true);




                    Ext.ComponentQuery.query('#rbdMM')[0].setValue(false);                   
                    Ext.ComponentQuery.query('#rbdSM')[0].setValue(false); 
                    Ext.ComponentQuery.query('#rbdMN')[0].setValue(false);                        
                    Ext.ComponentQuery.query('#rbdVD')[0].setValue(false);





                    // ----------------------------------------
                    //---setting values in Two no field (Individual Address)-----

                    Ext.ComponentQuery.query('#txtNameDtwo')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtHouseNoDtwo')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtWardDtwo')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtToleDtwo')[0].setReadOnly(true);                    
                    Ext.ComponentQuery.query('#txtDistrictDtwo')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtMetroDtwo')[0].setReadOnly(true);                   


                    //--setting Values in three--
                    Ext.ComponentQuery.query('#txtExpensesSADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtInclusionSADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#hdnAssmtdtlSn')[0].setReadOnly(true);

                    Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setReadOnly(true);

                    Ext.ComponentQuery.query('#txt117SADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txt119SADone')[0].setReadOnly(true);







                    Ext.ComponentQuery.query('#cboFiscalYearSADone')[0].setValue(obj.root.FiscalYear);

                    Ext.ComponentQuery.query('#txtPanSTDone')[0].setValue(obj.root.Pan);
                    Ext.ComponentQuery.query('#txtAcctType')[0].setValue(obj.root.AcctType); 

                    Ext.ComponentQuery.query('#txtPhoneSADone')[0].setValue(address.Telephone);                   
                    Ext.ComponentQuery.query('#txtNameSTDone')[0].setValue(taxpayer.Name);

                    Ext.ComponentQuery.query('#txtHouseNoSADone')[0].setValue(address.HouseNo);
                    Ext.ComponentQuery.query('#txtWardSADone')[0].setValue(address.WardNo);
                    Ext.ComponentQuery.query('#txtToleSADone')[0].setValue(address.StreetName);
                    Ext.ComponentQuery.query('#txtDistrictDone')[0].setValue(address.DistrictNameNep);
                    Ext.ComponentQuery.query('#txtFaxSADone')[0].setValue(address.Fax);
                    Ext.ComponentQuery.query('#txtEmailSADone')[0].setValue(address.Email);

                    Ext.ComponentQuery.query('#txtMetroTypeSADone')[0].setValue(address.VdcTown);
                    Ext.ComponentQuery.query('#txtTSOsaDone')[0].setValue(office.OfficeNameNepali);
                    Ext.ComponentQuery.query('#hdnOfficeCodeSADone')[0].setValue(office.OfficeCode);



                    if(address.LocationType=== "MM")
                    {  
                        Ext.ComponentQuery.query('#rbdMM')[0].setValue(true);
                        Ext.ComponentQuery.query('#rbdMM')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7ka');
                    }

                    else if(address.LocationType==="SM")
                    {  
                        Ext.ComponentQuery.query('#rbdSM')[0].setValue(true);
                        Ext.ComponentQuery.query('#rbdSM')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7ka');
                    }

                    else if(address.LocationType==="MN")
                    {

                        Ext.ComponentQuery.query('#rbdMN')[0].setValue(true);
                        Ext.ComponentQuery.query('#rbdMN')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7kha');
                    }

                    else
                    {   
                        Ext.ComponentQuery.query('#rbdVD')[0].setValue(true);
                        Ext.ComponentQuery.query('#rbdVD')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7Ga');

                    }


                    //---setting values in Two no field (Individual Address)-----

                    Ext.ComponentQuery.query('#txtNameDtwo')[0].setValue(taxpayer.Name);

                    if(individual !== undefined && individual !== null)
                    {
                        Ext.ComponentQuery.query('#txtHouseNoDtwo')[0].setValue(individual.HouseNo);
                        Ext.ComponentQuery.query('#txtWardDtwo')[0].setValue(individual.WardNo);
                        Ext.ComponentQuery.query('#txtToleDtwo')[0].setValue(individual.StreetName);                    
                        Ext.ComponentQuery.query('#txtDistrictDtwo')[0].setValue(individual.DistrictNameNep);
                        Ext.ComponentQuery.query('#txtMetroDtwo')[0].setValue(individual.VdcTown);

                        if(individual.LocationType==="MM")
                        {                           
                            Ext.ComponentQuery.query('#rbdMMTwo')[0].setValue(true);                        
                        }

                        else if(individual.LocationType==="SM")
                        {
                            Ext.ComponentQuery.query('#rbdSMTwo')[0].setValue(true);                        
                            Ext.ComponentQuery.query('#rbdSMTwo')[0].setReadOnly(true);
                        }
                        else if(individual.LocationType==="MN")
                        {
                            Ext.ComponentQuery.query('#rbdMNTwo')[0].setValue(true);                        
                            Ext.ComponentQuery.query('#rbdMNTwo')[0].setReadOnly(true);
                        }
                    }
                    else
                    {
                        Ext.ComponentQuery.query('#rbdVDTwo')[0].setValue(true);                        
                        Ext.ComponentQuery.query('#rbdVDTwo')[0].setReadOnly(true);
                    }



                    //--setting Values in three--
                    Ext.ComponentQuery.query('#txtExpensesSADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].Expenses);
                    Ext.ComponentQuery.query('#txtInclusionSADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].Inclusions);
                    Ext.ComponentQuery.query('#hdnAssmtdtlSn')[0].setValue(obj.root.AssmtDetailChildDOne[0].AssessDetailSn);

                    Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].AssessableIncome);
                    Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setValue(obj.root.TotalTaxLiability);
                    Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setValue(obj.root.TotalPayableTax);

                    Ext.ComponentQuery.query('#txt117SADone')[0].setValue(obj.root.ChargePenaltyDetail[0].Amount);
                    Ext.ComponentQuery.query('#txt119SADone')[0].setValue(obj.root.ChargePenaltyDetail[1].Amount);
                    //Ext.ComponentQuery.query('#txt119SADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].NetTaxLiability);


                    Ext.ComponentQuery.query('#btnAddSADone')[0].disable(true);
                    Ext.ComponentQuery.query('#btnSaveSA')[0].disable(true);
                    Ext.ComponentQuery.query('#btnEditSA')[0].disable(true);
                    Ext.ComponentQuery.query('#btnSubmitSA')[0].disable(true); 
                    Ext.ComponentQuery.query('#btnPrintSA')[0].enable(true);
                    Ext.ComponentQuery.query('#btnDelete')[0].disable(true);




                }

                //----------------------------------------------------------------------------------------------------------

                else
                {     Ext.ComponentQuery.query('#hdnAction')[0].setValue('E');   


                    Ext.ComponentQuery.query('#cboFiscalYearSADone')[0].setValue(obj.root.FiscalYear);

                    Ext.ComponentQuery.query('#txtPanSTDone')[0].setValue(obj.root.Pan);
                    Ext.ComponentQuery.query('#txtAcctType')[0].setValue(obj.root.AcctType); 

                    Ext.ComponentQuery.query('#txtPhoneSADone')[0].setValue(address.Telephone);                   
                    Ext.ComponentQuery.query('#txtNameSTDone')[0].setValue(taxpayer.Name);

                    Ext.ComponentQuery.query('#txtHouseNoSADone')[0].setValue(address.HouseNo);
                    Ext.ComponentQuery.query('#txtWardSADone')[0].setValue(address.WardNo);
                    Ext.ComponentQuery.query('#txtToleSADone')[0].setValue(address.StreetName);
                    Ext.ComponentQuery.query('#txtDistrictDone')[0].setValue(address.DistrictNameNep);
                    Ext.ComponentQuery.query('#txtFaxSADone')[0].setValue(address.Fax);
                    Ext.ComponentQuery.query('#txtEmailSADone')[0].setValue(address.Email);

                    Ext.ComponentQuery.query('#txtMetroTypeSADone')[0].setValue(address.VdcTown);
                    Ext.ComponentQuery.query('#txtTSOsaDone')[0].setValue(office.OfficeNameNepali);
                    Ext.ComponentQuery.query('#hdnOfficeCodeSADone')[0].setValue(office.OfficeCode);



                    if(address.LocationType=== "MM")
                    {  
                        Ext.ComponentQuery.query('#rbdMM')[0].setValue(true);
                        Ext.ComponentQuery.query('#rbdMM')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7ka');
                    }

                    else if(address.LocationType==="SM")
                    {  
                        Ext.ComponentQuery.query('#rbdSM')[0].setValue(true);
                        Ext.ComponentQuery.query('#rbdSM')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7ka');
                    }

                    else if(address.LocationType==="MN")
                    {

                        Ext.ComponentQuery.query('#rbdMN')[0].setValue(true);
                        Ext.ComponentQuery.query('#rbdMN')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7kha');
                    }

                    else
                    {   
                        Ext.ComponentQuery.query('#rbdVD')[0].setValue(true);
                        Ext.ComponentQuery.query('#rbdVD')[0].setReadOnly(true);
                        Ext.ComponentQuery.query('#hdnTaxId')[0].setValue('A1-1-7Ga');

                    }


                    //---setting values in Two no field (Individual Address)-----

                    Ext.ComponentQuery.query('#txtNameDtwo')[0].setValue(taxpayer.Name);



                    if(individual !== undefined && individual !== null)
                    {
                        Ext.ComponentQuery.query('#txtHouseNoDtwo')[0].setValue(individual.HouseNo);
                        Ext.ComponentQuery.query('#txtWardDtwo')[0].setValue(individual.WardNo);
                        Ext.ComponentQuery.query('#txtToleDtwo')[0].setValue(individual.StreetName);                    
                        Ext.ComponentQuery.query('#txtDistrictDtwo')[0].setValue(individual.DistrictNameNep);
                        Ext.ComponentQuery.query('#txtMetroDtwo')[0].setValue(individual.VdcTown);

                        if(individual.LocationType==="MM")
                        {                           
                            Ext.ComponentQuery.query('#rbdMMTwo')[0].setValue(true);                        
                        }

                        else if(individual.LocationType==="SM")
                        {
                            Ext.ComponentQuery.query('#rbdSMTwo')[0].setValue(true);                        
                            Ext.ComponentQuery.query('#rbdSMTwo')[0].setReadOnly(true);
                        }
                        else if(individual.LocationType==="MN")
                        {
                            Ext.ComponentQuery.query('#rbdMNTwo')[0].setValue(true);                        
                            Ext.ComponentQuery.query('#rbdMNTwo')[0].setReadOnly(true);
                        }
                    }
                    else
                    {
                        Ext.ComponentQuery.query('#rbdVDTwo')[0].setValue(true);                        
                        Ext.ComponentQuery.query('#rbdVDTwo')[0].setReadOnly(true);
                    }



                    //--setting Values in three--
                    if(obj.root.AssmtDetailChildDOne)
                    {

                        Ext.ComponentQuery.query('#txtExpensesSADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].Expenses);
                        Ext.ComponentQuery.query('#hdnAssmtDetailChildDOne')[0].setValue("E");
                        Ext.ComponentQuery.query('#txtInclusionSADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].Inclusions);
                        Ext.ComponentQuery.query('#hdnAssmtdtlSn')[0].setValue(obj.root.AssmtDetailChildDOne[0].AssessDetailSn);
                    }
                    else
                    {
                        Ext.ComponentQuery.query('#hdnAssmtDetailChildDOne')[0].setValue('');
                        Ext.ComponentQuery.query('#btnEditSA')[0].disable(true);
                        Ext.ComponentQuery.query('#btnVerifySA')[0].disable(true);
                        Ext.ComponentQuery.query('#btnDelete')[0].disable(true);


                    }
                    Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].AssessableIncome);
                    Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setValue(obj.root.TotalTaxLiability);
                    Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setValue(obj.root.TotalPayableTax);

                    Ext.ComponentQuery.query('#txt117SADone')[0].setValue(obj.root.ChargePenaltyDetail[0].Amount);
                    Ext.ComponentQuery.query('#txt119SADone')[0].setValue(obj.root.ChargePenaltyDetail[1].Amount);
                    //Ext.ComponentQuery.query('#txt119SADone')[0].setValue(obj.root.AssmtDetailChildDOne[0].NetTaxLiability);

                    Ext.ComponentQuery.query('#btnSaveSA')[0].enable(true);
                    Ext.ComponentQuery.query('#btnEditSA')[0].enable(true);
                    Ext.ComponentQuery.query('#btnSubmitSA')[0].enable(true);
                    Ext.ComponentQuery.query('#btnDelete')[0].enable(true);
                    Ext.ComponentQuery.query('#btnVerifySA')[0].disable(true);
                    Ext.ComponentQuery.query('#btnPrintSA')[0].disable(true);
                    Ext.ComponentQuery.query('#btnCancelSA')[0].enable(true);



                    Ext.ComponentQuery.query('#txtExpensesSADone')[0].setReadOnly(false);
                    Ext.ComponentQuery.query('#txtInclusionSADone')[0].setReadOnly(false);


                    Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setReadOnly(true);
                    Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0].setReadOnly(true);

                    Ext.ComponentQuery.query('#txt117SADone')[0].setReadOnly(false);
                    Ext.ComponentQuery.query('#txt119SADone')[0].setReadOnly(false);


                }

            },
            failure:function(response){}


        });


        */
    },

    onTxtSADoneFromDateBlur: function(component, e, eOpts) {
        return validateFutureDate(field.getValue(),"Y",function(){ field.focus();});
    },

    onTxtInclusionSADoneBlur: function(component, e, eOpts) {
        var txtInclusionSADone=Ext.ComponentQuery.query('#txtInclusionSADone')[0];
        var cboFiscalYearSADone=Ext.ComponentQuery.query('#cboFiscalYearSADone')[0];
        if(cboFiscalYearSADone.getValue()==="" || cboFiscalYearSADone.getValue()===null)
        {
            msg("WARNING","कृपया आयवर्ष छान्नुहोस्",function(){cboFiscalYearSADone.focus();});
            //txtInclusionSADone.focus(true);
            return;
        }


        var txtInclusionSADones=Ext.ComponentQuery.query('#txtInclusionSADone')[0].getValue();
        if(txtInclusionSADones.length===0)
        {
            Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setValue('');
        }

        //if(txtInclusionSADone.getValue()==="")
        //{
        // msg("WARNING","कृपया 'कारोबारको रकम' भर्नुहोश्");
        // txtInclusionSADone.focus(true);
        //return;
        //}
        else if(Number(txtInclusionSADone.getValue() > 2000000))
        {
            msg("WARNING","कारोबार रकम २०,००००० भन्दा बढी भएकोले  SAD01 भर्न पाउनु हुन्न !!!",function(){txtInclusionSADone.focus();});
            return;
        }

        else
        {
            //var cboFiscalYearSADone=Ext.ComponentQuery.query('#cboFiscalYearSADone')[0];
            //var txtSADoneIncome=Ext.ComponentQuery.query('#txtSADoneIncome')[0];

            var txtMetroTypeSADone=Ext.ComponentQuery.query('#txtMetroTypeSADone')[0];  

            var txtSADoneFromDate=Ext.ComponentQuery.query('#txtSADoneFromDate')[0];
            var txtSumTaxLiabilitySADone=Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0];
            var hdnTaxId=Ext.ComponentQuery.query('#hdnTaxId')[0];
            Ext.Ajax.request
            ({  url:'../Handlers/IncomeTax/D01/ilkTaxRateHandler.ashx?method=GetilkTaxRate',
                params:{fiscalYear_Tmp:cboFiscalYearSADone.getValue(), income_Tmp:txtInclusionSADone.getValue(), MetroTypeSADone:hdnTaxId.getValue() 
                },

                success:function(response){
                    console.log(response.responseText);
                    var obj =Ext.decode(response.responseText);
                    var row = obj.root;

                    var date=row.DateNRate.split('&&')[0];
                    var rate=row.DateNRate.split('&&')[1];

                    //txtSADoneFromDate.setValue(date);
                    txtSumTaxLiabilitySADone.setValue(rate);

                    console.log(date);
                    console.log(rate);
                },

                failure:function()
                {
                    msg('FAILURE',Ext.decode(response));
                }

            });
        }




    },

    onTxtInclusionSADoneKeypress: function(textfield, e, eOpts) {
        if(e.keyCode === 13)
        {


            var txtInclusionSADone=Ext.ComponentQuery.query('#txtInclusionSADone')[0];
            var cboFiscalYearSADone=Ext.ComponentQuery.query('#cboFiscalYearSADone')[0];
            if(cboFiscalYearSADone.getValue()==="" || cboFiscalYearSADone.getValue()===null)
            {
                msg("WARNING","कृपया आयवर्ष छान्नुहोस्");
                txtInclusionSADone.focus(true);
                return;
            }


            if(txtInclusionSADone.getValue()==="")
            {
                msg("WARNING","कृपया 'कारोबारको रकम' भर्नुहोस्");
                txtInclusionSADone.focus(true);
                return;
            }
            else if(Number(txtInclusionSADone.getValue() > 2000000))
            {
                msg("WARNING","कारोबार रकम २०,००००० भन्दा बढी भएकोले  SAD01 भर्न पाउनु हुन्न !!!",function(){txtInclusionSADone.focus();});
                return;
            }

            else
            {
                //var cboFiscalYearSADone=Ext.ComponentQuery.query('#cboFiscalYearSADone')[0];
                //var txtSADoneIncome=Ext.ComponentQuery.query('#txtSADoneIncome')[0];

                var txtMetroTypeSADone=Ext.ComponentQuery.query('#txtMetroTypeSADone')[0];  

                var txtSADoneFromDate=Ext.ComponentQuery.query('#txtSADoneFromDate')[0];
                var txtSumTaxLiabilitySADone=Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0];
                var hdnTaxId=Ext.ComponentQuery.query('#hdnTaxId')[0];
                Ext.Ajax.request
                ({  url:'../Handlers/IncomeTax/D01/ilkTaxRateHandler.ashx?method=GetilkTaxRate',
                    params:{fiscalYear_Tmp:cboFiscalYearSADone.getValue(), income_Tmp:txtInclusionSADone.getValue(), MetroTypeSADone:hdnTaxId.getValue() 
                    },

                    success:function(response){
                        console.log(response.responseText);
                        var obj =Ext.decode(response.responseText);
                        var row = obj.root;

                        var date=row.DateNRate.split('&&')[0];
                        var rate=row.DateNRate.split('&&')[1];

                        //txtSADoneFromDate.setValue(date);
                        txtSumTaxLiabilitySADone.setValue(rate);

                        console.log(date);
                        console.log(rate);
                    },

                    failure:function()
                    {
                        msg('FAILURE',Ext.decode(response));
                    }

                });
            }

        }
    },

    onTxtInclusionSADoneKeyup: function(textfield, e, eOpts) {
        var txtInclusionSADone=Ext.ComponentQuery.query('#txtInclusionSADone')[0];
        var cboFiscalYearSADone=Ext.ComponentQuery.query('#cboFiscalYearSADone')[0];
        if(cboFiscalYearSADone.getValue()==="" || cboFiscalYearSADone.getValue()===null)
        {
            msg("WARNING","कृपया आयवर्ष छान्नुहोस्",function(){cboFiscalYearSADone.focus();});
            //txtInclusionSADone.focus(true);
            return;
        }


        var txtInclusionSADones=Ext.ComponentQuery.query('#txtInclusionSADone')[0].getValue();
        if(txtInclusionSADones.length===0)
        {
            Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0].setValue('');
        }

        //if(txtInclusionSADone.getValue()==="")
        //{
        // msg("WARNING","कृपया 'कारोबारको रकम' भर्नुहोश्");
        // txtInclusionSADone.focus(true);
        //return;
        //}
        else if(Number(txtInclusionSADone.getValue() > 2000000))
        {
            msg("WARNING","कारोबार रकम २०,००००० भन्दा बढी भएकोले  SAD01 भर्न पाउनु हुन्न !!!",function(){txtInclusionSADone.focus();});
            return;
        }

        else
        {
            //var cboFiscalYearSADone=Ext.ComponentQuery.query('#cboFiscalYearSADone')[0];
            //var txtSADoneIncome=Ext.ComponentQuery.query('#txtSADoneIncome')[0];

            var txtMetroTypeSADone=Ext.ComponentQuery.query('#txtMetroTypeSADone')[0];  

            var txtSADoneFromDate=Ext.ComponentQuery.query('#txtSADoneFromDate')[0];
            var txtSumTaxLiabilitySADone=Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0];
            var hdnTaxId=Ext.ComponentQuery.query('#hdnTaxId')[0];
            Ext.Ajax.request
            ({  url:'../Handlers/IncomeTax/D01/ilkTaxRateHandler.ashx?method=GetilkTaxRate',
                params:{fiscalYear_Tmp:cboFiscalYearSADone.getValue(), income_Tmp:txtInclusionSADone.getValue(), MetroTypeSADone:hdnTaxId.getValue() 
                },

                success:function(response){
                    console.log(response.responseText);
                    var obj =Ext.decode(response.responseText);
                    var row = obj.root;

                    var date=row.DateNRate.split('&&')[0];
                    var rate=row.DateNRate.split('&&')[1];

                    //txtSADoneFromDate.setValue(date);
                    txtSumTaxLiabilitySADone.setValue(rate);

                    console.log(date);
                    console.log(rate);










                    //---------------
                    var txtInclusionSADone=Ext.ComponentQuery.query('#txtInclusionSADone')[0];
                    var txtExpensesSADone=Ext.ComponentQuery.query('#txtExpensesSADone')[0];


                    var inclusion = txtInclusionSADone.getValue() == "" || txtInclusionSADone.getValue() == null? 0:parseInt(txtInclusionSADone.getValue());
                    var expenses = txtExpensesSADone.getValue() == "" || txtExpensesSADone.getValue() == null? 0:parseInt(txtExpensesSADone.getValue());


                    var AssessableIncome= inclusion-expenses;
                    Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setValue(AssessableIncome);



                    //-------------
                },

                failure:function()
                {
                    msg('FAILURE',Ext.decode(response));
                }

            });
        }



    },

    onTxtExpensesSADoneKeypress: function(textfield, e, eOpts) {
        if(e.keyCode === 13 || e.keyCode === 9)
        {

            var txtInclusionSADone=Ext.ComponentQuery.query('#txtInclusionSADone')[0];
            var txtExpensesSADone=Ext.ComponentQuery.query('#txtExpensesSADone')[0];


            var inclusion = txtInclusionSADone.getValue() == "" || txtInclusionSADone.getValue() == null? 0:parseInt(txtInclusionSADone.getValue());
            var expenses = txtExpensesSADone.getValue() == "" || txtExpensesSADone.getValue() == null? 0:parseInt(txtExpensesSADone.getValue());

            if(inclusion > 2000000)
            {
                msg("WARNING","कारोबार रकम २०,००००० भन्दा बढी भएकोले  SAD01 भर्न पाउनु हुन्न !!!",function(){txtExpensesSADone.focus();});
                return;
            }

            // if(expenses > 1800000)
            //{
            //msg("WARNING","कट्टी हुने रकम रू १८,००,००० भन्दा कम हुनुपर्छ !!!",function(){txtExpensesSADone.focus();});
            // return;
            // }

            if(expenses > inclusion)
            {
                msg("WARNING","कट्टी हुने रकम कारोबारको रकम भन्दा कम वा बराबर हुनुपर्छ !!!",function(){textfield.focus();});
                return;
            }


            var AssessableIncome= inclusion-expenses;
            Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setValue(AssessableIncome);



        }
    },

    onTxtExpensesSADoneBlur: function(component, e, eOpts) {
        var txtInclusionSADone=Ext.ComponentQuery.query('#txtInclusionSADone')[0];
        var txtExpensesSADone=Ext.ComponentQuery.query('#txtExpensesSADone')[0];


        var inclusion = txtInclusionSADone.getValue() == "" || txtInclusionSADone.getValue() == null? 0:parseInt(txtInclusionSADone.getValue());
        var expenses = txtExpensesSADone.getValue() == "" || txtExpensesSADone.getValue() == null? 0:parseInt(txtExpensesSADone.getValue());

        if(inclusion > 2000000)
        {
            msg("WARNING","कारोबार रकम २०,००००० भन्दा बढी भएकोले  SAD01 भर्न पाउनु हुन्न !!!",function(){txtExpensesSADone.focus();});
            return;
        }

        // if(expenses > 1800000)
        //{
        //msg("WARNING","कट्टी हुने रकम रू १८,००,००० भन्दा कम हुनुपर्छ !!!",function(){txtExpensesSADone.focus();});
        // return;
        // }

        if(expenses > inclusion)
        {
            msg("WARNING","कट्टी हुने रकम कारोबारको रकम भन्दा कम वा बराबर हुनुपर्छ !!!",function(){textfield.focus();});
            return;
        }


        var AssessableIncome= inclusion-expenses;
        Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setValue(AssessableIncome);
    },

    onTxtExpensesSADoneKeyup: function(textfield, e, eOpts) {
        var txtInclusionSADone=Ext.ComponentQuery.query('#txtInclusionSADone')[0];
        var txtExpensesSADone=Ext.ComponentQuery.query('#txtExpensesSADone')[0];


        var inclusion = txtInclusionSADone.getValue() == "" || txtInclusionSADone.getValue() == null? 0:parseInt(txtInclusionSADone.getValue());
        var expenses = txtExpensesSADone.getValue() == "" || txtExpensesSADone.getValue() == null? 0:parseInt(txtExpensesSADone.getValue());

        if(inclusion > 2000000)
        {
            msg("WARNING","कारोबार रकम २०,००००० भन्दा बढी भएकोले  SAD01 भर्न पाउनु हुन्न !!!",function(){txtExpensesSADone.focus();});
            return;
        }

        // if(expenses > 1800000)
        //{
        //msg("WARNING","कट्टी हुने रकम रू १८,००,००० भन्दा कम हुनुपर्छ !!!",function(){txtExpensesSADone.focus();});
        // return;
        // }

        if(expenses > inclusion)
        {
            msg("WARNING","कट्टी हुने रकम कारोबारको रकम भन्दा कम वा बराबर हुनुपर्छ !!!",function(){textfield.focus();});
            return;
        }


        var AssessableIncome= inclusion-expenses;
        Ext.ComponentQuery.query('#txtAssessableIncomeSADone')[0].setValue(AssessableIncome);
    },

    onTxt117SADoneBlur: function(component, e, eOpts) {
        var txtSumTaxLiabilitySADone=Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0];
        var txt117SADone=Ext.ComponentQuery.query('#txt117SADone')[0];
        var txt119SADone=Ext.ComponentQuery.query('#txt119SADone')[0];

        var txtTotalPayableTaxSADone=Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0];


        var TotalPayableTax=Number(txtSumTaxLiabilitySADone.getValue())+Number(txt117SADone.getValue())+Number(txt119SADone.getValue());
        txtTotalPayableTaxSADone.setValue(Number(TotalPayableTax));
    },

    onTxt117SADoneKeyup: function(textfield, e, eOpts) {
        var txtSumTaxLiabilitySADone=Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0];
        var txt117SADone=Ext.ComponentQuery.query('#txt117SADone')[0];
        var txt119SADone=Ext.ComponentQuery.query('#txt119SADone')[0];

        var txtTotalPayableTaxSADone=Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0];


        var TotalPayableTax=Number(txtSumTaxLiabilitySADone.getValue())+Number(txt117SADone.getValue())+Number(txt119SADone.getValue());
        txtTotalPayableTaxSADone.setValue(Number(TotalPayableTax));
    },

    onTxt119SADoneBlur: function(component, e, eOpts) {
        var txtSumTaxLiabilitySADone=Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0];
        var txt117SADone=Ext.ComponentQuery.query('#txt117SADone')[0];
        var txt119SADone=Ext.ComponentQuery.query('#txt119SADone')[0];

        var txtTotalPayableTaxSADone=Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0];


        var TotalPayableTax=Number(txtSumTaxLiabilitySADone.getValue())+Number(txt117SADone.getValue())+Number(txt119SADone.getValue());
        txtTotalPayableTaxSADone.setValue(Number(TotalPayableTax));
    },

    onTxt119SADoneKeyup: function(textfield, e, eOpts) {
        var txtSumTaxLiabilitySADone=Ext.ComponentQuery.query('#txtSumTaxLiabilitySADone')[0];
        var txt117SADone=Ext.ComponentQuery.query('#txt117SADone')[0];
        var txt119SADone=Ext.ComponentQuery.query('#txt119SADone')[0];

        var txtTotalPayableTaxSADone=Ext.ComponentQuery.query('#txtTotalPayableTaxSADone')[0];


        var TotalPayableTax=Number(txtSumTaxLiabilitySADone.getValue())+Number(txt117SADone.getValue())+Number(txt119SADone.getValue());
        txtTotalPayableTaxSADone.setValue(Number(TotalPayableTax));
    },

    onBtnAddSADoneClick: function(button, e, eOpts) {
        var grdSADone = Ext.ComponentQuery.query('#grdSADoneFour')[0];
        var storeVoucherSA = Ext.getStore('SelfAssessmentD01');
        var txtSubmissionNoTest=Ext.ComponentQuery.query('#txtSubmissionNoTest')[0];
        var hdnUsernameSADone=Ext.ComponentQuery.query('#hdnUsernameSADone')[0];
        var btnAddSADone=Ext.ComponentQuery.query('#btnAddSADone')[0];
        btnAddSADone.disable(true);


        var rec={
            /*
            //Sno:storeVoucherSA.count()+1,
            TreasureAcctNo:'',
            PaymentMode:'',
            VoucherNo:'',
            BankCode:'',
            Amount:null
            */
            Sno:storeVoucherSA.count()+1,
            SubmissionNumber:txtSubmissionNoTest.getValue(),
            TreasureAcctNo:'',
            PaymentMode:'',
            VoucherNo:'',
            PaymentDate:'',
            Amount:null,
            Action:'A',
            EnteredBy:hdnUsernameSADone.getValue()


        };

        grdSADone.store.add(rec);

        var col = grdSADone.headerCt.getHeaderAtIndex(0);
        var recd = grdSADone.store.data.items;
        var record = recd[recd.length-1];
        grdSADone.getPlugin('grdPluginSADone').startEdit(record, col);





    },

    onCboPaymentModeChange: function(field, newValue, oldValue, eOpts) {
        var cboPaymentMode = Ext.ComponentQuery.query('#cboPaymentMode')[0].getValue();

        var cboBankCode = Ext.ComponentQuery.query('#cboBankCode')[0];


        if(cboPaymentMode === "CA")
        {




            cboBankCode.setDisabled(true);
            cboBankCode.setValue('');



        }
        else
        {

            cboBankCode.setDisabled(false); 


        }
    },

    onTxtPaymentDateSADoneBlur: function(component, e, eOpts) {
        return validateFutureDate(field.getValue(),"Y",function(){ field.focus();});
    },

    onGridroweditingpluginValidateedit: function(editor, e, eOpts) {
        var count=0;
        var message="";
        var valid=true;

        var btnAddSADone=Ext.ComponentQuery.query('#btnAddSADone')[0];


        var cboPaymentMode=Ext.ComponentQuery.query('#cboPaymentMode')[0].getValue();
        var cboBankCode=Ext.ComponentQuery.query('#cboBankCode')[0].getValue();

        if(isNaN(editor.context.newValues.TreasureAcctNo)||Number(editor.context.newValues.TreasureAcctNo)===0)
        {
            console.log(editor.context.newValues.TreasureAcctNo);
            count++;
            message=message+count+") "+"राजस्व खाता न. छान्नुहोस् <br/>" ;
            btnAddSADone.disable(true);
        }

        if(Number(editor.context.newValues.PaymentMode)===0)
        {
            valid = false;
            cboPaymentMode.focus();
            //console.log(editor.context.newValues.PaymentMode);
            count++;
            message=message+count+") "+"भुक्तानीको किसिम छान्नुहोस् <br/>" ;
            btnAddSADone.disable(true);
        }

        if(Number(editor.context.newValues.VoucherNo)===0)
        {
            console.log(editor.context.newValues.VoucherNo);
            count++;
            message=message+count+") "+"भौचर / रसिद न. भर्नुहोस् <br/>" ;
            btnAddSADone.disable(true);
        }

        //if(Number(editor.context.newValues.BankBr)===0)
        //{
        // console.log(editor.context.newValues.BankBr);
        // count++;
        // message=message+count+") "+"बैंकको नाम छान्नुहोस् <br/>" ;
        // btnAddSADone.disable(true);
        //}


        if(cboPaymentMode !== 'CA' && (cboBankCode === "" || cboBankCode === null))
        {



            count++;
            message=message+count+") "+"बैंकको नाम छान्नुहोस् <br/>" ;
            btnAddSADone.disable(true);



        }



        if(Number(editor.context.newValues.PaymentDate)===0)
        {
            console.log(editor.context.newValues.PaymentDate);
            count++;
            message=message+count+") "+"दाखिला मिति भर्नुहोस् <br/>" ;
            btnAddSADone.disable(true);
        }

        if(isNaN(editor.context.newValues.Amount) || Number(editor.context.newValues.Amount)===0)
        {
            console.log(editor.context.newValues.Amount);
            count++;
            message=message+count+") "+"दाखिला रकम भर्नुहोस् <br/>" ;
            btnAddSADone.disable(true);
        }

        else
        {
            btnAddSADone.enable(true);
        }



        /*
        else
        {    
        if(Number(editor.context.newValues.AmountRetained)>Number(editor.context.newValues.Amount))
        {
        count++;
        message=message+count+") "+" पुनरावेदन गरिएको रकम भन्दा निर्णय ठहर गरिएको रकम कम हुनूपर्छ .<br/>" ;
        }
        }
        */
        e.cancel =count>0;
        if(e.cancel)
        {
            Ext.MessageBox.alert('Warning',message);
        }
    },

    onGridroweditingpluginCanceledit: function(editor, e, eOpts) {
        //console.log('editor!!!',editor);

        //grid.store.removeAt(grid.rowIdx);


        var btnAddSADone=Ext.ComponentQuery.query('#btnAddSADone')[0];
        btnAddSADone.enable(true);

    },

    onGridroweditingpluginBeforeEdit: function(editor, e, eOpts) {

        var hdnAct = Ext.ComponentQuery.query('#hdnStatusForHide')[0];
        var hdnActGrd = Ext.ComponentQuery.query('#hdnActGrd')[0];

        //console.log("qqqqqqqqqqqqqq",hdnAct.lastValue);
        if(hdnAct.lastValue === "F")
        {
            return false;
        }

        else if(hdnAct.lastValue === "V")
        {
            return false;
        }

        else if(hdnAct.lastValue === "D")
        {
            return false;
        }
        else if(hdnActGrd.lastValue === "T")
        {
            return false;
        }


        else
        {
            return true;
        }


    },

    onBtnSubmitSAClick: function(button, e, eOpts) {



        var me = this;

        var cboFiscalYearSADone=Ext.ComponentQuery.query('#cboFiscalYearSADone')[0];
        var txtSubmissionNoTest=Ext.ComponentQuery.query('#txtSubmissionNoTest')[0];


        //if(txtSubmissionNoTest.getValue()==="" || txtSubmissionNoTest.getValue()===null)
        //{
        // msg("WARNING","कृपया सबमिसन न. भर्नुहोस् !!! ");
        //return;
        //}

        if(cboFiscalYearSADone.getValue()==="" || cboFiscalYearSADone.getValue()===null)
        {
            msg("WARNING","कृपया आयवर्ष छान्नुहोस् !!!",function(){cboFiscalYearSADone.focus();});
            return;
        }






        Ext.Msg.confirm('Confirm Action', 'एकपटक SUBMIT गरिसकेपछि अर्को पटक विवरण परिबर्नत हुने छैन्। \n के तपाई Submit गर्न चाहनुहन्छ ?', function(btn) {
            if(btn == 'yes'){

                // Ext.ComponentQuery.query('#hdnAction')[0].setValue('');
                MyApp.app.getController('SelfAssessmentD01').SaveSelfAssessmentDone("F");
                Ext.ComponentQuery.query('#btnVerifySA')[0].enable(true);

                Ext.ComponentQuery.query('#btnSaveSA')[0].disable(true);

                return true;
            }
        }, this);

    },

    onBtnDeleteClick: function(button, e, eOpts) {



        var me = this;



        var cboFiscalYearSADone=Ext.ComponentQuery.query('#cboFiscalYearSADone')[0];
        var txtSubmissionNoTest=Ext.ComponentQuery.query('#txtSubmissionNoTest')[0];


        if(txtSubmissionNoTest.getValue()==="" || txtSubmissionNoTest.getValue()===null)
        {
            msg("WARNING","कृपया सबमिसन न. भर्नुहोस् !!! ");
            return;
        }

        if(cboFiscalYearSADone.getValue()==="" || cboFiscalYearSADone.getValue()===null)
        {
            msg("WARNING","कृपया आयवर्ष छान्नुहोस् !!!",function(){cboFiscalYearSADone.focus();});
            return;
        }

        Ext.Msg.confirm('Confirm Action', 'एकपटक DELETE गरिसकेपछि अर्को पटक विवरण उपलव्द हुने छैन्। \n के तपाई DELETE गर्न चाहनुहन्छ ?', function(btn) {
            if(btn == 'yes'){

                Ext.ComponentQuery.query('#hdnAction')[0].setValue('E');
                MyApp.app.getController('SelfAssessmentD01').SaveSelfAssessmentDone("D");
                MyApp.app.getController('SelfAssessmentD01').ClearSelfAssessmentDone("R");

                Ext.ComponentQuery.query('#hdnActionDisable')[0].setValue("Z");

                Ext.ComponentQuery.query('#btnAddSADone')[0].disable(true);
                Ext.ComponentQuery.query('#btnSaveSA')[0].disable(true);
                Ext.ComponentQuery.query('#btnEditSA')[0].disable(true);
                Ext.ComponentQuery.query('#btnSubmitSA')[0].disable(true);
                Ext.ComponentQuery.query('#btnDelete')[0].disable(true);
                Ext.ComponentQuery.query('#btnVerifySA')[0].disable(true);
                Ext.ComponentQuery.query('#btnPrintSA')[0].disable(true);
                Ext.ComponentQuery.query('#btnCancelSA')[0].enable(true);
                Ext.ComponentQuery.query('#btnAddSADone')[0].disable(true);


                var strSADone=Ext.getStore('SelfAssessmentD01');
                strSADone.removeAll();
                strSADone.loadData([],false);



                return true;
            }
        }, this);

    },

    onBtnVerifySAClick: function(button, e, eOpts) {



        /*var me = this;

        Ext.Msg.confirm('Confirm Action', 'एकपटक VERIFY गरिसकेपछि अर्को पटक विवरण उपलव्द हुने छैन्। \n के तपाई Verify गर्न चाहनुहन्छ ?', function(btn) {
        if(btn == 'yes'){

        Ext.ComponentQuery.query('#hdnAction')[0].setValue('E');
        MyApp.app.getController('SelfAssessmentD01').SaveSelfAssessmentDone("V");


        return true;
        }
        }, this);
        */


        /*var rtStatus=Ext.ComponentQuery.query("#hfRTStatus")[0].getValue();

        if(rtStatus!='Y')
        {
        msg('INFO','Return Not Submitted.<BR>Please, Submit the Return Before going for Verification Process');
        return;
        }*/

        var submissionNo=Ext.ComponentQuery.query('#txtSubmissionNoTest')[0].getValue();
        var pan=Ext.ComponentQuery.query('#txtPanSTDone')[0].getValue();
        var acctType=Ext.ComponentQuery.query('#txtAcctType')[0].getValue();


        var uiConfig = {menuLink:'EVatReturnsVerification',
                pageTitle:'Verify Vat Returns'
            };

        DynamicUI(uiConfig,function(){
            Ext.ComponentQuery.query('#hfApplication')[0].setValue('IT');
            Ext.ComponentQuery.query('#hfModule')[0].setValue('SA-DO1');
            Ext.ComponentQuery.query('#lblSubmissionNo')[0].setValue(submissionNo);
            Ext.ComponentQuery.query('#lblPan')[0].setValue(pan);
            Ext.ComponentQuery.query('#hfAccountType')[0].setValue(acctType);

        });
    },

    onBtnPrintSAClick: function(button, e, eOpts) {
        var me=this;
        var loadMsg = "";
        var count = 0;
        var errorMsg = "";


        //var frmEstimatedReturn = Ext.ComponentQuery.query('#frm_EstimatedReturn')[0].getForm();
        var form = button.up('form').getForm();
        //var action = Ext.ComponentQuery.query('#hdnEst_Ret_Action')[0].getValue();
        var txtSubmissionNoTest = Ext.ComponentQuery.query('#txtSubmissionNoTest')[0].getValue();
        var txtPanSTDone =  Ext.ComponentQuery.query('#txtPanSTDone')[0].getValue();

        //alert(ddlEstFysicalYear);

        if(txtSubmissionNoTest === null || txtSubmissionNoTest === "")
        {

            count++;
            errorMsg = errorMsg + '<br/>'+ count + ") कृपया सब्मिशन नं छैन लगईन गर्नुहोस्!!!";

        }


        if(count >0)
        {
            msg("WARNING",errorMsg);
            return false;
        }


        MyApp.app.getController('SelfAssessmentD01').LoadSADOneDataForPrint();


    },

    onBtnBackSAClick: function(button, e, eOpts) {
        var param=Ext.ComponentQuery.query('#pnlSelfAssessmentD01')[0].extraParam;

        var tNo=param.tranNo;
        var idxM=param.indexM;
        var idxT=param.indexT;

        //alert(tNo);
        //alert(idxM);
        //alert(idxT);

        uiConfig = {menuLink:'ModuleVerification',pageTitle:'Module Verification'};
        DynamicUI(uiConfig,null,{tranNo:tNo,indexM:idxM,indexT:idxT });
    }

});