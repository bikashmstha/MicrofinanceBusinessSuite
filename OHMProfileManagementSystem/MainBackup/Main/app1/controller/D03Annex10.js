/*
 * File: app/controller/D03Annex10.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.D03Annex10', {
    extend: 'Ext.app.Controller',

    stores: [
        'OfficeBankInfo',
        'EstPaymentMode',
        'ClaimTypeD03',
        'RevenueAccountAnx10',
        'CreditClaimAnx10'
    ],

    onPnlD03Annex10AfterRender: function(component, eOpts) {
        var me = this;

        var strCreditClaim = Ext.getStore("CreditClaimAnx10");
        var view = Ext.ComponentQuery.query('#pnlD03Annex10')[0];
        var user = me.getController('MyApp.controller.LoginSecurity');  

        var offCode = "";
        var fiscalYear = "";

        var txtFiscalYear = Ext.ComponentQuery.query('#txtFiscalYearAnx10')[0];
        var strBank = Ext.getStore("OfficeBankInfo");
        var strRevenueAc = Ext.getStore("RevenueAccountAnx10");

        var param =  me.validateParam();
        pan = param.pan;
        fiscalYear = param.fiscalYear;
        offCode = param.offCode;


        strBank.load(
        {
            params:{officeCode:offCode}
        });

        strRevenueAc.loadData([],false);

        if(param.taxPayerCatID == "B")
        {

            strRevenueAc.load(
            {
                params:{acctType:"I",impOn:"SAD03"}
            });
        }
        else
        {
            strRevenueAc.load(
            {
                params:{acctType:"I",impOn:"SAD01"}
            });
        }

        txtFiscalYear.setValue(fiscalYear);


        strCreditClaim.loadData([],false);

        if(param.action === "E")
        {
            var url = "../Handlers/IncomeTax/D03/DCTBCreditHandler.ashx?method=GetDCTBCredit" ;
            var args = {claimNo:param.submissionNo};

            if(param.from === "AU")
            {  
                url = "../Handlers/IncomeTax/D03/DCTBCreditHandler.ashx?method=GetDCTBCreditAU";
                args = {offCodeAU:param.offCodeAU,requestNo:param.requestNo,claimNo:param.submissionNo};
            }

            var wait  = waitMsg('Loading ...');
            Ext.Ajax.request({
                url:url,
                params:args,
                success:function(result, request)
                {      
                    wait.hide();
                    var obj = Ext.decode(result.responseText); 

                    var btnSubmit = Ext.ComponentQuery.query('#btnSubmitAnx10')[0];

                    btnSubmit.setText("Update Annex 10");

                    param.tranNo = obj.root.TranNo;

                    strCreditClaim.add(obj.root.CreditClaims);

                    me.calTotalCredit();
                },

                failure:function(result, request){
                    msg('ERROR OCURRED !!!', 'Error');                 
                }

            });

        }

        //----------------------------------------------------------------
        // NB: Return to SetAnnex	
        //----------------------------------------------------------------
        if(param.from === "MV")
        {
            var annexD03 = me.getController('MyApp.controller.SetAnnexD03');

            var el = Ext.get('lnkRedirectTopAnx10');

            el.on('click', function(e,t,eOpts){

                Ext.Msg.confirm('Confirm Action', 'के तपाई पछाडि गएर अनुसुची तय गर्न चाहनुहुन्छ?', function(btn) {
                    if(btn == 'yes'){        

                        param.action ="";
                        annexD03.redirectToAnnexD03(param);
                    }
                }, this);
            });
        }


    },

    onCboClaimTypeAnx10Select: function(combo, records, eOpts) {
        var me = this;
        me.enableDisableControls(combo.getValue());

    },

    onBtnSubmitAnx10Click: function(button, e, eOpts) {
        var me = this;
        var view = Ext.ComponentQuery.query('#pnlD03Annex10')[0];
        var user = me.getController('MyApp.controller.LoginSecurity');  

        var strCreditClaim = Ext.getStore("CreditClaimAnx10");
        var creditClaims = null;
        var credit = null;

        var pan = "";
        var fiscalYear = "";
        var subNo = ""; 
        var offCode = "";
        var action = "";
        var tranNo = "";

        var param =  me.validateParam();

        pan = param.pan;
        fiscalYear = param.fiscalYear;
        subNo = param.submissionNo;    
        offCode = param.offCode;    
        action = param.action;
        tranNo = param.tranNo;

        strCreditClaim.clearFilter();

        if(strCreditClaim.getCount() > 0)
        {
            creditClaims = getJson(strCreditClaim);

            strCreditClaim.filter(function(item){
                return item.get("Action")!= 'D';
            });
        }


        credit = {
            Pan :pan,
            FiscalYear :fiscalYear,
            ClaimNo :subNo,
            ClaimDate :"",
            Terminal :"",
            TranDate :"",
            UserName :"",
            OffCode :offCode,
            RecordStatus :"",
            TranNo :tranNo,
            Action :action,
            CreditClaims:creditClaims
        };

        //---------------------------------------------------------------------------------------
        // NB: Saving Annex-10 Details
        //---------------------------------------------------------------------------------------
        var wait  = waitMsg('Saving ...');
        var url = "../Handlers/IncomeTax/D03/DCTBCreditHandler.ashx?method=Save" ;
        var args = {credit:JSON.stringify(credit)};

        if(param.from === "AU")
        {  
            url = "../Handlers/IncomeTax/D03/DCTBCreditHandler.ashx?method=SaveAU";
            args = {offCodeAU:param.offCodeAU,requestNo:param.requestNo,credit:JSON.stringify(credit)};
        }

        Ext.Ajax.request({
            url:url,
            params:args,
            success:function(result, request)
            {      
                wait.hide();
                var obj = Ext.decode(result.responseText);

                message = obj.message;

                if(obj.success === "false")
                {
                    msg("FAILURE",message); 
                }
                else
                {       

                    if(obj.root !== null && obj.root.CreditClaims !== null)
                    {
                        strCreditClaim.loadData([],false);
                        strCreditClaim.add(obj.root.CreditClaims);
                    }


                    if(param.action === "" || param.action === "A")
                    {
                        var btnSubmit = Ext.ComponentQuery.query('#btnSubmitAnx10')[0];

                        var arr = message.split("/");

                        param.action = "E";
                        param.tranNo = arr[1].trim(); 

                        btnSubmit.setText("Update Annex 10");             

                        var annexD03 = me.getController('MyApp.controller.SetAnnexD03');
                        annexD03.loadAnxSummary(subNo);

                        msg("SUCCESS",arr[0].trim());
                        //msg("SUCCESS",arr[0].trim(),function(){annexD03.loadAnxSummary(subNo);}); 
                    }
                    else
                    {
                        msg("SUCCESS",message); 
                    }                
                }
            },
            failure:function(result, request){
                msg('ERROR OCURRED !!!', 'Error');                 
            }

        });
    },

    onBtnAddAnx10Click: function(button, e, eOpts) {
        var me = this;

        var creditDocType = "";
        var fiscalYear;
        var creditFiscalyear = "";
        var accountCode = "";
        var creditDocMode = "";
        var creditDocNo = ""; 
        var creditBankCode ="";
        var creditDocDate = "";                  
        var creditAmount = null;
        var withTypeCode = "";	
        var withHoldingPan = "";	
        var withAgentName = "";
        var creditDate = "";
        var creditDocDate = "";
        var errMsg = "";

        var cboClaimType = Ext.ComponentQuery.query('#cboClaimTypeAnx10')[0];

        creditDocType = cboClaimType.getValue();
        fiscalYear = Ext.ComponentQuery.query('#txtFiscalYearAnx10')[0].getValue();
        creditAmount = Ext.ComponentQuery.query('#txtCreditAmtAnx10')[0].getValue();

        if(creditDocType === "PA")
        {    
            accountCode = Ext.ComponentQuery.query('#cboAcctNumberAnx10')[0].getValue();
            creditDocMode = Ext.ComponentQuery.query('#cboVoucherTypeAnx10')[0].getValue();
            creditDocNo =Ext.ComponentQuery.query('#txtVoucherNumAnx10')[0].getValue();
            creditBankCode = Ext.ComponentQuery.query('#cboBankAnx10')[0].getValue();
            creditDocDate = Ext.ComponentQuery.query('#txtCreditDateAnx10')[0].getValue();

            if(accountCode === "")
            {
                errMsg += "कृपया राजश्व शिर्षक नम्वर राख्नुहोस् !!! <br/>";
            }

            if(creditDocMode === "")
            {
                errMsg += "कृपया दाखीलाको तरिका राख्नुहोस् !!! <br/>";
            }

            if(creditDocNo === "")
            {
                errMsg += "कृपया दाखीला निस्सा नम्वर  राख्नुहोस् !!! <br/>";
            }

            if(creditDocMode !== "CA" && creditBankCode === "")
            {
                errMsg += "कृपया बैंकको नाम राख्नुहोस् !!! <br/>";

            }

            if(creditDocDate === "")
            {
                errMsg += "कृपया दाखीला मिति राख्नुहोस् !!! <br/>";
            }

        }
        else if(creditDocType === "VT")
        {
            creditDocMode = Ext.ComponentQuery.query('#cboVoucherTypeAnx10')[0].getValue();
            creditBankCode = Ext.ComponentQuery.query('#cboBankAnx10')[0].getValue();    
            creditDocDate = Ext.ComponentQuery.query('#txtCreditDateAnx10')[0].getValue();

            if(creditDocMode === "")
            {
                errMsg += "कृपया दाखीलाको तरिका राख्नुहोस् !!! <br/>";
            }

            if(creditDocMode !== "CA" && creditBankCode === "")
            {
                errMsg += "कृपया बैंकको नाम राख्नुहोस् !!! <br/>";

            }

            if(creditDocDate === "")
            {
                errMsg += "कृपया दाखीला मिति राख्नुहोस् !!! <br/>";
            }
        }
        else if(creditDocType === "CU")
        {    
            creditDocNo =Ext.ComponentQuery.query('#txtVoucherNumAnx10')[0].getValue();   
            creditDocDate = Ext.ComponentQuery.query('#txtCreditDateAnx10')[0].getValue();

            if(creditDocNo === "")
            {
                errMsg += "कृपया दाखीला निस्सा नम्वर  राख्नुहोस् !!! <br/>";
            }


            if(creditDocDate === "")
            {
                errMsg += "कृपया दाखीला मिति राख्नुहोस् !!! <br/>";
            }
        }
        else if(creditDocType === "TD")
        {
            creditDocNo =Ext.ComponentQuery.query('#txtVoucherNumAnx10')[0].getValue();   
            creditDocDate = Ext.ComponentQuery.query('#txtCreditDateAnx10')[0].getValue();
            withTypeCode = Ext.ComponentQuery.query('#cboWithHoldingTypeAnx10')[0].getValue();	
            withHoldingPan = Ext.ComponentQuery.query('#txtWithHoldingPanAnx10')[0].getValue();
            withAgentName = Ext.ComponentQuery.query('#txtWithHoldingNameAnx10')[0].getValue();

            if(creditDocNo === "")
            {
                errMsg += "कृपया दाखीला निस्सा नम्वर  राख्नुहोस् !!! <br/>";
            }

            if(creditDocDate === "")
            {
                errMsg += "कृपया दाखीला मिति राख्नुहोस् !!! <br/>";
            }

            if(withTypeCode === "")
            {
                errMsg += "कृपया अगि्रम कर कट्टीको किसिम राख्नुहोस् !!! <br/>";
            }


            if(withHoldingPan === "")
            {
                errMsg += "कृपया अगि्रम कर कट्टी गर्नेको स्था.ले.नं. (भए) राख्नुहोस् !!! <br/>";
            }

            if(withAgentName === "")
            {
                errMsg += "कृपया अगि्रम कर कट्टी गर्नेको नाम राख्नुहोस् !!! <br/>";
            }

        }
        else if(creditDocType === "TC")
        {
            creditFiscalyear = Ext.ComponentQuery.query('#txtCreditTransferFiscalYearAnx10')[0].getValue();

            if(creditFiscalyear === "")
            {
                errMsg += "कृपया क्रेडिट सारेको आर्थिक वर्ष राख्नुहोस् !!! <br/>";
            }
        }


        if(creditAmount === "")
        {
            errMsg += "कृपया दाखीला रकम राख्नुहोस् !!! <br/>";
        }

        if(errMsg !== "")
        {
            msg("WARNING",errMsg);
            return;
        }

        var grd = Ext.ComponentQuery.query('#grdCreditClaimD03Anx10')[0];
        var len = grd.getSelectionModel().getSelection().length;

        var strCreditClaim = Ext.getStore("CreditClaimAnx10");

        if(len < 1)
        {
            var offCode = "";
            var assessmentNo ="";

            var param =  me.validateParam();
            assessmentNo = param.submissionNo;
            offCode = param.offCode;

            var rec = {    
                OffCode:offCode,
                AssessmentType:"SA",
                CreditNo:assessmentNo,
                CreditDate:creditDate,
                CreditSN:null,
                CreditDocType:creditDocType,
                CreditDocNo:creditDocNo,
                CreditDocDate:creditDocDate,
                CreditDocMode:creditDocMode,
                CreditAmount:creditAmount,
                WithAgentName:withAgentName,
                WithHoldingPan:withHoldingPan,
                AccountCode:accountCode,
                CreditFiscalyear:creditFiscalyear,
                WithTypeCode:withTypeCode,
                RecordStatus:"",
                CreditBankCode:creditBankCode,
                CreditOffCode:"",
                AssessmentNo:assessmentNo,
                AssessmentDate:"",
                ClaimNo:assessmentNo,
                ClaimDate:"",
                Terminal:"",
                TranDate:"",
                UserName:"",
                Pan:"",
                Fiscalyear:fiscalYear,
                SourceBank:"",
                TranNo:"",
                Action:""
            };

            strCreditClaim.add(rec);    

            grd.bindStore(strCreditClaim);

            //console.log("New str>>",strCreditClaim);

        }
        else
        {
            var row = grd.getSelectionModel().getSelection()[0];

            // row.data.CreditDocType =;
            row.data.AccountCode = accountCode;
            row.data.CreditDocMode = creditDocMode;
            row.data.CreditDocNo = creditDocNo;
            row.data.CreditBankCode = creditBankCode;
            row.data.CreditDocDate = creditDocDate;
            row.data.CreditAmount = creditAmount;
            row.data.WithTypeCode = withTypeCode;
            row.data.WithHoldingPan = withHoldingPan;
            row.data.WithAgentName = withAgentName;
            row.data.CreditFiscalyear = creditFiscalyear;

            //grd.getSelectionModel().select(false);
            grd.getSelectionModel().clearSelections();    

            grd.bindStore(strCreditClaim);


        }

        me.clearControls();
        me.calTotalCredit();
    },

    onGrdCreditClaimD03Anx10BeforeRender: function(component, eOpts) {
        var grd = Ext.ComponentQuery.query('#grdCreditClaimD03Anx10')[0];

        grd.columns[1].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";    

            var items = Ext.getStore("ClaimTypeD03").data.items;

            for(var i=0;i<items.length;i++)
            {        

                if(items[i].data.ClaimID === value)
                {           
                    temp = items[i].data.ClaimName;
                    break;
                }        
            }

            return temp;

        };

        grd.columns[3].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";    

            var items = Ext.getStore("EstPaymentMode").data.items;

            for(var i=0;i<items.length;i++)
            {        

                if(items[i].data.EstPaymentModeID === value)
                {           
                    temp = items[i].data.EstPaymentModeName;
                    break;
                }        
            }

            return temp;

        };

        grd.columns[5].renderer = function(value, metaData, record, rowIndex, colIndex, store, view) {
            var temp="";    

            var items = Ext.getStore("OfficeBankInfo").data.items;

            for(var i=0;i<items.length;i++)
            {        

                if(items[i].data.BankBr === value)
                {           
                    temp = items[i].data.BankName;
                    break;
                }        
            }

            return temp;

        };












    },

    onLblRedirectAnx10Click: function(label) {
        var me = this;

        Ext.Msg.confirm('Confirm Action', 'के तपाई पछाडि गएर अनुसुची तय गर्न चाहनुहुन्छ?', function(btn) {
            if(btn == 'yes'){        

                var annexD03 = me.getController('MyApp.controller.SetAnnexD03');

                var param = me.validateParam();
                param.action ="";

                annexD03.redirectToAnnexD03(param);
            }
        }, this);

    },

    onCboVoucherTypeAnx10Change: function(field, newValue, oldValue, eOpts) {
        var cboBank = Ext.ComponentQuery.query('#cboBankAnx10')[0];
        cboBank.setValue("");    

        if(newValue == "CA")
        {
            cboBank.setDisabled(true);
        }
        else
        {
            cboBank.setDisabled(false);
        }
    },

    editCreditClaim: function(row) {
        var me = this;

        var cboClaimType = Ext.ComponentQuery.query('#cboClaimTypeAnx10')[0];
        var txtCreditTrnsfrtxtFiscalYear = Ext.ComponentQuery.query('#txtCreditTransferFiscalYearAnx10')[0];
        var cboAcctNumber = Ext.ComponentQuery.query('#cboAcctNumberAnx10')[0];
        var cboVoucherType = Ext.ComponentQuery.query('#cboVoucherTypeAnx10')[0];
        var txtVoucherNumber = Ext.ComponentQuery.query('#txtVoucherNumAnx10')[0];
        var cboBank = Ext.ComponentQuery.query('#cboBankAnx10')[0];
        var txtCreditDate = Ext.ComponentQuery.query('#txtCreditDateAnx10')[0];
        var txtCreditAmt = Ext.ComponentQuery.query('#txtCreditAmtAnx10')[0];
        var cboWithHoldingTyp = Ext.ComponentQuery.query('#cboWithHoldingTypeAnx10')[0];
        var txtWithHoldingPan = Ext.ComponentQuery.query('#txtWithHoldingPanAnx10')[0];
        var txtWithHoldingName = Ext.ComponentQuery.query('#txtWithHoldingNameAnx10')[0];

        cboClaimType.setValue(row.data.CreditDocType);
        me.enableDisableControls(row.data.CreditDocType);
        cboAcctNumber.setValue(row.data.AccountCode);
        cboVoucherType.setValue(row.data.CreditDocMode);
        txtVoucherNumber.setValue(row.data.CreditDocNo);
        cboBank.setValue(row.data.CreditBankCode);
        txtCreditDate.setValue(row.data.CreditDocDate);
        txtCreditAmt.setValue(row.data.CreditAmount);  
        cboWithHoldingTyp.setValue(row.data.WithTypeCode);
        txtWithHoldingPan.setValue(row.data.WithHoldingPan);
        txtWithHoldingName.setValue(row.data.WithAgentName);
        txtCreditTrnsfrtxtFiscalYear.setValue(row.data.CreditFiscalyear);

    },

    clearControls: function() {
        var txtFiscalYear = Ext.ComponentQuery.query('#txtFiscalYearAnx10')[0];
        var txtCreditTrnsfrtxtFiscalYear = Ext.ComponentQuery.query('#txtCreditTransferFiscalYearAnx10')[0];
        var cboAcctNumber = Ext.ComponentQuery.query('#cboAcctNumberAnx10')[0];
        var cboVoucherType = Ext.ComponentQuery.query('#cboVoucherTypeAnx10')[0];
        var txtVoucherNumber = Ext.ComponentQuery.query('#txtVoucherNumAnx10')[0];
        var cboBank = Ext.ComponentQuery.query('#cboBankAnx10')[0];
        var txtCreditDate = Ext.ComponentQuery.query('#txtCreditDateAnx10')[0];
        var txtCreditAmt = Ext.ComponentQuery.query('#txtCreditAmtAnx10')[0];
        var cboWithHoldingTyp = Ext.ComponentQuery.query('#cboWithHoldingTypeAnx10')[0];
        var txtWithHoldingPan = Ext.ComponentQuery.query('#txtWithHoldingPanAnx10')[0];
        var txtWithHoldingName = Ext.ComponentQuery.query('#txtWithHoldingNameAnx10')[0];

        var btnAdd = Ext.ComponentQuery.query('#btnAddAnx10')[0];
        /*
        btnAdd.setVisible(false);
        txtFiscalYear.setVisible(false);
        txtCreditTrnsfrtxtFiscalYear.setVisible(false);
        cboAcctNumber.setVisible(false);
        cboVoucherType.setVisible(false);
        txtVoucherNumber.setVisible(false);
        cboBank.setVisible(false);
        txtCreditDate.setVisible(false);
        txtCreditAmt.setVisible(false);
        cboWithHoldingTyp.setVisible(false);
        txtWithHoldingPan.setVisible(false);
        txtWithHoldingName.setVisible(false);  
        */
        txtCreditTrnsfrtxtFiscalYear.setValue("");
        cboAcctNumber.setValue("");
        cboVoucherType.setValue("");
        txtVoucherNumber.setValue("");
        cboBank.setValue("");
        txtCreditDate.setValue("");
        txtCreditAmt.setValue("");
        cboWithHoldingTyp.setValue("");
        txtWithHoldingPan.setValue("");
        txtWithHoldingName.setValue("");

        txtCreditDate.clearInvalid();
    },

    init: function(application) {
        /*

        this.control({
        'MyViewport actioncolumn':{
        columnaction: this.onAction
        }
        });
        */
        //gridpanel

        this.control({
            "#pnlD03Annex10": {
                afterrender: this.onPnlD03Annex10AfterRender
            },
            "#cboClaimTypeAnx10": {
                select: this.onCboClaimTypeAnx10Select
            },
            "#btnSubmitAnx10": {
                click: this.onBtnSubmitAnx10Click
            },
            "#btnAddAnx10": {
                click: this.onBtnAddAnx10Click
            },
            "#grdCreditClaimD03Anx10": {
                beforerender: this.onGrdCreditClaimD03Anx10BeforeRender
            },
            "#lblRedirectAnx10": {
                click: this.onLblRedirectAnx10Click
            },
            "#cboVoucherTypeAnx10": {
                change: this.onCboVoucherTypeAnx10Change
            }
        });
    },

    onAction: function(aGrid, aRowIndex, aColIndex, aItem, aEvent, aRecord ) {
        //alert("works yar !");
    },

    enableDisableControls: function(creditClaimType) {
        var btnAdd = Ext.ComponentQuery.query('#btnAddAnx10')[0];

        var txtFiscalYear = Ext.ComponentQuery.query('#txtFiscalYearAnx10')[0];
        var txtCreditTrnsfrtxtFiscalYear = Ext.ComponentQuery.query('#txtCreditTransferFiscalYearAnx10')[0];
        var cboAcctNumber = Ext.ComponentQuery.query('#cboAcctNumberAnx10')[0];
        var cboVoucherType = Ext.ComponentQuery.query('#cboVoucherTypeAnx10')[0];
        var txtVoucherNumber = Ext.ComponentQuery.query('#txtVoucherNumAnx10')[0];
        var cboBank = Ext.ComponentQuery.query('#cboBankAnx10')[0];
        var txtCreditDate = Ext.ComponentQuery.query('#txtCreditDateAnx10')[0];
        var txtCreditAmt = Ext.ComponentQuery.query('#txtCreditAmtAnx10')[0];
        var cboWithHoldingTyp = Ext.ComponentQuery.query('#cboWithHoldingTypeAnx10')[0];
        var txtWithHoldingPan = Ext.ComponentQuery.query('#txtWithHoldingPanAnx10')[0];
        var txtWithHoldingName = Ext.ComponentQuery.query('#txtWithHoldingNameAnx10')[0];

        if(creditClaimType !== "")
        {
            btnAdd.setVisible(true);
        }
        else
        {

            return;
        }

        txtFiscalYear.setVisible(false);
        txtCreditTrnsfrtxtFiscalYear.setVisible(false);
        cboAcctNumber.setVisible(false);
        cboVoucherType.setVisible(false);
        txtVoucherNumber.setVisible(false);
        cboBank.setVisible(false);
        cboBank.setDisabled(false);
        txtCreditDate.setVisible(false);
        txtCreditAmt.setVisible(false);
        cboWithHoldingTyp.setVisible(false);
        txtWithHoldingPan.setVisible(false);
        txtWithHoldingName.setVisible(false);  


        txtCreditTrnsfrtxtFiscalYear.setValue("");
        cboAcctNumber.setValue("");
        cboVoucherType.setValue("");
        txtVoucherNumber.setValue("");
        cboBank.setValue("");
        txtCreditDate.setValue("");
        txtCreditAmt.setValue("");
        cboWithHoldingTyp.setValue("");
        txtWithHoldingPan.setValue("");
        txtWithHoldingName.setValue("");

        if(creditClaimType === "PA")
        {
            txtFiscalYear.setVisible(true);
            cboAcctNumber.setVisible(true);
            cboVoucherType.setVisible(true);
            txtVoucherNumber.setVisible(true);
            cboBank.setVisible(true);
            txtCreditDate.setVisible(true);
            txtCreditAmt.setVisible(true);
        }
        else if(creditClaimType === "VT")
        {
            txtFiscalYear.setVisible(true);
            cboVoucherType.setVisible(true);
            cboBank.setVisible(true);
            txtCreditDate.setVisible(true);
            txtCreditAmt.setVisible(true);
        }
        else if(creditClaimType === "CU")
        {
            txtFiscalYear.setVisible(true);
            txtVoucherNumber.setVisible(true);
            txtCreditDate.setVisible(true);
            txtCreditAmt.setVisible(true);
        }
        else if(creditClaimType === "TD")
        {
            txtFiscalYear.setVisible(true);
            txtVoucherNumber.setVisible(true);
            txtCreditDate.setVisible(true);
            txtCreditAmt.setVisible(true);    
            cboWithHoldingTyp.setVisible(true);
            txtWithHoldingPan.setVisible(true);
            txtWithHoldingName.setVisible(true); 
        }
        else if(creditClaimType === "TC")
        {
            txtFiscalYear.setVisible(true);
            txtCreditTrnsfrtxtFiscalYear.setVisible(true);    
            txtCreditAmt.setVisible(true);
        }
    },

    calTotalCredit: function() {
        var store = Ext.getStore("CreditClaimAnx10");
        var txtTotalCredit = Ext.ComponentQuery.query('#txtTotalCreditAnx10')[0];
        var sum = 0;

        store.each(function (rec) {   

            if(rec.get('CreditAmount') !=="")
            {
                var creditAmt = rec.get('CreditAmount') === null || rec.get('CreditAmount') === "" ? 0:parseFloat(rec.get('CreditAmount'));
                sum = parseFloat(sum) + creditAmt; 
            }
        });

        txtTotalCredit.setValue(sum);
    },

    onLaunch: function() {
        var me = this;
        var annexD03 = me.getController('MyApp.controller.SetAnnexD03');

        var param = me.validateParam();
        var el = Ext.get('lnkRedirectTopAnx10');

        el.on('click', function(e,t,eOpts){

            Ext.Msg.confirm('Confirm Action', 'के तपाई पछाडि गएर अनुसुची तय गर्न चाहनुहुन्छ?', function(btn) {
                if(btn == 'yes'){        

                    param.action ="";
                    annexD03.redirectToAnnexD03(param);
                }
            }, this);
        });



    },

    validateParam: function() {
        var me = this;
        var view = Ext.ComponentQuery.query('#pnlD03Annex10')[0];
        var user = me.getController('MyApp.controller.LoginSecurity');  
        var param = "";

        if(view.extraParam === null)
        {
            user.clearSession();

            return;

        }
        else
        {
            return view.extraParam;
        }
    }

});
