/*
 * File: app/view/StaffLoanDisbursementOpening.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.StaffLoanDisbursementOpening', {
    extend: 'Ext.panel.Panel',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.selection.RowModel',
        'Ext.grid.plugin.RowEditing',
        'Ext.grid.column.Action'
    ],

    frame: true,
    title: 'Staff Loan Disbursement Opening',

    layout: {
        type: 'table',
        columns: 4
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    colspan: 4,
                    frame: true,
                    itemId: 'frmStaffLoanDisbursementOpeneing',
                    bodyPadding: 10,
                    layout: {
                        type: 'table',
                        columns: 4
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtLoanNo',
                            fieldLabel: 'Loan No',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 53
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtDeduction1',
                            margin: '0 0 0 10',
                            fieldLabel: 'Deduction 1',
                            labelWidth: 125
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtDeduction2',
                            margin: '0 0 0 10',
                            fieldLabel: 'Deduction 2',
                            labelWidth: 120
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtLoanDateBS',
                            fieldLabel: 'Loan Date(B.S.)',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtLoanDateAD',
                            margin: '0 0 0 10',
                            fieldLabel: '(A.D.)',
                            labelWidth: 50,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtDeduction3',
                            margin: '0 0 0 10',
                            fieldLabel: 'Deduction 3',
                            labelWidth: 125
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtDeduction4',
                            margin: '0 0 0 10',
                            fieldLabel: 'Deduction 4',
                            labelWidth: 120
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtStaffCode',
                            fieldLabel: 'Staff Code',
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            size: 53,
                            listeners: {
                                afterrender: {
                                    fn: me.onTxtStaffCodeAfterRender,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtTotalDeduction',
                            margin: '0 0 0 10',
                            fieldLabel: 'Total Deduction',
                            labelWidth: 125,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtNetAmountPaid',
                            margin: '0 0 0 10',
                            fieldLabel: 'Net Amount paid',
                            labelWidth: 120,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 30
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtName',
                            fieldLabel: 'Name',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 53
                        },
                        {
                            xtype: 'combobox',
                            colspan: 2,
                            itemId: 'ddlInterestCalcMethod',
                            margin: '0 0 0 10',
                            fieldLabel: 'Interest Calc Method',
                            labelWidth: 125,
                            emptyText: '---Select---',
                            size: 30,
                            displayField: 'RefDtlName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'InterestCalcMethodStore',
                            valueField: 'RefDtlCode'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtAddress',
                            fieldLabel: 'Address',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 53
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtInterestRate',
                            margin: '0 0 0 10',
                            fieldLabel: 'Interest Rate',
                            labelWidth: 125,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'combobox',
                            itemId: 'ddlLoanStatus',
                            margin: '0 0 0 10',
                            fieldLabel: 'Loan Status',
                            labelWidth: 120,
                            emptyText: '---Select---',
                            displayField: 'RefDtlName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'LoanStatusStore',
                            valueField: 'RefDtlCode'
                        },
                        {
                            xtype: 'combobox',
                            colspan: 2,
                            itemId: 'ddlManager',
                            fieldLabel: 'Manager',
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            displayField: 'EmpName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'EmployeeSearchShortStore',
                            valueField: 'EmpId'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtLoanPeriod',
                            margin: '0 0 0 10',
                            fieldLabel: 'Loan Period',
                            labelWidth: 125
                        },
                        {
                            xtype: 'combobox',
                            itemId: 'ddlLoanPeriodType',
                            margin: '0 0 0 10',
                            fieldLabel: 'Loan Period Type',
                            labelWidth: 120,
                            emptyText: '---Select---',
                            displayField: 'RefDtlName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'LoanPeriodTypeStore',
                            valueField: 'RefDtlCode'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtLoanHeading',
                            fieldLabel: 'Loan Heading',
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            listeners: {
                                afterrender: {
                                    fn: me.onTxtLoanHeadingAfterRender,
                                    scope: me
                                },
                                change: {
                                    fn: me.onTxtLoanHeadingChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtLoanHeadingDesc',
                            margin: '0 0 0 10',
                            fieldLabel: 'Label',
                            hideLabel: true,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 28
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtInstallmentPeriod',
                            margin: '0 0 0 10',
                            fieldLabel: 'Installment Period',
                            labelWidth: 125
                        },
                        {
                            xtype: 'combobox',
                            itemId: 'ddlInstallmentType',
                            margin: '0 0 0 10',
                            fieldLabel: 'Installment Type',
                            labelWidth: 120,
                            emptyText: '---Select---',
                            displayField: 'RefDtlName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'InstallmentTypeRefShortStore',
                            valueField: 'RefDtlCode'
                        },
                        {
                            xtype: 'combobox',
                            colspan: 2,
                            itemId: 'ddlLoanPurpose',
                            fieldLabel: 'Loan Purpose',
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            displayField: 'LoanPurposeDesc',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'LoanPurposeForDisbursementStore',
                            valueField: 'LoanPurposeCode',
                            listeners: {
                                select: {
                                    fn: me.onDdlLoanPurposeSelect,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'container',
                            layout: {
                                type: 'table',
                                columns: 2
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtGraceDays',
                                    margin: '0 0 0 10',
                                    fieldLabel: 'Grace Days',
                                    labelWidth: 125,
                                    size: 15
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'txtNoOfInstallment',
                                    margin: '0 0 0 5',
                                    fieldLabel: 'Label',
                                    hideLabel: true,
                                    fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                                    size: 10
                                }
                            ]
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtInstallmentAmount',
                            margin: '0 0 0 10',
                            fieldLabel: 'Installment Amount',
                            labelWidth: 120,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtLoanSector',
                            fieldLabel: 'Loan Sector',
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 53
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txt1stInstallDateBS',
                            margin: '0 0 0 10',
                            fieldLabel: '1st Install Date(B.S.)',
                            labelWidth: 125,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txt1stInstallDateAD',
                            margin: '0 0 0 10',
                            fieldLabel: '1st Install Date(A.D.)',
                            labelWidth: 120,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 30
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtAppLoanAmt',
                            fieldLabel: 'App. Loan Amt'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtMaturityDateBS',
                            margin: '0 0 0 10',
                            fieldLabel: 'Maturity Date(B.S.)',
                            labelWidth: 125,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtMaturityDateAD',
                            margin: '0 0 0 10',
                            fieldLabel: 'Maturity Date(A.D.)',
                            labelWidth: 120,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;',
                            size: 30
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtTotalLoanTaken',
                            fieldLabel: 'Total Loan Taken'
                        },
                        {
                            xtype: 'combobox',
                            colspan: 2,
                            itemId: 'ddlContraAccount',
                            margin: '0 0 0 10',
                            fieldLabel: 'Contra Account',
                            labelWidth: 125,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            size: 30,
                            displayField: 'AccountDesc',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'ContraAccountSearchShortStore',
                            valueField: 'AccountCode'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtTotalPriOutstanding',
                            fieldLabel: 'Total Pri Outstand',
                            labelWidth: 104
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtLastInterestPaidDateBS',
                            margin: '0 0 0 10',
                            fieldLabel: 'Last Int Paid Date(B.S.)',
                            labelWidth: 135,
                            size: 18
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtLastInterestPaidDateAD',
                            margin: '0 0 0 10',
                            fieldLabel: '(A.D.)',
                            labelWidth: 120,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txttotalPriPaidAmt',
                            fieldLabel: 'Total Pri Paid Amt',
                            labelWidth: 104,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtOldLoanDateBS',
                            margin: '0 0 0 10',
                            fieldLabel: 'Old Loan Date(B.S.)',
                            labelWidth: 125
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtOldLoanDateAD',
                            margin: '0 0 0 10',
                            fieldLabel: '(A.D.)',
                            labelWidth: 120,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            colspan: 2,
                            itemId: 'txtOldLoanNo',
                            fieldLabel: 'Old Loan No',
                            size: 53
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtTotalInterest',
                            margin: '0 0 0 10',
                            fieldLabel: 'Total Interest',
                            labelWidth: 125,
                            fieldStyle: 'background-color:#D2D2D2;background-image:none;'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtTotalInterestPaid',
                            margin: '0 0 0 10',
                            fieldLabel: 'Total Interest Paid',
                            labelWidth: 120
                        },
                        {
                            xtype: 'combobox',
                            colspan: 2,
                            itemId: 'ddlFundingAgency',
                            fieldLabel: 'Funding Agency',
                            emptyText: '---Select---',
                            displayField: 'FundingAgency_Name',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'FundingAgencyStore',
                            valueField: 'FundingAgency_Code'
                        },
                        {
                            xtype: 'combobox',
                            colspan: 2,
                            itemId: 'ddlOldOffice',
                            margin: '0 0 0 10',
                            fieldLabel: 'Old Office',
                            labelWidth: 125,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            size: 30,
                            displayField: 'OfficeName',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'OfficeShortStore',
                            valueField: 'OfficeCode'
                        },
                        {
                            xtype: 'container',
                            colspan: 4,
                            layout: {
                                type: 'hbox',
                                align: 'stretch',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    flex: 0,
                                    itemId: 'txtChequeNo',
                                    fieldLabel: 'Cheque No'
                                }
                            ]
                        },
                        {
                            xtype: 'form',
                            colspan: 4,
                            frame: true,
                            bodyPadding: 10,
                            title: 'Collateral Detail',
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    height: 150,
                                    itemId: 'grdCollateralDetails',
                                    store: 'CollateralDetailsStore',
                                    dockedItems: [
                                        {
                                            xtype: 'toolbar',
                                            dock: 'bottom',
                                            items: [
                                                {
                                                    xtype: 'combobox',
                                                    itemId: 'ddlColateralType',
                                                    fieldLabel: 'Label',
                                                    hideLabel: true,
                                                    emptyText: '---Select---',
                                                    displayField: 'RefDtlName',
                                                    forceSelection: true,
                                                    queryMode: 'local',
                                                    store: 'CollateralTypeStore',
                                                    valueField: 'RefDtlName'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    itemId: 'txtCollateral',
                                                    fieldLabel: 'Label',
                                                    hideLabel: true
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    itemId: 'txtVenue',
                                                    fieldLabel: 'Label',
                                                    hideLabel: true
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    itemId: 'txtValue',
                                                    fieldLabel: 'Label',
                                                    hideLabel: true
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    itemId: 'txtValuatorName',
                                                    fieldLabel: 'Label',
                                                    hideLabel: true
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    itemId: 'txtValuationDate',
                                                    fieldLabel: 'Label',
                                                    hideLabel: true
                                                },
                                                {
                                                    xtype: 'button',
                                                    itemId: 'btnAdd',
                                                    text: 'Add',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onBtnAddClick,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            width: 172,
                                            dataIndex: 'CollateralType',
                                            text: 'CollateralType',
                                            editor: {
                                                xtype: 'combobox',
                                                itemId: 'ddlEditCollateralType',
                                                displayField: 'RefDtlName',
                                                forceSelection: true,
                                                queryMode: 'local',
                                                store: 'CollateralTypeStore',
                                                valueField: 'RefDtlName'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 150,
                                            dataIndex: 'Collateral',
                                            text: 'Collateral',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtEditCollateral'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 154,
                                            dataIndex: 'Venue',
                                            text: 'Venue',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtEditVenue'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 154,
                                            dataIndex: 'Value',
                                            text: 'Value',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtEditValue'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 151,
                                            dataIndex: 'ValuatorName',
                                            text: 'ValuatorName',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtEditValuatorName'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            width: 154,
                                            dataIndex: 'ValuationDate',
                                            text: 'ValuationDate',
                                            editor: {
                                                xtype: 'textfield',
                                                itemId: 'txtEditValuationDate'
                                            }
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            items: [
                                                {
                                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                        Ext.Msg.confirm('Confirm Action', 'Do you want to Remove the selected Collateral Details?', function(btn) {
                                                            if(btn == 'yes'){


                                                                var insObj={
                                                                    FiscalYear:getFiscalYear(),
                                                                    LoanNo:Ext.ComponentQuery.query('#hdnLoanNo')[0].getValue(),
                                                                    Collateral:Ext.ComponentQuery.query('#txtEditCollateral')[0].getValue(),
                                                                    Venue:Ext.ComponentQuery.query('#txtEditVenue')[0].getValue(),
                                                                    CollateralValue:Ext.ComponentQuery.query('#txtEditValue')[0].getValue(),
                                                                    ValulatorName:Ext.ComponentQuery.query('#txtEditValuatorName')[0].getValue(),
                                                                    TranOfficeCode:getOfficeCode(),
                                                                    User1:getCurrentUser(),
                                                                    Date1:getMisDateAD(),
                                                                    InsertUpdate:'D',
                                                                    CollateralType:Ext.ComponentQuery.query('#ddlEditCollateralType')[0].getValue(),
                                                                    ValuationDate:getMisDateAD()
                                                                };

                                                                var waitSave = watiMsg('Please wait ...');
                                                                Ext.Ajax.request({
                                                                    url: '../Handlers/Finance/Transaction/LoanTransaction/LoanCollateralHandler.ashx',
                                                                    params:{
                                                                        method:'SaveLoanCollateral',
                                                                        loanCollateral:JSON.stringify(insObj),

                                                                    },
                                                                    success: function ( result, request ) {
                                                                        waitSave.hide();
                                                                        var obj = Ext.decode(result.responseText);
                                                                        if(obj.success === 'true'){

                                                                            Ext.ComponentQuery.query('#grdCollateralDetails')[0].getSelectionModel().select(rowIndex);
                                                                            //get reference of store
                                                                            var store = Ext.getStore('CollateralDetailsStore');

                                                                            //get selected row using rowindex
                                                                            store.removeAt(rowIndex);
                                                                            msg("SUCCESS",obj.message);

                                                                        }
                                                                        else{
                                                                            msg("FAILURE","Could Not Load Data");
                                                                        }

                                                                    },
                                                                    failure: function(form, action) {
                                                                        msg("FAILURE","Could Not Load Data");
                                                                    }
                                                                });

                                                            }
                                                        });


                                                    },
                                                    icon: '../ITS/resources/images/icons/cancel.png'
                                                }
                                            ]
                                        }
                                    ],
                                    selModel: Ext.create('Ext.selection.RowModel', {

                                    }),
                                    plugins: [
                                        Ext.create('Ext.grid.plugin.RowEditing', {
                                            listeners: {
                                                validateedit: {
                                                    fn: me.onRowEditingValidateedit,
                                                    scope: me
                                                },
                                                canceledit: {
                                                    fn: me.onRowEditingCanceledit,
                                                    scope: me
                                                }
                                            }
                                        })
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            colspan: 4,
                            height: 26,
                            margin: '10 0 0 0 ',
                            layout: {
                                type: 'hbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'btnRepaymentSchedule',
                                    text: 'Repayment Schedule'
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            colspan: 4,
                            height: 26,
                            margin: '10 0 0 0 ',
                            layout: {
                                type: 'hbox',
                                align: 'stretch',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'btnDisburseLoan',
                                    text: 'Disburse Loan',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnDisburseLoanClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'btnDelete',
                                    text: 'Delete',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnDeleteClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            itemId: 'hdnLoanNo',
                            fieldLabel: 'Label'
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            itemId: 'hdnClientNo',
                            fieldLabel: 'Label'
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            itemId: 'hdnFixedCollectionAmt',
                            fieldLabel: 'Label'
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            itemId: 'hdnDeduction1Code',
                            fieldLabel: 'Label'
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            itemId: 'hdnDeduction2Code',
                            fieldLabel: 'Label'
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            itemId: 'hdnDeduction3Code',
                            fieldLabel: 'Label'
                        },
                        {
                            xtype: 'textfield',
                            hidden: true,
                            itemId: 'hdnDeduction4Code',
                            fieldLabel: 'Label'
                        }
                    ]
                },
                {
                    xtype: 'form',
                    colspan: 4,
                    frame: true,
                    margin: '10 0 0 0',
                    bodyPadding: 10,
                    title: 'Search',
                    layout: {
                        type: 'table',
                        columns: 2
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            itemId: 'txtOpenDateFromBS',
                            fieldLabel: 'Open Date From(B.S.)',
                            labelWidth: 140
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtOpenDateToBS',
                            margin: '0 0 0 200',
                            fieldLabel: 'Open Date To(B.S.)',
                            labelWidth: 140
                        },
                        {
                            xtype: 'combobox',
                            itemId: 'ddlSearchLoanNo',
                            fieldLabel: 'Loan No',
                            labelWidth: 140,
                            fieldStyle: 'background-color:#DAEBE1;background-image:none;',
                            emptyText: '---Select---',
                            displayField: 'LoanDno',
                            forceSelection: true,
                            queryMode: 'local',
                            store: 'LoanNoShortStore',
                            valueField: 'LoanNo',
                            listeners: {
                                select: {
                                    fn: me.onDdlSearchLoanNoSelect,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'txtSearchMemberName',
                            margin: '0 0 0 200',
                            fieldLabel: 'Member Name',
                            labelWidth: 140,
                            size: 73
                        },
                        {
                            xtype: 'container',
                            colspan: 4,
                            height: 26,
                            layout: {
                                type: 'hbox',
                                align: 'stretch',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'btnSearch',
                                    text: 'Search',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnSearchClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            colspan: 4,
                            itemId: 'grdStaffLoanDisbursementDetail',
                            store: 'StaffLoanDisbursementSearchStore',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'LoanDno',
                                    text: 'LoanDno'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'ClientName',
                                    text: 'ClientName'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'LoanProductName',
                                    text: 'LoanProductName'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'LoanMatureBs',
                                    text: 'LoanMatureBs'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'TotalLoanAmount',
                                    text: 'TotalLoanAmount'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'LoanPeriod',
                                    text: 'LoanPeriod'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                Ext.ComponentQuery.query('#grdStaffLoanDisbursementDetail')[0].getSelectionModel().select(rowIndex);
                                                //get reference of store
                                                var store = Ext.getStore('StaffLoanDisbursementSearchStore');

                                                //get selected row using rowindex
                                                var row = store.getAt(rowIndex).data;


                                                // set values
                                                console.log('row',row);

                                                Ext.ComponentQuery.query('#txtLoanNo')[0].setValue(row.LoanDno);
                                                //Ext.ComponentQuery.query('#txtDeduction1')[0].setValue(row.OfficeTypeCode);
                                                //Ext.ComponentQuery.query('#txtDeduction2')[0].setValue(row.OfficeTypeName);
                                                Ext.ComponentQuery.query('#txtLoanDateBS')[0].setValue(row.LoanDateBs);
                                                Ext.ComponentQuery.query('#txtLoanDateAD')[0].setValue(row.LoanDate);
                                                //Ext.ComponentQuery.query('#txtDeduction3')[0].setValue(row.DistrictCode);
                                                //Ext.ComponentQuery.query('#txtDeduction4')[0].setValue(row.DistrictName);
                                                Ext.ComponentQuery.query('#txtStaffCode')[0].setValue(row.ClientCode);
                                                //Ext.ComponentQuery.query('#txtTotalDeduction')[0].setValue(row.VdcName);
                                                Ext.ComponentQuery.query('#txtNetAmountPaid')[0].setValue(row.TotalPrincipalPaid);
                                                Ext.ComponentQuery.query('#txtName')[0].setValue(row.ClientName);
                                                Ext.ComponentQuery.query('#ddlInterestCalcMethod')[0].setValue(row.InterestCalcMethod);
                                                Ext.ComponentQuery.query('#txtAddress')[0].setValue(row.Address);
                                                Ext.ComponentQuery.query('#txtInterestRate')[0].setValue(row.InterestRate);
                                                Ext.ComponentQuery.query('#ddlLoanStatus')[0].setValue(row.LoanStatus);
                                                Ext.ComponentQuery.query('#ddlManager')[0].setValue(row.EmployeeId);
                                                Ext.ComponentQuery.query('#txtLoanPeriod')[0].setValue(row.LoanPeriod);
                                                Ext.ComponentQuery.query('#ddlLoanPeriodType')[0].setValue(row.LoanPeriodType);
                                                Ext.ComponentQuery.query('#txtLoanHeading')[0].setValue(row.LoanProductCode);
                                                Ext.ComponentQuery.query('#txtLoanHeadingDesc')[0].setValue(row.LoanProductName);
                                                Ext.ComponentQuery.query('#txtInstallmentPeriod')[0].setValue(row.InstallmentPeriod);
                                                Ext.ComponentQuery.query('#ddlInstallmentType')[0].setValue(row.InstallmentPeriodType);
                                                Ext.ComponentQuery.query('#ddlLoanPurpose')[0].setValue(row.LoanPurposeCode);
                                                //Ext.ComponentQuery.query('#txtLoanSector')[0].setValue(row.AbbsDepositLimit);
                                                Ext.ComponentQuery.query('#txtGraceDays')[0].setValue(row.GraceDays);
                                                //Ext.ComponentQuery.query('#txtFixedPriAmount')[0].setValue(row.FixedPrincipalAmount);
                                                Ext.ComponentQuery.query('#txtAppLoanAmt')[0].setValue(row.ApprovedLoanAmount);
                                                //Ext.ComponentQuery.query('#txtNoOfInstallment')[0].setValue(row.NoOfInstallment);
                                                Ext.ComponentQuery.query('#txtInstallmentAmount')[0].setValue(row.InstallmentAmount);
                                                Ext.ComponentQuery.query('#txtTotalLoanTaken')[0].setValue(row.TotalLoanAmount);
                                                //Ext.ComponentQuery.query('#txtMaturityDateBS')[0].setValue(row.LoanMatureBs);
                                                //Ext.ComponentQuery.query('#txtMaturityDateAD')[0].setValue(row.LoanMaturityDate);
                                                Ext.ComponentQuery.query('#ddlFundingAgency')[0].setValue(row.FundingAgencyCode);
                                                Ext.ComponentQuery.query('#ddlContraAccount')[0].setValue(row.AccountNo);
                                                Ext.ComponentQuery.query('#txtChequeNo')[0].setValue(row.ChequeNo);
                                                Ext.ComponentQuery.query('#hdnLoanNo')[0].setValue(row.LoanNo);


                                                Ext.Ajax.request({
                                                    url: '../Handlers/Finance/Transaction/LoanTransaction/LoanCollateralHandler.ashx',
                                                    params:{
                                                        method:'GetLoanCollateral',
                                                        loanNo:row.LoanNo,

                                                    },
                                                    success: function ( result, request ) {

                                                        var obj = Ext.decode(result.responseText);
                                                        if(obj.success === 'true'){
                                                            var store =Ext.getStore('CollateralDetailsStore');
                                                            store.removeAll();
                                                            store.add(obj.root);


                                                        }
                                                        else{
                                                            msg("FAILURE","Could Not Load Data");
                                                        }

                                                    },
                                                    failure: function(form, action) {
                                                        msg("FAILURE","Could Not Load Data");
                                                    }
                                                });



                                                //set buttons visible

                                                //Ext.ComponentQuery.query('#btnDeleteOfficeInfo')[0].setVisible(true);
                                                //Ext.ComponentQuery.query('#BtnInsertOfficeInfo')[0].setVisible(false);
                                            },
                                            icon: '../ITS/resources/images/icons/Modify.png'
                                        }
                                    ]
                                }
                            ],
                            selModel: Ext.create('Ext.selection.RowModel', {

                            })
                        }
                    ]
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onPanelAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onTxtStaffCodeAfterRender: function(component, eOpts) {
        component.getEl().on('dblclick', function(){
            var winPopup = Ext.create('MyApp.view.SelectStaffForDisbursementOpeningPopup',{

            });
            winPopup.extraParam={param:null};
            winPopup.show();
        });
    },

    onTxtLoanHeadingAfterRender: function(component, eOpts) {
        component.getEl().on('dblclick', function(){
            var winPopup = Ext.create('MyApp.view.SelectLoanHeadingForLoanDisbursementPopup',{

            });
            winPopup.extraParam={param:null};
            winPopup.show();
        });
    },

    onTxtLoanHeadingChange: function(field, newValue, oldValue, eOpts) {
        Ext.Ajax.request({
                   url: '../Handlers/Finance/Maintenance/LoanPurposeHandler.ashx',
                   params: {
                       method:'GetMfLoanPurpose',
                       productCode:Ext.ComponentQuery.query('#txtLoanHeading')[0].getValue(),
                       purposeName:null

                   },
                   success: function(response){


                       var obj = Ext.decode(response.responseText);



                       if(obj.success === "true")
                       {

                           var store=Ext.getStore('LoanPurposeForDisbursementStore');
                           store.removeAll();
                           store.add(obj.root);

                       }
                       else
                       {
                           msg("FAILURE",obj.message);
                       }
                   }
               });
    },

    onDdlLoanPurposeSelect: function(combo, records, eOpts) {

        Ext.ComponentQuery.query('#txtLoanSector')[0].setValue(records[0].data.LoanSectorDesc);

    },

    onBtnAddClick: function(button, e, eOpts) {


        var insObj={
            FiscalYear:getFiscalYear(),
            LoanNo:Ext.ComponentQuery.query('#hdnLoanNo')[0].getValue(),
            Collateral:Ext.ComponentQuery.query('#txtCollateral')[0].getValue(),
            Venue:Ext.ComponentQuery.query('#txtVenue')[0].getValue(),
            CollateralValue:Ext.ComponentQuery.query('#txtValue')[0].getValue(),
            ValulatorName:Ext.ComponentQuery.query('#txtValuatorName')[0].getValue(),
            TranOfficeCode:getOfficeCode(),
            User1:getCurrentUser(),
            Date1:getMisDateAD(),
            InsertUpdate:'I',
            CollateralType:Ext.ComponentQuery.query('#ddlColateralType')[0].getValue(),
            ValuationDate:getMisDateAD()
        };

        var waitSave = watiMsg('Please wait ...');
                Ext.Ajax.request({
                    url: '../Handlers/Finance/Transaction/LoanTransaction/LoanCollateralHandler.ashx',
                    params:{
                        method:'SaveLoanCollateral',
                        loanCollateral:JSON.stringify(insObj),

                    },
                    success: function ( result, request ) {
                        waitSave.hide();
                        var obj = Ext.decode(result.responseText);
                        if(obj.success === 'true'){

                            var store=Ext.getStore('CollateralDetailsStore');
                            var collateralDetails ={
                                CollateralType :Ext.ComponentQuery.query('#ddlColateralType')[0].getValue(),
                                Collateral : Ext.ComponentQuery.query('#txtCollateral')[0].getValue(),
                                Venue : Ext.ComponentQuery.query('#txtVenue')[0].getValue(),
                                Value:Ext.ComponentQuery.query('#txtValue')[0].getValue(),
                                ValuatorName:Ext.ComponentQuery.query('#txtValuatorName')[0].getValue(),
                                ValuationDate:Ext.ComponentQuery.query('#txtValuationDate')[0].getValue()
                            };

                            store.add(collateralDetails);

                        }
                        else{
                            msg("FAILURE","Could Not Load Data");
                        }

                    },
                    failure: function(form, action) {
                        msg("FAILURE","Could Not Load Data");
                    }
                });
    },

    onRowEditingValidateedit: function(editor, e, eOpts) {


        var insObj={
            FiscalYear:getFiscalYear(),
            LoanNo:Ext.ComponentQuery.query('#hdnLoanNo')[0].getValue(),
            Collateral:Ext.ComponentQuery.query('#txtEditCollateral')[0].getValue(),
            Venue:Ext.ComponentQuery.query('#txtEditVenue')[0].getValue(),
            CollateralValue:Ext.ComponentQuery.query('#txtEditValue')[0].getValue(),
            ValulatorName:Ext.ComponentQuery.query('#txtEditValuatorName')[0].getValue(),
            TranOfficeCode:getOfficeCode(),
            User1:getCurrentUser(),
            Date1:getMisDateAD(),
            InsertUpdate:'U',
            CollateralType:Ext.ComponentQuery.query('#ddlEditCollateralType')[0].getValue(),
            ValuationDate:getMisDateAD()
        };

        var waitSave = watiMsg('Please wait ...');
                Ext.Ajax.request({
                    url: '../Handlers/Finance/Transaction/LoanTransaction/LoanCollateralHandler.ashx',
                    params:{
                        method:'SaveLoanCollateral',
                        loanCollateral:JSON.stringify(insObj),

                    },
                    success: function ( result, request ) {
                        waitSave.hide();
                        var obj = Ext.decode(result.responseText);
                        if(obj.success === 'true'){

                            msg("SUCCESS",obj.message);

                        }
                        else{
                            msg("FAILURE","Could Not Load Data");
                        }

                    },
                    failure: function(form, action) {
                        msg("FAILURE","Could Not Load Data");
                    }
                });
    },

    onRowEditingCanceledit: function(editor, e, eOpts) {

    },

    onBtnDisburseLoanClick: function(button, e, eOpts) {
        var insObj={
        ChequeNo:Ext.ComponentQuery.query('#txtChequeNo')[0].getValue(),
        LoanDate:Ext.ComponentQuery.query('#txtOldLoanDateAD')[0].getValue(),
        LoanMaturityDate:Ext.ComponentQuery.query('#txtMaturityDateAD')[0].getValue(),
        LoanProductCode:Ext.ComponentQuery.query('#txtLoanHeading')[0].getValue(),
        ClientNo:Ext.ComponentQuery.query('#hdnClientNo')[0].getValue(),
        LoanPurposeCode:Ext.ComponentQuery.query('#ddlLoanPurpose')[0].getValue(),
        ApprovedLoanAmount:Ext.ComponentQuery.query('#txtAppLoanAmt')[0].getValue(),
        TotalLoanAmount:Ext.ComponentQuery.query('#txtTotalLoanTaken')[0].getValue(),
        LoanPeriodType:Ext.ComponentQuery.query('#ddlLoanPeriodType')[0].getValue(),
        LoanPeriod:Ext.ComponentQuery.query('#txtLoanPeriod')[0].getValue(),
        GraceDays:Ext.ComponentQuery.query('#txtGraceDays')[0].getValue(),
        EmployeeId:Ext.ComponentQuery.query('#ddlManager')[0].getValue(),
        InterestRate:Ext.ComponentQuery.query('#txtInterestRate')[0].getValue(),
        InterestCalcMethod:Ext.ComponentQuery.query('#ddlInterestCalcMethod')[0].getValue(),
        LoanCloseDate:null,
        LoanStatus:Ext.ComponentQuery.query('#ddlLoanStatus')[0].getValue(),
        Rating:null,
        InstallmentAmount:Ext.ComponentQuery.query('#txtInstallmentAmount')[0].getValue(),
        RefAccountNo:null,
        InstallmentPeriodType:Ext.ComponentQuery.query('#ddlInstallmentType')[0].getValue(),
        InstallmentPeriod:Ext.ComponentQuery.query('#txtInstallmentPeriod')[0].getValue(),
        PrincipalArrear:'0',
        PrincipalAmount:'0',
        YearNo:'0',
        WithdrawalNo:'0',
        ChkAdjustSaving:'N',
        SavingAccountNo:null,
        InsurancePolicyNo:null,
        TranOfficeCode:getOfficeCode(),
        FixedPrincipalAmount:Ext.ComponentQuery.query('#hdnFixedCollectionAmt')[0].getValue(),
        FirstInstallDate:Ext.ComponentQuery.query('#txt1stInstallDateAD')[0].getValue(),
        ClientCenter:'C',
        FixedInterestAmount:'0',
        ContraAccount:Ext.ComponentQuery.query('#ddlContraAccount')[0].getValue(),
        Deduction1Code:Ext.ComponentQuery.query('#hdnDeduction1Code')[0].getValue(),
        Deduction1Desc:'Deduction 1',
        DeductionAmount:Ext.ComponentQuery.query('#txtDeduction1')[0].getValue(),
        Deduction2Code:Ext.ComponentQuery.query('#hdnDeduction2Code')[0].getValue(),
        Deduction2Desc:'Deduction 2',
        DeductionAmount2:Ext.ComponentQuery.query('#txtDeduction2')[0].getValue(),
        Deduction3Code:Ext.ComponentQuery.query('#hdnDeduction3Code')[0].getValue(),
        Deduction3Desc:'Deduction 3',
        DeductionAmount3:Ext.ComponentQuery.query('#txtDeduction3')[0].getValue(),
        Deduction4Code:Ext.ComponentQuery.query('#hdnDeduction3Code')[0].getValue(),
        Deduction4Desc:'Deduction 4',
        DeductionAmount4:Ext.ComponentQuery.query('#txtDeduction4')[0].getValue(),
        NoOfInstallment:Ext.ComponentQuery.query('#txtNoOfInstallment')[0].getValue(),
        FundingAgencyCode:Ext.ComponentQuery.query('#ddlFundingAgency')[0].getValue(),
        PrincipalOutstanding:Ext.ComponentQuery.query('#txtTotalPriOutstanding')[0].getValue(),
        PrincipalPaidAmount:Ext.ComponentQuery.query('#txttotalPriPaidAmt')[0].getValue(),
        TotalInterest:Ext.ComponentQuery.query('#txtTotalInterest')[0].getValue(),
        TotalInterestPaid:Ext.ComponentQuery.query('#txtTotalInterestPaid')[0].getValue(),
        LastInstallPaid_Date:Ext.ComponentQuery.query('#txtLastInterestPaidDateAD')[0].getValue(),
        NewLoanDate:Ext.ComponentQuery.query('#txtLoanDateAD')[0].getValue(),
        User1:getCurrentUser(),
        InsertUpdate:'I',
        };


        var waitSave = watiMsg("Saving..Please wait ...");
        Ext.Ajax.request({
        	url: '../Handlers/Finance/Transaction/StaffLoanTransaction/StaffLoanDisbursementOpeningHandler.ashx',
        	params: {
        	method:'SaveStaffLoanDisbursementOpening',
        	staffLoanDisbursement:JSON.stringify(insObj)
        	},
        	success: function ( response, request ) {
        		waitSave.hide();
        		var out=Ext.decode(response.responseText);
        		console.log(out);
        		if(out.success==="true")
        			{
        				msg("SUCCESS",out.message);
        			}
        		else
        			{
        				msg("FAILURE",out.message);
        			}
        	},
        	failure: function ( result, request ) {
        		waitSave.hide();
        		var out=Ext.decode(response.responseText);
        		msg("FAILURE",out.message);
        	}
         });
    },

    onBtnDeleteClick: function(button, e, eOpts) {
        var insObj={
        ChequeNo:Ext.ComponentQuery.query('#txtChequeNo')[0].getValue(),
        LoanDate:Ext.ComponentQuery.query('#txtOldLoanDateAD')[0].getValue(),
        LoanMaturityDate:Ext.ComponentQuery.query('#txtMaturityDateAD')[0].getValue(),
        LoanProductCode:Ext.ComponentQuery.query('#txtLoanHeading')[0].getValue(),
        ClientNo:Ext.ComponentQuery.query('#hdnClientNo')[0].getValue(),
        LoanPurposeCode:Ext.ComponentQuery.query('#ddlLoanPurpose')[0].getValue(),
        ApprovedLoanAmount:Ext.ComponentQuery.query('#txtAppLoanAmt')[0].getValue(),
        TotalLoanAmount:Ext.ComponentQuery.query('#txtTotalLoanTaken')[0].getValue(),
        LoanPeriodType:Ext.ComponentQuery.query('#ddlLoanPeriodType')[0].getValue(),
        LoanPeriod:Ext.ComponentQuery.query('#txtLoanPeriod')[0].getValue(),
        GraceDays:Ext.ComponentQuery.query('#txtGraceDays')[0].getValue(),
        EmployeeId:Ext.ComponentQuery.query('#ddlManager')[0].getValue(),
        InterestRate:Ext.ComponentQuery.query('#txtInterestRate')[0].getValue(),
        InterestCalcMethod:Ext.ComponentQuery.query('#ddlInterestCalcMethod')[0].getValue(),
        LoanCloseDate:null,
        LoanStatus:Ext.ComponentQuery.query('#ddlLoanStatus')[0].getValue(),
        Rating:null,
        InstallmentAmount:Ext.ComponentQuery.query('#txtInstallmentAmount')[0].getValue(),
        RefAccountNo:null,
        InstallmentPeriodType:Ext.ComponentQuery.query('#ddlInstallmentType')[0].getValue(),
        InstallmentPeriod:Ext.ComponentQuery.query('#txtInstallmentPeriod')[0].getValue(),
        PrincipalArrear:'0',
        PrincipalAmount:'0',
        YearNo:'0',
        WithdrawalNo:'0',
        ChkAdjustSaving:'N',
        SavingAccountNo:null,
        InsurancePolicyNo:null,
        TranOfficeCode:getOfficeCode(),
        FixedPrincipalAmount:Ext.ComponentQuery.query('#hdnFixedCollectionAmt')[0].getValue(),
        FirstInstallDate:Ext.ComponentQuery.query('#txt1stInstallDateAD')[0].getValue(),
        ClientCenter:'C',
        FixedInterestAmount:'0',
        ContraAccount:Ext.ComponentQuery.query('#ddlContraAccount')[0].getValue(),
        Deduction1Code:Ext.ComponentQuery.query('#hdnDeduction1Code')[0].getValue(),
        Deduction1Desc:'Deduction 1',
        DeductionAmount:Ext.ComponentQuery.query('#txtDeduction1')[0].getValue(),
        Deduction2Code:Ext.ComponentQuery.query('#hdnDeduction2Code')[0].getValue(),
        Deduction2Desc:'Deduction 2',
        DeductionAmount2:Ext.ComponentQuery.query('#txtDeduction2')[0].getValue(),
        Deduction3Code:Ext.ComponentQuery.query('#hdnDeduction3Code')[0].getValue(),
        Deduction3Desc:'Deduction 3',
        DeductionAmount3:Ext.ComponentQuery.query('#txtDeduction3')[0].getValue(),
        Deduction4Code:Ext.ComponentQuery.query('#hdnDeduction3Code')[0].getValue(),
        Deduction4Desc:'Deduction 4',
        DeductionAmount4:Ext.ComponentQuery.query('#txtDeduction4')[0].getValue(),
        NoOfInstallment:Ext.ComponentQuery.query('#txtNoOfInstallment')[0].getValue(),
        FundingAgencyCode:Ext.ComponentQuery.query('#ddlFundingAgency')[0].getValue(),
        PrincipalOutstanding:Ext.ComponentQuery.query('#txtTotalPriOutstanding')[0].getValue(),
        PrincipalPaidAmount:Ext.ComponentQuery.query('#txttotalPriPaidAmt')[0].getValue(),
        TotalInterest:Ext.ComponentQuery.query('#txtTotalInterest')[0].getValue(),
        TotalInterestPaid:Ext.ComponentQuery.query('#txtTotalInterestPaid')[0].getValue(),
        LastInstallPaid_Date:Ext.ComponentQuery.query('#txtLastInterestPaidDateAD')[0].getValue(),
        NewLoanDate:Ext.ComponentQuery.query('#txtLoanDateAD')[0].getValue(),
        User1:getCurrentUser(),
        InsertUpdate:'D',
        };


        var waitSave = watiMsg("Deleting..Please wait ...");
        Ext.Ajax.request({
        	url: '../Handlers/Finance/Transaction/StaffLoanTransaction/StaffLoanDisbursementOpeningHandler.ashx',
        	params: {
        	method:'SaveStaffLoanDisbursementOpening',
        	staffLoanDisbursement:JSON.stringify(insObj)
        	},
        	success: function ( response, request ) {
        		waitSave.hide();
        		var out=Ext.decode(response.responseText);
        		console.log(out);
        		if(out.success==="true")
        			{
        				msg("SUCCESS",out.message);
        			}
        		else
        			{
        				msg("FAILURE",out.message);
        			}
        	},
        	failure: function ( result, request ) {
        		waitSave.hide();
        		var out=Ext.decode(response.responseText);
        		msg("FAILURE",out.message);
        	}
         });
    },

    onDdlSearchLoanNoSelect: function(combo, records, eOpts) {
        Ext.ComponentQuery.query('#txtSearchMemberName')[0].setValue(records[0].data.ClientName);
    },

    onBtnSearchClick: function(button, e, eOpts) {
        var waitSave = watiMsg('Please wait ...');
                Ext.Ajax.request({
                    url: '../Handlers/Finance/Transaction/StaffLoanTransaction/StaffLoanDisbursementDetailHandler.ashx',
                    params:{
                        method:'GetStaffLoanDisDetail',
                        OfficeCode:getOfficeCode(),
                        LoanNo:Ext.ComponentQuery.query('#ddlSearchLoanNo')[0].getValue(),
                        ClientName:Ext.ComponentQuery.query('#txtSearchMemberName')[0].getValue(),
                        FromDate:null,
                        ToDate:null
                    },
                    success: function ( result, request ) {
                        waitSave.hide();
                        var obj = Ext.decode(result.responseText);
                        if(obj.success === 'true'){
                            var store =Ext.getStore('StaffLoanDisbursementSearchStore');
                            store.removeAll();
                            store.add(obj.root);


                        }
                        else{
                            msg("FAILURE","Could Not Load Data");
                        }

                    },
                    failure: function(form, action) {
                        msg("FAILURE","Could Not Load Data");
                    }
                });
    },

    onPanelAfterRender: function(component, eOpts) {
        Ext.ComponentQuery.query('#txtLoanDateBS')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtOpenDateFromBS')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtOpenDateToBS')[0].setValue(getMisDateBS());
        Ext.ComponentQuery.query('#txtLoanDateAD')[0].setValue(getMisDateAD());

        var collateralDetailsStore= Ext.getStore('CollateralDetailsStore');
        collateralDetailsStore.removeAll();

        var staffLoanDisbursementSearchStore= Ext.getStore('StaffLoanDisbursementSearchStore');
        staffLoanDisbursementSearchStore.removeAll();

        var interestCalcMethodStore=Ext.getStore('InterestCalcMethodStore');
        getReferences('LOAN_INTEREST_CALC_METHOD',function(data){
            interestCalcMethodStore.removeAll();
            interestCalcMethodStore.add(data.root);
        });

        var loanPeriodTypeStore=Ext.getStore('LoanPeriodTypeStore');
        getReferences('LOAN_PERIOD_TYPE',function(data){
            loanPeriodTypeStore.removeAll();
            loanPeriodTypeStore.add(data.root);
        });

        var installmentTypeRefShortStore=Ext.getStore('InstallmentTypeRefShortStore');
        getReferences('INSTALLMENT_PERIOD_TYPE',function(data){
            installmentTypeRefShortStore.removeAll();
            installmentTypeRefShortStore.add(data.root);
        });

        var loanStatusStore=Ext.getStore('LoanStatusStore');
        getReferences('LOAN_STATUS',function(data){
            loanStatusStore.removeAll();
            loanStatusStore.add(data.root);
        });

        var employeeSearchStore=Ext.getStore('EmployeeSearchShortStore');
        getfieldAssistants(getOfficeCode(),null,function(data){
                employeeSearchStore.removeAll();
                employeeSearchStore.add(data.root);
        });

        var contraAccountStore=Ext.getStore('ContraAccountSearchShortStore');
        getContraAccount(getOfficeCode(),null,function(data){
            contraAccountStore.removeAll();
            contraAccountStore.add(data.root);
            Ext.ComponentQuery.query('#ddlContraAccount')[0].select('100000021000002');
        });

        var fundingAgencyStore=Ext.getStore('FundingAgencyStore');
        getFundingAgencies(function(data){
            fundingAgencyStore.removeAll();
            fundingAgencyStore.add(data.root);
        });

        var collateralTypeStore=Ext.getStore('CollateralTypeStore');
        getReferences('COLLATERAL_TYPE',function(data){
            collateralTypeStore.removeAll();
            collateralTypeStore.add(data.root);
        });


        Ext.Ajax.request({
            url: '../Handlers/GeneralMasterParameters/Office/OfficeHandler.ashx',
            params: {
                method:'GetOfficeList',
                userCode:getOfficeCode(),
                officeName:null,
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                            var DestinationFormatStore=Ext.getStore('OfficeShortStore');
                            DestinationFormatStore.removeAll();
                            DestinationFormatStore.add(obj.root);

                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });



        Ext.Ajax.request({
            url: '../Handlers/Finance/Transaction/StaffLoanTransaction/StaffLoanDisbursementLoanHandler.ashx',
            params: {
                method:'GetStaffLoanDisLoan',
                OfficeCode:getOfficeCode(),
                EmpName:null,
            },
            success: function(response){


        var obj = Ext.decode(response.responseText);

         console.log('resp',response);

              if(obj.success === "true")
                        {

                            var DestinationFormatStore=Ext.getStore('LoanNoShortStore');
                            DestinationFormatStore.removeAll();
                            DestinationFormatStore.add(obj.root);

                        }
                        else
                        {
                            msg("FAILURE",obj.message);
                        }
            }
        });
    }

});